diff --git a/BoardConfig.mk b/BoardConfig.mk
index 4e5bd4e..0e30f2b 100644
--- a/BoardConfig.mk
+++ b/BoardConfig.mk
@@ -21,6 +21,7 @@ MTK_PROJECT_CONFIG := $(DEVICE_PATH)/ProjectConfig.mk
 MTK_PATH_SOURCE := vendor/mediatek/proprietary
 MTK_TARGET_PROJECT_FOLDER := $(DEVICE_PATH)
 MTK_PROJECT_LOCATION := $(DEVICE_PATH)
+MTK_PROJECT := mt6757
 PROJECT_FOLDER := $(DEVICE_PATH)
 
 include $(DEVICE_PATH)/PlatformConfig.mk
diff --git a/EngineerMode/Android.mk b/EngineerMode/Android.mk
deleted file mode 100644
index 9d49abd..0000000
--- a/EngineerMode/Android.mk
+++ /dev/null
@@ -1,29 +0,0 @@
-#ifneq ($(filter 6753, $(TARGET_DEVICE)),)
-
-LOCAL_PATH:= $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_MODULE_TAGS := optional
-LOCAL_STATIC_JAVA_LIBRARIES := android-support-v4
-
-LOCAL_SRC_FILES := $(call all-java-files-under, src)
-
-LOCAL_PACKAGE_NAME := EngineerMode
-LOCAL_CERTIFICATE := platform
-
-# to let app run on 32-bit space
-#LOCAL_JNI_SHARED_LIBRARIES := libem_platform32_dummy
-
-LOCAL_JAVA_LIBRARIES += bouncycastle conscrypt telephony-common ims-common
-
-LOCAL_EMMA_COVERAGE_FILTER := @$(LOCAL_PATH)/emma_filter.txt
-
-#LOCAL_MULTILIB := 32
-
-LOCAL_PROGUARD_ENABLED := disabled
-
-include $(BUILD_PACKAGE)
-
-# Use the folloing include to make our test apk.
-include $(call all-makefiles-under,$(LOCAL_PATH))
-#endif
diff --git a/EngineerMode/AndroidManifest.xml b/EngineerMode/AndroidManifest.xml
deleted file mode 100644
index 7907ac5..0000000
--- a/EngineerMode/AndroidManifest.xml
+++ /dev/null
@@ -1,1224 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.mediatek.engineermode"
-    android:sharedUserId="android.uid.phone"
-    android:versionCode="1"
-    android:versionName="1.0" >
-
-
-    <uses-sdk
-        android:minSdkVersion="8"
-        android:targetSdkVersion="25" />
-    
-    <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
-    <uses-permission android:name="android.permission.READ_SETTINGS" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-    <uses-permission android:name="android.permission.CALL_PHONE" />
-    <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
-    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
-    <uses-permission android:name="android.permission.DIAGNOSTIC" />
-    <uses-permission android:name="android.permission.HARDWARE_TEST" />
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.ACCESS_BLUETOOTH_SHARE" />
-    <uses-permission android:name="android.permission.BLUETOOTH" />
-    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
-    <uses-permission android:name="com.google.android.gm.permission.WRITE_GMAIL" />
-    <uses-permission android:name="com.google.android.gm.permission.READ_GMAIL" />
-    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
-    <uses-permission android:name="android.permission.WRITE_SECURE_SETTINGS" />
-    <uses-permission android:name="android.permission.DEVICE_POWER" />
-    <uses-permission android:name="android.permission.CHANGE_CONFIGURATION" />
-    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
-    <uses-permission android:name="android.permission.VIBRATE" />
-    <uses-permission android:name="android.permission.BLUETOOTH" />
-    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
-    <uses-permission android:name="android.permission.BLUETOOTH_STACK" />
-    <uses-permission android:name="android.permission.NFC" />
-    <uses-permission android:name="android.permission.HARDWARE_TEST" />
-    <uses-permission android:name="android.permission.CALL_PHONE" />
-    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
-    <uses-permission android:name="android.permission.MASTER_CLEAR" />
-    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
-    <uses-permission android:name="com.google.android.googleapps.permission.GOOGLE_AUTH" />
-    <uses-permission android:name="android.permission.ACCESS_DOWNLOAD_MANAGER" />
-    <uses-permission android:name="android.permission.READ_CONTACTS" />
-    <uses-permission android:name="android.permission.WRITE_CONTACTS" />
-    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
-    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.CLEAR_APP_USER_DATA" />
-    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
-    <uses-permission android:name="android.permission.MODIFY_PHONE_STATE" />
-    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
-    <uses-permission android:name="android.permission.WRITE_APN_SETTINGS" />
-    <uses-permission android:name="android.permission.ACCESS_CHECKIN_PROPERTIES" />
-    <uses-permission android:name="android.permission.READ_USER_DICTIONARY" />
-    <uses-permission android:name="android.permission.WRITE_USER_DICTIONARY" />
-    <uses-permission android:name="android.permission.FORCE_STOP_PACKAGES" />
-    <uses-permission android:name="android.permission.RESTART_PACKAGES" />
-    <uses-permission android:name="android.permission.PACKAGE_USAGE_STATS" />
-    <uses-permission android:name="android.permission.BATTERY_STATS" />
-    <uses-permission android:name="com.android.launcher.permission.READ_SETTINGS" />
-    <uses-permission android:name="com.android.launcher.permission.WRITE_SETTINGS" />
-    <uses-permission android:name="android.permission.MOVE_PACKAGE" />
-    <uses-permission android:name="android.permission.MANAGE_USB" />
-    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
-    <uses-permission android:name="android.permission.WAKE_LOCK" />
-    <uses-permission android:name="android.permission.DISABLE_KEYGUARD" />
-    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
-    <uses-permission android:name="android.permission.SET_WALLPAPER" />
-    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
-    <uses-permission android:name="android.permission.REBOOT" />
-    <uses-permission android:name="android.permission.WRITE_MEDIA_STORAGE" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-    <uses-permission android:name="android.permission.READ_PRIVILEGED_PHONE_STATE"/>
-
-    <application android:label="@string/app_name" 
-    android:icon="@drawable/icon"
-	android:theme="@android:style/Theme.Holo">
-        <activity
-            android:name=".EngineerMode"
-            android:exported="true"
-            android:label="@string/app_name"
-            android:screenOrientation="portrait" >
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-                <category android:name="android.intent.category.ALTERNATIVE" />
-                <category android:name="android.intent.category.SELECTED_ALTERNATIVE" />
-            </intent-filter>
-        </activity>
-
-        <service android:name=".wifi.WifiStateListener" >
-        </service>
-
-        <activity
-            android:name="FeatureHelpPage"
-            android:label="@string/help"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".BatteryLog"
-            android:label="@string/BatteryLog"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".MobileDataPreferred"
-            android:label="@string/pch_data_prefer_title"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".GPRS"
-            android:label="@string/GPRS"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".touchscreen.TouchScreenList"
-            android:label="@string/TouchScreen"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".touchscreen.TsHandWriting"
-            android:label="@string/TouchScreen_HandWriting"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".touchscreen.TsRateReport"
-            android:label="@string/TouchScreen_HandWriting"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".touchscreen.TsVerifyList"
-            android:label="@string/TouchScreen_Verification"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".touchscreen.TsVerifyLine"
-            android:label="@string/TouchScreen_VerificationLine"
-            android:screenOrientation="portrait"
-            android:theme="@android:style/Theme.Black.NoTitleBar.Fullscreen" >
-        </activity>
-        <activity
-            android:name=".touchscreen.TsVerifyShakingPoint"
-            android:label="@string/TouchScreen_VerificationShaking"
-            android:screenOrientation="portrait"
-            android:theme="@android:style/Theme.Black.NoTitleBar.Fullscreen" >
-        </activity>
-        <activity
-            android:name=".touchscreen.TsMultiTouch"
-            android:label="@string/TouchScreen_MultiTouch"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".touchscreen.TouchScreenSettings"
-            android:label="@string/TouchScreen_Settings"
-            android:screenOrientation="portrait" >
-        </activity>
-        <!-- new start -->
-        <activity
-            android:name=".nonsleep.NonSleepMode"
-            android:label="@string/non_sleep_mode"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".memory.Memory"
-            android:label="@string/memory"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".memory.Flash"
-            android:label="@string/memory_title_flash"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".memory.EmiRegister"
-            android:label="@string/memory_title_emi"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".io.IoList"
-            android:label="@string/IO"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".io.Eint"
-            android:label="@string/EINT"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".io.Gpio"
-            android:label="@string/GPIO"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".io.MsdcDrivSet"
-            android:label="@string/MSDC_Driving"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".io.MsdcSelect"
-            android:label="@string/MSDC_Select"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".io.MsdcHopSet"
-            android:label="@string/MSDC_HopSet"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".io.MsdcSd3Test"
-            android:label="@string/MSDC_Sd3test"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".desense.DesenseActivity"
-            android:label="@string/desense_activity"
-            android:screenOrientation="portrait" />
-
-        <activity
-            android:name=".desense.DesensePllsActivity"
-            android:label="@string/desense_plls_activity"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".desense.PllDetailActivity"
-            android:label="@string/desense_plls_detail"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".desense.FreqHoppingSet"
-            android:label="@string/desense_freqhopping"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".desense.MemPllSet"
-            android:label="@string/desense_mempll"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".power.Power"
-            android:label="@string/Power"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".power.PMU"
-            android:label="@string/PMU"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".power.PMU6575"
-            android:label="@string/PMU"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".power.ChargeBattery"
-            android:label="@string/ChargeBattery"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".baseband.Baseband"
-            android:label="@string/Baseband"
-            android:screenOrientation="portrait" >
-        </activity>
-        <!-- ======================================== HQA.CPUSTRESS ================================= -->
-        <activity
-            android:name=".cpustress.CpuStressTest"
-            android:label="@string/hqa_cpustress_name"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".cpustress.ApMcu"
-            android:configChanges="orientation|keyboardHidden|screenSize"
-            android:label="@string/hqa_cpustress_apmcu_name"
-            android:windowSoftInputMode="adjustPan" >
-        </activity>
-        <activity
-            android:name=".cpustress.ClockSwitch"
-            android:configChanges="orientation|keyboardHidden|screenSize"
-            android:label="@string/hqa_cpustress_clockswitch_name"
-            android:windowSoftInputMode="adjustPan" >
-        </activity>
-        <activity
-            android:name=".cpustress.SwVideoCodec"
-            android:configChanges="orientation|keyboardHidden|screenSize"
-            android:label="@string/hqa_cpustress_swvideo_name"
-            android:windowSoftInputMode="adjustPan" >
-        </activity>
-        <activity
-            android:name=".cpustress.Dvfs"
-            android:configChanges="orientation|keyboardHidden|screenSize"
-            android:label="@string/hqa_cpustress_dvfs"
-            android:windowSoftInputMode="adjustPan" >
-        </activity>
-        <service
-            android:name=".cpustress.CpuStressTestService"
-            android:configChanges="orientation|keyboardHidden|screenSize" >
-        </service>
-        <!-- new end -->
-        <activity
-            android:name=".audio.Audio"
-            android:label="@string/Audio"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".audio.AudioModeSetting"
-            android:label="@string/Audio_ModeSetting"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".audio.AudioSpeechEnhancementV1"
-            android:label="@string/Audio_SpeechEnhancement"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".audio.AudioSpeechEnhancementV2"
-            android:label="@string/Audio_SpeechEnhancement"
-            android:screenOrientation="portrait"
-            android:windowSoftInputMode="adjustPan" >
-        </activity>
-        <activity
-            android:name=".audio.AudioDebugInfo"
-            android:label="@string/Audio_DebugInfo"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".audio.AudioDebugSession"
-            android:label="@string/Audio_DebugSession"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".audio.AudioSpeechLoggerXV1"
-            android:label="@string/Audio_SpeechLogger"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".audio.AudioSpeechLoggerXV2"
-            android:label="@string/Audio_SpeechLogger"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".audio.AudioAudioLogger"
-            android:windowSoftInputMode="adjustUnspecified|stateHidden|adjustPan"
-            android:label="@string/Audio_AudioLogger"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".audio.AudioWakeLock"
-            android:label="@string/audio_wakelock"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".camera.Camera"
-            android:label="@string/Camera"
-            android:configChanges="orientation|keyboardHidden|screenSize"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".camera.CameraPreview"
-            android:clearTaskOnLaunch="true"
-            android:configChanges="orientation|screenSize|keyboardHidden|mnc|mcc"
-            android:label="@string/Camera_Preview"
-            android:screenOrientation="landscape"
-            android:taskAffinity="android.task.camera"
-            android:theme="@android:style/Theme.Black.NoTitleBar.Fullscreen" >
-        </activity>
-        <activity
-            android:name="com.mediatek.engineermode.cameranew.Camera"
-            android:configChanges="orientation|screenSize|keyboardHidden|mnc|mcc"
-            android:screenOrientation="portrait"
-            android:clearTaskOnLaunch="true"
-            android:taskAffinity="android.task.camera"
-            android:theme="@android:style/Theme.Holo.NoActionBar.Fullscreen">
-        </activity>
-        <activity
-            android:name="com.mediatek.engineermode.cameranew.AutoCalibration"
-            android:label="@string/Camera"
-            android:configChanges="orientation|keyboardHidden|screenSize"
-            android:windowSoftInputMode="stateHidden"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name="com.mediatek.engineermode.drivingcurrent.CameraMclk"
-            android:label="@string/Camera"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".wifi.WiFi"
-            android:label="@string/wifi"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".wifi.WiFiEeprom"
-            android:label="@string/wifi_eeprom"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".wifi.WiFiMcr"
-            android:label="@string/wifi_mcr"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".wifi.WiFiTx6620"
-            android:label="@string/wifi_tx"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".wifi.WiFiRx6620"
-            android:label="@string/wifi_rx"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".wifi.WifiTestSetting"
-            android:label="@string/wifi_ctia"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".networkinfo.NetworkInfoSimType"
-            android:label="@string/NetworkInfo"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".networkinfo.NetworkInfo"
-            android:label="@string/NetworkInfo"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".networkinfo.NetworkInfoInfomation"
-            android:label="@string/NetworkInfo_Info"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".dualtalknetworkinfo.NetworkInfoSimType"
-            android:label="@string/Dual_Talk_NetworkInfo"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".dualtalknetworkinfo.NetworkInfo"
-            android:label="@string/dualtalk_NetworkInfo"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".dualtalknetworkinfo.NetworkInfoInfomation"
-            android:label="@string/dualtalk_NetworkInfo_Info"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".AutoAnswer"
-            android:label="@string/AutoAnswer"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <!-- BT PART -->
-        <activity
-            android:name=".bluetooth.BtList"
-            android:label="@string/BluetoothTitle"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.BtRelayerModeActivity"
-            android:label="@string/BT_RelayerModeTitle"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.BtChipInfoActivity"
-            android:label="@string/BT_chipTitle"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.TxOnlyTestActivity"
-            android:label="@string/BTTXTitle"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.NoSigRxTestActivity"
-            android:label="@string/BTNSRXTitle"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.TestModeActivity"
-            android:label="@string/BTTMTitle"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.SspDebugModeActivity"
-            android:label="@string/BTSSPDMTitle"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.BleTestMode"
-            android:label="@string/BLETestMode"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.BtDebugFeatureActivity"
-            android:label="@string/BtDebugFeatureTitle"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.BtClockSelectionActivity"
-            android:label="@string/ClockSelectionTitle"
-            android:screenOrientation="portrait" />
-        <!--
-        <activity
-            android:name=".bluetooth.BLE_Scan"
-            android:label="@string/BLEScan"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.BLE_WhiteList"
-            android:label="@string/BLEWhiteList"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.BLE_Advertise"
-            android:label="@string/BLEAdvertise"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bluetooth.BLE_Initiate"
-            android:label="@string/BLEInitiate"
-            android:screenOrientation="portrait" />
-
-        <activity
-            android:name=".bluetooth.RxOnlyTestActivity"
-            android:label="@string/BTRxTitle"
-            android:screenOrientation="portrait" />
-        -->
-        <!-- BT PART -->
-        <activity
-            android:name=".modemtest.ModemTestActivity"
-            android:label="ModemTestActivity"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".modemwarning.ModemWarning"
-            android:label="@string/modem_warning_title"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".usb.UsbList"
-            android:label="USB_TEST"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".usb.UsbTest"
-            android:label="@string/USB_IF_TEST"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".usb.UsbPhyTuning"
-            android:label="@string/usb_phy_tuning"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".devicemgr.DeviceMgr"
-            android:label="@string/device_mgr"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bandselect.BandSelect"
-            android:label="@string/BandSelect"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bandselect.BandModeSimSelect"
-            android:label="@string/BandModeSIMSelect"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".ratmode.SimSelect"
-            android:label="@string/SIMList"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".ratmode.RadioInfo"
-            android:label="@string/Phone_info"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".ratmode.BandMode"
-            android:label="@string/Phone_info"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".fastdormancy.FastDormancy"
-            android:label="Fast Dormancy"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".fastdormancy.ConfigFD"
-            android:label="Config Fast Dormancy"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".cfu.CfuActivity"
-            android:label="CFU"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".swla.SwlaActivity"
-            android:label="SWLA"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".sdtest.SDLogActivity"
-            android:label="SDLogActivity"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".settingsfontsize.SettingsFontSize"
-            android:label="Set font scale"
-            android:screenOrientation="portrait" />
-       <!-- hqa nfc Start -->
-        <activity
-            android:name=".hqanfc.NfcMainPage"
-            android:label="@string/nfc_6605"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.ReaderMode"
-            android:label="@string/hqa_nfc_always_reader_mode"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.RwFunction"
-            android:label="@string/hqa_nfc_rw_function"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.PeerToPeerMode"
-            android:label="@string/hqa_nfc_always_p2p_mode"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.CardEmulationMode"
-            android:label="@string/hqa_nfc_always_card_emulation_mode"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.PollingLoopMode"
-            android:label="@string/hqa_nfc_polling_loop_mode"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.TxCarrierSignal"
-            android:label="@string/hqa_nfc_tx_carrier_signal"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.VirtualCardFunction"
-            android:label="@string/hqa_nfc_virtual_card_function"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.PnfcCommand"
-            android:label="@string/hqa_nfc_pnfc_command"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.FunctionRead"
-            android:label="@string/hqa_nfc_rw_read"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.FunctionWrite"
-            android:label="@string/hqa_nfc_rw_write"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.VersionQuery"
-            android:label="@string/hqa_nfc_version_query"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.Option"
-            android:label="@string/hqa_nfc_option"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.LoopBackTest"
-            android:label="@string/hqa_nfc_loopback_test"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".hqanfc.SwpTest"
-            android:label="@string/hqa_nfc_swp_test"
-            android:screenOrientation="portrait" >
-        </activity>
-        <!-- hqa nfc end -->
-
-        <activity
-            android:name=".rfdesense.RfDesenseTest"
-            android:label="@string/rf_desense_test"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".rfdesense.RfDesenseTxTest"
-            android:label="@string/rf_desense_tx_test"
-            android:process="com.android.phone"
-            android:windowSoftInputMode="stateHidden"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".rfdesense.RfDesenseTxTestGsm"
-            android:label="@string/rf_desense_tx_test"
-            android:process="com.android.phone"
-            android:windowSoftInputMode="stateHidden"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".rfdesense.RfDesenseTxTestTd"
-            android:label="@string/rf_desense_tx_test"
-            android:process="com.android.phone"
-            android:windowSoftInputMode="stateHidden"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".rfdesense.RfDesenseTxTestLte"
-            android:label="@string/rf_desense_tx_test"
-            android:process="com.android.phone"
-            android:windowSoftInputMode="stateHidden"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".rfdesense.RfDesenseTxTestCdma"
-            android:label="@string/rf_desense_tx_test"
-            android:process="com.android.phone"
-            android:windowSoftInputMode="stateHidden"
-            android:screenOrientation="portrait" >
-        </activity>
-
-        <receiver
-            android:name=".EngineerModeReceiver"
-            android:exported="true" >
-            <intent-filter>
-                <action android:name="android.provider.Telephony.SECRET_CODE" />
-
-                <data
-                    android:host="3646633"
-                    android:scheme="android_secret_code" />
-            </intent-filter>
-        </receiver>
-        
-        <activity
-            android:name=".networkselect.NetworkSelectActivity"
-            android:label="Network Selecting"
-            android:process="com.android.phone"
-            android:configChanges="mcc|mnc|locale"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".networkselect.NetworkSelectSimType"
-            android:label="SIM Select"
-            android:screenOrientation="portrait" >
-        </activity>
-        <service android:name=".DailyUseSettingService"/>
-        <!-- Merge NFC code to EM -->
-        <activity 
-            android:name=".nfc.NfcEntry"
-            android:label="@string/NFC_Entry_Text"
-	    android:screenOrientation="portrait">
-	</activity>
-	<activity
-            android:name=".nfc.NfcSettings"
-            android:label="@string/NFC_Settings_Text"
-	    android:screenOrientation="portrait">
-	</activity>
-	<activity 
-            android:name=".nfc.NfcSettingsResult"
-            android:label="@string/NFC_Settings_Result_Text"
-	    android:screenOrientation="portrait"
-            android:theme="@android:style/Theme.Dialog">
-	</activity>
-	<activity
-            android:name=".nfc.NfcRawData"
-            android:label="@string/NFC_RawData_Text"
-	    android:screenOrientation="portrait">
-	</activity>		
-        <activity
-            android:name=".nfc.NfcSoftwareStack"
-            android:label="@string/NFC_SoftwareStack_Text"
-	    android:screenOrientation="portrait">
-	</activity>
-	<activity
-            android:name=".nfc.NfcSoftwareStackScan"
-            android:label="@string/NFC_SoftwareStackScan_Text"
-       	    android:screenOrientation="portrait"
-            android:theme="@android:style/Theme.Dialog">
-	</activity>
-	<activity
-            android:name=".nfc.NfcSoftwareStackSecure"
-	    android:label="@string/NFC_SoftwareStackSecure_Text"
-	    android:screenOrientation="portrait"
-            android:theme="@android:style/Theme.Dialog">
-	</activity>
-	<activity
-            android:name=".nfc.NfcSoftwareStackP2PInitDect"
-	    android:label="@string/NFC_SoftwareStack_P2P_InitDect_Text"
-     	    android:screenOrientation="portrait"
-            android:theme="@android:style/Theme.Dialog">
-	</activity>
-	<activity
-            android:name=".nfc.NfcSoftwareStackScanReadTag"
-	    android:label="@string/NFC_SoftwareStackScan_Read_Text"
-	    android:screenOrientation="portrait"
-            android:theme="@android:style/Theme.Dialog">
-	</activity>
-	<activity
-            android:name=".nfc.NfcSoftwareStackScanWriteTag"
-	    android:label="@string/NFC_SoftwareStackScan_Write_Text"
-	    android:screenOrientation="portrait"
-            android:theme="@android:style/Theme.Dialog">
-	</activity>
-	<activity
-            android:name=".nfc.NfcSoftwareStackRawCommand"
-	    android:label="@string/NFC_SoftwareStackScan_RawCommand_Text"
-	    android:screenOrientation="portrait"
-            android:theme="@android:style/Theme.Dialog">
-	</activity>
-        <activity android:name=".hspainfo.HspaInfo"
-            android:label="@string/hspa_info_title" android:process="com.android.phone"
-            android:screenOrientation="portrait">
-        </activity>
-    <service android:name=".nonsleep.EMWakeLockService"/>
-	<activity android:name=".mcdi.McdiSetting"
-			android:label="@string/mcdi_setting_label" 
-			android:screenOrientation="portrait">
-	</activity>
-	<activity android:name=".dvfs.CpuDvfs"
-			android:label="@string/cpu_dvfs_label" 
-			android:screenOrientation="portrait">
-	</activity>
-	<activity android:name=".pllcg.PllCgActivity"
-			android:label="@string/pllcg_title" 
-			android:screenOrientation="portrait">
-	</activity>
-	<activity android:name=".desense.FreqHoppingSetting6572"
-			android:label="@string/desense_freqhopping" 
-			android:screenOrientation="portrait">
-	</activity>
-	<activity android:name=".dcm.DcmList"
-			android:label="@string/dcm_label" 
-			android:screenOrientation="portrait">
-	</activity>
-	<activity android:name=".dcm.ApdcmActivity"
-			android:label="@string/dcm_apdcm" 
-			android:screenOrientation="portrait">
-	</activity>
-	<activity android:name=".dcm.LpmActivity"
-			android:label="@string/dcm_lpm" 
-			android:screenOrientation="portrait">
-	</activity>
-	<activity android:name=".sleepmode.SleepModeActivity"
-			android:label="@string/sleep_mode_setting" 
-			android:screenOrientation="portrait">
-	</activity>
-	<activity android:name=".deepidle.DeepIdleSettingActivity"
-			android:label="@string/deep_idle_setting" 
-			android:screenOrientation="portrait">
-	</activity>
-
-    <activity
-        android:name=".UartUsbSwitch"
-        android:label="@string/uart_usb_switch" >
-    </activity>
-    <activity
-            android:name=".wfdsettings.WfdQuality"
-            android:label="@string/wfd_quality"
-	    android:screenOrientation="portrait">
-	</activity>
-	<activity
-            android:name=".wfdsettings.WfdList"
-            android:label="@string/wfd_settings"
-	        android:screenOrientation="portrait">
-	</activity>
-	<activity
-            android:name=".wfdsettings.WfdVdoCapability"
-            android:label="@string/wfd_video_capability"
-	        android:screenOrientation="portrait">
-	</activity>
-	<activity
-            android:name=".wfdsettings.WfdPowerSaving"
-            android:label="@string/wfd_power_saving"
-	        android:screenOrientation="portrait">
-	</activity>
-	<activity
-            android:name=".wfdsettings.WfdSecurity"
-            android:label="@string/wfd_security"
-	        android:screenOrientation="portrait">
-	</activity>
-	<activity
-            android:name=".wfdsettings.WfdLatency"
-            android:label="@string/wfd_latency_profiling"
-	        android:screenOrientation="portrait">
-	</activity>
-    <activity
-            android:name=".wfdsettings.WfdIotProperty"
-            android:label="@string/wfd_iot_property"
-            android:screenOrientation="portrait">
-    </activity>
-    <activity
-        android:name=".worldphone.ModemSwitch"
-        android:label="@string/world_phone"
-        android:process="com.android.phone"
-        android:windowSoftInputMode="stateHidden"
-        android:screenOrientation="portrait">
-    </activity>
-    <activity
-            android:name=".sensor.Sensor"
-            android:label="@string/sensor"
-            android:screenOrientation="portrait">
-    </activity>
-    <activity
-            android:name=".sensor.SensorCalibrationSelect"
-            android:label="@string/sensor_calibration"
-            android:screenOrientation="portrait">
-    </activity>
-    <activity
-            android:name=".sensor.SensorCalibration"
-            android:label="@string/sensor_calibration_gsensor"
-            android:screenOrientation="portrait">
-    </activity>
-    <activity
-        android:name=".sensor.MSensorCurrentActivity"
-        android:label="@string/msensor_current_data"
-        android:screenOrientation="portrait">
-    </activity>
-    <activity
-        android:name=".sensor.MSensor"
-        android:label="@string/sensor_data"
-        android:screenOrientation="portrait">
-    </activity>
-    
-    <activity
-        android:name=".sensor.PSensorCollection"
-        android:label="@string/psensor_data_collection"
-        android:screenOrientation="portrait">
-    </activity>
-    <activity
-        android:name=".sensor.PSensor"
-        android:label="@string/sensor_ps"
-        android:screenOrientation="portrait">
-    </activity>
-    <activity
-        android:name=".sensor.PSensorCalibration"
-        android:label="@string/psensor_calibration"
-        android:screenOrientation="portrait">
-    </activity>
-    <activity
-        android:name=".sensor.PSensorChangeThreshold"
-        android:label="@string/psensor_change_threshold"
-        android:screenOrientation="portrait">
-    </activity>
-    <activity
-        android:name=".sensor.PSensorCalibrationSelect"
-        android:label="@string/psensor_calibration_select"
-        android:screenOrientation="portrait">
-    </activity>
-        <activity
-            android:name=".usbacm.UsbAcm"
-            android:label="@string/usbacm"
-            android:screenOrientation="portrait">
-        </activity>
-        <activity
-            android:name=".cdmanetworkselect.NetworkSelectActivity"
-            android:label="@string/cdma_network_select"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" >
-        </activity>
-	<activity android:name=".DeviceRegister"
-			android:label="@string/ct_device_register" 
-			android:screenOrientation="portrait">
-	</activity>
-	<activity android:name=".EsnTrack"
-			android:label="@string/esn_track_title" 
-			android:screenOrientation="portrait">
-	</activity>
-    <activity
-        android:name=".cwtest.CWTest"
-        android:label="@string/cw_test"
-        android:screenOrientation="portrait">
-    </activity>
-        <activity
-            android:name=".lte.LteConfiguration"
-            android:label="@string/lte_config"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait">
-        </activity>
-        <activity
-            android:name=".lte.LteNetworkMode"
-            android:label="@string/lte_network_mode"
-            android:configChanges="mcc|mnc|locale"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait">
-        </activity>
-        <activity
-            android:name=".lte.LteNetworkInfo"
-            android:label="@string/lte_network_info"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait">
-        </activity>
-        <activity
-            android:name=".lte.LteNetworkInfoDetail"
-            android:label="@string/lte_network_info"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait">
-        </activity>
-        <activity
-            android:name=".lte.CommandTool"
-            android:process="com.android.phone"
-            android:label="@string/lte_tool">
-        </activity>
-        <activity
-            android:name=".lte.CommandToolEdit"
-            android:process="com.android.phone"
-            android:label="@string/lte_tool">
-        </activity>
-        <service
-            android:name=".lte.CommandToolService"
-            android:process="com.android.phone"
-            android:configChanges="orientation|keyboardHidden|screenSize" >
-        </service>
-	    <activity android:name=".cip.CipPropContentActivity"
-			android:label="@string/cip_prop_content" 
-			android:screenOrientation="portrait">
-	    </activity>
-        <activity
-            android:name=".modemdebug.ModemDebug"
-            android:label="@string/modem_reset_debug"
-            android:screenOrientation="portrait" >
-        </activity> 
-
-	    <!-- <receiver
-            android:name=".wifi.WifiStateReceiver"
-            android:exported="true" >
-            <intent-filter>
-                <action android:name="android.net.wifi.WIFI_STATE_CHANGED" />
-            </intent-filter>
-        </receiver> -->
-        <!-- CT Network Selection Start-->
-        <activity android:name=".networkselection.SimSelect"
-            android:label="@string/ct_sim_select" android:screenOrientation="portrait">
-        </activity>
-        <activity android:name=".networkselection.NetworkSelection"
-            android:label="@string/ct_network_selection" android:process="com.android.phone"
-            android:screenOrientation="portrait">
-        </activity>
-        <!-- CT Network Selection End -->
-        <!-- Antenna Test Start -->
-        <activity android:name=".antenna.AntennaActivity"
-            android:label="@string/antenna_title" android:process="com.android.phone"
-            android:screenOrientation="portrait">
-        </activity>
-        <!-- Antenna Test End -->
-        <!-- wps nfc start -->
-        <activity
-            android:name=".wps.WpsNfcList"
-            android:label="@string/wps_nfc_list"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".wps.WpsNfc"
-            android:label="@string/wps_nfc"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".wps.WpsNfcRole"
-            android:label="@string/wps_role"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".wps.WpsNfcRoleEnrollee"
-            android:label="@string/wps_role_enrollee"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".wps.WpsNfcRoleRegistrar"
-            android:label="@string/wps_role_registrar"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".wps.WpsNfcTag"
-            android:label="@string/wps_write_tag"
-            android:screenOrientation="portrait" >
-        </activity>         
-        <!-- wps nfc end -->
-        <!-- voice application start -->
-        <activity
-            android:name=".voicesettings.VoiceList"
-            android:label="@string/voice_settings_title"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".voicesettings.VoiceWakeup"
-            android:label="@string/voice_settings_wakeup"
-            android:screenOrientation="portrait" >
-        </activity> 
-        <activity
-            android:name=".voicesettings.VoiceCommonSetting"
-            android:label="@string/voice_wakeup_recognition"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".voicesettings.VoiceWakeupDetector"
-            android:label="@string/voice_wakeup_detector"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".voicesettings.VoiceRecorder"
-            android:label="@string/voice_recorder"
-            android:screenOrientation="portrait" />
-        <!-- voice application end -->
-        <activity
-            android:name=".ims.ImsActivity"
-            android:label="@string/ims_title"
-            android:windowSoftInputMode="stateHidden"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".ims.ConfigActivity"
-            android:label="@string/ims_title"
-            android:windowSoftInputMode="stateHidden"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-       <activity
-            android:name=".power.LowPowerDebug"
-            android:label="@string/low_power_debug"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".misc.MiscConfig"
-            android:label="@string/misc_config"
-            android:screenOrientation="portrait"
-            android:process="com.android.phone" />
-       <activity
-            android:name=".atci.atciActivity"
-            android:process="com.android.phone"
-            android:label="@string/ATCI_title"
-            android:screenOrientation="portrait" >
-       </activity>            
-       <!-- PTP Start -->
-       <activity
-            android:name=".ptp.PtpList"
-            android:label="@string/ptp_title"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".ptp.Ptp1Activity"
-            android:label="@string/ptp_ptp1"
-            android:screenOrientation="portrait" >
-         </activity>
-        <activity
-            android:name=".ptp.Ptp2Activity"
-            android:label="@string/ptp_ptp2"
-            android:screenOrientation="portrait" >
-        </activity>
-        <!-- PTP end -->
-        <activity
-            android:name=".networkinfo.SecurityStatus"
-            android:label="@string/security_status"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".networkinfo.AntennaDiversity"
-            android:label="@string/antenna_diversity"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".amrwb.AmrWbActivity"
-            android:label="@string/amr_wb"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name="AalSetting"
-            android:label="@string/aal_title"
-            android:screenOrientation="portrait" />
-        <!-- Video Start -->
-        <activity
-            android:name=".video.VideoActivity"
-            android:label="@string/video_title"
-            android:screenOrientation="portrait" />
-        <!-- Video End -->
-        <activity
-            android:name=".irsettings.IRSettings"
-            android:label="@string/c2k_ir_setting"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <service android:name=".boot.EmBootStartService"
-            android:exported="false"/>
-        <activity
-            android:name=".vilte.VilteActivity"
-            android:label="@string/vilte_title"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".sbp.SbpActivity"
-            android:label="@string/sbp_title"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".testcard.TestCardActivity"
-            android:label="@string/test_card_title"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".u3phy.U3PhySwitch"
-            android:label="@string/u3_phy_switch_title"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".bypass.BypassSettings"
-            android:label="@string/bypass_settings_title"
-            android:screenOrientation="portrait" />
-         <activity
-            android:name=".simswitch.SimSwitch"
-            android:label="@string/sim_switch"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".moms.MoMs"
-            android:label="moms"
-            android:screenOrientation="portrait" />            
-        <activity
-            android:name=".modemfilter.ModemFilterActivity"
-            android:label="@string/md_em_filter"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".ehrpdbgdata.EhrpdBgData"
-            android:label="@string/ehrpd_bg_data"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" >
-        </activity>
-        <activity
-            android:name=".ims.ImsActivity"
-            android:label="@string/ims_title"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".ims.ConfigIMSActivity"
-            android:label="@string/ims_title"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-        <activity
-            android:name=".ims.imsSettingPageActivity"
-            android:label="@string/ims_title"
-            android:process="com.android.phone"
-            android:screenOrientation="portrait" />
-    </application>
-
-</manifest>
diff --git a/EngineerMode/README b/EngineerMode/README
deleted file mode 100644
index 7bee738..0000000
--- a/EngineerMode/README
+++ /dev/null
@@ -1,30 +0,0 @@
-adapted by Zormax
-=============
-EngineerMode apk. the pre-built system application, contain some debug tool for engineer
-to test or debug.
-
-This apk is pre-built by MediaTek internal.
-
-WHAT IT DOES?
-=============
-EngineerMode.apk provide some test or debug tool for engineer.
-
-HOW IT WAS BUILT?
-==================
-It needs the following library from AOSP:
-1. android-support-v4
-2. telephony-common
-
-and the following libs from MediaTek:
-1. mediatek-framework
-
-All source/dependency modules of this module are already put in
-'vendor/mediatek/libs' folder.
-
-HOW TO USE IT?
-==============
-
-Enter dialer, and key in *#*#3646633#*#* to launch the EngineerMode.
-all source code are at (vendor/mediatek/proprietary/packages/apps/EngineerMode/)
-
-All the source code of this library were written by MediaTek co..
diff --git a/EngineerMode/emma_filter.txt b/EngineerMode/emma_filter.txt
deleted file mode 100644
index c36bc29..0000000
--- a/EngineerMode/emma_filter.txt
+++ /dev/null
@@ -1,27 +0,0 @@
-+com.mediatek.engineermode.*
--com.mediatek.engineermode.GPRS*
--com.mediatek.engineermode.R*
--com.mediatek.engineermode.phone.*
--com.mediatek.engineermode.cfu.*
--com.mediatek.engineermode.digitalstandard.*
--com.mediatek.engineermode.fastdormancy.*
--com.mediatek.engineermode.modemtest.*
--com.mediatek.engineermode.swla.*
--com.mediatek.engineermode.usb.*
--com.mediatek.engineermode.networkinfo.*
--com.mediatek.engineermode.ratmode.*
--com.mediatek.engineermode.networkselect.*
--com.mediatek.engineermode.bandselect.*
--com.mediatek.engineermode.dualtalknetworkinfo.*
--com.mediatek.engineermode.camera.*
--com.mediatek.engineermode.camera6589.*
--com.mediatek.engineermode.io.MsdcHopSet*
--com.mediatek.engineermode.nfc.*
--com.mediatek.engineermode.hqanfc.*
--com.mediatek.engineermode.desense.*
--com.mediatek.engineermode.dcm.*
--com.mediatek.engineermode.mcdi.*
--com.mediatek.engineermode.dvfs.*
--com.mediatek.engineermode.pllcg.*
--com.mediatek.engineermode.sleepmode.*
--com.mediatek.engineermode.deepidle.*
diff --git a/EngineerMode/res/drawable-hdpi/border_view_finder.9.png b/EngineerMode/res/drawable-hdpi/border_view_finder.9.png
deleted file mode 100644
index b5922bfe2dfcc52a804884a2241f746b10dd5d05..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1365
zcmeAS@N?(olHy`uVBq!ia0vp^At21b1|(&&1r7o!#^NA%Cx&(BWL^R}Ea{HEjtmSN
z`?>!lvI6-E$sR$z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBC?Q$m
z8c`CQpH@<ySd_{TkeHcQqUYxtqEKe6XR2pn*L$W6X#P4+7srr_xVLxhHMZtUuopNz
z@z)SxW@F=dQFeN=y{czt<7=suq(@SJD!q8Rcv2>|c6K^yGK-0^B^q)tYq9|W^U@E$
z=l!|2{r>I#M{}wx3T;cvtxBzIYtNP5{r>s6&2>?^Z>HO(|9_MABm72c^V}`>b6eWm
zZ=X2fAuTMN{P^+X+@PRIzP`R&B_$=ztgUZ9d-m*BQxj8kOia${Q>Su5L#M7?yLKxt
zFYmODob2q?x%v6q=gytGZTt4?d^|ii7A{n@HZx08S5tfQ<;xbJ#MaNBKbI928YcXx
z=H8Qe?7@4ZhLZ<U5{wKaXYly2sWDG(#KE<(u{ncKnD+V8r%(SKIA?s4Wiw!%!Q{iZ
zOhsLt8_Hw|ZqPg+lE8(BJ7wxr(WvO?YT+yF843F?eRO0#@aw>mvuAx-O9d^8i;L|H
zGSk!D9b+5xbaZ|kSh9ETUWOO%7f(De`+&?U&Ho2O{(nu@(bfHVV9DXb&Oj{-SFc`e
zXYlgL6BnSCb?evvKCoo-W@FY;#$6jXK4hM(r>`%1h4sa?Yt#6BcJ13279hT0_wL<5
z4d1?n0W~DGesA<FFE8hM#Z*#Xf1h2=*2YF-1^0!;i<RYPeEIQX#R5Ht{{H^jgiD`4
zZ*JPfU~6mpwb4^wUmvJJ<oE(R1EAq)53J9fKQDSkbXil~C$CHH4@{k87i+C(`giyH
zb`vL4AgsTlo8emtfpY|3)c#ah&NSD#xuyEONr<Cph`4I(l#)O$JMI#`tCl7|Ui>`4
z`Y6DDvEVAfUtg6>HfX(`88l(y@32$a853r_zxy>L;P`@uYg72kwq6glYsskLj&&6M
z@><sHrHqu*m8?_k4a<vHB-^ltUf5sF_^YJF&Bf)#<rDLJUX_chCIp3qOaXd>by;U$
z-?AGwB7ot<<s&RE?#{`{3G&hmHABOR0k&?ypkcbaWXY0%sHj<B^`8Fz>Q_vIfWddb
zWaiA7z(`yQ44THwqM{-WXOQYkPo6#vtgG7xQoTe|OKZ`gLr!4RgQKFnR8>{MrY~Ex
zsOi+{)4)K>NKIY3a^=c}uU=(ARK>^pmzI`7RIOauDJ3lpRHb3y>+Q{L2nu=DWtrL8
z%2Q5-f}J2ME87wd)_D2uUEd0jATVl{?cYCt*REY6AdS3S_k!c&=Yw@h%E~T1c+e57
zzPahUiILGFu;Z64Tb5B%69e|_nKNfDJbALDsf|tQhk9~^#4UY^FIyG9><9qcmm%cz
zVu#X;Y{iVD3b$|HZYtVQR8XL>Vxr~>Ck=6N@uJdFRdaLmrd8{T>g)Aa%+>Vw_iy5A
zwXgiM>f8^hg^h6z2XgRbG5cDR|IzkeL`^PmbIg!4u>G?2L&HnP%goEzefUBAgsKBy
zAOh|Bmp*2Fa4()3e$#%t{MS3x0{vI_q>6pxfAK-A)^US#C9rs7@O1TaS?83{1OVKb
BJ7fR=

diff --git a/EngineerMode/res/drawable-hdpi/btn_shot_photo_repeat.png b/EngineerMode/res/drawable-hdpi/btn_shot_photo_repeat.png
deleted file mode 100644
index bf5ca999f4dce7fec656f38ce42f81dce8a75508..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1220
zcmV;#1UvhQP)<h;3K|Lk000e1NJLTq001@s001@!1^@s6j74hQ0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU$W=TXrRCwC#nMq6=R~W~iF&G@MSpp&w
zfjZ*gNUcN(#wsK&N}z15z;*(hawz3c;J_y3Sj3G;2nj@Q9E!vtpoDN}Wspmy9uN(U
zQH1Rz3X7m94FR#QHemAq5>r)x*D>{!&L=(1%$s@R_nYr~-|{RvJUnFQQG(bx6#+~D
z6Tk#80qma=%=HB#ktm=5&f>6OivK%P?CI$_(H9yT$}}3yO`NLG!krAYq5XmO1Z|yn
zV8<mSB!r*}tE#HLt*EHTmrA7<PJ3=|Z_j2h7@jmVG~CCf9?i~Mu%MtIrqk)N3JMDD
zl$Mri=jZ1|TU%SqZnvLsH~^NYRI1PG>+3gLTU!s%J;2*FR#H-;OiWDts=B(mWM^kb
zw6U>q0_w<<ZEtTgx?fmWn46K2QG{+aFTu*n$|N|XH#IeBB@#)*=H{l`F$A~2zb}S4
z-jT^<1b4|_^AWkL$6z*c$JZoB5a#OH#>U3XtgNgrS65eQ4S6&Hu~^KaqN3Qu#DuZ3
zvhpW4kCVxo98Tx8t2pKo3{YY?gYTQ0n{Q@kXRAZW-8m5gSzB9U1Vx(gM(DNC(a|h2
zGLpIY33dQ68jYs9x;p*x^70P^=PTG}wY9a4MMXvV<OHy8SfDCyayT$?CYQ_EGYFhc
z6T17I&BvWr{5Ux|`4iHF&1MUD>SVQA+4}lAi;Ig>qD#re-AiDK5>MBQ69=&|Gc)sQ
zc6Rm+UB}1A$KYcrVRjdNc^`dXXikb#Dd#xmi}_(W><<kM4R&>P8R7Y!qU$fmtr+^+
z#l^+fwOZ}hh-VT0NP5pa^Kdv4YkPb9kE5fbk8x>0+I2jb84w;!V`F2l;Yq)NtB?6l
zB*A@sef@xX2%y1JppJ6P-{$7#9(8ndJU|dX;5``9s9AswVB)`ckU)>X!ToGDn~l5&
z8y_Dx<6!Y(h<SK;*us0Tsi~<29Nu~{WWi)Iz2!X^+`G+DYk4ZWOG`^uUV~BI7aJQ(
z?%Nv|E>|cNGJo%#_!W%uyp)ubk8rB+Vxm_vGcy%oVPX6Qqu{AltFIwjzlB26Z3%){
zM!&Dh$;nYuk;+>z%H_ht!!ID{=2C5jiATE9E+iM3`t78oq{}pxw_sE)Q^}H=nwr+q
z(sB=7rGWdC_Cfwmb%KLQQ^^{QrmUu><~yWTxx2f&RB-ZpGv_D+he_Vh>-AT<ySsnY
z>2wsQRveE+<mKfl%gf8ZNJvPyN|l4R^;^JlMXKAVB0vt90Il3b?X&~fRk}w>FSI5j
zpvA?-Gb@MOf!S!A%$FCFX|1fRysxMMBBe&2lCJ6AX`4LWB-s@IxU8|~7K`OMS5HaW
zBQ282k%qWHkxWldzrf)o7qF+Dot?iUQ60fo4r~ei;UgVRPEMNI+S&#j8#<hJsi;;;
zM@yrMI>2mpM}kdIfBL*j<%#t6_Hr5z*UvdAI1@18|FM5rg#X9<xq~HWOaK$W1TX<i
i029Cju=6GF1Q-Af(D`^xp^F><0000<MNUMnLSTYA&q)aY

diff --git a/EngineerMode/res/drawable-hdpi/ic_focus_failed.9.png b/EngineerMode/res/drawable-hdpi/ic_focus_failed.9.png
deleted file mode 100644
index 82cc76edaaab33e7a63e0aafdb0e6d05350de184..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 809
zcmV+^1J?YBP)<h;3K|Lk000e1NJLTq002P%001ut1^@s6ya}go00004b3#c}2nYxW
zd<bNS00009a7bBm000Y#000Y#0XNCZtpET5%Sl8*RA_<i+CPjGWf;ft&pWqw?wto>
zLnJYpn3&jcQW=e%(ast=I;_;1L`!HWl-@|E4Gq0m83`udVPj+bLkL)0!f|-q-m$kY
z#XEaDEPIQvuN)rlFPZG@?6dQ{&-Z=a+05)ujL|MCHn!av!0y)n^eB*~;Tmrp;GIp@
zV*i7Dssf#}e0!Wb6<!$;bQL|EWA0;)M%wkEEb7-a!}BZr@G_SITK#}7@6GdR<W^uV
zSK>PNRG0PZT)f4fvuP|3^kIjvPQ1>+eSF?x7F#mTN#su8g=N0LCB$tAt8C)tZ!G@I
z@B3+OWy%|<W>{Tf<Hs?97wgw0HooWUP4>ss2@^w@!YbV(y!JY8*7c&%2_enQ{0hGu
z<;%mguVidRbg+3j?T@?~eKa_}{61%-<&Z^(sjkqu%qMs^G{(>xiVgGJjoilCN#dz|
zSMK|kz^JKhB)W?()^a31NjQ~K_I^$0zAt?>{Dp2~|8yOlX^YMGqckpllI`>k_3a2@
zNPFc+bZi~tAnX+YeeGD!!#d%aP=TO8K!Jb)0R;jI1QZA;5KthXKtO?j1Yxh;C_S=D
zCnyk*AY^{J{{K_y1O);L1QZA;5KthXKtO?j0s#dA3Ir4gC=f6n!d|<(+_9cvr;2J2
zJavQWrA$wrdbq&WLdxOQ5ix(&aZC7+sa$RP_rR~wt46?RdX`9bolbw;hmv#biD?K-
z*4#09x7788CW%%f2-eyx{K1JAX)V{5naT5S`xw7D{_lN^#~MDyiG~reLbyqHjs>+>
zv#)Ik)5*KoKFHgF4<<=EVhnvB<9CnXWBe?)kMTfCdK>NOhF5bN!cQ#T;QT+Vhk^NX
zQbp-RkK<$fs^MdlYdkS6`PpkMzA<#-3NsS<mjC84d<Pqnh3;XR#&a_I7#j+biEUjn
nboN4wQ5ak%p0)oVLX6QpfX&Tbz+Bb&00000NkvXXu0mjfE`5EI

diff --git a/EngineerMode/res/drawable-hdpi/ic_focus_focused.9.png b/EngineerMode/res/drawable-hdpi/ic_focus_focused.9.png
deleted file mode 100644
index f956cfb996fc6c7324a1f587694ec4e720cc197f..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 927
zcmeAS@N?(olHy`uVBq!ia0vp^jzFx>!3HGva4ydWQY^(zo*^7SP{WbZ0pxQQctjR6
zFmQK*Fr)d&(`y+Rm>oS`978f1-_Ekl5OI`fn}756>3jWZ9Eu8EO&%AVJl6clbrBJ~
z7!)nd%^4N3VnJ(bgo==-Rp7=6H<nCLSTvzwk%V-!*OiWrwg`>J87+JN-#wpHymN1i
zP_Ma=@3YpYH+J^V%%Ar&t$%K{prBZw&@M6c#-nrp?^kC15cJ?8^ETD6O`9hizq(J4
z%Ujc^Hulclx{fKS2X8h{O$>k6{QmG~Iic#l!jKk;ruCNMZ!}I`Q91ujc0v7WCg}x|
z6)!fL&wH|ElSIFZN5&HcFTs<~J^K4EP51qHvvcu`RPG;gTC?4bxo3J@D>RI9j$!Fv
zd3046*9V)RN5RkkE!Zphi*aK&W9IajBWZ75yR)_3|ExLfh?s4*f`*RusUsf*ZuYN#
z#wYWJ->$v=#J<{dYn|rZTIsbys%ewL<DiJ`oxIs*m*$k66y3ksxsYj%hwrCfzbe<Q
z%~dh`<e06Q)^O+f!IvAgN}hiz`JM6GGpcdMx`Wrvl6q?tir<+nZ@BwV=8%AZ<Izb^
zTxYP{nP%+azIvOw%T2L>&1-UBIL>9~YFM58V4CrYzA%vo@vqeMgW@8uoiW+#^m5x~
zU5~KKst<qPG>NY<4Ns5G<XP`<^qE$Bz{;hcl&#*|JZs(%!XRS$yrwRc^RyEi6B|>4
z0s}UJv1RGEMOzYPdL3|JVB(1KEBc=fX7jKB1+WtdbsXMr-xi(wdBa$GiYSY}!;@#y
zYeIRY{N{<I1b=uVckkEP2Pz9v!&4)UUsiZ`+WJQ2jE>0;r*~ezQGSJGMbwAx&)ln7
z99hd`)%~8a1~C8os9SM$`G?<J%`YvMmcLO`oWwlGLQ*h9!j-d$!7lI0!j;?Gg-=Gk
zS-m&voV@Cj<Tp_b{U0Mv9FO>Vt>%-&Q@?-}ofli;-(8*4CQ$0(vgpXG@XgFe>w5F9
zZ|L7x&S-axdsl5w>DLB>P9?EY50Tr;6>F-_9=Kt?YjftM;7)DcQh_fY((R5(E6OKd
z@HXYzwwvKpr?C9*V+`)6thY5tDflrw%a=Kv-k{TH`#!vjiBGDwM^TfhIzj3L<31t5
kkdwjN@BC{HP&(uvu5WmNul#8)Fo!XCy85}Sb4q9e0I3#}fdBvi

diff --git a/EngineerMode/res/drawable-hdpi/ic_focus_focusing.9.png b/EngineerMode/res/drawable-hdpi/ic_focus_focusing.9.png
deleted file mode 100644
index aaf5ee497388f62e459c8b4df3af06952f387656..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 812
zcmeAS@N?(olHy`uVBq!ia0vp^jzFx>!3HGva4ydWQY^(zo*^7SP{WbZ0pxQQctjR6
zFmQK*Fr)d&(`y+Rn9g~+IEG|2zMZwv|F(lj`~GfSR;d7$pd~sU3sTmo9*Mi=*CQA`
zT~FujA+P@|)5;Rxwb>|bJ#~u7V}<uFHw9Oxjsppe+!J@~;k)sUF>}EeC#@aocZ=*^
z@4Y{L_vYH4ib_0&M=}m;9=Nc6lG%$L`F+P%xu%|UY3c3lHNSlM^5;UC`O$uAUMuH3
zue6^&efoYKUEQs==YzYuySLZ<{ra_Z>DFmmw{AUo_3G8_QLn|7E*&+R;<V6U*Z%$c
zcW&4a5bpJGx%jeW%bqnWRH!R0_gdL>bPiL+T)*YPI%4~$o__l6#*K*cjmE~tbLP$s
z)Dcr}R`@aD{PWKZ$COwEJEsOcj>>MZQjlx`+E)Bv%gvm+e6!j1UP~wK+OucNB=eb^
zg(9xU+uPeK=3Os-aPOX6RQ4hbt2`5_`CG5CMjIdeUhC)Qw<Kugo>gJ1i#y{MdkJpa
zzCGOKNkV#hx~q%8M8`F!7ry0GTIAB=a^G>0xI@t~1%{%XF}Ic<G6*?&cH1nKhW{ZM
zw~nOUGvL|mYj8FF+JpN#M<SSlR$qM}C?D??JDb7mvzBMb_ozoZqiwGzuh171TfDw+
zw}MS~fk1%(13M#jqCuO(|Ec%KgAdb~_?QY<9~z$f@&9#!F(WSZV1pWVE80xeKeNv&
z&+)_GGusy)GB~m<`AET{FFMEe<lS63snOue-)nO;{bH2v=53#SEoAl89QnPPzhs_E
z`c2*USWZauN67q_T_5v#y42OwnyU8x+Zdv?a_w4O?VrIw_b1!@;+9`*`u*0scX`j^
zm><oXw{+sfiGc}wf>xdhU48ZX|5;Z!E+7A~HAYYV?&0G<j5wOUH-9o@dfXXzpy5K+
zRx{i4$rJjnX>{HC{>5;cbnmg{j#g38Yp*?f^XARgf6w3MiU}4^uE_iEs3G`J+-{N&
V_XopNUtn@)@O1TaS?83{1OWU)ZHWK?

diff --git a/EngineerMode/res/drawable-mdpi/border_view_finder.9.png b/EngineerMode/res/drawable-mdpi/border_view_finder.9.png
deleted file mode 100644
index cb1141f1c04ad6def883dd6e1fc9b9a972534c49..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 312
zcmeAS@N?(olHy`uVBq!ia0vp^79h;Q1|(OsS<3+_$r9IylHmNblJdl&R0hYC{G?O`
z&)mfH)S%SFl*+=BsWw1Gw>(`OLn>~)xwVn&kb%Ilk8^ZmU4OChS(OPM-`CdvQ23jo
z%&yLoPogZ2k685<Jjzmh{{O*ak7*y8eNMI-<R6`Ro;#^_`AgHcr{h+dX0pBRzhx$z
zCtq_V%J`VXdZnV%2d@1(*c?#ko-2KJ<-Z-P;#OV0Gr3f7j<`bu10xd)hkybS!=BOY
zy~D#UbYZZ<5B!ajjjxAY&QRe$vP|;%MYU9G_8qBlPr~1N6?)D&))3yxEd5$s(6YXI
ioBrSRkIsG(NnprKP*7^fRGSL)C4;A{pUXO@geCxjjC3gg

diff --git a/EngineerMode/res/drawable-mdpi/btn_shot_photo_repeat.png b/EngineerMode/res/drawable-mdpi/btn_shot_photo_repeat.png
deleted file mode 100644
index 949a398e47c6859a4297b373629c50c87ea30306..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 852
zcmV-a1FQUrP)<h;3K|Lk000e1NJLTq001Na001Ni1^@s6;Q*MJ0000PbVXQnQ*UN;
zcVTj606}DLVr3vnZDD6+Qe|Oed2z{QJOBU!_DMuRRCwC#SWRdeK@=W;DixH95R^a?
zp&=|DtRTTk4vV*fh(QhHm`jh+Ab2kx1QEQK9_+=NITR7}5UhbhOH)V>LcmK@3Sur>
ze^BFJ-;+%sn{{<#wxq!a!>%)L=Y8|$z4y&18;{52F^QZ!GFbxp?*J(moj@j&E%ZG%
zsh*C9z%x7W*oLO#3^CAtK>Pa7009_RFc^I6cDrefMso{LtJPxC>2x6;k7IvEazN-A
zpU=1F^?E(+cAM1e^_w`rcv32rIvgvP%goWyQ4P9(ikhDrR4}Oq9yGfhypqjk-wg%>
zU8mC_qtWPgP|D>*tyYuaa9HzrJRbyX<F*#SerpyWS1c9_Ih{_Lk5;a(u1KTNAm|-1
z%4<oXP!QNkqSb1NN~Pk>%zQpy2!%rL!N!+aTefYt+v&^8OJ0NM5d<|2%(V^zMm_Y{
zoj6e{$=cf52E3Z)iXoh=*=!Oa;>A^#N~N=tlapV$T<!w<{C+>>a5!FpF$%VnV4LQ_
zZnrysP~+-_z~HJgnat-;An@}H+5}K4m7<_o4-O9YT`rf08(%^Nagi(|r>Ca{!156$
z&2TF9IW`z;8Vm-V&1R#;9&hebsk_l=G>aJ`pi@XB65mi)QgTIaR4SE;7r5!lkrvda
zbB1ARV!2KfAPmMoAS^x1k_!M|=F74N_0Y=7$_pO;;uF)>*4Bok9>M_K+}xz#m0~OU
zG|?E1MoO>O8zl{DwirH-L?UlkdYLA4AP{(sx<aYHaN6T)d%Yfk;zu7I9x~viXDlcE
zW>sEdrH8S7)WL8Q>mku~sNe5Ts`&2iuE%1rY$TJ(@5jf-HMUZlfa&e4tE&|99qLMc
z{J8cKu6})e-5L&ut+0hRVDSWiW5{Fox%2S>Vt~sSp-jTKKv2k4$a`20&^Y#E-z@48
zdmh>`o6UPbkUAofU@53pt4y(2MEWTT0%AYV%~@*}5!?mljzbo`+duhhkZk$y#}d#I
eki_y=fB^viIDK96(SgYT0000<MNUMnLSTZBwuh?#

diff --git a/EngineerMode/res/drawable-mdpi/ic_focus_failed.9.png b/EngineerMode/res/drawable-mdpi/ic_focus_failed.9.png
deleted file mode 100644
index 5d9ba7eea746a1731dba47f244dbd883af638d85..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 376
zcmV-;0f+vHP)<h;3K|Lk000e1NJLTq001li001Be1^@s6X-1lQ0003$Nkl<Zc-rmQ
zK}y3w6vpv?X}y@s;=+Xs^#<<h89am@KydFyT#6tq(LmINpetR73L@BQ1+l(Q(h$%#
zBW+Da=E1iKlgw`>AutbSQ-d_KsaM!jJ|MCjyJXTiUFVT$=*w>I!hRoiZA;pgj!UNS
z3ObHy%O+#?*6c#^ZYzmkYZKOXV0{}}<1#6@==n0pB9m+~X5b#2zQM@_ETyZjQ*sRr
zGRY=m9(-mO<8xR^2RAIWahU?BR*;6q$t0VM-@q{}S8a!78VOD+2u=bxfCD&ye-HMk
z26(3S6YSk55&jYZ9KZqmU%|0&;6FZu)(bMHaduQ*{Rv#zWBxTP_6^+4gUe{7*qqIR
zEIh&dJ#5%!M!kF^rHoe9v+bBmUJUwZzB@R`z-2T8AK=O*hP}Ljqgyx})grBGzUmXf
W9z`WU%|wp?0000<MNUMnLSTaEN}+lH

diff --git a/EngineerMode/res/drawable-mdpi/ic_focus_focused.9.png b/EngineerMode/res/drawable-mdpi/ic_focus_focused.9.png
deleted file mode 100644
index 5208e1425c5827c61bc0092a6adb31a609450260..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 362
zcmV-w0hRuVP)<h;3K|Lk000e1NJLTq001li001Be1^@s6X-1lQ0003oNkl<Zc-rll
zKTE?v7>6HGznG&qI5=oWo!oRP2-QJFgi4|R+f_sixO7k|R4EPD#x#Z4QNPQ1XG;`^
z5QwEcxgR{kdnDxH?j>+9%qDWmY*H3HY8pO%Jz$uGwBNky@R5-B%Ll|oi$U~q$)#QC
z(`p6`nj^d<q!ljq7$?FdEIiZBKhcd&t=uQ9z2YBTQ_p1C-#h1U_l$!$QlF~JdMtvC
zLYK9ChtryeUlD|naH+?e+Tq~jo-JKFl4a%`$C)^&cGy&IBh>}tZ(&tb)#C9TJGy?6
ztVqdH9DgAcM`OsUelB-Qrs^qS@l#k8dNFsy_QLG&)ImF0VJmEft?+*rHYgIqtj!cQ
zt|jbW!U|hqD{O`5Eo|H+)U<29d4m+=MpdQ_1AmQ37nQGk0^q>gWt?F!?*IS*07*qo
IM6N<$f&})Tz5oCK

diff --git a/EngineerMode/res/drawable-mdpi/ic_focus_focusing.9.png b/EngineerMode/res/drawable-mdpi/ic_focus_focusing.9.png
deleted file mode 100644
index f2b8bee09f483b460a980b17c8c99343959f927e..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 293
zcmV+=0owkFP)<h;3K|Lk000e1NJLTq001li001Be1^@s6X-1lQ0002&Nkl<Zc-rmQ
zK?;K~5Cza+@rv!Ly;E<KZ7XCabzu%+RzeiiP1-Liv``I1sZ(a)ZzP%*GYCeAZORSV
zri!At8)I&DUFX(X?UT?sedmD*HW;UyaiJ_r*>zpoG|j^&p<v&6V1f<CY1gW%%G<V0
zwboZD<xwehNs{C|mr(H1^I?DmCfHz{z<BjoO_pV+z5$&(h#%KzfC;vt4d207)i5}I
zC7R0$plBg6#=-OzJZ|+GpfwgWwhn_C%wPupJD5;8K}<~(Os*yPE5Tp}Gnm0U0h9X)
rCG(q4?jVKSQ5Ctvz>g!+y{4}x*>1xHC|g$V00000NkvXXu0mjf58Zna

diff --git a/EngineerMode/res/drawable/cross.png b/EngineerMode/res/drawable/cross.png
deleted file mode 100644
index 5775253e26bc6a773d9f8d05fbe14547bedaae17..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 150
zcmeAS@N?(olHy`uVBq!ia0vp^!XV7S1SJ0&Eu0OcSkfJR9T^xl_H+M9WCiklJzX3_
zEc}!I{Qqyy%y;0#i4ON^j2i9S47^9wtyc;Ab2KdZ&?;xJ>jY0Ula*mG;|)z74UX)r
wgU_X-c20BPc;q>I@k;(Fk5BqI|0rc*h&{KqvF3*RL!iM7p00i_>zopr0QHnGHvj+t

diff --git a/EngineerMode/res/drawable/dialog_btn_selector.xml b/EngineerMode/res/drawable/dialog_btn_selector.xml
deleted file mode 100644
index 01aac0f..0000000
--- a/EngineerMode/res/drawable/dialog_btn_selector.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_focused="true"
-        android:drawable="@android:color/holo_blue_light"/>
-    <item android:state_pressed="true"
-        android:drawable="@android:color/holo_blue_light"/>
-    <item android:drawable="@color/gray_black"/>
-</selector>
\ No newline at end of file
diff --git a/EngineerMode/res/drawable/icon.png b/EngineerMode/res/drawable/icon.png
deleted file mode 100644
index 608d6fbc1409b8849f26e2911bc48143c25c7a3d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 10497
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
KvK7*%LH`4%XcMIX

diff --git a/EngineerMode/res/drawable/point.png b/EngineerMode/res/drawable/point.png
deleted file mode 100644
index 4dc5e702dc3e0c421cc8f4726e0ca1ba868643a9..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 164
zcmeAS@N?(olHy`uVBq!ia0vp^%plCc1SD^IDZKzvjKx9jP7LeL$-D$|SkfJR9T^xl
z_H+M9WCijSl0AZa85pY67#JE_7#My5g&KgGN(~qoUL`OvSj}Ky5HFasE6@fgq2%e}
z7$Om#{O|vNdu8Rv|Nj1#l#-I-ld)h>k!(nE;PPN%_<3IN_wF3o%|O)*p00i_>zopr
E0OG1E761SM

diff --git a/EngineerMode/res/layout/aal_setting.xml b/EngineerMode/res/layout/aal_setting.xml
deleted file mode 100644
index dccd5a4..0000000
--- a/EngineerMode/res/layout/aal_setting.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    >
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:layout_margin="20dip">
-        <TextView
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content" 
-            android:text="@string/aal_title"/>
-        <ToggleButton android:id="@+id/aal_state_tbtn"
-            android:layout_marginLeft="10dip"
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content" 
-            android:text="@string/aal_off"/>
-    </LinearLayout>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/amr_wb.xml b/EngineerMode/res/layout/amr_wb.xml
deleted file mode 100644
index 4559e56..0000000
--- a/EngineerMode/res/layout/amr_wb.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <CheckBox
-        android:id="@+id/amr_wb_gsm"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:padding="10dp"
-        android:text="@string/amr_wb_gsm" >
-    </CheckBox>
-
-    <CheckBox
-        android:id="@+id/amr_wb_umts"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:padding="10dp"
-        android:text="@string/amr_wb_umts" >
-    </CheckBox>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/antena_test.xml b/EngineerMode/res/layout/antena_test.xml
deleted file mode 100644
index e7aedd0..0000000
--- a/EngineerMode/res/layout/antena_test.xml
+++ /dev/null
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-
-    <LinearLayout style="@style/info_layout" >
-        <TextView
-            style="@style/info_label"
-            android:id="@+id/antenna_title_4g"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/antenna_title_4g" />
-
-        <Spinner
-            android:id="@+id/spinner_antenna_4g"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:entries="@array/antenna_modes_4g" />
-
-        <TextView
-            style="@style/info_label"
-            android:id="@+id/antenna_hint"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5pt"
-            android:layout_marginLeft="5pt"
-            android:layout_marginRight="5pt"
-            android:text="@string/antenna_hint" />
-
-        <TextView
-            style="@style/info_label"
-            android:id="@+id/antenna_title_3g"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dp"
-            android:text="@string/antenna_title_3g" />
-
-        <Spinner
-            android:id="@+id/spinner_antenna_3g"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:entries="@array/antenna_modes_3g" />
-    </LinearLayout>
-</ScrollView>
diff --git a/EngineerMode/res/layout/antenna_diversity.xml b/EngineerMode/res/layout/antenna_diversity.xml
deleted file mode 100644
index 5863662..0000000
--- a/EngineerMode/res/layout/antenna_diversity.xml
+++ /dev/null
@@ -1,499 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    style="@style/info_layout" >
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            
-            android:text="@string/antenna_diversity_3g" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FFF39A1E" >
-        </View>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-
-            <ToggleButton
-                android:id="@+id/antenna_diversity_3g_prx"
-                android:layout_width="0dp"
-                android:layout_weight="1"
-                android:layout_height="wrap_content"
-                android:textSize="14sp"
-                android:textOff="@string/antenna_diversity_prx"
-                android:textOn="@string/antenna_diversity_prx" >
-            </ToggleButton>
-
-            <ToggleButton
-                android:id="@+id/antenna_diversity_3g_drx"
-                android:layout_width="0dp"
-                android:layout_weight="1"
-                android:layout_height="wrap_content"
-                android:textSize="14sp"
-                android:textOff="@string/antenna_diversity_drx"
-                android:textOn="@string/antenna_diversity_drx" >
-            </ToggleButton>
-
-            <ToggleButton
-                android:id="@+id/antenna_diversity_3g_prx_drx"
-                android:layout_width="0dp"
-                android:layout_weight="1"
-                android:layout_height="wrap_content"
-                android:textSize="14sp"
-                android:textOff="@string/antenna_diversity_prx_drx"
-                android:textOn="@string/antenna_diversity_prx_drx" >
-            </ToggleButton>
-        </LinearLayout>
-
-        <TableLayout
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:layout_marginTop="10dp"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-
-            <TableRow
-                android:layout_marginTop="3dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    
-                    android:gravity="center" >
-                </TextView>
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_ant0" >
-                </TextView>
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_ant1" >
-                </TextView>
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_combined" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_marginTop="6dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFF0000"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_rscp" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rscp_ant0"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFF0000"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rscp_ant1"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFF0000"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rscp_combined"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFF0000"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_marginTop="6dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_pssi" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_pssi_ant0"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_pssi_ant1"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_pssi_combined"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-            </TableRow>
-        </TableLayout>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dp"
-            
-            android:text="@string/antenna_diversity_4g" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FFF39A1E" >
-        </View>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-
-            <ToggleButton
-                android:id="@+id/antenna_diversity_4g_prx"
-                android:layout_width="0dp"
-                android:layout_weight="1"
-                android:layout_height="wrap_content"
-                android:textSize="14sp"
-                android:textOff="@string/antenna_diversity_prx"
-                android:textOn="@string/antenna_diversity_prx" >
-            </ToggleButton>
-
-            <ToggleButton
-                android:id="@+id/antenna_diversity_4g_drx"
-                android:layout_width="0dp"
-                android:layout_weight="1"
-                android:layout_height="wrap_content"
-                android:textSize="14sp"
-                android:textOff="@string/antenna_diversity_drx"
-                android:textOn="@string/antenna_diversity_drx" >
-            </ToggleButton>
-
-            <ToggleButton
-                android:id="@+id/antenna_diversity_4g_prx_drx"
-                android:layout_width="0dp"
-                android:layout_weight="1"
-                android:layout_height="wrap_content"
-                android:textSize="14sp"
-                android:textOff="@string/antenna_diversity_prx_drx"
-                android:textOn="@string/antenna_diversity_prx_drx" >
-            </ToggleButton>
-        </LinearLayout>
-
-        <TableLayout
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:layout_marginTop="10dp"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-
-            <TableRow
-                android:layout_marginTop="3dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    
-                    android:gravity="center" >
-                </TextView>
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_ant0" >
-                </TextView>
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_ant1" >
-                </TextView>
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_combined" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_marginTop="6dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFF0000"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_rsrp" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rsrp_ant0"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFF0000"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rsrp_ant1"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFF0000"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rsrp_combined"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFF0000"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_marginTop="6dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_rsrq" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rsrq_ant0"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rsrq_ant1"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rsrq_combined"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_marginTop="6dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FFFF"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_rssi" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rssi_ant0"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FFFF"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rssi_ant1"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FFFF"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_rssi_combined"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FF00FFFF"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_marginTop="6dp"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFFFF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_sinr" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_sinr_ant0"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFFFF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_sinr_ant1"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFFFF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/antenna_diversity_sinr_combined"
-                    android:layout_width="0dp"
-                    android:layout_weight="1"
-                    android:layout_height="wrap_content"
-                    android:textColor="#FFFFFF00"
-                    
-                    android:gravity="center"
-                    android:text="@string/antenna_diversity_default" >
-                </TextView>
-            </TableRow>
-        </TableLayout>
-    </LinearLayout>
-</ScrollView>
diff --git a/EngineerMode/res/layout/atci.xml b/EngineerMode/res/layout/atci.xml
deleted file mode 100644
index 8c7c123..0000000
--- a/EngineerMode/res/layout/atci.xml
+++ /dev/null
@@ -1,15 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    >
-<TextView  
-    android:layout_width="fill_parent" 
-    android:layout_height="wrap_content" 
-    android:text="@string/ATCI_title"
-    />
-<Button android:layout_height="wrap_content" android:layout_width="wrap_content" android:id="@+id/ATCI_enable" android:text="@string/ATCI_enable"></Button>
-<Button android:layout_height="wrap_content" android:layout_width="wrap_content" android:id="@+id/ATCI_enable_always" android:text="@string/ATCI_enable_always"></Button>
-<Button android:layout_height="wrap_content" android:layout_width="wrap_content" android:id="@+id/ATCI_disable" android:text="@string/ATCI_disable"></Button>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/audio.xml b/EngineerMode/res/layout/audio.xml
deleted file mode 100644
index 600e22f..0000000
--- a/EngineerMode/res/layout/audio.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_Audio"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/audio_audiologger.xml b/EngineerMode/res/layout/audio_audiologger.xml
deleted file mode 100644
index 7fa4225..0000000
--- a/EngineerMode/res/layout/audio_audiologger.xml
+++ /dev/null
@@ -1,187 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="3pt"
-        android:layout_marginTop="3pt"
-        android:text="@string/Audio_AudioLogger_Text"
-        android:textSize="16sp" >
-    </TextView>
-
-    <View
-        android:layout_width="wrap_content"
-        android:layout_height="1dip"
-        android:layout_marginTop="3pt"
-        android:background="#FF909090" >
-    </View>
-
-    <ScrollView
-        android:id="@+id/scrollView1"
-        android:layout_width="fill_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayoutCheck"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical" >
-        </LinearLayout>
-    </ScrollView>
-
-    <View
-        android:layout_width="wrap_content"
-        android:layout_height="1dip"
-        android:layout_marginTop="3pt"
-        android:background="#FF909090" >
-    </View>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1"
-        android:orientation="vertical" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:layout_marginTop="3pt"
-            android:text="@string/Audio_AudioCommand"
-            android:textSize="16sp" >
-        </TextView>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <EditText
-                android:id="@+id/GetAudioCommandText"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="5"
-                android:textSize="16sp" >
-            </EditText>
-
-            <Spinner
-                android:id="@+id/Audio_GetAudioCommandSpinner"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="3"
-                android:entries="@array/Audio_GetAudioCommandSpinner" >
-            </Spinner>
-
-            <Button
-                android:id="@+id/Audio_GetAudioCommand"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="2"
-                android:text="@string/Audio_Get" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <EditText
-                android:id="@+id/SetAudioCommandText"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="5"
-                android:textSize="16sp" >
-            </EditText>
-
-            <Spinner
-                android:id="@+id/Audio_SetAudioCommandSpinner"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="3"
-                android:entries="@array/Audio_SetAudioCommandSpinner" >
-            </Spinner>
-
-            <Button
-                android:id="@+id/Audio_SetAudioCommand"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="2"
-                android:text="@string/Audio_Set" >
-            </Button>
-        </LinearLayout>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/Audio_AudioParameter"
-            android:textSize="16sp" >
-        </TextView>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <EditText
-                android:id="@+id/GetAudioParameterText"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="5"
-                android:textSize="14sp" >
-            </EditText>
-
-            <Spinner
-                android:id="@+id/Audio_GetAudioParameterSpinner"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="3"
-                android:entries="@array/Audio_GetAudioParameterSpinner" >
-            </Spinner>
-
-            <Button
-                android:id="@+id/Audio_GetAudioParameter"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="2"
-                android:text="@string/Audio_Get" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <EditText
-                android:id="@+id/SetAudioParameterText"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="5"
-                android:textSize="12sp" >
-            </EditText>
-
-            <Spinner
-                android:id="@+id/Audio_SetAudioParameterSpinner"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="3"
-                android:entries="@array/Audio_SetAudioParameterSpinner" >
-            </Spinner>
-
-            <Button
-                android:id="@+id/Audio_SetAudioParameter"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="2"
-                android:text="@string/Audio_Set" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/audio_debuginfo.xml b/EngineerMode/res/layout/audio_debuginfo.xml
deleted file mode 100644
index 74481a2..0000000
--- a/EngineerMode/res/layout/audio_debuginfo.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/Audio_DebugInfo_ParameterText"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="40dip"
-            android:layout_marginTop="40dip"
-            android:text="@string/Audio_DebugInfo_ParameterText" >
-        </TextView>
-
-        <Spinner
-            android:id="@+id/Audio_DebugInfo_Spinner"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="40dip"
-            android:layout_marginTop="20dip" >
-        </Spinner>
-
-        <TextView
-            android:id="@+id/Audio_DebugInfo_ValueText"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="40dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/Audio_DebugInfo_ValueText" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/Audio_DebugInfo_EditText"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="40dip"
-            android:layout_marginTop="20dip"
-            android:numeric="integer"
-            android:singleLine="true"
-            android:text="@string/Audio_DebugInfo_EditText" >
-        </EditText>
-
-        <Button
-            android:id="@+id/Audio_DebugInfo_Button"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="40dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/Audio_DebugInfo_Button" >
-        </Button>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/audio_debugsession.xml b/EngineerMode/res/layout/audio_debugsession.xml
deleted file mode 100644
index c50b10f..0000000
--- a/EngineerMode/res/layout/audio_debugsession.xml
+++ /dev/null
@@ -1,92 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:layout_marginLeft="3dp"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        android:id="@+id/Audio_MagiAsr_Group"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:orientation="vertical" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/Audio_MagiAsr_Text" >
-        </TextView>
-
-        <CheckBox
-            android:id="@+id/Audio_MagiAsr"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/Audio_MagiAsr" >
-        </CheckBox>
-
-        <View
-            android:layout_width="wrap_content"
-            android:layout_height="1dp"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" >
-        </View>
-    </LinearLayout>
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:text="@string/Audio_AecRec_Text" >
-    </TextView>
-
-    <CheckBox
-        android:id="@+id/Audio_AecRec"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:text="@string/Audio_AecRec" >
-    </CheckBox>
-
-    <View
-        android:layout_width="wrap_content"
-        android:layout_height="1dp"
-        android:layout_marginTop="5dp"
-        android:background="#FF909090" >
-    </View>
-
-    <TextView
-        android:id="@+id/Audio_Headset_Detect_Hint"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:text="@string/Audio_Headset_Detect_Hint" >
-    </TextView>
-
-    <LinearLayout
-        android:id="@+id/Audio_Headset_Detect"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="3dp"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/Audio_Headset_Detect_Button"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dp"
-            android:text="@string/Audio_Headset_Detect_Button" >
-        </Button>
-
-        <TextView
-            android:id="@+id/Audio_Headset_Detect_Text"
-            android:layout_width="wrap_content"
-            android:layout_height="fill_parent"
-            android:layout_marginLeft="10dp"
-            android:gravity="center"
-            android:text="@string/Audio_Headset_None" >
-        </TextView>
-    </LinearLayout>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/audio_modesetting.xml b/EngineerMode/res/layout/audio_modesetting.xml
deleted file mode 100644
index 3b0bf5c..0000000
--- a/EngineerMode/res/layout/audio_modesetting.xml
+++ /dev/null
@@ -1,141 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="vertical" >
-
-            <TextView
-                android:id="@+id/Audio_Fir_Title"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="5dip"
-                android:text="@string/Audio_Fir_Title" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/Audio_Fir_Spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="40dip"
-                android:layout_marginTop="10dip" >
-            </Spinner>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="5dip"
-                android:text="@string/Audio_ModeSetting_Title" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/Audio_ModeSetting"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="40dip"
-                android:layout_marginTop="20dip" >
-            </Spinner>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="5dip"
-                android:text="@string/Audio_Level_Text" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/Audio_Level"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="40dip"
-                android:layout_marginTop="20dip" >
-            </Spinner>
-
-            <LinearLayout
-                android:id="@+id/LinearLayout"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dip"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:id="@+id/Audio_ModeSetting_TextView"
-                    android:layout_width="100dip"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="10dip"
-                    android:layout_marginTop="10dip"
-                    android:text="@string/Audio_ModeSetting_TextView" >
-                </TextView>
-
-                <EditText
-                    android:id="@+id/Audio_ModeSetting_EditText"
-                    android:layout_width="80dip"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="5dip"
-                    android:layout_marginTop="10dip"
-                    android:numeric="integer"
-                    android:singleLine="true"
-                    android:text="@string/Audio_ModeSetting_EditText" >
-                </EditText>
-
-                <Button
-                    android:id="@+id/Audio_ModeSetting_Button"
-                    android:layout_width="80dip"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="10dip"
-                    android:layout_marginTop="10dip"
-                    android:text="@string/Audio_ModeSetting_Button" >
-                </Button>
-            </LinearLayout>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/Audio_MaxVol_Text" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/Audio_MaxVol_Edit"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="10dip"
-                android:singleLine="true"
-                android:numeric="integer" >
-            </EditText>
-
-            <Button
-                android:id="@+id/Audio_MaxVol_Set"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/Audio_MaxVol_Set" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/audio_modesetting_enhance.xml b/EngineerMode/res/layout/audio_modesetting_enhance.xml
deleted file mode 100644
index 81ae4dc..0000000
--- a/EngineerMode/res/layout/audio_modesetting_enhance.xml
+++ /dev/null
@@ -1,161 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="vertical" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="5dip"
-                android:text="@string/Audio_ModeSetting_Title" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/Audio_ModeSetting"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="40dip"
-                android:layout_marginTop="20dip" >
-            </Spinner>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="5dip"
-                android:text="@string/Audio_Level_Text" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/Audio_Level"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="40dip"
-                android:layout_marginTop="20dip" >
-            </Spinner>
-
-            <LinearLayout
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dip"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:id="@+id/Audio_ModeSetting_TextView"
-                    android:layout_width="100dip"
-                    android:layout_height="fill_parent"
-                    android:layout_marginLeft="10dip"
-                    android:layout_marginTop="10dip"
-                    android:gravity="center"
-                    android:text="@string/Audio_ModeSetting_TextView" >
-                </TextView>
-
-                <EditText
-                    android:id="@+id/Audio_ModeSetting_EditText"
-                    android:layout_width="80dip"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="5dip"
-                    android:layout_marginTop="10dip"
-                    android:numeric="integer"
-                    android:singleLine="true"
-                    android:text="@string/Audio_ModeSetting_EditText" >
-                </EditText>
-
-                <Button
-                    android:id="@+id/Audio_ModeSetting_Button"
-                    android:layout_width="80dip"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="10dip"
-                    android:layout_marginTop="10dip"
-                    android:text="@string/Audio_ModeSetting_Button" >
-                </Button>
-            </LinearLayout>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/Audio_MaxVol_Tv_Max"
-                android:layout_width="100dip"
-                android:layout_height="fill_parent"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:gravity="center"
-                android:text="@string/Audio_MaxVol_Text_headset" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/Audio_MaxVol_Edit_headset"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="10dip"
-                android:singleLine="true"
-                android:numeric="integer" >
-            </EditText>
-
-            <Button
-                android:id="@+id/Audio_MaxVol_Set_headset"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/Audio_MaxVol_Set" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/Audio_MaxVol_Dual_Set"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="100dip"
-                android:layout_height="fill_parent"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:gravity="center"
-                android:text="@string/Audio_MaxVol_Text_speaker" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/Audio_MaxVol_Edit_speaker"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="10dip"
-                android:singleLine="true"
-                android:numeric="integer" >
-            </EditText>
-
-            <Button
-                android:id="@+id/Audio_MaxVol_Set_speaker"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/Audio_MaxVol_Set" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/audio_speechenhancement.xml b/EngineerMode/res/layout/audio_speechenhancement.xml
deleted file mode 100644
index d8addd0..0000000
--- a/EngineerMode/res/layout/audio_speechenhancement.xml
+++ /dev/null
@@ -1,57 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <Spinner
-            android:id="@+id/Audio_SpEnhancement_ModeType"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="40dip"
-            android:layout_marginTop="40dip" >
-        </Spinner>
-
-        <Spinner
-            android:id="@+id/Audio_SpEnhancement_ParaType"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="40dip"
-            android:layout_marginTop="20dip" >
-        </Spinner>
-
-        <TextView
-            android:id="@+id/Audio_SpEnhancement_TextView"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="40dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/Audio_SpEnhancement_TextView" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/Audio_SpEnhancement_EditText"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="40dip"
-            android:layout_marginTop="20dip"
-            android:numeric="integer"
-            android:singleLine="true"
-            android:text="@string/Audio_SpEnhancement_EditText" >
-        </EditText>
-
-        <Button
-            android:id="@+id/Audio_SpEnhancement_Button"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="40dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/Audio_SpEnhancement_Button" >
-        </Button>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/audio_speechenhancement_entry.xml b/EngineerMode/res/layout/audio_speechenhancement_entry.xml
deleted file mode 100644
index b8f2b5e..0000000
--- a/EngineerMode/res/layout/audio_speechenhancement_entry.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <TextView
-        android:id="@+id/label"
-        android:padding="2dp"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content" >
-    </TextView>
-
-    <EditText
-        android:id="@+id/editor"
-        android:padding="2dp"
-        android:layout_width="0dp"
-        android:layout_weight="1"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dp"
-        android:descendantFocusability="beforeDescendants"
-        android:inputType="number" >
-    </EditText>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/audio_speechenhancement_new.xml b/EngineerMode/res/layout/audio_speechenhancement_new.xml
deleted file mode 100644
index f29bc19..0000000
--- a/EngineerMode/res/layout/audio_speechenhancement_new.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <Spinner
-        android:id="@+id/Audio_SpEnhancement_ModeType"
-        android:layout_width="240dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:layout_marginTop="10dip" >
-    </Spinner>
-
-    <Spinner
-        android:id="@+id/Audio_SpEnhancement_ParaType"
-        android:layout_width="240dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:layout_marginTop="10dip"
-        android:visibility="gone" >
-    </Spinner>
-
-    <TextView
-        android:id="@+id/Audio_SpEnhancement_Vol"
-        android:layout_width="240dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:layout_marginTop="10dip"
-        android:text="@string/Audio_SpEnhancement_Vol"
-        android:visibility="gone" >
-    </TextView>
-
-    <ListView
-        android:id="@+id/Audio_SpEnhancement_ListView"
-        android:layout_width="240dip"
-        android:layout_height="0dp"
-        android:layout_weight="1"
-        android:layout_marginLeft="10dip"
-        android:layout_marginTop="10dip" >
-    </ListView>
-
-    <Button
-        android:id="@+id/Audio_SpEnhancement_Button"
-        android:layout_width="240dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:layout_marginTop="10dip"
-        android:text="@string/Audio_SpEnhancement_Button" >
-    </Button>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/audio_speechloggerx.xml b/EngineerMode/res/layout/audio_speechloggerx.xml
deleted file mode 100644
index bb7a17c..0000000
--- a/EngineerMode/res/layout/audio_speechloggerx.xml
+++ /dev/null
@@ -1,273 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TableLayout
-            android:id="@+id/TableLayout01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:layout_marginTop="3pt"
-                android:text="@string/Audio_SpeechLogger_FileText" >
-            </TextView>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/Audio_SpeechLogger_Enable"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/Audio_SpeechLogger_Enable" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <RadioGroup
-                    android:id="@+id/RadioGroup1"
-                    android:layout_marginLeft="60dp" >
-
-                    <RadioButton
-                        android:id="@+id/Audio_SpeechLogger_EPL"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/Audio_Enable_EPL" >
-                    </RadioButton>
-
-                    <RadioButton
-                        android:id="@+id/Audio_SpeechLogger_Normalvm"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/Audio_Enable_Normalvm" >
-                    </RadioButton>
-                </RadioGroup>
-            </TableRow>
-
-<!--            <View-->
-<!--                android:layout_width="fill_parent"-->
-<!--                android:layout_height="1dip"-->
-<!--                android:background="#FF909090" >-->
-<!--            </View>-->
-<!---->
-<!--            <TextView-->
-<!--                android:layout_width="wrap_content"-->
-<!--                android:layout_height="wrap_content"-->
-<!--                android:layout_marginLeft="3pt"-->
-<!--                android:text="@string/Audio_SpeechLogger_LocationText" >-->
-<!--            </TextView>-->
-<!---->
-<!--            <TableRow-->
-<!--                android:id="@+id/TableRow01"-->
-<!--                android:layout_width="wrap_content"-->
-<!--                android:layout_height="wrap_content" >-->
-<!---->
-<!--                <CheckBox-->
-<!--                    android:id="@+id/Audio_SpeechLogger_Play"-->
-<!--                    android:layout_width="fill_parent"-->
-<!--                    android:layout_height="wrap_content"-->
-<!--                    android:text="@string/Audio_SpeechLogger_Play" >-->
-<!--                </CheckBox>-->
-<!--            </TableRow>-->
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:layout_marginTop="5pt"
-                android:background="#FF909090" >
-            </View>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:layout_marginTop="3pt"
-                android:text="@string/Audio_EPLDebug_FileText" >
-            </TextView>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/Audio_EPLDebug_Enable"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/Audio_EPLDebug_Enable" >
-                </CheckBox>
-            </TableRow>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:layout_marginTop="5pt"
-                android:background="#FF909090" >
-            </View>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:layout_marginTop="3pt"
-                android:text="@string/Audio_VOIPLogger_Info" >
-            </TextView>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/Audio_VOIPLogger_Enable"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/Audio_VOIPLogger_Enable" >
-                </CheckBox>
-            </TableRow>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:layout_marginTop="5pt"
-                android:background="#FF909090" >
-            </View>
-
-            <TextView
-                android:id="@+id/Audio_CTM4WAYLogger_EnableText"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:layout_marginTop="3pt"
-                android:text="@string/Audio_CTM4WAYLogger_EnableText" >
-            </TextView>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/Audio_CTM4WAYLogger_Enable"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/Audio_CTM4WAYLogger_Enable" >
-                </CheckBox>
-            </TableRow>
-            <View
-                android:id="@+id/Audio_View1"
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:layout_marginTop="5pt"
-                android:background="#FF909090" >
-            </View>
-            <TextView
-                android:id="@+id/Audio_AncLogger_FileText"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:layout_marginTop="3pt"
-                android:text="@string/Audio_AncLogger_FileText" >
-             </TextView>
-
-             <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/Audio_AncLogger_Enable"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/Audio_AncLogger_Enable" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <RadioGroup
-                    android:id="@+id/RadioGroup2"
-                    android:layout_marginLeft="60dp" >
-
-                    <RadioButton
-                        android:id="@+id/Audio_AncLogger_Down"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/Audio_Enable_Down" >
-                    </RadioButton>
-
-                    <RadioButton
-                        android:id="@+id/Audio_AncLogger_NoDown"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/Audio_Enable_NoDown" >
-                    </RadioButton>
-                </RadioGroup>
-            </TableRow>
-            <View
-                android:id="@+id/Audio_View3"
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:layout_marginTop="5pt"
-                android:background="#FF909090" >
-            </View>
-            <TextView
-                android:id="@+id/Audio_MagiConference_EnableText"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:layout_marginTop="3pt"
-                android:text="@string/Audio_MagiConference_EnableText" >
-            </TextView>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/Audio_MagiConference_Enable"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/Audio_MagiConference_Enable" >
-                </CheckBox>
-            </TableRow>
-        </TableLayout>
-
-        <View
-            android:id="@+id/Audio_View2"
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginTop="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <Button
-            android:id="@+id/Dump_Speech_DbgInfo"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5pt"
-            android:text="@string/Audio_Dump_SpeechDbgInfo" >
-        </Button>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/audio_wakelock.xml b/EngineerMode/res/layout/audio_wakelock.xml
deleted file mode 100644
index 4872aaf..0000000
--- a/EngineerMode/res/layout/audio_wakelock.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent">
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:layout_margin="20dip">
-        <TextView
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content" 
-            android:text="@string/audio_wakelock"/>
-        <ToggleButton android:id="@+id/audio_wakelock_state_tbtn"
-            android:layout_marginLeft="10dip"
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content" 
-            android:textOff="@string/audio_wakelock_unlock"/>
-    </LinearLayout>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/auto_answer.xml b/EngineerMode/res/layout/auto_answer.xml
deleted file mode 100644
index 063229e..0000000
--- a/EngineerMode/res/layout/auto_answer.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content" >
-
-    <Button
-        android:id="@+id/autoanswer_switch"
-        android:layout_width="120dip"
-        android:layout_height="wrap_content" >
-    </Button>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/band_mode.xml b/EngineerMode/res/layout/band_mode.xml
deleted file mode 100644
index bf5f9f0..0000000
--- a/EngineerMode/res/layout/band_mode.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2007 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:gravity="center_horizontal"
-    android:orientation="vertical"
-    android:padding="4dip" >
-
-    <ListView
-        android:id="@+id/band"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:textSize="7sp" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/bandmodesim1.xml b/EngineerMode/res/layout/bandmodesim1.xml
deleted file mode 100644
index ce4007a..0000000
--- a/EngineerMode/res/layout/bandmodesim1.xml
+++ /dev/null
@@ -1,246 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TableLayout
-            android:id="@+id/TableLayout01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/bandmodesim1_GSM" >
-            </TextView>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:background="#FF909090" >
-            </View>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_GSM_EGSM900"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_GSM_EGSM900" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_GSM_DCS1800"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_GSM_DCS1800" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_GSM_PCS1900"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_GSM_PCS1900" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_GSM_GSM850"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_GSM_GSM850" >
-                </CheckBox>
-            </TableRow>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:background="#FF909090" >
-            </View>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/bandmodesim1_UMTS" >
-            </TextView>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:background="#FF909090" >
-            </View>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_UMTS_BAND_I"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_UMTS_BAND_I" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_UMTS_BAND_II"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_UMTS_BAND_II" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_UMTS_BAND_III"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_UMTS_BAND_III" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_UMTS_BAND_IV"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_UMTS_BAND_IV" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_UMTS_BAND_V"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_UMTS_BAND_V" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_UMTS_BAND_VI"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_UMTS_BAND_VI" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_UMTS_BAND_VII"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_UMTS_BAND_VII" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_UMTS_BAND_VIII"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_UMTS_BAND_VIII" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_UMTS_BAND_IX"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_UMTS_BAND_IX" >
-                </CheckBox>
-            </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <CheckBox
-                    android:id="@+id/bandmodesim1_UMTS_BAND_X"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/bandmodesim1_UMTS_BAND_X" >
-                </CheckBox>
-            </TableRow>
-        </TableLayout>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" >
-        </View>
-
-        <Button
-            android:id="@+id/bandmodesim1_Btn_Set"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/bandmodesim1_SET" >
-        </Button>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/bandmodesim2.xml b/EngineerMode/res/layout/bandmodesim2.xml
deleted file mode 100644
index 7cbc496..0000000
--- a/EngineerMode/res/layout/bandmodesim2.xml
+++ /dev/null
@@ -1,176 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <ScrollView
-        android:layout_width="fill_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1" >
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="vertical" >
-
-            <TableLayout
-                android:id="@+id/TableLayout01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/bandmodesim2_GSM" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-
-                <TableRow
-                    android:id="@+id/TableRow02"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/bandmodesim2_GSM_EGSM900"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/bandmodesim2_GSM_EGSM900" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow02"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/bandmodesim2_GSM_DCS1800"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/bandmodesim2_GSM_DCS1800" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow02"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/bandmodesim2_GSM_PCS1900"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/bandmodesim2_GSM_PCS1900" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow02"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/bandmodesim2_GSM_GSM850"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/bandmodesim2_GSM_GSM850" >
-                    </CheckBox>
-                </TableRow>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-            </TableLayout>
-
-            <TableLayout
-                android:id="@+id/TableLayout02"
-                android:visibility="gone"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="3dip"
-                    android:background="#FF00FF00" >
-                </View>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/bandmodesim1_LTE" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-            </TableLayout>
-
-            <TableLayout
-                android:id="@+id/TableLayout03"
-                android:visibility="gone"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="3dip"
-                    android:background="#FF00FF00" >
-                </View>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/BandSel_CDMA" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-            </TableLayout>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:background="#FF909090" >
-            </View>
-        </LinearLayout>
-    </ScrollView>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/bandmodesim2_Btn_Set"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/bandmodesim2_SET" >
-        </Button>
-
-        <Button
-            android:id="@+id/bandmodesim2_Btn_Reset"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/BandSel_RESET" >
-        </Button>
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/bandmodesimselect.xml b/EngineerMode/res/layout/bandmodesimselect.xml
deleted file mode 100644
index 0a408bd..0000000
--- a/EngineerMode/res/layout/bandmodesimselect.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/listview_bandmode_sim_select"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/bandselect.xml b/EngineerMode/res/layout/bandselect.xml
deleted file mode 100644
index b056fec..0000000
--- a/EngineerMode/res/layout/bandselect.xml
+++ /dev/null
@@ -1,319 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <ScrollView
-        android:layout_width="fill_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1" >
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="vertical" >
-
-            <TableLayout
-                android:id="@+id/TableLayout01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/BandSel_GSM" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_GSM_EGSM900"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_GSM_EGSM900" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_GSM_DCS1800"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_GSM_DCS1800" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_GSM_PCS1900"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_GSM_PCS1900" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_GSM_GSM850"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_GSM_GSM850" >
-                    </CheckBox>
-                </TableRow>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="3dip"
-                    android:background="#FF00FF00" >
-                </View>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/BandSel_UMTS" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_UMTS_BAND_I"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_UMTS_BAND_I" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_UMTS_BAND_II"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_UMTS_BAND_II" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_UMTS_BAND_III"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_UMTS_BAND_III" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_UMTS_BAND_IV"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_UMTS_BAND_IV" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_UMTS_BAND_V"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_UMTS_BAND_V" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_UMTS_BAND_VI"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_UMTS_BAND_VI" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_UMTS_BAND_VII"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_UMTS_BAND_VII" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_UMTS_BAND_VIII"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_UMTS_BAND_VIII" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_UMTS_BAND_IX"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_UMTS_BAND_IX" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow01"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/BandSel_UMTS_BAND_X"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/BandSel_UMTS_BAND_X" >
-                    </CheckBox>
-                </TableRow>
-            </TableLayout>
-
-            <TableLayout
-                android:id="@+id/TableLayout02"
-                android:visibility="gone"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="3dip"
-                    android:background="#FF00FF00" >
-                </View>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/bandmodesim1_LTE" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-            </TableLayout>
-
-            <TableLayout
-                android:id="@+id/TableLayout03"
-                android:visibility="gone"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="3dip"
-                    android:background="#FF00FF00" >
-                </View>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/BandSel_CDMA" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-            </TableLayout>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:background="#FF909090" >
-            </View>
-        </LinearLayout>
-    </ScrollView>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/BandSel_Btn_Set"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/BandSel_SET" >
-        </Button>
-
-        <Button
-            android:id="@+id/BandSel_Btn_Reset"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/BandSel_RESET" >
-        </Button>
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/baseband.xml b/EngineerMode/res/layout/baseband.xml
deleted file mode 100644
index e396a79..0000000
--- a/EngineerMode/res/layout/baseband.xml
+++ /dev/null
@@ -1,128 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/Baseband_addr_text"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/Baseband_addr_text" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/Baseband_val_text"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/Baseband_val_text" >
-            </TextView>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <EditText
-                android:id="@+id/Baseband_Addr"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:singleLine="true" >
-            </EditText>
-
-            <EditText
-                android:id="@+id/Baseband_Val"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:singleLine="true"
-                android:text="@string/Baseband_Val" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/Baseband_len_text"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/Baseband_len_text" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/Baseband_Len"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:numeric="integer"
-                android:singleLine="true"
-                android:text="@string/Baseband_Len" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/Baseband_Read"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/Baseband_Read" >
-            </Button>
-
-            <Button
-                android:id="@+id/Baseband_Write"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/Baseband_Write" >
-            </Button>
-        </LinearLayout>
-
-        <TextView
-            android:id="@+id/Baseband_Info"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="5dip"
-            android:text="@string/Baseband_Info" >
-        </TextView>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/battery_charge.xml b/EngineerMode/res/layout/battery_charge.xml
deleted file mode 100644
index 21b785e..0000000
--- a/EngineerMode/res/layout/battery_charge.xml
+++ /dev/null
@@ -1,38 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/Settings/assets/res/any/layout/battery_info.xml
-**
-** Copyright 2006, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License"); 
-** you may not use this file except in compliance with the License. 
-** You may obtain a copy of the License at 
-**
-**     http://www.apache.org/licenses/LICENSE-2.0 
-**
-** Unless required by applicable law or agreed to in writing, software 
-** distributed under the License is distributed on an "AS IS" BASIS, 
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
-** See the License for the specific language governing permissions and 
-** limitations under the License.
-*/
--->
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <!-- Battery Status -->
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent" >
-
-        <TextView
-            android:id="@+id/battery_charge_info_text"
-            android:layout_width="fill_parent"
-            android:layout_height="fill_parent"
-            android:text="@string/battery_charge_info_text" />
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/battery_info.xml b/EngineerMode/res/layout/battery_info.xml
deleted file mode 100644
index 3990353..0000000
--- a/EngineerMode/res/layout/battery_info.xml
+++ /dev/null
@@ -1,252 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/Settings/assets/res/any/layout/battery_info.xml
-**
-** Copyright 2006, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License"); 
-** you may not use this file except in compliance with the License. 
-** You may obtain a copy of the License at 
-**
-**     http://www.apache.org/licenses/LICENSE-2.0 
-**
-** Unless required by applicable law or agreed to in writing, software 
-** distributed under the License is distributed on an "AS IS" BASIS, 
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
-** See the License for the specific language governing permissions and 
-** limitations under the License.
-*/
--->
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout style="@style/info_layout" >
-
-        <!-- Battery Status -->
-
-        <LinearLayout style="@style/entry_layout" >
-
-            <TextView
-                style="@style/info_label"
-                android:text="@string/battery_info_status_label" />
-
-            <TextView
-                android:id="@+id/status"
-                style="@style/info_value" />
-        </LinearLayout>
-
-        <!-- Battery Level -->
-
-        <LinearLayout style="@style/entry_layout" >
-
-            <TextView
-                style="@style/info_label"
-                android:text="@string/battery_info_level_label" />
-
-            <TextView
-                android:id="@+id/level"
-                style="@style/info_value" />
-        </LinearLayout>
-
-        <!-- Battery Scale -->
-
-        <LinearLayout style="@style/entry_layout" >
-
-            <TextView
-                style="@style/info_label"
-                android:text="@string/battery_info_scale_label" />
-
-            <TextView
-                android:id="@+id/scale"
-                style="@style/info_value" />
-        </LinearLayout>
-
-        <!-- Battery Health -->
-
-        <LinearLayout style="@style/entry_layout" >
-
-            <TextView
-                style="@style/info_label"
-                android:text="@string/battery_info_health_label" />
-
-            <TextView
-                android:id="@+id/health"
-                style="@style/info_value" />
-        </LinearLayout>
-
-        <!-- Battery Voltage -->
-
-        <LinearLayout style="@style/entry_layout" >
-
-            <TextView
-                style="@style/info_label"
-                android:text="@string/battery_info_voltage_label" />
-
-            <TextView
-                android:id="@+id/voltage"
-                style="@style/info_value" />
-        </LinearLayout>
-
-        <!-- Battery Temperature -->
-
-        <LinearLayout style="@style/entry_layout" >
-
-            <TextView
-                style="@style/info_label"
-                android:text="@string/battery_info_temperature_label" />
-
-            <TextView
-                android:id="@+id/temperature"
-                style="@style/info_value" />
-        </LinearLayout>
-
-        <!-- Battery Technology -->
-
-        <LinearLayout style="@style/entry_layout" >
-
-            <TextView
-                style="@style/info_label"
-                android:text="@string/battery_info_technology_label" />
-
-            <TextView
-                android:id="@+id/technology"
-                style="@style/info_value" />
-        </LinearLayout>
-
-        <!-- Uptime -->
-
-        <LinearLayout style="@style/entry_layout" >
-
-            <TextView
-                style="@style/info_label"
-                android:text="@string/battery_info_uptime" />
-
-            <TextView
-                android:id="@+id/uptime"
-                style="@style/info_value" />
-        </LinearLayout>
-
-        <!-- LogRecordTimeSetting -->
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                style="@style/info_label"
-                android:text="@string/Log_Record_Interval" />
-
-            <EditText
-                android:id="@+id/Log_Record_Interval"
-                android:layout_width="50dip"
-                android:layout_height="wrap_content"
-                android:numeric="integer"
-                android:singleLine="true"
-                android:text="@string/battery_info_10" >
-            </EditText>
-
-            <TextView
-                style="@style/info_label"
-                android:paddingLeft="5dip"
-                android:text="@string/battery_info_s" />
-        </LinearLayout>
-
-        <!-- Log -->
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                style="@style/info_label"
-                android:text="@string/battery_info_Log" />
-
-            <Button
-                android:id="@+id/Log_Record"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/battery_info_Log_Start" />
-        </LinearLayout>
-
-        <View
-            android:layout_width="wrap_content"
-            android:layout_height="2dip"
-            android:layout_marginLeft="5dip"
-            android:layout_marginRight="5dip"
-            android:layout_marginTop="10dip"
-            android:layout_marginBottom="10dip"
-            android:background="#FF909090" >
-        </View>
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/battery_charging"/>
-            <Button
-                android:id="@+id/battery_charging_stop_btn"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/battery_stop"/>
-            <Button
-                android:id="@+id/battery_charging_restart_btn"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/battery_restart"/>
-        </LinearLayout>
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/battery_current"/>
-            <Button
-                android:id="@+id/battery_current_rise_btn"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/battery_rise"/>
-            <Button
-                android:id="@+id/battery_current_reduce_btn"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/battery_reduce"/>
-        </LinearLayout>
-        
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/battery_temperature"/>
-            <EditText
-                android:id="@+id/battery_temperature_edit"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:inputType="numberSigned"
-                android:singleLine="true"
-                android:maxLength="3"/>
-            <Button
-                android:id="@+id/battery_temperature_set_btn"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/battery_set"/>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ble_normal_mode_advertise.xml b/EngineerMode/res/layout/ble_normal_mode_advertise.xml
deleted file mode 100644
index 72c8d05..0000000
--- a/EngineerMode/res/layout/ble_normal_mode_advertise.xml
+++ /dev/null
@@ -1,274 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/BLEAdvertise"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/BLEAdvertise" >
-        </TextView>
-
-        <!-- Advertise interval min -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEIntervalMin" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEIntervalMin"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLETimeUnit" >
-            </TextView>
-        </LinearLayout>
-        <!-- Advertise interval max -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEIntervalMax" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEIntervalMax"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLETimeUnit" >
-            </TextView>
-        </LinearLayout>
-
-        <!-- advertise type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/BLEAddressType"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/BLEAdvertiseType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEAdvertiseTypeSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- own address type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/BLEAddressType"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/BLEOwnAddressType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEOwnAddressTypeSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- direct address type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/BLEAddressType"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/BLEDirectAddressType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEDirectAddressTypeSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- direct address -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEDirectAddress" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEDirectAddress"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-        </LinearLayout>
-
-        <!-- channel 37, 38, 39 address -->
-
-        <CheckBox
-            android:id="@+id/BLEChannel37Checkbox"
-            android:layout_width="310dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/BLEChannel37Checkbox" >
-        </CheckBox>
-
-        <CheckBox
-            android:id="@+id/BLEChannel38Checkbox"
-            android:layout_width="310dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/BLEChannel38Checkbox" >
-        </CheckBox>
-
-        <CheckBox
-            android:id="@+id/BLEChannel39Checkbox"
-            android:layout_width="310dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/BLEChannel39Checkbox" >
-        </CheckBox>
-
-        <!-- advertise filter policy select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/BLEAddressType"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEFilterPolicy" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEFilterPolicySpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <TextView
-            android:layout_width="310dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/BLEAdvertiseData" >
-        </TextView>
-        <!-- advertise data set -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <EditText
-                android:id="@+id/BLEAdvertiseData"
-                android:layout_width="230dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <Button
-                android:id="@+id/BLEAdvertiseSet"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLESet" >
-            </Button>
-        </LinearLayout>
-
-        <!-- start/stop button -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <Button
-                android:id="@+id/BLEAdvertiseStart"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEStart" >
-            </Button>
-
-            <Button
-                android:id="@+id/BLEAdvertiseStop"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEStop" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ble_normal_mode_initiate.xml b/EngineerMode/res/layout/ble_normal_mode_initiate.xml
deleted file mode 100644
index 55a8675..0000000
--- a/EngineerMode/res/layout/ble_normal_mode_initiate.xml
+++ /dev/null
@@ -1,352 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/BLEInitiate"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/BLEInitiate" >
-        </TextView>
-
-        <!-- Initiate scan interval -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEScanInterval" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEInitiateScanInterval"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLETimeUnit" >
-            </TextView>
-        </LinearLayout>
-
-        <!-- initiate scan window -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEScanWindow" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEInitiateScanWindow"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLETimeUnit" >
-            </TextView>
-        </LinearLayout>
-
-        <!-- initiate filter policy select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEInitiateFilter" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEInitiateFilterSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- peer address type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEPeerAddressType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEInitiatePeerAddressTypeSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- own address type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEOwnAddressType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEInitiateOwnAddressTypeSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- peer address -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEPeerAddress" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEPeerAddress"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-        </LinearLayout>
-
-        <!-- Connection interval min -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEIntervalMin" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEInitiateIntervalMin"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLETimeUnit" >
-            </TextView>
-        </LinearLayout>
-        <!-- Connection interval max -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEIntervalMax" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEInitiateIntervalMax"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLETimeUnit" >
-            </TextView>
-        </LinearLayout>
-
-        <!-- BLELatency input -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLELatency" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLELatency"
-                android:layout_width="150dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-        </LinearLayout>
-
-        <!-- BLESupervisionTimeout -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLESupervisionTimeout" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLESupervisionTimeout"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLESupervisionTimeUnit" >
-            </TextView>
-        </LinearLayout>
-
-        <!-- BLEMinCELength -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEMinCELength" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEMinCELength"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLETimeUnit" >
-            </TextView>
-        </LinearLayout>
-        <!-- BLEMaxCELength -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEMaxCELength" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEMaxCELength"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLETimeUnit" >
-            </TextView>
-        </LinearLayout>
-
-        <!-- start/stop button -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <Button
-                android:id="@+id/BLEInitiateStart"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEStart" >
-            </Button>
-
-            <Button
-                android:id="@+id/BLEInitiateStop"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEStop" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ble_normal_mode_scan.xml b/EngineerMode/res/layout/ble_normal_mode_scan.xml
deleted file mode 100644
index d61d85b..0000000
--- a/EngineerMode/res/layout/ble_normal_mode_scan.xml
+++ /dev/null
@@ -1,217 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/BLEScan"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/BLEScan" >
-        </TextView>
-
-        <!-- scan type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <TextView
-                android:id="@+id/BLEScanType"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEScanType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEScanTypeSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- scan interval -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEScanInterval" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEScanInterval"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLETimeUnit" >
-            </TextView>
-        </LinearLayout>
-
-        <!-- scan window -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEScanWindow" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEScanWindow"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <TextView
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLETimeUnit" >
-            </TextView>
-        </LinearLayout>
-
-        <!-- own address type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEOwnAddressType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEScanOwnAddressTypeSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- scan filter policy select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEFilterPolicy" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEFilterPolicySpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- scan filter duplicate select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEScanFilterDuplicate" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEScanFilterDuplicate"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- scan filter policy select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <EditText
-                android:id="@+id/BLEScanResponseData"
-                android:layout_width="230dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-            <Button
-                android:id="@+id/BLEScanSet"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLESet" >
-            </Button>
-        </LinearLayout>
-
-        <!-- start/stop button -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <Button
-                android:id="@+id/BLEScanStart"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEStart" >
-            </Button>
-
-            <Button
-                android:id="@+id/BLEScanStop"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEStop" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ble_normal_mode_whitelist.xml b/EngineerMode/res/layout/ble_normal_mode_whitelist.xml
deleted file mode 100644
index 8c340b7..0000000
--- a/EngineerMode/res/layout/ble_normal_mode_whitelist.xml
+++ /dev/null
@@ -1,128 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/BLEWhiteList"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/BLEWhiteList" >
-        </TextView>
-
-        <!-- input MAC address -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEMACAddress" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/BLEMACAddress"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-        </LinearLayout>
-
-        <!-- address type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/BLEAddressType"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/BLEAddressType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEAddressTypeSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- add to white list buttont -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <Button
-                android:id="@+id/BLEAddToWhiteList"
-                android:layout_width="310dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEAddToWhiteList" >
-            </Button>
-        </LinearLayout>
-
-        <!-- add to white list buttont -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <Button
-                android:id="@+id/BLERemoveWhiteList"
-                android:layout_width="310dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLERemoveWhiteList" >
-            </Button>
-        </LinearLayout>
-
-        <!-- clear white list buttont  & HCI reset -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <Button
-                android:id="@+id/BLEClearWhiteList"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEClearWhiteList" >
-            </Button>
-
-            <Button
-                android:id="@+id/BLEHCIReset"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEHCIReset" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ble_test_mode.xml b/EngineerMode/res/layout/ble_test_mode.xml
deleted file mode 100644
index 00830e1..0000000
--- a/EngineerMode/res/layout/ble_test_mode.xml
+++ /dev/null
@@ -1,172 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/BLETestMode"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/BLETestMode" >
-        </TextView>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="310dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <RadioGroup
-                android:id="@+id/BLETxRx"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <RadioButton
-                    android:id="@+id/BLETestModeTx"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/BLETestModeTx" >
-                </RadioButton>
-
-                <RadioButton
-                    android:id="@+id/BLETestModeRx"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/BLETestModeRx" >
-                </RadioButton>
-            </RadioGroup>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="310dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <RadioGroup
-                android:id="@+id/BLEHoppingSingle"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <RadioButton
-                    android:id="@+id/BLEHopping"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/BLEHopping" >
-                </RadioButton>
-
-                <RadioButton
-                    android:id="@+id/BLESingle"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/BLESingle" >
-                </RadioButton>
-            </RadioGroup>
-        </LinearLayout>
-
-        <!-- channel select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/BLEChannel"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/BLEChannel" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEChannelSpinner"
-                android:layout_width="230dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- pattern select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/BLEPattern"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/BLEPattern" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/BLEPatternSpinner"
-                android:layout_width="230dip"
-                android:layout_height="wrap_content" 
-                android:entries="@array/bt_ble_test_pattern">
-            </Spinner>
-        </LinearLayout>
-        <!-- BLE continious tx checkbox -->
-
-        <CheckBox
-            android:id="@+id/BLEContiniousTx"
-            android:layout_width="310dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:paddingTop="10dip"
-            android:text="@string/BLEContiniousTx" >
-        </CheckBox>
-        <!-- start / stop buttont -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <Button
-                android:id="@+id/BLEStart"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEStart" >
-            </Button>
-
-            <Button
-                android:id="@+id/BLEStop"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/BLEStop" >
-            </Button>
-        </LinearLayout>
-
-        <TextView
-            android:id="@+id/BLEResult_Text"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:paddingTop="10dip" >
-        </TextView>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/bt_chip_info.xml b/EngineerMode/res/layout/bt_chip_info.xml
deleted file mode 100644
index 55c70b6..0000000
--- a/EngineerMode/res/layout/bt_chip_info.xml
+++ /dev/null
@@ -1,103 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:baselineAligned="true"
-    android:orientation="vertical" >
-
-    <RelativeLayout
-        android:id="@+id/relativeLayout1"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="left" >
-
-        <TextView
-            android:id="@+id/textView1"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentLeft="true"
-            android:text="@string/BT_chipId" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/chipId"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentRight="true"
-            android:gravity="fill_horizontal"
-            android:text="@+string/chipId" >
-        </TextView>
-    </RelativeLayout>
-
-    <RelativeLayout
-        android:id="@+id/relativeLayout2"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="left" >
-
-        <TextView
-            android:id="@+id/textView21"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentLeft="true"
-            android:text="@string/BT_ecoVersion" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/ecoVersion"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentRight="true"
-            android:gravity="center_horizontal"
-            android:text="@+string/ecoVersion" >
-        </TextView>
-    </RelativeLayout>
-
-    <RelativeLayout
-        android:id="@+id/relativeLayout3"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="left" >
-
-        <TextView
-            android:id="@+id/textView31"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentLeft="true"
-            android:text="@string/BT_patchSize" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/patchSize"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentRight="true"
-            android:gravity="clip_horizontal"
-            android:text="@+string/patchSize" >
-        </TextView>
-    </RelativeLayout>
-
-    <RelativeLayout
-        android:id="@+id/relativeLayout4"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="left" >
-
-        <TextView
-            android:id="@+id/textView41"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentLeft="true"
-            android:text="@string/BT_patchDate" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/patchDate"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentRight="true"
-            android:text="@+string/patchDate" >
-        </TextView>
-    </RelativeLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/bt_clock_selection.xml b/EngineerMode/res/layout/bt_clock_selection.xml
deleted file mode 100644
index 528fe19..0000000
--- a/EngineerMode/res/layout/bt_clock_selection.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" 
-    android:gravity="center_horizontal"
-    android:orientation="vertical">
-    <Button
-        android:id="@+id/clock_select_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:text="@string/clock_select_turn_on"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-    <TextView
-        android:id="@+id/ClockSelectionDesTxv"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="3pt"
-        android:layout_marginTop="20px"
-        android:layout_weight="1" >
-    </TextView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/bt_debug_feature.xml b/EngineerMode/res/layout/bt_debug_feature.xml
deleted file mode 100644
index 694948b..0000000
--- a/EngineerMode/res/layout/bt_debug_feature.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content" >
-
-    <TextView
-        android:id="@+id/BTDebugFeaturetxv"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="3pt"
-        android:layout_marginTop="20px"
-        android:layout_weight="1" >
-    </TextView>
-
-    <CheckBox
-        android:id="@+id/BTDebugFeatureCb"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20px"
-        android:layout_weight="1"
-        android:text="@string/emptyStr" >
-    </CheckBox>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/bt_relayer_mode.xml b/EngineerMode/res/layout/bt_relayer_mode.xml
deleted file mode 100644
index 84bab95..0000000
--- a/EngineerMode/res/layout/bt_relayer_mode.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        android:id="@+id/linearLayout1"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/textView1"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_margin="10dp"
-            android:text="@string/BT_serial_port_baudrate"
-            android:textAppearance="?android:attr/textAppearanceMedium" />
-    </LinearLayout>
-
-    <Spinner
-        android:id="@+id/spinner1"
-        android:layout_width="150dp"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="50dp"
-        android:entries="@array/bt_baudrate"   />
-
-    <LinearLayout
-        android:id="@+id/linearLayout2"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/textView2"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_margin="10dp"
-            android:text="@string/BT_serial_port_number"
-            android:textAppearance="?android:attr/textAppearanceMedium" />
-    </LinearLayout>
-
-    <Spinner
-        android:id="@+id/spinner2"
-        android:layout_width="150dp"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="50dp"
-        android:entries="@array/bt_uart" />
-
-    <Button
-        android:id="@+id/button1"
-        android:layout_width="100dp"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="50dp"
-        android:layout_marginTop="10dp"
-        android:text="@string/BT_start" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/btlist.xml b/EngineerMode/res/layout/btlist.xml
deleted file mode 100644
index bed3083..0000000
--- a/EngineerMode/res/layout/btlist.xml
+++ /dev/null
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <ListView
-        android:id="@id/android:list"
-        android:layout_width="fill_parent"
-        android:layout_height="0dip"
-        android:layout_weight="1"
-        android:drawSelectorOnTop="false" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/bypass_settings.xml b/EngineerMode/res/layout/bypass_settings.xml
deleted file mode 100644
index bf9a7fb..0000000
--- a/EngineerMode/res/layout/bypass_settings.xml
+++ /dev/null
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2007 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-  
-          http://www.apache.org/licenses/LICENSE-2.0
-  
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:padding="4dip"
-    android:gravity="center_horizontal"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <ListView
-        android:id="@+id/lv_bypass"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:textSize="7sp">
-    </ListView>
-
-    <CheckBox
-        android:id="@+id/cb_ets_rndis"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/usb_mode_bypass_ets_rndis"
-        android:textAppearance="?android:attr/textAppearanceListItemSmall"
-        android:paddingStart="?android:attr/listPreferredItemPaddingStart"
-        android:paddingEnd="?android:attr/listPreferredItemPaddingEnd"
-        android:paddingTop="8dp"
-        android:paddingBottom="8dp"
-        android:button="@null"
-        android:drawableRight="?android:attr/listChoiceIndicatorMultiple">
-    </CheckBox>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/camera.xml b/EngineerMode/res/layout/camera.xml
deleted file mode 100644
index c6f6915..0000000
--- a/EngineerMode/res/layout/camera.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_Camera"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/camera_preview.xml b/EngineerMode/res/layout/camera_preview.xml
deleted file mode 100644
index 0d9f510..0000000
--- a/EngineerMode/res/layout/camera_preview.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="horizontal" >
-
-    <com.mediatek.engineermode.camera.PreviewFrameLayout
-        android:id="@+id/frame_layout"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_marginLeft="2dp"
-        android:layout_weight="1" >
-
-        <FrameLayout
-            android:id="@+id/frame"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:background="@drawable/border_view_finder" >
-
-            <com.mediatek.engineermode.camera.VideoPreview
-                android:id="@+id/camera_preview"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent" />
-        </FrameLayout>
-    </com.mediatek.engineermode.camera.PreviewFrameLayout>
-
-    <TextView
-        android:id="@+id/current_shot_num"
-        android:layout_width="240dp"
-        android:layout_height="wrap_content"
-        android:layout_gravity="left|bottom"
-        android:layout_marginBottom="5dp"
-        android:layout_marginLeft="5dp"
-        android:drawableLeft="@drawable/btn_shot_photo_repeat"
-        android:drawablePadding="2dp"
-        android:gravity="left|center_vertical"
-        android:paddingRight="5dp"
-        android:shadowColor="#c0000000"
-        android:shadowDx="1"
-        android:shadowDy="1"
-        android:shadowRadius="1"
-        android:textColor="@color/recording_current_shot_text"
-        android:textSize="23dp"
-        android:textStyle="bold"
-        android:visibility="gone" />
-
-    <LinearLayout
-        android:layout_width="wrap_content"
-        android:layout_height="match_parent"
-        android:gravity="center" >
-
-        <Button
-            android:id="@+id/capture_btn"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/capture_picture" >
-        </Button>
-    </LinearLayout>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/cdma_info_entry.xml b/EngineerMode/res/layout/cdma_info_entry.xml
deleted file mode 100644
index 22db28b..0000000
--- a/EngineerMode/res/layout/cdma_info_entry.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <TextView
-        android:id="@+id/info1"
-        android:padding="2dp"
-        android:gravity="left|center_vertical"
-        android:layout_width="0dp"
-        android:layout_weight="1"
-        android:layout_height="wrap_content" >
-    </TextView>
-
-    <View
-        android:layout_width="1dp"
-        android:layout_height="fill_parent"
-        android:background="#FF303030" >
-    </View>
-
-    <TextView
-        android:id="@+id/info2"
-        android:padding="2dp"
-        android:gravity="left|center_vertical"
-        android:layout_width="0dp"
-        android:layout_weight="1"
-        android:layout_height="wrap_content" >
-    </TextView>
-
-    <View
-        android:layout_width="1dp"
-        android:layout_height="fill_parent"
-        android:background="#FF303030" >
-    </View>
-
-    <TextView
-        android:id="@+id/info3"
-        android:padding="2dp"
-        android:gravity="left|center_vertical"
-        android:layout_width="0dp"
-        android:layout_weight="1"
-        android:layout_height="wrap_content" >
-    </TextView>
-
-    <View
-        android:layout_width="1dp"
-        android:layout_height="fill_parent"
-        android:background="#FF303030" >
-    </View>
-
-    <TextView
-        android:id="@+id/info4"
-        android:padding="2dp"
-        android:gravity="left|center_vertical"
-        android:layout_width="0dp"
-        android:layout_weight="1"
-        android:layout_height="wrap_content" >
-    </TextView>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/cfu_activity.xml b/EngineerMode/res/layout/cfu_activity.xml
deleted file mode 100644
index 0f3e33a..0000000
--- a/EngineerMode/res/layout/cfu_activity.xml
+++ /dev/null
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:layout_marginLeft="10dip"
-        android:orientation="vertical" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_margin="10dip"
-            android:gravity="center"
-            android:text="@string/cfu_textView"
-            android:textAppearance="?android:attr/textAppearanceLarge" >
-        </TextView>
-
-        <RadioGroup
-            android:id="@+id/cfu_radio_group"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/cfu_default_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/cfu_default" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/cfu_on_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/cfu_turn_on" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/cfu_off_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/cfu_turn_off" >
-            </RadioButton>
-        </RadioGroup>
-
-        <Button
-            android:id="@+id/cfu_set_button"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="200dip"
-            android:gravity="center"
-            android:text="@string/cfu_ok" >
-
-            <!-- android:gravity="right" -->
-        </Button>
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/cip_prop_content.xml b/EngineerMode/res/layout/cip_prop_content.xml
deleted file mode 100644
index db07894..0000000
--- a/EngineerMode/res/layout/cip_prop_content.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:scrollbars="vertical" >
-    
-    <TextView android:id="@+id/cip_prop_content_tv"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"/>
-    
-</ScrollView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/class_d_activity.xml b/EngineerMode/res/layout/class_d_activity.xml
deleted file mode 100644
index 9298713..0000000
--- a/EngineerMode/res/layout/class_d_activity.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:gravity="center_horizontal"
-    android:orientation="vertical" >
-
-    <ToggleButton
-        android:id="@+id/desense_classd_toggle_btn"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20dip"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </ToggleButton>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/cmmb_activity.xml b/EngineerMode/res/layout/cmmb_activity.xml
deleted file mode 100644
index 3044bdc..0000000
--- a/EngineerMode/res/layout/cmmb_activity.xml
+++ /dev/null
@@ -1,239 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginRight="10dip"
-        android:gravity="right|center_horizontal"
-        android:orientation="horizontal"
-        android:padding="10dip" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_margin="10dip"
-            android:gravity="center"
-            android:text="@string/cmmb_save"
-            android:textAppearance="?android:attr/textAppearanceLarge" >
-        </TextView>
-
-        <RadioGroup
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="center"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/cmmb_save_on_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginRight="10dip"
-                android:text="@string/cmmb_on" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/cmmb_save_off_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/cmmb_off" >
-            </RadioButton>
-        </RadioGroup>
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginRight="10dip"
-        android:gravity="right|center_horizontal"
-        android:orientation="horizontal"
-        android:padding="10dip" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_margin="10dip"
-            android:gravity="center"
-            android:text="@string/cmmb_memset"
-            android:textAppearance="?android:attr/textAppearanceLarge" >
-        </TextView>
-
-        <RadioGroup
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="center"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/cmmb_memset_on_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginRight="10dip"
-                android:text="@string/cmmb_on" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/cmmb_memset_off_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/cmmb_off" >
-            </RadioButton>
-        </RadioGroup>
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginRight="10dip"
-        android:gravity="right|center_horizontal"
-        android:orientation="horizontal"
-        android:padding="10dip" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_margin="10dip"
-            android:gravity="center"
-            android:text="@string/cmmb_mts"
-            android:textAppearance="?android:attr/textAppearanceLarge" >
-        </TextView>
-
-        <RadioGroup
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="center"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/cmmb_mts_on_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginRight="10dip"
-                android:text="@string/cmmb_on" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/cmmb_mts_off_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/cmmb_off" >
-            </RadioButton>
-        </RadioGroup>
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginRight="10dip"
-        android:gravity="right|center_horizontal"
-        android:orientation="horizontal"
-        android:padding="10dip" >
-
-        <TextView
-            android:id="@+id/cmmb_textView_mbbms30"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_margin="10dip"
-            android:gravity="center"
-            android:text="@string/cmmb_mbbms30"
-            android:textAppearance="?android:attr/textAppearanceLarge" >
-        </TextView>
-
-        <RadioGroup
-            android:id="@+id/cmmb_mbbms30_radiagroup"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="center"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/cmmb_mbbms30_on_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginRight="10dip"
-                android:text="@string/cmmb_on" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/cmmb_mbbms30_off_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/cmmb_off" >
-            </RadioButton>
-        </RadioGroup>
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-
-        <View
-            android:id="@+id/SpacerTop"
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginBottom="6dip"
-            android:layout_marginTop="6dip"
-            android:background="#00FF00" >
-        </View>
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-
-            <Button
-                android:id="@+id/cmmb_internal_ft"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:text="@string/cmmb_internal_ft" >
-            </Button>
-
-            <EditText
-                android:id="@+id/cmmb_external_edit"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:digits="0123456789."
-                android:inputType="number"
-                android:text="@string/cmmb_external_edit" >
-            </EditText>
-
-            <TextView
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:text="@string/cmmb_external_hz" >
-            </TextView>
-        </LinearLayout>
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-
-            <Button
-                android:id="@+id/cmmb_external_ft"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:text="@string/cmmb_external_ft" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/cpu_dvfs.xml b/EngineerMode/res/layout/cpu_dvfs.xml
deleted file mode 100644
index c150e2a..0000000
--- a/EngineerMode/res/layout/cpu_dvfs.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" 
-    android:orientation="vertical">
-    <ListView
-        android:id="@+id/dvfs_cpu_governor"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:scrollbars="none" >
-    </ListView>
-    <LinearLayout 
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/dvfs_cpu_clock"/>
-        <EditText android:id="@+id/dvfs_cpu_clock"
-            android:layout_width="150dip"
-            android:numeric="decimal"
-            android:singleLine="true"
-            android:layout_height="wrap_content"/>
-        <TextView android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/dvfs_cpu_freq_khz"/>
-    </LinearLayout>
-    <Button android:id="@+id/dvfs_set_cpu_freq"
-        android:layout_width="100dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:layout_marginTop="5dip"
-        android:text="@string/dvfs_set_cpu_freq"></Button>
-    
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ctiasetting.xml b/EngineerMode/res/layout/ctiasetting.xml
deleted file mode 100644
index ab08651..0000000
--- a/EngineerMode/res/layout/ctiasetting.xml
+++ /dev/null
@@ -1,212 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2008 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:padding="8dip" >
-
-        <LinearLayout
-            android:id="@+id/table"
-            android:layout_width="fill_parent"
-            android:layout_height="fill_parent"
-            android:orientation="vertical" >
-        </LinearLayout>
-
-        <TextView
-            android:id="@+id/title_text"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginBottom="10dip"
-            android:text="@string/ctia_title"
-            android:textSize="18dip" />
-
-        <CheckBox
-            android:id="@+id/enable_checkbox"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/ctia_checkbox" />
-
-        <TextView
-            android:id="@+id/title2_text"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="4dip"
-            android:layout_marginTop="4dip"
-            android:text="@string/ctia_rate"
-            android:textSize="12dip" />
-
-        <Spinner
-            android:id="@+id/rate_spinner"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" />
-
-        <TextView
-            android:id="@+id/title4_text"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="4dip"
-            android:layout_marginTop="4dip"
-            android:text="@string/ctia_flag"
-            android:textSize="16dip" />
-
-        <LinearLayout
-            android:id="@+id/table"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/title5_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="24dip"
-                android:layout_marginRight="108dip"
-                android:layout_marginTop="4dip"
-                android:text="@string/ctia_id"
-                android:textSize="12dip" />
-
-            <TextView
-                android:id="@+id/title6_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="4dip"
-                android:layout_marginRight="10dip"
-                android:layout_marginTop="4dip"
-                android:text="@string/ctia_value"
-                android:textSize="12dip" />
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/table"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/label1_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="4dip"
-                android:layout_marginRight="2dip"
-                android:layout_marginTop="4dip"
-                android:text="@string/ctia_label"
-                android:textSize="12dip" />
-
-            <EditText
-                android:id="@+id/idedittext"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="4dip"
-                android:layout_marginTop="4dip"
-                android:maxLength="8"
-                android:singleLine="true"
-                android:maxWidth="96dip"
-                android:minWidth="96dip"
-                android:text="@string/ctia_default_val"
-                android:textSize="12dip" />
-
-            <TextView
-                android:id="@+id/label2_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="4dip"
-                android:layout_marginRight="2dip"
-                android:layout_marginTop="4dip"
-                android:text="@string/ctia_label"
-                android:textSize="12dip" />
-
-            <EditText
-                android:id="@+id/valedittext"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="4dip"
-                android:layout_marginTop="4dip"
-                android:maxLength="8"
-                android:singleLine="true"
-                android:maxWidth="96dip"
-                android:minWidth="96dip"
-                android:text="@string/ctia_default_val"
-                android:textSize="12dip" />
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/table"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/set_btn"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:minWidth="100dip"
-                android:text="@string/ctia_btn_set"
-                android:textSize="14dip" />
-
-            <Button
-                android:id="@+id/get_btn"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="18dip"
-                android:minWidth="100dip"
-                android:text="@string/ctia_btn_get"
-                android:textSize="14dip" />
-        </LinearLayout>
-
-        <CheckBox
-            android:id="@+id/enable_dump_checkbox"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/ctia_dump_checkbox" />
-
-        <CheckBox
-            android:id="@+id/enable_dump_counter_checkbox"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/ctia_counter_checkbox" />
-
-        <TextView
-            android:id="@+id/interval_text"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="4dip"
-            android:layout_marginTop="4dip"
-            android:text="@string/ctia_interval"
-            android:textSize="16dip" />
-
-        <EditText
-            android:id="@+id/interval_edittext"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="4dip"
-            android:layout_marginTop="4dip"
-            android:inputType="number"
-            android:maxLength="3"
-            android:singleLine="true"
-            android:maxWidth="48dip"
-            android:minWidth="48dip"
-            android:numeric="decimal"
-            android:textSize="16dip" />
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/cw_test.xml b/EngineerMode/res/layout/cw_test.xml
deleted file mode 100644
index bc9e7ab..0000000
--- a/EngineerMode/res/layout/cw_test.xml
+++ /dev/null
@@ -1,175 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/cw_test_times"
-            android:layout_width="220dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/cw_test_times_tx" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/cw_test_times_content"
-            android:layout_width="100dip"
-            android:layout_height="wrap_content"
-            android:singleLine="true"
-            android:numeric="integer" >
-        </EditText>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/cw_test_interval"
-            android:layout_width="220dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/cw_test_interval_tx" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/cw_test_interval_content"
-            android:layout_width="100dip"
-            android:layout_height="wrap_content"
-            android:singleLine="true"
-            android:numeric="integer" >
-        </EditText>
-    </LinearLayout>
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="8pt"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/cw_test_start_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/cw_test_start" >
-        </Button>
-
-        <Button
-            android:id="@+id/cw_test_stop_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/cw_test_stop" >
-        </Button>
-    </LinearLayout>
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/cw_test_current_times"
-            android:layout_width="150dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/cw_test_cur_times_tx" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/cw_test_current_times_content"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content" >
-        </TextView>
-    </LinearLayout>
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/cw_test_cnr_id"
-            android:layout_width="150dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/cw_test_cnr" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/cw_test_cnr_content"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content" >
-        </TextView>
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/cw_test_clock_drift_id"
-            android:layout_width="150dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/cw_test_clock_drift" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/cw_test_clock_drift_content"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content" >
-        </TextView>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/cw_test_max_cnr_id"
-            android:layout_width="150dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/cw_test_max_cnr" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/cw_test_max_cnr_content"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content" >
-        </TextView>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/cw_test_min_cnr_id"
-            android:layout_width="150dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/cw_test_min_cnr" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/cw_test_min_cnr_content"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content" >
-        </TextView>
-    </LinearLayout>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/dcm_apdcm.xml b/EngineerMode/res/layout/dcm_apdcm.xml
deleted file mode 100644
index 2f6a285..0000000
--- a/EngineerMode/res/layout/dcm_apdcm.xml
+++ /dev/null
@@ -1,288 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-<LinearLayout
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical"
-    android:layout_margin="10dip">
-
-    <!-- ARM -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="40dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_arm"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_arm_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-        <Button
-            android:id="@+id/dcm_apdcm_arm_read_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_arm_set_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    
-    <!-- EMI -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:layout_marginTop="5dip"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="40dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_emi"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_emi_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-             android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-        <Button
-            android:id="@+id/dcm_apdcm_emi_read_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_emi_set_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    
-    <!-- INFRA -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:layout_marginTop="5dip"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="40dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_infra"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_infra_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-             android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-        <Button
-            android:id="@+id/dcm_apdcm_infra_read_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_infra_set_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    
-    <!-- PERI -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="40dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_peri"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_peri_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-             android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-        <Button
-            android:id="@+id/dcm_apdcm_peri_read_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_peri_set_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    
-    <!-- MISC -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="40dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_misc"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_misc_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-        <Button
-            android:id="@+id/dcm_apdcm_misc_read_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_misc_set_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    
-    <!-- MM -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="40dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_mm"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_mm_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-        <Button
-            android:id="@+id/dcm_apdcm_mm_read_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_mm_set_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    
-    <!-- MFG -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="40dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_mfg"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_mfg_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-        <Button
-            android:id="@+id/dcm_apdcm_mfg_read_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_mfg_set_btn"
-            android:layout_width="70dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:layout_marginTop="10dip"
-        android:orientation="horizontal">
-        <Button
-            android:id="@+id/dcm_apdcm_dump_regs_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/dcm_text_dump_regs"/>
-        <Button
-            android:id="@+id/dcm_apdcm_help_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/dcm_text_help"/>
-    </LinearLayout>
-
-</LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/dcm_apdcm_w.xml b/EngineerMode/res/layout/dcm_apdcm_w.xml
deleted file mode 100644
index df6995f..0000000
--- a/EngineerMode/res/layout/dcm_apdcm_w.xml
+++ /dev/null
@@ -1,317 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-<LinearLayout
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical"
-    android:layout_margin="10dip">
-
-    <!-- ARM -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_arm"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_arm_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <Button
-            android:id="@+id/dcm_apdcm_arm_read_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_arm_set_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    <!-- EMI -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:layout_marginTop="5dip"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_emi"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_emi_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-             android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <Button
-            android:id="@+id/dcm_apdcm_emi_read_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_emi_set_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    <!-- INFRA -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:layout_marginTop="5dip"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_infra"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_infra_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-             android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <Button
-            android:id="@+id/dcm_apdcm_infra_read_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_infra_set_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    <!-- PERI -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_peri"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_peri_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-             android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <Button
-            android:id="@+id/dcm_apdcm_peri_read_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_peri_set_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    <!-- MISC -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_misc"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_misc_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <Button
-            android:id="@+id/dcm_apdcm_misc_read_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_misc_set_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    <!-- MM -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_mm"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_mm_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <Button
-            android:id="@+id/dcm_apdcm_mm_read_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_mm_set_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    <!-- MFG -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_text_mfg"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText 
-            android:id="@+id/dcm_apdcm_mfg_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:maxLength="8"
-            android:layout_marginLeft="2dip"/>
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:orientation="horizontal">
-        <Button
-            android:id="@+id/dcm_apdcm_mfg_read_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/dcm_text_read"/>
-        <Button
-            android:id="@+id/dcm_apdcm_mfg_set_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/dcm_text_set"/>
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:gravity="center_horizontal"
-        android:layout_marginTop="10dip"
-        android:orientation="horizontal">
-        <Button
-            android:id="@+id/dcm_apdcm_dump_regs_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/dcm_text_dump_regs"/>
-        <Button
-            android:id="@+id/dcm_apdcm_help_btn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/dcm_text_help"/>
-    </LinearLayout>
-
-</LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/dcm_list.xml b/EngineerMode/res/layout/dcm_list.xml
deleted file mode 100644
index 2a8f603..0000000
--- a/EngineerMode/res/layout/dcm_list.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <ListView
-        android:id="@+id/dcm_listview"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/dcm_lpm.xml b/EngineerMode/res/layout/dcm_lpm.xml
deleted file mode 100644
index 0a45e2f..0000000
--- a/EngineerMode/res/layout/dcm_lpm.xml
+++ /dev/null
@@ -1,170 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-<LinearLayout
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" 
-    android:layout_margin="10dip">
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <Spinner android:id="@+id/dcm_lpm_ref_clk"
-            android:layout_width="140dip"
-            android:layout_height="wrap_content"
-            android:entries="@array/dcm_lpm_ref_clk_entries"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dip"
-            android:text="@string/dcm_lpm_ref_clk_note"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <Spinner android:id="@+id/dcm_lpm_signals"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:entries="@array/dcm_lpm_signal_entries"/>
-        
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dip"
-        android:orientation="horizontal">
-        <Button android:id="@+id/dcm_lpm_start_btn"
-            android:layout_width="80dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dip"
-            android:text="@string/dcm_lpm_start"/>
-        <Button android:id="@+id/dcm_lpm_stop_btn"
-            android:layout_width="80dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/dcm_lpm_stop"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText
-            android:id="@+id/dcm_lpm_good_dur_input"
-            android:layout_height="wrap_content"
-            android:layout_width="110dip"
-            android:hint="@string/dcm_lpm_hint_good_dur"
-            android:maxLength="4"/>
-        
-    </LinearLayout>
-    <!-- total time -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_lpm_total_time"/>
-        <EditText
-            android:id="@+id/dcm_lpm_total_time_edit"
-            android:layout_height="wrap_content"
-            android:layout_width="130dip"
-            android:layout_marginLeft="5dip"
-            android:editable="false"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_lpm_low2high"/>
-        <EditText
-            android:id="@+id/dcm_lpm_low2high_edit"
-            android:layout_height="wrap_content"
-            android:layout_width="130dip"
-            android:layout_marginLeft="5dip"
-            android:editable="false"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_lpm_high_dur"/>
-        <EditText
-            android:id="@+id/dcm_lpm_high_dur_edit"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:layout_width="130dip"
-            android:editable="false"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_lpm_longest_high"/>
-        <EditText
-            android:id="@+id/dcm_lpm_longest_high_edit"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:layout_width="130dip"
-            android:editable="false"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_lpm_good_dur"/>
-        <EditText
-            android:id="@+id/dcm_lpm_good_dur_edit"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:layout_width="130dip"
-            android:editable="false"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dip"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"/>
-        <Button android:id="@+id/dcm_lpm_help_btn"
-            android:layout_width="130dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_help"/>
-    </LinearLayout>
-
-    
-</LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/dcm_lpm_w.xml b/EngineerMode/res/layout/dcm_lpm_w.xml
deleted file mode 100644
index d51cc33..0000000
--- a/EngineerMode/res/layout/dcm_lpm_w.xml
+++ /dev/null
@@ -1,174 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-<LinearLayout
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" 
-    android:layout_margin="10dip">
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <Spinner android:id="@+id/dcm_lpm_ref_clk"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:entries="@array/dcm_lpm_ref_clk_entries"/>
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/dcm_lpm_ref_clk_note"/>
-        
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <Spinner android:id="@+id/dcm_lpm_signals"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:entries="@array/dcm_lpm_signal_entries"/>
-        
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dip"
-        android:orientation="horizontal">
-        <Button android:id="@+id/dcm_lpm_start_btn"
-            android:layout_width="80dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_lpm_start"/>
-        <Button android:id="@+id/dcm_lpm_stop_btn"
-            android:layout_width="80dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_lpm_stop"/>
-        <TextView 
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dip"
-            android:text="@string/dcm_text_0x"/>
-        <EditText
-            android:id="@+id/dcm_lpm_good_dur_input"
-            android:layout_height="wrap_content"
-            android:layout_width="110dip"
-            android:hint="@string/dcm_lpm_hint_good_dur"
-            android:maxLength="4"/>
-        
-    </LinearLayout>
-    <!-- total time -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_lpm_total_time"/>
-        <EditText
-            android:id="@+id/dcm_lpm_total_time_edit"
-            android:layout_height="wrap_content"
-            android:layout_width="130dip"
-            android:layout_marginLeft="5dip"
-            android:editable="false"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_lpm_low2high"/>
-        <EditText
-            android:id="@+id/dcm_lpm_low2high_edit"
-            android:layout_height="wrap_content"
-            android:layout_width="130dip"
-            android:layout_marginLeft="5dip"
-            android:editable="false"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_lpm_high_dur"/>
-        <EditText
-            android:id="@+id/dcm_lpm_high_dur_edit"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:layout_width="130dip"
-            android:editable="false"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_lpm_longest_high"/>
-        <EditText
-            android:id="@+id/dcm_lpm_longest_high_edit"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:layout_width="130dip"
-            android:editable="false"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"
-            android:text="@string/dcm_lpm_good_dur"/>
-        <EditText
-            android:id="@+id/dcm_lpm_good_dur_edit"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:layout_width="130dip"
-            android:editable="false"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dip"
-        android:orientation="horizontal">
-        <TextView 
-            android:layout_width="195dip"
-            android:layout_height="wrap_content"
-            android:gravity="right"/>
-        <Button android:id="@+id/dcm_lpm_help_btn"
-            android:layout_width="130dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:text="@string/dcm_text_help"/>
-    </LinearLayout>
-
-    
-</LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/deep_idle_setting.xml b/EngineerMode/res/layout/deep_idle_setting.xml
deleted file mode 100644
index 16ad166..0000000
--- a/EngineerMode/res/layout/deep_idle_setting.xml
+++ /dev/null
@@ -1,152 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-        android:id="@+id/deep_idle_mode_contrl"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-	        <TextView
-	            android:layout_width="240dip"
-	            android:layout_height="wrap_content"
-	            android:layout_marginTop="10dip"
-	            android:layout_marginLeft="10dip"
-	            android:text="@string/deep_idle_mode" >
-	        </TextView>
-	
-	        <LinearLayout 
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	            <RadioGroup
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="vertical">
-	                <RadioButton android:id="@+id/deep_idle_disable"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/deep_idle_disable_dpidle"/>
-                    <RadioButton android:id="@+id/deep_idle_legacy_sleep"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginLeft="10dip"
-                        android:text="@string/deep_idle_legacy_sleep"/>   
-                    <RadioButton android:id="@+id/deep_idle_dormant_mode"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/deep_idle_dormant_mode"/>       
-	            </RadioGroup>
-	        </LinearLayout>
-        </LinearLayout>
-        
-        <!-- power level -->
-        <LinearLayout
-        android:id="@+id/deep_idle_power_level_contrl"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-	        <TextView
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:layout_marginLeft="10dip"
-	            android:text="@string/deep_idle_power_level" >
-	        </TextView>
-	
-	        <LinearLayout 
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	            <RadioGroup
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="vertical">
-	                <RadioButton android:id="@+id/deep_idle_power_level0"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/deep_idle_power_level_0"/>
-                    <RadioButton android:id="@+id/deep_idle_power_level1"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginLeft="10dip"
-                        android:text="@string/deep_idle_power_level_1"/>        
-	            </RadioGroup>
-	        </LinearLayout>
-        </LinearLayout>
-        
-        <!-- wakeup timer -->
-        <LinearLayout
-        android:id="@+id/deep_idle_wake_timer_contrl"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-	        <TextView
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:layout_marginLeft="10dip"
-	            android:text="@string/deep_idle_set_wakeup_timer" >
-	        </TextView>
-	        <LinearLayout 
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="vertical">
-	                <RadioButton android:id="@+id/deep_idle_timer_disable"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/deep_idle_disable_timer"/>
-	                <LinearLayout 
-	                    android:layout_width="fill_parent"
-			            android:layout_height="wrap_content"
-			            android:orientation="horizontal">
-                    <RadioButton android:id="@+id/mcdi_timer_val_set"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginLeft="10dip"/>
-                    <EditText
-		                android:id="@+id/deep_idle_timer_val"
-		                android:layout_width="100dip"
-		                android:layout_height="wrap_content"
-		                android:maxLength="7"
-		                android:numeric="integer" />
-      				<TextView
-			            android:layout_width="wrap_content"
-			            android:layout_height="wrap_content"
-			            android:text="@string/deep_idle_timer_val_tip" />
-                    </LinearLayout>
-
-	        </LinearLayout>
-        </LinearLayout>
-        
-        <LinearLayout 
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	     <Button
-            android:id="@+id/deep_idle_start_timer"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/deep_idle_start_timer" />
-         <Button
-            android:id="@+id/deep_idle_get_setting"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/deep_idle_get_setting" >
-        </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/desense_activity.xml b/EngineerMode/res/layout/desense_activity.xml
deleted file mode 100644
index 206f4c0..0000000
--- a/EngineerMode/res/layout/desense_activity.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <ListView
-        android:id="@+id/desense_listview"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/desense_camera.xml b/EngineerMode/res/layout/desense_camera.xml
deleted file mode 100644
index e72267e..0000000
--- a/EngineerMode/res/layout/desense_camera.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent" android:layout_height="match_parent"
-    android:orientation="vertical">
-
-    <TextView android:layout_width="wrap_content"
-        android:layout_height="wrap_content" android:layout_marginLeft="20sp"
-        android:layout_marginTop="50sp" android:text="@string/desense_camera_txt">
-    </TextView>
-    <Spinner android:id="@+id/desense_camera_spinner"
-        android:layout_width="fill_parent" android:layout_height="wrap_content"
-        android:entries="@array/desense_camera_items" android:layout_marginTop="50sp"
-        android:layout_marginLeft="20sp" android:layout_marginRight="50sp">
-    </Spinner>
-    <Button android:layout_width="wrap_content" android:layout_height="wrap_content"
-        android:id="@+id/desense_camera_button" android:text="@string/desense_camera_btn"
-        android:layout_marginTop="50sp" android:layout_marginLeft="20sp"
-        android:layout_marginRight="50sp">
-    </Button>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/desense_freqhopping_set.xml b/EngineerMode/res/layout/desense_freqhopping_set.xml
deleted file mode 100644
index ef98bd9..0000000
--- a/EngineerMode/res/layout/desense_freqhopping_set.xml
+++ /dev/null
@@ -1,137 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:layout_margin="10dip"
-    android:gravity="center_horizontal"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20dip"
-        android:orientation="horizontal" >
-
-        <Spinner
-            android:id="@+id/desense_freqhopping_sp_plls"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:entries="@array/desense_freqhopping_plls" >
-        </Spinner>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:gravity="right"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_et_dds"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:hint="@string/desense_freqhopping_hint_dds"
-            android:maxLength="8" />
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20dip"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_et_deltafreq"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:hint="@string/desense_freqhopping_hint_freq"
-            android:maxLength="8" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:gravity="right"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_et_deltatime"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:hint="@string/desense_freqhopping_hint_time"
-            android:maxLength="8" />
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dip"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_et_upperlimit"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:hint="@string/desense_freqhopping_hint_upper"
-            android:maxLength="8" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:gravity="right"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_et_downlimit"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:hint="@string/desense_freqhopping_hint_down"
-            android:maxLength="8" />
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20dip"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/desense_freqhopping_btn_enable"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/desense_freqhopping_enable" />
-
-        <Button
-            android:id="@+id/desense_freqhopping_btn_disable"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/desense_freqhopping_disable" />
-
-        <Button
-            android:id="@+id/desense_freqhopping_btn_readall"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/desense_freqhopping_readall" />
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/desense_freqhopping_set_6572.xml b/EngineerMode/res/layout/desense_freqhopping_set_6572.xml
deleted file mode 100644
index 737a35e..0000000
--- a/EngineerMode/res/layout/desense_freqhopping_set_6572.xml
+++ /dev/null
@@ -1,305 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-<LinearLayout 
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:layout_margin="10dip"
-    android:gravity="center_horizontal"
-    android:orientation="vertical" >
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_hop_deltafreq_edit"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:singleLine="true"
-            android:hint="@string/desense_freqhopping_hopdeltafreq"
-            android:maxLength="6" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:gravity="right"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_hop_deltatime_edit"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:singleLine="true"
-            android:hint="@string/desense_freqhopping_hopdeltatime"
-            android:maxLength="2" />
-    </LinearLayout>
-    
-    <!-- Set Button -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/desense_freqhopping_0x" 
-            android:visibility="invisible"/>
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:visibility="invisible"/>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:gravity="right"
-            android:text="@string/desense_freqhopping_0x" 
-            android:visibility="invisible"/>
-
-        <Button
-            android:id="@+id/desense_freqhopping_hop_set_btn"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/desense_text_set"/>
-    </LinearLayout>
-
-    <!-- pll select -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" 
-        android:layout_marginTop="2dip">
-
-        <Spinner
-            android:id="@+id/desense_freqhopping_plls"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:entries="@array/desense_freqhopping_plls_6572" >
-        </Spinner>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:gravity="right"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_ssc_dds_edit"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:singleLine="true"
-            android:hint="@string/desense_freqhopping_hint_dds"
-            android:editable="false"
-            android:maxLength="8" />
-    </LinearLayout>
-    <!-- DeltaFreq & DeltaTime -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_ssc_deltafreq_edit"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:singleLine="true"
-            android:hint="@string/desense_freqhopping_hint_freq"
-            android:maxLength="1" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:gravity="right"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_ssc_deltatime_edit"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:singleLine="true"
-            android:hint="@string/desense_freqhopping_hint_time"
-            android:maxLength="1" />
-    </LinearLayout>
-    <!-- SSC UPLMT & DNLMT -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="7dip"
-            android:text="@string/desense_text_plus_sign" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_ssc_upperlimit_edit"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:hint="@string/desense_freqhopping_hint_upper"
-            android:maxLength="2" 
-            android:singleLine="true"
-            android:numeric="decimal"/>
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/desense_text_thousand_sprt" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="13dip"
-            android:gravity="right"
-            android:text="@string/desense_text_minus_sign" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_ssc_downlimit_edit"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:hint="@string/desense_freqhopping_hint_down"
-            android:maxLength="2" 
-            android:singleLine="true"
-            android:numeric="decimal"/>
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/desense_text_thousand_sprt" />
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/desense_freqhopping_ssc_enable_btn"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/desense_freqhopping_enable_ssc" />
-
-        <Button
-            android:id="@+id/desense_freqhopping_ssc_disable_btn"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/desense_freqhopping_disable_ssc" />
-
-    </LinearLayout>
-    
-    <!-- hop dds -->
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="2dip"
-        android:orientation="horizontal" >
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/desense_freqhopping_0x" />
-
-        <EditText
-            android:id="@+id/desense_freqhopping_hop_dds_edit"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:singleLine="true"
-            android:hint="@string/desense_freqhopping_hop_dds"
-            android:maxLength="6" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:gravity="right"
-            android:text="@string/desense_freqhopping_0x" 
-            android:visibility="invisible"/>
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/desense_freqhopping_trigger_hop_btn"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/desense_freqhopping_triger_hop" />
-
-        <Button
-            android:id="@+id/desense_freqhopping_disable_hop_btn"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/desense_freqhopping_disable_hop" />
-
-    </LinearLayout>
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/desense_freqhopping_dump_all_btn"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/desense_freqhopping_dump_all" />
-
-        <Button
-            android:id="@+id/desense_freqhopping_help_btn"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/desense_freqhopping_help" />
-
-    </LinearLayout>
-    
- 
-    <TextView 
-        android:layout_width="260dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dip"
-        android:text="@string/desense_freqhopping_system_warning"/>
-        
-
- 
-</LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/desense_mempll_set.xml b/EngineerMode/res/layout/desense_mempll_set.xml
deleted file mode 100644
index 4630747..0000000
--- a/EngineerMode/res/layout/desense_mempll_set.xml
+++ /dev/null
@@ -1,39 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:layout_margin="10dip"
-    android:gravity="center_horizontal"
-    android:orientation="vertical" >
-
-    <TextView
-        android:id="@+id/desense_mempll_tv_current"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_margin="10dip"
-        android:textAppearance="?android:attr/textAppearanceLarge" />
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="20dip"
-        android:orientation="vertical" >
-
-        <Button
-            android:id="@+id/desense_mempll_btn_convert266"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:layout_margin="10dip"
-            android:text="@string/desense_mempll_200to266" />
-
-        <Button
-            android:id="@+id/desense_mempll_btn_convert200"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:layout_margin="10dip"
-            android:text="@string/desense_mempll_266to200" />
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/desense_pll_detail_activity.xml b/EngineerMode/res/layout/desense_pll_detail_activity.xml
deleted file mode 100644
index 64c4688..0000000
--- a/EngineerMode/res/layout/desense_pll_detail_activity.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:gravity="center_horizontal"
-    android:orientation="vertical" >
-
-    <TextView
-        android:id="@+id/desense_pll_detail_title_textview"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_margin="30dip"
-        android:textAppearance="?android:attr/textAppearanceLarge" >
-    </TextView>
-
-    <EditText
-        android:id="@+id/desense_pll_detail_edit"
-        android:layout_width="220dip"
-        android:layout_height="wrap_content"
-        android:singleLine="true" >
-    </EditText>
-
-    <Button
-        android:id="@+id/desense_pll_detail_set_btn"
-        android:layout_width="100dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/desense_text_set"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/desense_plls_activity.xml b/EngineerMode/res/layout/desense_plls_activity.xml
deleted file mode 100644
index 57f75f6..0000000
--- a/EngineerMode/res/layout/desense_plls_activity.xml
+++ /dev/null
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <ListView
-        android:id="@+id/pll_menu_listview"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:clickable="true"
-        android:drawSelectorOnTop="false"
-        android:focusableInTouchMode="true" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/desense_sdlog_activity.xml b/EngineerMode/res/layout/desense_sdlog_activity.xml
deleted file mode 100644
index 978a24d..0000000
--- a/EngineerMode/res/layout/desense_sdlog_activity.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:gravity="center_horizontal"
-    android:orientation="vertical" >
-   
-    <ListView android:id="@+id/sdtest_choose_storage"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"/>
-    <ToggleButton
-        android:id="@+id/desense_sdlog_toggle_btn"
-        android:layout_width="150dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20dip"
-        android:textAppearance="?android:attr/textAppearanceMedium"
-        android:textOff="@string/desense_sdlog_toggle_end"
-        android:textOn="@string/desense_sdlog_toggle_start" >
-    </ToggleButton>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/device_register.xml b/EngineerMode/res/layout/device_register.xml
deleted file mode 100644
index 69115f1..0000000
--- a/EngineerMode/res/layout/device_register.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen
-  xmlns:android="http://schemas.android.com/apk/res/android"
-        android:title="@string/device_register_title">
-    <ListPreference
-        android:entries="@array/device_register_entries"
-        android:entryValues="@array/device_register_values"
-        android:key="ct_sms_register_switch"
-        android:persistent="true"
-        android:summary="Disabled"
-        android:title="@string/device_ct_sms_auto_reg" />
-  
-</PreferenceScreen>
diff --git a/EngineerMode/res/layout/devicemgr.xml b/EngineerMode/res/layout/devicemgr.xml
deleted file mode 100644
index f8dd510..0000000
--- a/EngineerMode/res/layout/devicemgr.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
-    android:title="@string/device_mgr" >
-
-    <ListPreference
-        android:entries="@array/device_mgr_entries"
-        android:entryValues="@array/device_mgr_values"
-        android:key="sms_auto_reg"
-        android:persistent="true"
-        android:summary="Disabled"
-        android:title="@string/device_mgr_sms_auto_reg" />
-
-    <ListPreference
-        android:entries="@array/device_mgr_dm_conf_switch_entries"
-        android:entryValues="@array/device_mgr_dm_conf_switch_values"
-        android:key="dm_conf_switch"
-        android:persistent="true"
-        android:summary="Test Environment"
-        android:title="@string/device_mgr_dm_conf_switch" />
-    
-</PreferenceScreen>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/dualtalk_networkinfo.xml b/EngineerMode/res/layout/dualtalk_networkinfo.xml
deleted file mode 100644
index 2fb8c23..0000000
--- a/EngineerMode/res/layout/dualtalk_networkinfo.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_dualtalk_networkinfo"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ehrpd_bg_data.xml b/EngineerMode/res/layout/ehrpd_bg_data.xml
deleted file mode 100644
index 0fe07bb..0000000
--- a/EngineerMode/res/layout/ehrpd_bg_data.xml
+++ /dev/null
@@ -1,15 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content" >
-
-    <CheckBox
-        android:id="@+id/ehrpd_bg_data_botton"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="15dip"
-        android:text="@string/disable_ehrpd_bg_data"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </CheckBox>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/eint.xml b/EngineerMode/res/layout/eint.xml
deleted file mode 100644
index f9539ce..0000000
--- a/EngineerMode/res/layout/eint.xml
+++ /dev/null
@@ -1,96 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/EINT_edit_Text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/EINT_edit_Text" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/EINT_edit"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:numeric="integer"
-                android:singleLine="true"
-                android:text="@string/EINT_edit" >
-            </EditText>
-
-            <Button
-                android:id="@+id/EINT_query"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/EINT_query" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/EINT_sensitivity_Text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/EINT_sensitivity_Text" />
-
-            <TextView
-                android:id="@+id/EINT_sensitivity"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="30dip"
-                android:layout_marginTop="10dip" />
-        </LinearLayout>
-.  
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/EINT_polarity_Text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/EINT_polarity_Text" />
-
-            <TextView
-                android:id="@+id/EINT_polarity"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="30dip"
-                android:layout_marginTop="10dip" />
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/em_simple_list_item_layout.xml b/EngineerMode/res/layout/em_simple_list_item_layout.xml
deleted file mode 100644
index 84951b0..0000000
--- a/EngineerMode/res/layout/em_simple_list_item_layout.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" 
-    android:layout_marginLeft="10dip"
-    android:layout_marginRight="10dip">
-
-        <TextView android:id="@+id/em_list_item_title"
-             android:layout_width="fill_parent"
-             android:layout_height="wrap_content"
-             android:textColor="@android:color/white"
-             android:layout_marginLeft="20dip"
-             android:textSize="18dip"/>
-         <TextView android:id="@+id/em_list_item_descr"
-             android:layout_width="fill_parent"
-             android:layout_marginLeft="20dip"
-             android:layout_height="wrap_content"/>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/em_single_input_layout.xml b/EngineerMode/res/layout/em_single_input_layout.xml
deleted file mode 100644
index 0fd59ef..0000000
--- a/EngineerMode/res/layout/em_single_input_layout.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" 
-    android:orientation="vertical">
-
-        <EditText android:id="@+id/em_single_input_edit"
-            android:layout_height="wrap_content"
-            android:layout_width="match_parent"
-            android:layout_marginLeft="40dip"
-            android:layout_marginRight="40dip"
-            android:layout_marginTop="15dip"
-            android:layout_marginBottom="5dip"
-            android:layout_gravity="center"/>
-            
-        <View 
-            android:layout_width="match_parent"
-            android:layout_height="0.5dp"
-            android:background="@android:color/darker_gray"/>
-            
-        <Button android:id="@+id/em_single_input_ok_btn"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@android:string/ok"
-            android:background="@drawable/dialog_btn_selector"/>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/esn_track.xml b/EngineerMode/res/layout/esn_track.xml
deleted file mode 100644
index d5d3ab4..0000000
--- a/EngineerMode/res/layout/esn_track.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
-    android:title="@string/esn_track_title" >
-
-    <ListPreference
-        android:entries="@array/esn_track_entries"
-        android:entryValues="@array/esn_track_values"
-        android:key="esn_track_switch"
-        android:persistent="true"
-        android:summary="Disabled"
-        android:title="@string/esn_track_pref_title" />
-
-    <EditTextPreference
-        android:dialogTitle="Send SMS to"
-        android:inputType="phone"
-        android:key="EsnServerAdderess"
-        android:singleLine="true"
-        android:maxLength="20"
-        android:summary="Enter address"
-        android:title="Address" />
-
-</PreferenceScreen>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/fastdormancy.xml b/EngineerMode/res/layout/fastdormancy.xml
deleted file mode 100644
index 801db4f..0000000
--- a/EngineerMode/res/layout/fastdormancy.xml
+++ /dev/null
@@ -1,258 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent" android:layout_height="fill_parent"
-        android:orientation="vertical">
-
-        <!--Line Begin-->
-        <LinearLayout android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:layout_marginLeft="10dip"
-            android:layout_marginRight="10dip"
-            android:orientation="vertical">
-
-            <TextView android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:gravity="center"
-                android:text="@string/fd_text_screen_on"
-                android:textStyle="bold">
-            </TextView>
-
-            <View android:id="@+id/SpacerTop"
-            android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:layout_marginTop="5dip"
-                android:background="#0000FF">
-            </View>
-        </LinearLayout>
-        <!--Line End-->
-
-        <!--Screen On Begin-->
-        <LinearLayout android:id="@+id/fd_screen_on_r8fd_layout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:gravity="center">
-            <TextView android:layout_width="100dip"
-            android:layout_height="wrap_content"
-                android:id="@+id/fd_text_screen_on_r8fd"
-                android:text="@string/fd_text_r8">
-            </TextView>
-            <EditText android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:id="@+id/fd_edit_screen_on_r8fd"
-                android:digits="0123456789">
-            </EditText>
-            <TextView android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="1dip"
-                android:text="@string/fd_text_unit">
-            </TextView>
-        </LinearLayout>
-
-        <LinearLayout android:id="@+id/fd_screen_on_legacy_layout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:gravity="center">
-            <TextView android:layout_width="100dip"
-            android:layout_height="wrap_content"
-                android:id="@+id/fd_text_screen_on_legacy"
-                android:text="@string/fd_text_legacy">
-            </TextView>
-            <EditText android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:id="@+id/fd_edit_screen_on_legacy"
-                android:digits="0123456789">
-            </EditText>
-            <TextView android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="1dip"
-                android:text="@string/fd_text_unit">
-            </TextView>
-        </LinearLayout>
-        <!--AP Solution Begin-->
-        <LinearLayout android:id="@+id/fd_ap_sol_on_layout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:gravity="center"
-            android:visibility="gone">
-            <EditText android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:id="@+id/fd_edit_screen_on_ap"
-                android:digits="0123456789">
-            </EditText>
-            <TextView android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="1dip"
-                android:text="@string/fd_text_unit_ap">
-            </TextView>
-        </LinearLayout>
-        <!--AP Solution End-->
-        <!--Screen On End-->
-
-
-        <!--Line Begin-->
-        <LinearLayout android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:layout_marginLeft="10dip"
-            android:layout_marginRight="10dip"
-            android:orientation="vertical">
-
-            <TextView android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:gravity="center"
-                android:text="@string/fd_text_screen_off"
-                android:textStyle="bold">
-            </TextView>
-
-            <View android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:layout_marginTop="5dip"
-                android:background="#0000FF">
-            </View>
-        </LinearLayout>
-        <!--Line End-->
-
-        <!--Screen Off Begin-->
-        <LinearLayout android:id="@+id/fd_screen_off_r8fd_layout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:gravity="center">
-            <TextView android:layout_width="100dip"
-            android:layout_height="wrap_content"
-                android:id="@+id/fd_text_screen_off_r8fd"
-                android:text="@string/fd_text_r8">
-            </TextView>
-            <EditText android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:id="@+id/fd_edit_screen_off_r8fd"
-                android:digits="0123456789.">
-            </EditText>
-            <TextView android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="1dip"
-                android:text="@string/fd_text_unit">
-            </TextView>
-        </LinearLayout>
-
-        <LinearLayout android:id="@+id/fd_screen_off_legacy_layout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:gravity="center">
-            <TextView android:layout_width="100dip"
-            android:layout_height="wrap_content"
-                android:id="@+id/fd_text_screen_off_legacy"
-                android:text="@string/fd_text_legacy">
-            </TextView>
-            <EditText android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:id="@+id/fd_edit_screen_off_legacy"
-                android:digits="0123456789.">
-            </EditText>
-            <TextView android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="1dip"
-                android:text="@string/fd_text_unit">
-            </TextView>
-        </LinearLayout>
-        <!--AP Solution Begin-->
-        <LinearLayout android:id="@+id/fd_ap_sol_off_layout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:gravity="center"
-            android:visibility="gone">
-            <EditText android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:id="@+id/fd_edit_screen_off_ap"
-                android:digits="0123456789.">
-            </EditText>
-            <TextView android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="1dip"
-                android:text="@string/fd_text_unit_ap">
-            </TextView>
-        </LinearLayout>
-        <!--AP Solution End-->
-        <!--Screen Off End-->
-
-        <!--Set Button begin-->
-        <LinearLayout android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:layout_marginLeft="10dip"
-            android:layout_marginRight="10dip"
-            android:orientation="horizontal">
-            <Button android:id="@+id/fd_btn_set"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:text="@string/fd_text_set">
-            </Button>
-        </LinearLayout>
-        <!--Set Button end-->
-
-        <!--Line Begin-->
-        <LinearLayout android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:layout_marginLeft="10dip"
-            android:layout_marginRight="10dip"
-            android:orientation="vertical">
-
-            <TextView android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:gravity="center"
-                android:text="@string/fd_text_config"
-                android:textStyle="bold">
-            </TextView>
-
-            <View android:id="@+id/SpacerTop"
-            android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:layout_marginTop="5dip"
-                android:background="#0000FF">
-            </View>
-        </LinearLayout>
-        <!--Line End-->
-
-        <LinearLayout android:id="@+id/LinearLayout"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:layout_marginLeft="10dip"
-            android:layout_marginRight="10dip"
-            android:orientation="horizontal"
-            android:gravity="center">
-            <Button android:id="@+id/fd_btn_send"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-                android:text="@string/fd_text_send">
-            </Button>
-            <Button android:id="@+id/fd_btn_config"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-                android:text="@string/fd_text_config_fd">
-            </Button>
-        </LinearLayout>
-
-    </LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/fastdormancy_config.xml b/EngineerMode/res/layout/fastdormancy_config.xml
deleted file mode 100644
index 81543a5..0000000
--- a/EngineerMode/res/layout/fastdormancy_config.xml
+++ /dev/null
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent" android:layout_height="fill_parent"
-    android:orientation="vertical">
-
-    <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="fill_parent" android:layout_marginLeft="10dip"
-        android:orientation="vertical">
-
-        <TextView android:layout_width="wrap_content"
-            android:layout_height="wrap_content" android:layout_margin="10dip"
-            android:gravity="center" android:text="@string/fd_textView"
-            android:textAppearance="?android:attr/textAppearanceLarge">
-        </TextView>
-
-        <RadioGroup android:id="@+id/fd_radio_group"
-            android:layout_width="wrap_content" android:layout_height="wrap_content"
-            android:gravity="left" android:orientation="vertical">
-
-            <RadioButton android:id="@+id/fd_on_radio"
-                android:layout_width="wrap_content" android:layout_height="wrap_content"
-                android:text="@string/fd_turn_on">
-                <!-- android:layout_marginLeft="10dip" -->
-            </RadioButton>
-
-            <RadioButton android:id="@+id/fd_off_radio"
-                android:layout_width="wrap_content" android:layout_height="wrap_content"
-                android:text="@string/fd_turn_off">
-            </RadioButton>
-
-            <RadioButton android:id="@+id/fd_legacy_off_radio"
-                android:layout_width="wrap_content" android:layout_height="wrap_content"
-                android:text="@string/fd_turn_off_legacy">
-            </RadioButton>
-        </RadioGroup>
-
-        <Button android:id="@+id/fd_set_button" android:layout_width="60dip"
-            android:layout_height="wrap_content" android:layout_marginLeft="200dip"
-            android:gravity="center" android:text="@string/fd_ok">
-            <!-- android:gravity="right" -->
-        </Button>
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/file_name_list.xml b/EngineerMode/res/layout/file_name_list.xml
deleted file mode 100644
index a990047..0000000
--- a/EngineerMode/res/layout/file_name_list.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ListView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/file_list"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" />
diff --git a/EngineerMode/res/layout/gpio.xml b/EngineerMode/res/layout/gpio.xml
deleted file mode 100644
index 6cdb205..0000000
--- a/EngineerMode/res/layout/gpio.xml
+++ /dev/null
@@ -1,116 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/GPIO_Setno_Text"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/GPIO_Setno_Text" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/GPIO_Edit_Value"
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:numeric="integer"
-                android:singleLine="true"
-                android:text="@string/GPIO_Edit_Value" >
-            </EditText>
-
-            <TextView
-                android:id="@+id/GPIO_Setnomax_Text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/GPIO_Setnomax_Text" >
-            </TextView>
-        </LinearLayout>
-
-        <TextView
-            android:id="@+id/GPIO_Direction_Text"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/GPIO_Direction_Text" >
-        </TextView>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/GPIO_Direction_In"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/GPIO_Direction_In" />
-
-            <Button
-                android:id="@+id/GPIO_Direction_Out"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="30dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/GPIO_Direction_Out" />
-        </LinearLayout>
-.  
-
-        <TextView
-            android:id="@+id/GPIO_Data_Text"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/GPIO_Data_Text" >
-        </TextView>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/GPIO_Data_High"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/GPIO_Data_High" />
-
-            <Button
-                android:id="@+id/GPIO_Data_Low"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="30dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/GPIO_Data_Low" />
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/gprs.xml b/EngineerMode/res/layout/gprs.xml
deleted file mode 100644
index fc11b30..0000000
--- a/EngineerMode/res/layout/gprs.xml
+++ /dev/null
@@ -1,306 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/Sim1"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:text="@string/SIM1" >
-            </Button>
-
-            <Button
-                android:id="@+id/Sim2"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:text="@string/SIM2" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical" >
-
-            <EditText
-                android:id="@+id/IMEI_VALUE"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:maxLength="15"
-                android:numeric="decimal" >
-            </EditText>
-
-            <Button
-                android:id="@+id/IMEI"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:text="@string/IMEI" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical" >
-
-            <TextView
-                android:id="@+id/DefSIMText"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:text="@string/DefSIMText"
-                android:visibility="gone" />
-
-            <RadioGroup
-                android:id="@+id/DefSIM"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_x="20px"
-                android:layout_y="40px"
-                android:orientation="horizontal"
-                android:visibility="gone" >
-
-                <RadioButton
-                    android:id="@+id/SIM1Enabled"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/default_sim1"
-                    android:visibility="gone" >
-                </RadioButton>
-
-                <RadioButton
-                    android:id="@+id/SIM2Enabled"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/default_sim2"
-                    android:visibility="gone" >
-                </RadioButton>
-            </RadioGroup>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/Attached"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:text="@string/GPRS_Attached" >
-            </Button>
-
-            <Button
-                android:id="@+id/Detached"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:text="@string/GPRS_Detached" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <RadioGroup
-                android:id="@+id/GprsAttachType"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_x="20px"
-                android:layout_y="40px"
-                android:orientation="vertical" >
-
-                <RadioButton
-                    android:id="@+id/GprsAlwaysAttach"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/GPRS_ALWAYS_ATTACH" >
-                </RadioButton>
-
-                <RadioButton
-                    android:id="@+id/GprsWhenNeeded"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/GPRS_WHEN_NEEDED" >
-                </RadioButton>
-            </RadioGroup>
-        </LinearLayout>
-       <LinearLayout android:layout_height="wrap_content" android:layout_width="fill_parent" android:orientation="horizontal">		
-           <Button android:layout_weight="1" android:layout_height="wrap_content" android:id="@+id/always_mode_continue" android:text="@string/GPRS_ALWAYS_ATTACH_CONTINUE" android:layout_width="wrap_content"></Button>
-      	   <Button android:layout_weight="1" android:layout_height="wrap_content" android:id="@+id/when_needed_continue" android:text="@string/GPRS_WHEN_NEEDED_CONTINUE" android:layout_width="wrap_content"></Button>
-           <Button android:layout_weight="1" android:layout_height="wrap_content" android:id="@+id/not_specify" android:text="@string/GPRS_CANCEL_SPECIFY" android:layout_width="wrap_content"></Button>
-       </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <RadioGroup
-                android:id="@+id/PDPSelect"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <RadioButton
-                    android:id="@+id/FirstPDP"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/GPRS_1st_PDP" >
-                </RadioButton>
-
-                <RadioButton
-                    android:id="@+id/SecondPDP"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/GPRS_2nd_PDP" >
-                </RadioButton>
-            </RadioGroup>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-
-            <View
-                android:id="@+id/SpacerTop"
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:layout_marginBottom="6dip"
-                android:layout_marginTop="6dip"
-                android:background="#00FF00" >
-            </View>
-        </LinearLayout>
-
-        <TableLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-
-            <LinearLayout
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-
-                <RadioGroup
-                    android:id="@+id/UsageSelect"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:orientation="horizontal" >
-
-                    <RadioButton
-                        android:id="@+id/Primary"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="1"
-                        android:text="@string/GPRS_As_Primary" >
-                    </RadioButton>
-
-                    <RadioButton
-                        android:id="@+id/Secondary"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="1"
-                        android:text="@string/GPRS_As_Secondary" >
-                    </RadioButton>
-                </RadioGroup>
-            </LinearLayout>
-
-            <LinearLayout
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-
-                <Spinner
-                    android:id="@+id/ContextNumber"
-                    android:layout_width="240dip"
-                    android:layout_height="wrap_content" >
-                </Spinner>
-            </LinearLayout>
-
-            <LinearLayout
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <Button
-                    android:id="@+id/Activate"
-                    android:layout_width="160dip"
-                    android:layout_height="wrap_content"
-                    android:text="@string/GPRS_Activate_PDP" >
-                </Button>
-
-                <Button
-                    android:id="@+id/Deactivate"
-                    android:layout_width="160dip"
-                    android:layout_height="wrap_content"
-                    android:text="@string/GPRS_Deactivate_PDP" >
-                </Button>
-            </LinearLayout>
-
-            <LinearLayout
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-
-                <EditText
-                    android:id="@+id/DataLength"
-                    android:layout_width="120dip"
-                    android:layout_height="wrap_content"
-                    android:numeric="integer"
-                    android:text="@string/GPRS_1000" >
-                </EditText>
-
-                <Button
-                    android:id="@+id/SendData"
-                    android:layout_width="120dip"
-                    android:layout_height="wrap_content"
-                    android:text="@string/GPRS_Send_Data" >
-                </Button>
-            </LinearLayout>
-        </TableLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/pdn_reuse_on"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:text="@string/GPRS_pdn_reuse_on" >
-            </Button>
-
-            <Button
-                android:id="@+id/pdn_reuse_off"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:text="@string/GPRS_pdn_reuse_off" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout android:layout_height="wrap_content" android:layout_width="fill_parent">
-            <View android:layout_width="fill_parent" android:id="@+id/SpacerTop" android:layout_height="1dip" android:layout_marginBottom="6dip" android:layout_marginTop="6dip" android:background="#00FF00" />
-        </LinearLayout>
-
-        <LinearLayout android:layout_height="wrap_content"
-            android:layout_width="fill_parent"
-            android:paddingTop="20dp"
-            android:paddingBottom="20dp" >
-            <TextView android:id="@+id/attachApn"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" />
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/help_page.xml b/EngineerMode/res/layout/help_page.xml
deleted file mode 100644
index 8cca24d..0000000
--- a/EngineerMode/res/layout/help_page.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" android:orientation="vertical">
-    <TextView
-        android:id="@+id/textview_title"
-        android:textSize="22dp"
-        android:textColor="@color/help_title"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" 
-        android:layout_marginLeft="6pt"
-        android:layout_marginRight="6pt"
-        android:layout_marginTop="3pt">
-    </TextView>
-    <TextView
-        android:id="@+id/textview_help"
-        android:textSize="18dp"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:layout_marginLeft="6pt"
-        android:layout_marginRight="6pt"
-        android:layout_marginTop="7pt">
-    </TextView>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_cpustress.xml b/EngineerMode/res/layout/hqa_cpustress.xml
deleted file mode 100644
index d8afeac..0000000
--- a/EngineerMode/res/layout/hqa_cpustress.xml
+++ /dev/null
@@ -1,84 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:scrollbars="vertical" >
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <ListView
-        android:id="@+id/listview_hqa_cpu_main"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-    <RadioGroup
-        android:id="@+id/hqa_cpu_main_radiogroup"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="20dip"
-        android:orientation="vertical" >
-
-        <RadioButton
-            android:id="@+id/hqa_cpu_main_raidobutton_default"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:checked="true"
-            android:text="@string/hqa_cpustress_radiobutton_default" />
-
-        <RadioButton
-            android:id="@+id/hqa_cpu_main_raidobutton_test"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_cpustress_radiobutton_test" />
-
-        <RadioButton
-            android:id="@+id/hqa_cpu_main_raidobutton_single"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_cpustress_radiobutton_single" />
-
-        <RadioButton
-            android:id="@+id/hqa_cpu_main_raidobutton_dual"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_cpustress_radiobutton_dual" />
-
-        <RadioButton
-            android:id="@+id/hqa_cpu_main_raidobutton_triple"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_cpustress_radiobutton_triple" />
-
-        <RadioButton
-            android:id="@+id/hqa_cpu_main_raidobutton_quad"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_cpustress_radiobutton_quad" />
-
-        <RadioButton
-            android:id="@+id/hqa_cpu_main_raidobutton_octa"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_cpustress_radiobutton_octa" />
-        
-        <RadioButton
-            android:id="@+id/hqa_cpu_main_raidobutton_custom"
-            android:visibility="gone"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_cpustress_radiobutton_custom_mode" />
-
-    </RadioGroup>
-
-    <CheckBox
-        android:id="@+id/hqa_cpu_main_checkbox"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="20dip"
-        android:text="@string/hqa_cpustress_checkbox_thermal" />
-
-</LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_cpustress_apmcu.xml b/EngineerMode/res/layout/hqa_cpustress_apmcu.xml
deleted file mode 100644
index 997566a..0000000
--- a/EngineerMode/res/layout/hqa_cpustress_apmcu.xml
+++ /dev/null
@@ -1,1153 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:layout_width="0dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_weight="1"
-            android:text="@string/hqa_cpustress_apmcu_loopcount"
-            android:textSize="18sp" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/apmcu_loopcount"
-            android:layout_width="0dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:layout_weight="1"
-            android:inputType="number"
-            android:maxLength="8"
-            android:minWidth="150dip"
-            android:text="@string/hqa_cpustress_apmcu_loopcount_value" >
-        </EditText>
-    </LinearLayout>
-
-    <ScrollView
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent" >
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical"
-            android:paddingLeft="20dip"
-            android:paddingRight="20dip" >
-
-            <!-- neon/vfp -->
-            <LinearLayout android:id="@+id/apmcu_neon_vfp_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-	            <CheckBox
-	                android:id="@+id/apmcu_neon_test"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_neon" >
-	            </CheckBox>
-
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-
-	                <TextView
-	                    android:id="@+id/apmcu_neon_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-
-	                <TextView
-	                    android:id="@+id/apmcu_neon_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-
-	                <TextView
-	                    android:id="@+id/apmcu_neon_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-
-	                <TextView
-	                    android:id="@+id/apmcu_neon_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-
-	            <LinearLayout
-	                android:id="@+id/apmcu_neon_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-
-	                <TextView
-	                    android:id="@+id/apmcu_neon_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-
-	                <TextView
-	                    android:id="@+id/apmcu_neon_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-
-	                <TextView
-	                    android:id="@+id/apmcu_neon_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-
-	                <TextView
-	                    android:id="@+id/apmcu_neon_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-
-            <!-- max_power -->
-            <LinearLayout android:id="@+id/apmcu_max_power_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-	            <CheckBox
-	                android:id="@+id/apmcu_ca9_test"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_ca9" >
-	            </CheckBox>
-	
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_ca9_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_ca9_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_ca9_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_ca9_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-	
-	            <LinearLayout
-	                android:id="@+id/apmcu_ca9_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_ca9_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_ca9_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_ca9_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_ca9_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-
-            <!-- dhrystone -->
-            <LinearLayout android:id="@+id/apmcu_dhrystone_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-	            <CheckBox
-	                android:id="@+id/apmcu_dhrystone_test"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_dhrystone" >
-	            </CheckBox>
-	
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-	
-	            <LinearLayout
-	                android:id="@+id/apmcu_dhrystone_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-            
-            <!-- memcpy -->
-            <LinearLayout android:id="@+id/apmcu_memcpy_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-            <CheckBox
-                android:id="@+id/apmcu_memcpy_test"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_cpustress_apmcu_memcpy" >
-            </CheckBox>
-
-            <LinearLayout
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:id="@+id/apmcu_memcpy_result_0"
-                    android:layout_width="0dip"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/hqa_cpustress_result" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/apmcu_memcpy_result_1"
-                    android:layout_width="0dip"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/hqa_cpustress_result" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/apmcu_memcpy_result_2"
-                    android:layout_width="0dip"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/hqa_cpustress_result" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/apmcu_memcpy_result_3"
-                    android:layout_width="0dip"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/hqa_cpustress_result" >
-                </TextView>
-            </LinearLayout>
-
-            <LinearLayout
-                android:id="@+id/apmcu_memcpy_result_octa"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:id="@+id/apmcu_memcpy_result_4"
-                    android:layout_width="0dip"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/hqa_cpustress_result" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/apmcu_memcpy_result_5"
-                    android:layout_width="0dip"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/hqa_cpustress_result" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/apmcu_memcpy_result_6"
-                    android:layout_width="0dip"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/hqa_cpustress_result" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/apmcu_memcpy_result_7"
-                    android:layout_width="0dip"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:text="@string/hqa_cpustress_result" >
-                </TextView>
-            </LinearLayout>
-            </LinearLayout>
-
-            <!-- fdct -->
-            <LinearLayout android:id="@+id/apmcu_fdct_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-	            <CheckBox
-	                android:id="@+id/apmcu_fdct_test"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_fdct" >
-	            </CheckBox>
-	
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_fdct_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_fdct_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_fdct_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_fdct_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-	
-	            <LinearLayout
-	                android:id="@+id/apmcu_fdct_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_fdct_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_fdct_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_fdct_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_fdct_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-
-            <!-- imdct -->
-            <LinearLayout android:id="@+id/apmcu_imdct_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-	            <CheckBox
-	                android:id="@+id/apmcu_imdct_test"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_imdct" >
-	            </CheckBox>
-	
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_imdct_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_imdct_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_imdct_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_imdct_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-	
-	            <LinearLayout
-	                android:id="@+id/apmcu_imdct_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_imdct_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_imdct_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_imdct_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_imdct_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-            
-            <!-- max power 64bit -->
-            <LinearLayout android:id="@+id/apmcu_max_power_64_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-                <CheckBox
-	                android:id="@+id/apmcu_max_power_64_test_cb"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_max_power_64" >
-	            </CheckBox>
-
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_max_power_64_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_max_power_64_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_max_power_64_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_max_power_64_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-	
-	            <LinearLayout
-	                android:id="@+id/apmcu_max_power_64_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_max_power_64_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_max_power_64_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_max_power_64_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_max_power_64_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-            <!-- dhrystone 64bit -->
-            <LinearLayout android:id="@+id/apmcu_dhrystone_64_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-                <CheckBox
-	                android:id="@+id/apmcu_dhrystone_64_test_cb"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_dhrystone_64" >
-	            </CheckBox>
-
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_64_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_64_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_64_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_64_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-	
-	            <LinearLayout
-	                android:id="@+id/apmcu_dhrystone_64_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_64_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_64_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_64_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_dhrystone_64_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-            
-            <!-- saxpy -->
-            <LinearLayout android:id="@+id/apmcu_saxpy_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-                <CheckBox
-	                android:id="@+id/apmcu_saxpy_test_cb"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_saxpy" >
-	            </CheckBox>
-
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-	
-	            <LinearLayout
-	                android:id="@+id/apmcu_saxpy_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-            
-            <!-- saxpy_64 -->
-            <LinearLayout android:id="@+id/apmcu_saxpy_64_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-                <CheckBox
-	                android:id="@+id/apmcu_saxpy_64_test_cb"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_saxpy_64" >
-	            </CheckBox>
-
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_64_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_64_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_64_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_64_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-	
-	            <LinearLayout
-	                android:id="@+id/apmcu_saxpy_64_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_64_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_64_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_64_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_saxpy_64_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-            
-            <!-- adv_sim -->
-            <LinearLayout android:id="@+id/apmcu_adv_sim_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-                <CheckBox
-	                android:id="@+id/apmcu_adv_sim_test_cb"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_adv_sim" >
-	            </CheckBox>
-
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_adv_sim_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_adv_sim_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_adv_sim_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_adv_sim_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-	
-	            <LinearLayout
-	                android:id="@+id/apmcu_adv_sim_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_adv_sim_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_adv_sim_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_adv_sim_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_adv_sim_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-            
-            <!-- idle_to_max -->
-            <LinearLayout android:id="@+id/apmcu_idle_to_max_ll"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical">
-                <CheckBox
-	                android:id="@+id/apmcu_idle_to_max_test_cb"
-	                android:layout_width="wrap_content"
-	                android:layout_height="wrap_content"
-	                android:text="@string/hqa_cpustress_apmcu_idle_to_max" >
-	            </CheckBox>
-
-	            <LinearLayout
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_idle_to_max_result_0"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_idle_to_max_result_1"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_idle_to_max_result_2"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_idle_to_max_result_3"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-	
-	            <LinearLayout
-	                android:id="@+id/apmcu_idle_to_max_result_octa"
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="horizontal" >
-	
-	                <TextView
-	                    android:id="@+id/apmcu_idle_to_max_result_4"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_idle_to_max_result_5"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_idle_to_max_result_6"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	
-	                <TextView
-	                    android:id="@+id/apmcu_idle_to_max_result_7"
-	                    android:layout_width="0dip"
-	                    android:layout_height="wrap_content"
-	                    android:layout_weight="1"
-	                    android:text="@string/hqa_cpustress_result" >
-	                </TextView>
-	            </LinearLayout>
-            </LinearLayout>
-
-            <LinearLayout
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-                <Button
-                    android:id="@+id/apmcu_btn"
-                    android:layout_width="0dip"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:minWidth="140dip"
-                    android:text="@string/hqa_cpustress_apmcu_start" >
-                </Button>
-            </LinearLayout>
-
-            <LinearLayout
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-                <TextView
-                    android:id="@+id/apmcu_result"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content" >
-                </TextView>
-            </LinearLayout>
-
-        </LinearLayout>
-    </ScrollView>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_cpustress_check_opts.xml b/EngineerMode/res/layout/hqa_cpustress_check_opts.xml
deleted file mode 100644
index 2f8d05b..0000000
--- a/EngineerMode/res/layout/hqa_cpustress_check_opts.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:layout_margin="20dip"
-    android:orientation="vertical" >
-
-        <CheckBox android:id="@+id/hqa_cpu_main_force_core1_cb"
-            android:layout_height="wrap_content"
-            android:layout_width="fill_parent"/>
-        <CheckBox android:id="@+id/hqa_cpu_main_force_core2_cb"
-            android:layout_height="wrap_content"
-            android:layout_width="fill_parent"/>
-        <CheckBox android:id="@+id/hqa_cpu_main_force_core3_cb"
-            android:layout_height="wrap_content"
-            android:layout_width="fill_parent"/>
-        <CheckBox android:id="@+id/hqa_cpu_main_force_core4_cb"
-            android:layout_height="wrap_content"
-            android:layout_width="fill_parent"/>
-        <CheckBox android:id="@+id/hqa_cpu_main_force_core5_cb"
-            android:layout_height="wrap_content"
-            android:layout_width="fill_parent"/>
-        <CheckBox android:id="@+id/hqa_cpu_main_force_core6_cb"
-            android:layout_height="wrap_content"
-            android:layout_width="fill_parent"/>
-        <CheckBox android:id="@+id/hqa_cpu_main_force_core7_cb"
-            android:layout_height="wrap_content"
-            android:layout_width="fill_parent"/>
-        <CheckBox android:id="@+id/hqa_cpu_main_force_core8_cb"
-            android:layout_height="wrap_content"
-            android:layout_width="fill_parent"/>
-        
-</LinearLayout>
diff --git a/EngineerMode/res/layout/hqa_cpustress_clockswitch.xml b/EngineerMode/res/layout/hqa_cpustress_clockswitch.xml
deleted file mode 100644
index 0ee48fc..0000000
--- a/EngineerMode/res/layout/hqa_cpustress_clockswitch.xml
+++ /dev/null
@@ -1,164 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:padding="20dip" >
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/clockswitch_debug_view"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center"
-                android:text="@string/hqa_cpustress_clockswitch_enabledebug"
-                android:textSize="18sp" >
-            </TextView>
-
-            <CheckBox
-                android:id="@+id/clockswitch_debug_enable"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip" >
-            </CheckBox>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="20dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center"
-                android:layout_weight="2"
-                android:text="@string/hqa_cpustress_clockswitch_settimeout"
-                android:textSize="18sp" >
-            </TextView>
-
-            <LinearLayout
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_weight="3"
-                android:orientation="horizontal" >
-
-                <EditText
-                    android:id="@+id/clockswitch_timeout_s"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="4"
-                    android:minWidth="70dip"
-                    android:text="@string/hqa_cpustress_clockswitch_s_value" >
-                </EditText>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_cpustress_clockswitch_s"
-                    android:textSize="14sp" >
-                </TextView>
-
-                <EditText
-                    android:id="@+id/clockswitch_timeout_ns"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="8"
-                    android:maxWidth="70dip"
-                    android:minWidth="70dip"
-                    android:text="@string/hqa_cpustress_clockswitch_ns_value" >
-                </EditText>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_cpustress_clockswitch_ns"
-                    android:textSize="14sp" >
-                </TextView>
-            </LinearLayout>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="20dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/clockswitch_btn_start"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:minWidth="140dip"
-                android:text="@string/hqa_cpustress_clockswitch_start" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="30dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/clockswitch_btn_switch26"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginRight="10dip"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_clockswitch_switch26" >
-            </Button>
-
-            <Button
-                android:id="@+id/clockswitch_btn_switch1g"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_clockswitch_switch1g" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="30dip"
-            android:orientation="vertical" >
-
-            <TextView
-                android:id="@+id/clockswitch_tv_speed"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_cpustress_clockswitch_cpuspeed"
-                android:textSize="18sp" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/clockswitch_edt_speed"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:maxLength="16" >
-            </EditText>
-
-            <Button
-                android:id="@+id/clockswitch_btn_set"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center"
-                android:text="@string/hqa_cpustress_clockswitch_set" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_cpustress_custom_opts_v2.xml b/EngineerMode/res/layout/hqa_cpustress_custom_opts_v2.xml
deleted file mode 100644
index 04be3fa..0000000
--- a/EngineerMode/res/layout/hqa_cpustress_custom_opts_v2.xml
+++ /dev/null
@@ -1,102 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-    <LinearLayout android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="15dip"
-        android:layout_marginTop="5dip"
-        android:layout_marginBottom="5dip"
-        android:orientation="vertical" >
-    <TextView
-        android:layout_width="120dip"
-        android:layout_height="fill_parent"
-        android:text="@string/hqa_cpustress_force_core0_run"/>
-
-    <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView android:id="@+id/custom_opts_core1_tv"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"/>
-        <Spinner android:id="@+id/custom_opts_core1_spn"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"/>
-    </LinearLayout>
-    
-    <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView android:id="@+id/custom_opts_core2_tv"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"/>
-        <Spinner android:id="@+id/custom_opts_core2_spn"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"/>
-    </LinearLayout>
-    
-    <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView android:id="@+id/custom_opts_core3_tv"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"/>
-        <Spinner android:id="@+id/custom_opts_core3_spn"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"/>
-    </LinearLayout>
-    
-    <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView android:id="@+id/custom_opts_core4_tv"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"/>
-        <Spinner android:id="@+id/custom_opts_core4_spn"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"/>
-    </LinearLayout>
-    
-    <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView android:id="@+id/custom_opts_core5_tv"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"/>
-        <Spinner android:id="@+id/custom_opts_core5_spn"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"/>
-    </LinearLayout>
-    
-    <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView android:id="@+id/custom_opts_core6_tv"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"/>
-        <Spinner android:id="@+id/custom_opts_core6_spn"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"/>
-    </LinearLayout>
-    
-        <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-        <TextView android:id="@+id/custom_opts_core7_tv"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_vertical"/>
-        <Spinner android:id="@+id/custom_opts_core7_spn"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"/>
-    </LinearLayout>
-    
-    </LinearLayout>    
-</LinearLayout>
diff --git a/EngineerMode/res/layout/hqa_cpustress_dvfs.xml b/EngineerMode/res/layout/hqa_cpustress_dvfs.xml
deleted file mode 100644
index 9e0f71b..0000000
--- a/EngineerMode/res/layout/hqa_cpustress_dvfs.xml
+++ /dev/null
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:padding="20dip" >
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_dvfs_interval"
-                android:textSize="18sp" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/dvfs_interval"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:inputType="number"
-                android:maxLength="8"
-                android:minWidth="150dip"
-                android:text="@string/hqa_cpustress_dvfs_interval_value" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="20dip"
-            android:orientation="vertical" >
-            <CheckBox
-                    android:id="@+id/dvfs_op_0"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_cpustress_dvfs_op_0" >
-            </CheckBox>
-            <CheckBox
-                    android:id="@+id/dvfs_op_1"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_cpustress_dvfs_op_1" >
-            </CheckBox>
-            <CheckBox
-                    android:id="@+id/dvfs_op_2"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_cpustress_dvfs_op_2" >
-            </CheckBox>
-            <CheckBox
-                    android:id="@+id/dvfs_op_3"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_cpustress_dvfs_op_3" >
-            </CheckBox>
-            <CheckBox
-                    android:id="@+id/dvfs_op_4"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_cpustress_dvfs_op_4" >
-            </CheckBox>
-            <CheckBox
-                    android:id="@+id/dvfs_op_5"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_cpustress_dvfs_op_5" >
-            </CheckBox>
-            <CheckBox
-                    android:id="@+id/dvfs_op_6"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_cpustress_dvfs_op_6" >
-            </CheckBox>
-            <CheckBox
-                    android:id="@+id/dvfs_op_7"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_cpustress_dvfs_op_7" >
-            </CheckBox>
-        </LinearLayout>
-        <Button
-            android:id="@+id/dvfs_btn_start"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center"
-            android:text="@string/hqa_cpustress_dvfs_start" >
-        </Button>
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_dvfs_idx"
-                android:textSize="18sp" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/dvfs_result"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_weight="1"
-                android:minWidth="150dip">
-            </TextView>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_cpustress_swvideo.xml b/EngineerMode/res/layout/hqa_cpustress_swvideo.xml
deleted file mode 100644
index 01e7caa..0000000
--- a/EngineerMode/res/layout/hqa_cpustress_swvideo.xml
+++ /dev/null
@@ -1,180 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:padding="20dip" >
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_swvideo_loopcount"
-                android:textSize="18sp" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/swvideo_loopcount"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:inputType="number"
-                android:maxLength="8"
-                android:minWidth="150dip"
-                android:text="@string/hqa_cpustress_swvideo_loopcount_value" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="20dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_swvideo_iteration"
-                android:textSize="18sp"
-                android:visibility="gone" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/swvideo_iteration"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:inputType="number"
-                android:maxLength="8"
-                android:text="@string/hqa_cpustress_swvideo_iteration_value"
-                android:visibility="gone" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/swvideo_iteration_result"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_result" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/swvideo_iteration_result_1"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_result" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/swvideo_iteration_result_2"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_result" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/swvideo_iteration_result_3"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_result" >
-            </TextView>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/swvideo_iteration_result_4"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_result" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/swvideo_iteration_result_5"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_result" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/swvideo_iteration_result_6"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_result" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/swvideo_iteration_result_7"
-                android:layout_width="0dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_weight="1"
-                android:text="@string/hqa_cpustress_result" >
-            </TextView>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="20dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/swvideo_btn"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:minWidth="140dip"
-                android:text="@string/hqa_cpustress_swvideo_start" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/swvideo_result"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-            </TextView>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_nfc_card_emulation_mode.xml b/EngineerMode/res/layout/hqa_nfc_card_emulation_mode.xml
deleted file mode 100644
index b813845..0000000
--- a/EngineerMode/res/layout/hqa_nfc_card_emulation_mode.xml
+++ /dev/null
@@ -1,134 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <RadioGroup
-            android:id="@+id/hqa_cardmode_rg_swio"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/hqa_cardmode_rb_swio1"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_swio1" />
-
-            <RadioButton
-                android:id="@+id/hqa_cardmode_rb_swio2"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_swio2" />
-
-            <RadioButton
-                android:id="@+id/hqa_cardmode_rb_swio_se"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_swio_se" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp" >
-
-            <CheckBox
-                android:id="@+id/hqa_cardmode_cb_typea"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_typea" />
-
-            <CheckBox
-                android:id="@+id/hqa_cardmode_cb_typeb"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="165dp"
-                android:text="@string/hqa_nfc_typeb" />
-
-            <CheckBox
-                android:id="@+id/hqa_cardmode_cb_typef"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="40dp"
-                android:text="@string/hqa_nfc_typef" />
-                
-            <CheckBox
-                android:id="@+id/hqa_cardmode_cb_typeb2"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="40dp"
-                android:layout_marginLeft="165dp"
-                android:text="@string/hqa_nfc_typeb2" />
-        </RelativeLayout>
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dp" >
-
-            <Button
-                android:id="@+id/hqa_cardmode_btn_select_all"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_select_all"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_cardmode_btn_clear_all"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="105dp"
-                android:text="@string/hqa_nfc_clear_all"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_cardmode_btn_start_stop"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="210dp"
-                android:text="@string/hqa_nfc_start"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_cardmode_btn_return"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="50dp"
-                android:text="@string/hqa_nfc_return"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_cardmode_btn_run_back"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="105dp"
-                android:layout_marginTop="50dp"
-                android:text="@string/hqa_nfc_run_back"
-                android:width="205dp" />
-        </RelativeLayout>
-
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/hqa_nfc_function_read.xml b/EngineerMode/res/layout/hqa_nfc_function_read.xml
deleted file mode 100644
index 2a5d0eb..0000000
--- a/EngineerMode/res/layout/hqa_nfc_function_read.xml
+++ /dev/null
@@ -1,209 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="5dp"
-        android:layout_marginRight="5dp"
-        android:orientation="vertical" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_title_type" />
-
-        <RadioGroup
-            android:id="@+id/hqa_read_rg_tag_type"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_read_rb_type_uri"
-                android:enabled="false"
-                android:text="@string/hqa_nfc_type_uri" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/hqa_read_rb_type_text"
-                android:enabled="false"
-                android:text="@string/hqa_nfc_type_text" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/hqa_read_rb_type_smart"
-                android:enabled="false"
-                android:text="@string/hqa_nfc_type_smart" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/hqa_read_rb_type_others"
-                android:enabled="false"
-                android:text="@string/hqa_nfc_type_others" >
-            </RadioButton>
-        </RadioGroup>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_nfc_type_lang" />
-
-        <EditText
-            android:id="@+id/hqa_read_tv_lang"
-            android:layout_width="180dp"
-            android:layout_height="wrap_content"
-            android:enabled="false" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_title_ndef" />
-
-        <TableLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:scrollbars="vertical" >
-
-            <TableRow
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_nfc_record_flag" />
-
-                <EditText
-                    android:id="@+id/hqa_read_tv_flag"
-                    android:layout_width="210dp"
-                    android:layout_height="wrap_content"
-                    android:enabled="false" />
-            </TableRow>
-
-            <TableRow
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_nfc_record_id" />
-
-                <EditText
-                    android:id="@+id/hqa_read_tv_id"
-                    android:layout_width="210dp"
-                    android:layout_height="wrap_content"
-                    android:enabled="false" />
-            </TableRow>
-
-            <TableRow
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_nfc_record_inf" />
-
-                <EditText
-                    android:id="@+id/hqa_read_tv_inf"
-                    android:layout_width="210dp"
-                    android:layout_height="wrap_content"
-                    android:enabled="false" />
-            </TableRow>
-
-            <TableRow
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_nfc_payload_length" />
-
-                <EditText
-                    android:id="@+id/hqa_read_tv_length"
-                    android:layout_width="210dp"
-                    android:layout_height="wrap_content"
-                    android:enabled="false" />
-            </TableRow>
-        </TableLayout>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_payload" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_nfc_hex" />
-
-        <EditText
-            android:id="@+id/hqa_read_tv_hex"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_margin="5dip"
-            android:enabled="false" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_nfc_ascii" />
-
-        <EditText
-            android:id="@+id/hqa_read_tv_ascii"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_margin="5dip"
-            android:enabled="false" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" >
-        </View>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dp"
-            android:layout_marginRight="30dp"
-            android:layout_marginTop="10dp"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/hqa_read_btn_read"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="1"
-                android:text="@string/hqa_nfc_rw_read" />
-
-            <Button
-                android:id="@+id/hqa_read_btn_cancel"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="1"
-                android:text="@string/hqa_nfc_rw_cancel" />
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_nfc_function_write.xml b/EngineerMode/res/layout/hqa_nfc_function_write.xml
deleted file mode 100644
index 0f7e63f..0000000
--- a/EngineerMode/res/layout/hqa_nfc_function_write.xml
+++ /dev/null
@@ -1,148 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="5dp"
-        android:layout_marginRight="5dp"
-        android:orientation="vertical" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_title_type" />
-
-        <RadioGroup
-            android:id="@+id/hqa_write_rg_tag_type"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_write_rb_type_uri"
-                android:text="@string/hqa_nfc_type_uri" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/hqa_write_rb_type_text"
-                android:text="@string/hqa_nfc_type_text" >
-            </RadioButton>
-
-        </RadioGroup>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_type_lang" />
-
-            <Spinner
-                android:id="@+id/hqa_write_sp_lang"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/nfc_lang" />
-        </LinearLayout>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090"
-            android:layout_marginTop="5dp" >
-        </View>
-
-        <TableLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:scrollbars="vertical" >
-
-            <TableRow
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_nfc_company"
-                    android:id="@+id/hqa_write_tv_company" />
-
-                <EditText
-                    android:id="@+id/hqa_write_et_company"
-                    android:layout_width="190dp"
-                    android:layout_height="wrap_content" />
-            </TableRow>
-
-            <TableRow
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_nfc_url_pre"
-                    android:id="@+id/hqa_write_tv_url" />
-
-                <EditText
-                    android:id="@+id/hqa_write_et_url"
-                    android:layout_width="190dp"
-                    android:layout_height="wrap_content" />
-            </TableRow>
-
-            <TableRow
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/hqa_nfc_type_text" 
-                    android:id="@+id/hqa_write_tv_text"/>
-
-                <EditText
-                    android:id="@+id/hqa_write_et_text"
-                    android:layout_width="215dp"
-                    android:layout_height="wrap_content" />
-            </TableRow>
-        </TableLayout>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" 
-            android:layout_marginTop="5dp">
-        </View>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dp"
-            android:layout_marginRight="30dp"
-            android:layout_marginTop="10dp"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/hqa_write_btn_write"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="1"
-                android:text="@string/hqa_nfc_rw_write" />
-
-            <Button
-                android:id="@+id/hqa_write_btn_cancel"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="1"
-                android:text="@string/hqa_nfc_rw_cancel" />
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_nfc_loopback_test.xml b/EngineerMode/res/layout/hqa_nfc_loopback_test.xml
deleted file mode 100644
index d241100..0000000
--- a/EngineerMode/res/layout/hqa_nfc_loopback_test.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <Button
-        android:id="@+id/hqa_loopback_btn_start_stop"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_start"
-        android:width="200dp" />
-
-    <Button
-        android:id="@+id/hqa_loopback_btn_return"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_return"
-        android:width="200dp" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_nfc_option.xml b/EngineerMode/res/layout/hqa_nfc_option.xml
deleted file mode 100644
index 171e82d..0000000
--- a/EngineerMode/res/layout/hqa_nfc_option.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <CheckBox
-        android:id="@+id/hqa_option_force_download"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:text="@string/hqa_nfc_option_force_download" />
-
-    <View
-        android:layout_width="fill_parent"
-        android:layout_height="1dip"
-        android:layout_marginLeft="3pt"
-        android:layout_marginRight="5pt"
-        android:background="#FF909090" >
-    </View>
-
-    <CheckBox
-        android:id="@+id/hqa_option_auto_check"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:text="@string/hqa_nfc_option_auto_check" />
-
-    <View
-        android:layout_width="fill_parent"
-        android:layout_height="1dip"
-        android:layout_marginLeft="3pt"
-        android:layout_marginRight="5pt"
-        android:background="#FF909090" >
-    </View>
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dp"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/hqa_option_btn_set"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_nfc_set"
-            android:width="100dp" />
-
-        <Button
-            android:id="@+id/hqa_option_btn_return"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_nfc_return"
-            android:width="100dp" />
-    </LinearLayout>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/hqa_nfc_p2p_mode.xml b/EngineerMode/res/layout/hqa_nfc_p2p_mode.xml
deleted file mode 100644
index 4f876aa..0000000
--- a/EngineerMode/res/layout/hqa_nfc_p2p_mode.xml
+++ /dev/null
@@ -1,197 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <CheckBox
-            android:id="@+id/hqa_p2pmode_cb_typea"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typea" />
-
-        <RadioGroup
-            android:id="@+id/hqa_p2pmode_rg_typea"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:layout_marginLeft="15dp"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_p2pmode_rb_typea_106"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_106" />
-
-            <RadioButton
-                android:id="@+id/hqa_p2pmode_rb_typea_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <RadioButton
-                android:id="@+id/hqa_p2pmode_rb_typea_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-
-            <RadioButton
-                android:id="@+id/hqa_p2pmode_rb_typea_848"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_848" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_p2pmode_cb_typef"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typef" />
-
-        <RadioGroup
-            android:id="@+id/hqa_p2pmode_rg_typef"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:layout_marginLeft="15dp"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_p2pmode_rb_typef_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <RadioButton
-                android:id="@+id/hqa_p2pmode_rb_typef_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <CheckBox
-                android:id="@+id/hqa_p2pmode_cb_passive_mode"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_passive_mode" />
-
-            <CheckBox
-                android:id="@+id/hqa_p2pmode_cb_active_mode"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_active_mode" />
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <CheckBox
-                android:id="@+id/hqa_p2pmode_cb_initiator"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_initiator" />
-
-            <CheckBox
-                android:id="@+id/hqa_p2pmode_cb_target"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_target" />
-        </LinearLayout>
-
-        <CheckBox
-            android:id="@+id/hqa_p2pmode_cb_disable_card_emul"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_disable_card_emul" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dp"
-            android:layout_marginTop="10dp" >
-
-            <Button
-                android:id="@+id/hqa_p2pmode_btn_select_all"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_select_all"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_p2pmode_btn_clear_all"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="105dp"
-                android:text="@string/hqa_nfc_clear_all"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_p2pmode_btn_start_stop"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="210dp"
-                android:text="@string/hqa_nfc_start"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_p2pmode_btn_return"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="50dp"
-                android:text="@string/hqa_nfc_return"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_p2pmode_btn_run_back"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="105dp"
-                android:layout_marginTop="50dp"
-                android:text="@string/hqa_nfc_run_back"
-                android:width="205dp" />
-        </RelativeLayout>
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/hqa_nfc_pnfc_command.xml b/EngineerMode/res/layout/hqa_nfc_pnfc_command.xml
deleted file mode 100644
index 8d49870..0000000
--- a/EngineerMode/res/layout/hqa_nfc_pnfc_command.xml
+++ /dev/null
@@ -1,61 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <RelativeLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dp" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5pt"
-            android:layout_marginTop="10dp"
-            android:text="@string/hqa_nfc_pnfc_text"
-            android:textSize="16sp" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/hqa_pnfc_et_pnfc"
-            android:layout_width="90pt"
-            android:layout_height="wrap_content"
-            android:singleLine="true"
-            android:layout_marginLeft="35pt" >
-        </EditText>
-
-        <Button
-            android:id="@+id/hqa_pnfc_btn_send"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="70dp"
-            android:layout_marginTop="60dp"
-            android:text="@string/hqa_nfc_send"
-            android:width="100dp" />
-
-        <Button
-            android:id="@+id/hqa_pnfc_btn_return"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="190dp"
-            android:layout_marginTop="60dp"
-            android:text="@string/hqa_nfc_return"
-            android:width="100dp" />
-    </RelativeLayout>
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dp" >
-
-        <TextView
-            android:id="@+id/hqa_pnfc_tv_reslut"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5pt"
-            android:layout_marginTop="10dp"
-            android:textSize="16sp" >
-        </TextView>
-    </LinearLayout> 
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_nfc_pollingloop_mode.xml b/EngineerMode/res/layout/hqa_nfc_pollingloop_mode.xml
deleted file mode 100644
index 1c99ce1..0000000
--- a/EngineerMode/res/layout/hqa_nfc_pollingloop_mode.xml
+++ /dev/null
@@ -1,589 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    tools:context="com.mediatek.engineermode.hqanfc.NfcMainPage" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <RadioGroup
-            android:id="@+id/hqa_pollingmode_rg_polling_select"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_polling_listen"
-                android:text="@string/hqa_nfc_listen" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_polling_pause"
-                android:layout_marginLeft="15dp"
-                android:text="@string/hqa_nfc_pause" >
-            </RadioButton>
-        </RadioGroup>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center_vertical"
-                android:text="@string/hqa_nfc_period" />
-
-            <EditText
-                android:id="@+id/hqa_pollingmode_et_polling_period"
-                android:layout_width="80dp"
-                android:layout_gravity="center_vertical"
-                android:layout_height="wrap_content" />
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center_vertical"
-                android:text="@string/hqa_nfc_ms" />
-        </LinearLayout>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_reader_mode"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_nfc_reader_mode" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_typea"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typea" />
-
-        <RadioGroup
-            android:id="@+id/hqa_pollingmode_rg_typea"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginTop="5dp"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typea_106"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_106" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typea_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typea_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typea_848"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_848" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_typeb"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typeb" />
-
-        <RadioGroup
-            android:id="@+id/hqa_pollingmode_rg_typeb"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginTop="5dp"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typeb_106"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_106" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typeb_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typeb_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typeb_848"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_848" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_typef"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typef" />
-
-        <RadioGroup
-            android:id="@+id/hqa_pollingmode_rg_typef"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginTop="5dp"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typef_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typef_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_typev"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typev" />
-
-        <RadioGroup
-            android:id="@+id/hqa_pollingmode_rg_typev_subcarrier"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typev_subcarrier"
-                android:text="@string/hqa_nfc_subcarrier" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typev_dual_subcarrier"
-                android:text="@string/hqa_nfc_dual_subcarrier" >
-            </RadioButton>
-        </RadioGroup>
-
-        <RadioGroup
-            android:id="@+id/hqa_pollingmode_rg_typev_mode"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typev_mode_4"
-                android:layout_weight="1"
-                android:text="@string/hqa_nfc_mode_4" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typev_mode_256"
-                android:layout_weight="1"
-                android:text="@string/hqa_nfc_mode_256" />
-        </RadioGroup>
-
-        <RadioGroup
-            android:id="@+id/hqa_pollingmode_rg_typev_rate"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typev_166"
-                android:text="@string/hqa_nfc_166" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_typev_2648"
-                android:text="@string/hqa_nfc_2648" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_kovio"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_kovio" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_p2p_mode"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_nfc_p2p_mode" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_p2p_typea"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typea" />
-
-        <RadioGroup
-            android:id="@+id/hqa_pollingmode_rg_p2p_typea"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginTop="5dp"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_p2p_typea_106"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_106" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_p2p_typea_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_p2p_typea_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_p2p_typea_848"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_848" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_p2p_typef"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typef" />
-
-        <RadioGroup
-            android:id="@+id/hqa_pollingmode_rg_p2p_typef"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginTop="5dp"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_p2p_typef_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_p2p_typef_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <CheckBox
-                android:id="@+id/hqa_pollingmode_cb_p2p_passive_mode"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_passive_mode" />
-
-            <CheckBox
-                android:id="@+id/hqa_pollingmode_cb_p2p_active_mode"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_active_mode" />
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <CheckBox
-                android:id="@+id/hqa_pollingmode_cb_p2p_initiator"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_initiator" />
-
-            <CheckBox
-                android:id="@+id/hqa_pollingmode_cb_p2p_target"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_target" />
-        </LinearLayout>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_p2p_disable_card_emu"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:text="@string/hqa_nfc_disable_card_emu" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_pollingmode_cb_card_emu_mode"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/hqa_nfc_card_emu_mode" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <RadioGroup
-            android:id="@+id/hqa_pollingmode_rg_swio"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_card_emu_swio1"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_swio1" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_card_emu_swio2"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_swio2" />
-
-            <RadioButton
-                android:id="@+id/hqa_pollingmode_rb_card_emu_swiose"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_swio_se" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginTop="5dp" >
-
-            <CheckBox
-                android:id="@+id/hqa_pollingmode_cb_card_emu_typea"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_typea" />
-
-            <CheckBox
-                android:id="@+id/hqa_pollingmode_cb_card_emu_typeb"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="165dp"
-                android:text="@string/hqa_nfc_typeb" />
-
-            <CheckBox
-                android:id="@+id/hqa_pollingmode_cb_card_emu_typef"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="40dp"
-                android:text="@string/hqa_nfc_typef" />
-        </RelativeLayout>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-       <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dp"
-            android:layout_marginTop="10dp" >
-
-            <Button
-                android:id="@+id/hqa_pollingmode_btn_select_all"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_select_all"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_pollingmode_btn_clear_all"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="105dp"
-                android:text="@string/hqa_nfc_clear_all"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_pollingmode_btn_start_stop"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="210dp"
-                android:text="@string/hqa_nfc_start"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_pollingmode_btn_return"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="50dp"
-                android:text="@string/hqa_nfc_return"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_pollingmode_btn_run_back"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="105dp"
-                android:layout_marginTop="50dp"
-                android:text="@string/hqa_nfc_run_back"
-                android:width="205dp" />
-        </RelativeLayout>
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/hqa_nfc_reader_mode.xml b/EngineerMode/res/layout/hqa_nfc_reader_mode.xml
deleted file mode 100644
index ffd572b..0000000
--- a/EngineerMode/res/layout/hqa_nfc_reader_mode.xml
+++ /dev/null
@@ -1,279 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <CheckBox
-            android:id="@+id/hqa_readermode_cb_typea"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typea" />
-
-        <RadioGroup
-            android:id="@+id/hqa_readermode_rg_typea"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:layout_marginLeft="15dp"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typea_106"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_106" />
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typea_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typea_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typea_848"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_848" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_readermode_cb_typeb"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typeb" />
-
-        <RadioGroup
-            android:id="@+id/hqa_readermode_rg_typeb"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:layout_marginLeft="15dp"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typeb_106"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_106" />
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typeb_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typeb_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typeb_848"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_848" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_readermode_cb_typef"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typef" />
-
-        <RadioGroup
-            android:id="@+id/hqa_readermode_rg_typef"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:layout_marginLeft="15dp"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typef_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typef_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_readermode_cb_typev"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typev" />
-
-        <RadioGroup
-            android:id="@+id/hqa_readermode_rg_typev_subcarrier"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:layout_marginLeft="15dp"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typev_subcarrier"
-                android:layout_weight="1"
-                android:text="@string/hqa_nfc_subcarrier" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typev_dual_subcarrier"
-                android:layout_weight="1"
-                android:text="@string/hqa_nfc_dual_subcarrier" >
-            </RadioButton>
-        </RadioGroup>
-
-        <RadioGroup
-            android:id="@+id/hqa_readermode_rg_typev_mode"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:layout_marginLeft="15dp"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typev_mode_4"
-                android:layout_weight="1"
-                android:text="@string/hqa_nfc_mode_4" />
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typev_mode_256"
-                android:layout_weight="1"
-                android:text="@string/hqa_nfc_mode_256" />
-        </RadioGroup>
-
-        <RadioGroup
-            android:id="@+id/hqa_readermode_rg_typev_rate"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:layout_marginLeft="15dp"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typev_166"
-                android:text="@string/hqa_nfc_166" />
-
-            <RadioButton
-                android:id="@+id/hqa_readermode_rb_typev_2648"
-                android:text="@string/hqa_nfc_2648" />
-        </RadioGroup>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_readermode_cb_kovio"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_kovio" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dp"
-            android:layout_marginTop="10dp" >
-
-            <Button
-                android:id="@+id/hqa_readermode_btn_select_all"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_select_all"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_readermode_btn_clear_all"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="105dp"
-                android:text="@string/hqa_nfc_clear_all"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_readermode_btn_start_stop"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="210dp"
-                android:text="@string/hqa_nfc_start"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_readermode_btn_return"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="50dp"
-                android:text="@string/hqa_nfc_return"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_readermode_btn_run_back"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="105dp"
-                android:layout_marginTop="50dp"
-                android:text="@string/hqa_nfc_run_back"
-                android:width="205dp" />
-        </RelativeLayout>
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/hqa_nfc_rw_function.xml b/EngineerMode/res/layout/hqa_nfc_rw_function.xml
deleted file mode 100644
index 9459b3d..0000000
--- a/EngineerMode/res/layout/hqa_nfc_rw_function.xml
+++ /dev/null
@@ -1,42 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <TextView
-        android:id="@+id/hqa_nfc_rw_tv_uid"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="20dp"
-        android:width="200dp" />
-
-    <Button
-        android:id="@+id/hqa_nfc_rw_btn_read"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_rw_read"
-        android:width="200dp" />
-
-    <Button
-        android:id="@+id/hqa_nfc_rw_btn_write"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_rw_write"
-        android:width="200dp" />
-
-    <Button
-        android:id="@+id/hqa_nfc_rw_btn_format"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_rw_format"
-        android:width="200dp" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_nfc_swp_test.xml b/EngineerMode/res/layout/hqa_nfc_swp_test.xml
deleted file mode 100644
index 20115e9..0000000
--- a/EngineerMode/res/layout/hqa_nfc_swp_test.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <Button
-        android:id="@+id/hqa_swp_btn_start_stop"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_start"
-        android:width="200dp" />
-
-    <Button
-        android:id="@+id/hqa_swp_btn_return"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_return"
-        android:width="200dp" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_nfc_tx_carrier_signal.xml b/EngineerMode/res/layout/hqa_nfc_tx_carrier_signal.xml
deleted file mode 100644
index 4eff931..0000000
--- a/EngineerMode/res/layout/hqa_nfc_tx_carrier_signal.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <Button
-        android:id="@+id/hqa_carrier_btn_start_stop"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_start"
-        android:width="200dp" />
-
-    <Button
-        android:id="@+id/hqa_carrier_btn_return"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_return"
-        android:width="200dp" />
-
-    <Button
-        android:id="@+id/hqa_carrier_btn_run_back"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="58dp"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_run_back"
-        android:width="200dp" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/hqa_nfc_version_query.xml b/EngineerMode/res/layout/hqa_nfc_version_query.xml
deleted file mode 100644
index 856d44f..0000000
--- a/EngineerMode/res/layout/hqa_nfc_version_query.xml
+++ /dev/null
@@ -1,45 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <TextView
-        android:id="@+id/hqa_version_tv_mw_version"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="5pt"
-        android:layout_marginTop="40dp"
-        android:text="@string/hqa_nfc_mw_version"
-        android:textSize="16sp" >
-    </TextView>
-
-    <TextView
-        android:id="@+id/hqa_version_tv_fw_version"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="5pt"
-        android:layout_marginTop="10dp"
-        android:text="@string/hqa_nfc_fw_version"
-        android:textSize="16sp" >
-    </TextView>
-
-    <TextView
-        android:id="@+id/hqa_version_tv_hw_version"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="5pt"
-        android:layout_marginTop="10dp"
-        android:text="@string/hqa_nfc_hw_version"
-        android:textSize="16sp" >
-    </TextView>
-
-    <Button
-        android:id="@+id/hqa_version_btn_return"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="190dp"
-        android:layout_marginTop="60dp"
-        android:text="@string/hqa_nfc_return"
-        android:width="100dp" />
-</LinearLayout>
diff --git a/EngineerMode/res/layout/hqa_nfc_virtualcard_function.xml b/EngineerMode/res/layout/hqa_nfc_virtualcard_function.xml
deleted file mode 100644
index ea01e14..0000000
--- a/EngineerMode/res/layout/hqa_nfc_virtualcard_function.xml
+++ /dev/null
@@ -1,140 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <CheckBox
-            android:id="@+id/hqa_virtual_cb_typea"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typea" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-
-        <CheckBox
-            android:id="@+id/hqa_virtual_cb_typeb"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typeb" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_virtual_cb_typef"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typef" />
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:layout_marginLeft="10dp"
-            android:orientation="horizontal" >
-
-            <CheckBox
-                android:id="@+id/hqa_virtual_cb_typef_212"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_212" />
-
-            <CheckBox
-                android:id="@+id/hqa_virtual_cb_typef_424"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_424" />
-        </LinearLayout>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <CheckBox
-            android:id="@+id/hqa_virtual_cb_typeb2"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/hqa_nfc_typeb2" />
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-        <RelativeLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dp"
-            android:layout_marginTop="10dp" >
-
-            <Button
-                android:id="@+id/hqa_virtual_btn_select_all"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/hqa_nfc_select_all"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_virtual_btn_clear_all"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="105dp"
-                android:text="@string/hqa_nfc_clear_all"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_virtual_btn_start_stop"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="210dp"
-                android:text="@string/hqa_nfc_start"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_virtual_btn_return"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="50dp"
-                android:text="@string/hqa_nfc_return"
-                android:width="100dp" />
-
-            <Button
-                android:id="@+id/hqa_virtual_btn_run_back"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="105dp"
-                android:layout_marginTop="50dp"
-                android:text="@string/hqa_nfc_run_back"
-                android:width="205dp" />
-        </RelativeLayout>
-
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/hspa_info.xml b/EngineerMode/res/layout/hspa_info.xml
deleted file mode 100644
index 988b299..0000000
--- a/EngineerMode/res/layout/hspa_info.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical"
-    android:padding="5dp" >
-
-    <TextView
-        android:id="@+id/text_view"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:textSize="18sp" >
-    </TextView>
-
-    <TextView
-        android:id="@+id/text_view2"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:textSize="18sp" >
-    </TextView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ims.xml b/EngineerMode/res/layout/ims.xml
deleted file mode 100644
index 7d78942..0000000
--- a/EngineerMode/res/layout/ims.xml
+++ /dev/null
@@ -1,290 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-
-    <LinearLayout style="@style/info_layout" >
-
-        <ListView
-            android:id="@+id/ims_category_list"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-        </ListView>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="10dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:id="@+id/ims_status"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:textSize="16sp"
-            android:text="@string/ims_status" />
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="10dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:textSize="16sp"
-            android:text="@string/ims_pdn_apn_hint" />
-
-        <EditText
-            android:id="@+id/ims_pdn_apn"
-            android:singleLine="true"
-            android:maxLength="91"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content">
-        </EditText>
-
-        <Button
-            android:id="@+id/ims_pdn_set_apn"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/ims_pdn_set" >
-        </Button>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:textSize="16sp"
-            android:text="@string/ims_pdn_type_hint" />
-
-        <RadioGroup
-            android:id="@+id/ims_pdn_radio_group"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/ims_pdn_type_ip"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/ims_pdn_type_ip" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/ims_pdn_type_ipv6"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/ims_pdn_type_ipv6" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/ims_pdn_type_ipv4v6"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/ims_pdn_type_ipv4v6" >
-            </RadioButton>
-        </RadioGroup>
-
-        <Button
-            android:id="@+id/ims_pdn_set_type"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/ims_pdn_set" >
-        </Button>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:textSize="16sp"
-            android:text="@string/ims_ss_mode_hint" />
-
-        <RadioGroup
-            android:id="@+id/ims_ss_radio_group"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/ims_ss_mode_xcap"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/ims_ss_mode_xcap" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/ims_ss_mode_cs"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/ims_ss_mode_cs" >
-            </RadioButton>
-        </RadioGroup>
-
-        <Button
-            android:id="@+id/ims_ss_set_mode"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/ims_pdn_set" >
-        </Button>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:textSize="16sp"
-            android:text="@string/ims_ss_disable_hint" />
-
-        <RadioGroup
-            android:id="@+id/ims_ss_delete_group"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/ims_ss_disable_tag"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/ims_ss_disable_tag">
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/ims_ss_disable_del"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/ims_ss_disable_del" >
-            </RadioButton>
-        </RadioGroup>
-
-        <Button
-            android:id="@+id/ims_ss_set_disable"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/ims_pdn_set" >
-        </Button>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:textSize="16sp"
-            android:text="@string/ims_ss_cf_num_config_hint" />
-
-        <EditText
-            android:id="@+id/ims_ss_cf_num"
-            android:singleLine="true"
-            android:maxLength="91"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content">
-        </EditText>
-
-        <Button
-            android:id="@+id/ims_set_ss_cf_num"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/ims_pdn_set" >
-        </Button>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:textSize="16sp"
-            android:text="@string/volte_set_hint" />
-        <RadioGroup
-            android:id="@+id/volte_set_group"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/volte_set_off"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/volte_set_off_string" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/volte_set_on"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/volte_set_on_string" >
-            </RadioButton>
-
-        </RadioGroup>
-        <Button
-            android:id="@+id/volte_set"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/volte_set_string" >
-        </Button>
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" >
-        </View>
-    </LinearLayout>
-</ScrollView>
diff --git a/EngineerMode/res/layout/ims_config.xml b/EngineerMode/res/layout/ims_config.xml
deleted file mode 100644
index 22dd4c8..0000000
--- a/EngineerMode/res/layout/ims_config.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-    <LinearLayout style="@style/info_layout" >
-        <ListView
-            android:id="@+id/ims_item_list"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-        </ListView>
-        
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="10dp"
-            android:background="#FF909090" >
-        </View>
-    </LinearLayout>
-</ScrollView>
diff --git a/EngineerMode/res/layout/ims_config_view.xml b/EngineerMode/res/layout/ims_config_view.xml
deleted file mode 100644
index ae8149d..0000000
--- a/EngineerMode/res/layout/ims_config_view.xml
+++ /dev/null
@@ -1,109 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <TextView
-        android:layout_marginTop="5dp"
-        android:id="@+id/ims_config_label"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:textSize="16sp" />
-
-    <LinearLayout
-        android:id="@+id/ims_config_edit_layout"
-        android:visibility="gone"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content" >
-
-        <EditText
-            android:id="@+id/ims_config_edit_text"
-            android:singleLine="true"
-            android:inputType="textNoSuggestions"
-            android:layout_width="0dp"
-            android:layout_weight="1"
-            android:layout_height="wrap_content">
-        </EditText>
-
-        <TextView
-            android:id="@+id/ims_config_suffix"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:textSize="16sp" />
-    </LinearLayout>
-
-    <RadioGroup
-        android:id="@+id/ims_config_radio_group"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:visibility="gone"
-        android:gravity="left"
-        android:orientation="vertical" >
-
-        <RadioButton
-            android:id="@+id/ims_config_radio_1"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/ims_pdn_type_ip" >
-        </RadioButton>
-
-        <RadioButton
-            android:id="@+id/ims_config_radio_2"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/ims_pdn_type_ipv6" >
-        </RadioButton>
-
-        <RadioButton
-            android:id="@+id/ims_config_radio_3"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/ims_pdn_type_ipv4v6" >
-        </RadioButton>
-
-        <RadioButton
-            android:id="@+id/ims_config_radio_4"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/ims_pdn_type_ipv4v6" >
-        </RadioButton>
-    </RadioGroup>
-
-    <LinearLayout
-        android:id="@+id/ims_config_checkbox_list"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:visibility="gone"
-        android:orientation="vertical" >
-        <CheckBox
-            android:id="@+id/ims_pdn_type_ip"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/ims_pdn_type_ip" >
-        </CheckBox>
-    </LinearLayout>
-
-    <Button
-        android:id="@+id/ims_config_set"
-        android:layout_width="100dp"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:text="@string/ims_pdn_set" >
-    </Button>
-
-    <View
-        android:layout_width="fill_parent"
-        android:layout_height="1dip"
-        android:layout_marginTop="5dp"
-        android:background="#FF909090" >
-    </View>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/ims_dialog_config.xml b/EngineerMode/res/layout/ims_dialog_config.xml
deleted file mode 100644
index 6e30b5f..0000000
--- a/EngineerMode/res/layout/ims_dialog_config.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-   style="@style/info_layout" >
-    <LinearLayout
-        android:id="@+id/ims_item_list"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical" >
-    </LinearLayout>
-</ScrollView>
diff --git a/EngineerMode/res/layout/ims_setting.xml b/EngineerMode/res/layout/ims_setting.xml
deleted file mode 100644
index 9a11246..0000000
--- a/EngineerMode/res/layout/ims_setting.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    style="@style/info_layout" >
-    <LinearLayout
-        android:id="@+id/ims_setting_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical" >
-    </LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/io.xml b/EngineerMode/res/layout/io.xml
deleted file mode 100644
index 3ade9e8..0000000
--- a/EngineerMode/res/layout/io.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_Io"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ir_settings.xml b/EngineerMode/res/layout/ir_settings.xml
deleted file mode 100644
index 6005a81..0000000
--- a/EngineerMode/res/layout/ir_settings.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-        <LinearLayout style="@style/info_layout" >
-    
-            <!-- Preferred Network Type -->
-    
-            <TextView
-                style="@style/info_label"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:text="@string/c2k_ir_setting_mode" />
-    
-            <Spinner
-                android:id="@+id/c2k_ir_mode"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" />
-    
-        </LinearLayout>
-        <Button
-            android:id="@+id/ir_done_btn"
-            android:layout_width="100dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="80dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/c2k_ir_done" />
-            
-        <LinearLayout style="@style/info_layout" >
-            <TextView
-                style="@style/info_label"
-                android:id="@+id/wcdma_integrity_off"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:text="@string/c2k_ir_integrity_off" />
-    
-            <Spinner
-                android:id="@+id/c2k_ir_integrity_off"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:entries="@array/c2k_ir_integrity_off" />
-    
-        </LinearLayout>
-
-        <Button
-            android:id="@+id/ir_integrity_off_done_btn"
-            android:layout_width="100dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="80dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/c2k_ir_done" />
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/low_power_debug.xml b/EngineerMode/res/layout/low_power_debug.xml
deleted file mode 100644
index 76ba3e9..0000000
--- a/EngineerMode/res/layout/low_power_debug.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="8dip"
-        android:orientation="horizontal" >
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/low_power_stop_txt"
-            android:minWidth="200dip" />
-         <Spinner
-            android:id="@+id/low_power_stop_select"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:entries="@array/low_battery_protect_stop" />
-    </LinearLayout>
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="8dip"
-        android:orientation="horizontal" >
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/low_power_ut_txt"
-            android:minWidth="200dip" />
-        <Spinner
-            android:id="@+id/low_power_ut_select"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" 
-            android:entries="@array/low_battery_protect_ut"/>
-   </LinearLayout>
-    
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/lte_configuration.xml b/EngineerMode/res/layout/lte_configuration.xml
deleted file mode 100644
index 9a3a88c..0000000
--- a/EngineerMode/res/layout/lte_configuration.xml
+++ /dev/null
@@ -1,229 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dp"
-        android:layout_marginRight="10dp"
-        android:layout_marginBottom="10dp"
-        android:orientation="vertical" >
-
-        <!-- Threshold setting -->
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:layout_marginBottom="3dp"
-            android:text="@string/lte_threshold" />
-
-        <TableLayout
-            android:id="@+id/lte_threshold"
-            android:stretchColumns="1"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" />
-
-        <Button
-            android:id="@+id/lte_set_threshold"
-            android:textSize="14sp"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:text="@string/lte_set" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" />
-
-        <!-- Timer setting -->
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/lte_timer" />
-
-        <TableLayout
-            android:id="@+id/lte_timer"
-            android:stretchColumns="1"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" />
-
-        <Button
-            android:id="@+id/lte_set_timer"
-            android:textSize="14sp"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:text="@string/lte_set" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" />
-
-        <!-- Enable Background search triggered by PSDM -->
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/lte_enable_psdm" />
-
-        <CheckBox
-            android:id="@+id/lte_enable_psdm"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="8dp"
-            android:layout_marginBottom="8dp"
-            android:text="@string/lte_enable" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" />
-
-        <!-- Instantaneously LTE search -->
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/lte_instant_search" />
-
-        <Button
-            android:id="@+id/lte_instant_search"
-            android:textSize="14sp"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/lte_search" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" />
-
-        <!-- LTE thrsholds AND/OR operation -->
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/lte_threshold_operation" />
-
-        <TableLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TableRow
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/lte_4g_rsrp" />
-
-                <Spinner
-                    android:id="@+id/lte_4g_rsrp"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" />
-
-            </TableRow>
-
-            <TableRow
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/lte_4g_rsrq" />
-
-                <Spinner
-                    android:id="@+id/lte_4g_rsrq"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" />
-
-            </TableRow>
-
-            <TableRow
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/lte_4g_relation" />
-
-                <Spinner
-                    android:id="@+id/lte_4g_relation"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" />
-
-            </TableRow>
-
-        </TableLayout>
-
-        <Button
-            android:id="@+id/lte_set_threshold_operation"
-            android:textSize="14sp"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:text="@string/lte_set" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" />
-
-        <!-- Background search parameters -->
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/lte_search_timer" />
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-
-            <TableLayout
-                android:id="@+id/lte_search_timer_1"
-                android:shrinkColumns="1"
-                android:stretchColumns="1"
-                android:layout_width="0dp"
-                android:layout_weight="1"
-                android:layout_height="wrap_content" />
-
-            <TableLayout
-                android:id="@+id/lte_search_timer_2"
-                android:shrinkColumns="1"
-                android:stretchColumns="1"
-                android:layout_width="0dp"
-                android:layout_weight="1"
-                android:layout_height="wrap_content" />
-
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-
-            <Button
-                android:id="@+id/lte_set_search_timer"
-                android:textSize="14sp"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:text="@string/lte_set" />
-
-            <Button
-                android:id="@+id/lte_get_search_timer"
-                android:textSize="14sp"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:text="@string/lte_get" />
-
-        </LinearLayout>
-
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/lte_network_mode.xml b/EngineerMode/res/layout/lte_network_mode.xml
deleted file mode 100644
index 5e39a2c..0000000
--- a/EngineerMode/res/layout/lte_network_mode.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/Settings/assets/res/any/layout/radio_info.xml
-**
-** Copyright 2006, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
-*/
--->
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-
-    <LinearLayout style="@style/info_layout" >
-        <TextView
-            style="@style/info_label"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/network_mode_set_label" />
-
-        <Spinner
-            android:id="@+id/networkModeSwitching"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" />
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/lte_networkinfo.xml b/EngineerMode/res/layout/lte_networkinfo.xml
deleted file mode 100644
index 788dbac..0000000
--- a/EngineerMode/res/layout/lte_networkinfo.xml
+++ /dev/null
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:id="@+id/list"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/lte_networkinfo_detail.xml b/EngineerMode/res/layout/lte_networkinfo_detail.xml
deleted file mode 100644
index 58fe38b..0000000
--- a/EngineerMode/res/layout/lte_networkinfo_detail.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-
-        <Button
-            android:id="@+id/NetworkInfo_PageUp"
-            android:layout_width="160dip"
-            android:layout_height="wrap_content"
-            android:text="@string/NetworkInfo_PageUp" >
-        </Button>
-
-        <Button
-            android:id="@+id/NetworkInfo_PageDown"
-            android:layout_width="160dip"
-            android:layout_height="wrap_content"
-            android:text="@string/NetworkInfo_PageDown" >
-        </Button>
-    </LinearLayout>
-
-    <ScrollView
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent" >
-
-        <TextView
-            android:id="@+id/NetworkInfo_Info"
-            android:layout_width="fill_parent"
-            android:layout_height="fill_parent" >
-        </TextView>
-    </ScrollView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/lte_tool_edit.xml b/EngineerMode/res/layout/lte_tool_edit.xml
deleted file mode 100644
index 2539d02..0000000
--- a/EngineerMode/res/layout/lte_tool_edit.xml
+++ /dev/null
@@ -1,86 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:padding="8dp" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:orientation="vertical" >
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/lte_commands" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/commands"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:inputType="textNoSuggestions|textCapCharacters|textMultiLine"
-            android:singleLine="false" >
-        </EditText>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="fill_parent"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/lte_inteval" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/inteval"
-                android:inputType="number"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content" >
-            </EditText>
-
-        </LinearLayout>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="fill_parent"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/send"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:text="@string/lte_send" >
-            </Button>
-
-            <Button
-                android:id="@+id/stop"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:text="@string/lte_stop" >
-            </Button>
-
-        </LinearLayout>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/lte_history" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/output"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-        </TextView>
-
-    </LinearLayout>
-</ScrollView>
-
diff --git a/EngineerMode/res/layout/main.xml b/EngineerMode/res/layout/main.xml
deleted file mode 100644
index afe0823..0000000
--- a/EngineerMode/res/layout/main.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    >
-	
-	<android.support.v4.view.ViewPager
-	    android:id="@+id/viewpager"
-	    android:layout_width="match_parent"
-	    android:layout_height="wrap_content"
-	    android:layout_gravity="center" 
-	    >
-	    
-	<android.support.v4.view.PagerTabStrip
-	    android:id="@+id/pagertitle"
-	    android:layout_width="wrap_content"
-	    android:layout_height="wrap_content"
-	    android:layout_gravity="top" 
-	    />	
-	            
-	</android.support.v4.view.ViewPager>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/mcdi_setting.xml b/EngineerMode/res/layout/mcdi_setting.xml
deleted file mode 100644
index f6b017d..0000000
--- a/EngineerMode/res/layout/mcdi_setting.xml
+++ /dev/null
@@ -1,116 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-        android:id="@+id/mcdi_mode_contrl"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-	        <TextView
-	            android:layout_width="240dip"
-	            android:layout_height="wrap_content"
-	            android:layout_marginTop="10dip"
-	            android:layout_marginLeft="10dip"
-	            android:text="@string/mcdi_mode" >
-	        </TextView>
-	
-	        <LinearLayout 
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	            <RadioGroup
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="vertical">
-	                <RadioButton android:id="@+id/mcdi_disable"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/mcdi_disable"/>
-                    <RadioButton android:id="@+id/mcdi_only"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginLeft="10dip"
-                        android:text="@string/mcdi_only"/>   
-                    <RadioButton android:id="@+id/mcdi_sodi"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/mcdi_sodi"/>       
-	            </RadioGroup>
-	        </LinearLayout>
-        </LinearLayout>
-        
-        <LinearLayout
-        android:id="@+id/mcdi_wake_timer_contrl"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-	        <TextView
-	            android:layout_width="240dip"
-	            android:layout_height="wrap_content"
-	            android:layout_marginLeft="10dip"
-	            android:text="@string/mcdi_set_wake_timer" >
-	        </TextView>
-	        <LinearLayout 
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="vertical">
-	                <RadioButton android:id="@+id/mcdi_timer_disable"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/mcdi_timer_disable"/>
-	                <LinearLayout 
-	                    android:layout_width="fill_parent"
-			            android:layout_height="wrap_content"
-			            android:orientation="horizontal">
-                    <RadioButton android:id="@+id/mcdi_timer_val_set"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginLeft="10dip"/>
-                    <EditText
-		                android:id="@+id/mcdi_timer_val"
-		                android:layout_width="100dip"
-		                android:layout_height="wrap_content"
-		                android:maxLength="7"
-		                android:numeric="integer" />
-      				<TextView
-			            android:layout_width="240dip"
-			            android:layout_height="wrap_content"
-			            android:text="@string/mcdi_wake_timer_tip" />
-                    </LinearLayout>
-
-	        </LinearLayout>
-        </LinearLayout>
-        
-        <LinearLayout 
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	     <Button
-            android:id="@+id/mcdi_start_timer"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/mcdi_start_timer" />
-         <Button
-            android:id="@+id/get_mcdi_setting"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/get_mcdi_setting" >
-        </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/md_em_filter.xml b/EngineerMode/res/layout/md_em_filter.xml
deleted file mode 100644
index 37182c3..0000000
--- a/EngineerMode/res/layout/md_em_filter.xml
+++ /dev/null
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content" >
-
-    <CheckBox
-        android:id="@+id/md_em_filter"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:padding="10dp"
-        android:text="@string/md_filter_string" >
-    </CheckBox>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/memory.xml b/EngineerMode/res/layout/memory.xml
deleted file mode 100644
index facaf75..0000000
--- a/EngineerMode/res/layout/memory.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/list_memory_item"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/memory_tabs.xml b/EngineerMode/res/layout/memory_tabs.xml
deleted file mode 100644
index ce7eedc..0000000
--- a/EngineerMode/res/layout/memory_tabs.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/memory_flash_tabs"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ScrollView
-        android:id="@+id/file_sys_view"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-
-        <TextView
-            android:id="@+id/file_sys_info"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:scrollbars="vertical" >
-        </TextView>
-    </ScrollView>
-
-    <ScrollView
-        android:id="@+id/partition_view"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-
-        <TextView
-            android:id="@+id/partition_info"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:scrollbars="vertical" >
-        </TextView>
-    </ScrollView>
-
-</FrameLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/modem_activity.xml b/EngineerMode/res/layout/modem_activity.xml
deleted file mode 100644
index d1bd116..0000000
--- a/EngineerMode/res/layout/modem_activity.xml
+++ /dev/null
@@ -1,121 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:padding="10dip" >
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:gravity="left"
-            android:text="@string/sleep_mode"
-            android:textAppearance="?android:attr/textAppearanceMedium" >
-        </TextView>
-
-        <RadioGroup
-            android:id="@+id/Modem_sleepmode"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/sleep_mode_on_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/on" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/sleep_mode_off_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="30dip"
-                android:text="@string/off" >
-            </RadioButton>
-        </RadioGroup>
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:padding="10dip" >
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:gravity="left"
-            android:text="@string/dcm"
-            android:textAppearance="?android:attr/textAppearanceMedium" >
-        </TextView>
-
-        <RadioGroup
-            android:id="@+id/Modem_dcm"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/dcm_on_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/on" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/dcm_off_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="30dip"
-                android:text="@string/off" >
-            </RadioButton>
-        </RadioGroup>
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:padding="10dip" >
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:gravity="left"
-            android:text="@string/memory_dump"
-            android:textAppearance="?android:attr/textAppearanceMedium" >
-        </TextView>
-
-        <RadioGroup
-            android:id="@+id/Modem_memorydump"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:orientation="horizontal" >
-
-            <RadioButton
-                android:id="@+id/memory_dump_on_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/on" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/memory_dump_off_radio"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="30dip"
-                android:text="@string/off" >
-            </RadioButton>
-        </RadioGroup>
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/modem_debug.xml b/EngineerMode/res/layout/modem_debug.xml
deleted file mode 100644
index f3ffcba..0000000
--- a/EngineerMode/res/layout/modem_debug.xml
+++ /dev/null
@@ -1,49 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-        
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/Modem_Reset_Time"
-                android:layout_width="170dip"
-                android:layout_height="wrap_content"
-                android:text="@string/modem_reset_time" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/Modem_Reset_Time_Edit"
-                android:layout_width="140dip"
-                android:layout_height="wrap_content"
-                android:numeric="integer" >
-            </EditText>
-        </LinearLayout>
-        <TextView
-                android:id="@+id/Modem_Reset_Msg"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:text="@string/modem_reset_msg" >
-        </TextView>
-
-        <Button
-            android:id="@+id/Modem_Reset_Done"
-            android:layout_width="100dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="80dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/modem_reset_Done" />
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/modem_switch.xml b/EngineerMode/res/layout/modem_switch.xml
deleted file mode 100644
index d29e4cf..0000000
--- a/EngineerMode/res/layout/modem_switch.xml
+++ /dev/null
@@ -1,129 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-
-    <LinearLayout style="@style/info_layout" >
-
-        <TextView
-            android:id="@+id/modem_switch_current_value"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:textSize="16sp"
-            android:text="@string/modem_switch_current_value" />
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="10dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dp"
-            android:textSize="16sp"
-            android:text="@string/modem_switch_hint" />
-
-        <RadioGroup
-            android:id="@+id/modem_switch_radio_group"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <RadioButton
-                android:id="@+id/modem_switch_wg"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/modem_switch_wg" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/modem_switch_tg"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/modem_switch_tg" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/modem_switch_fdd_csfb"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/modem_switch_fdd_csfb" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/modem_switch_tdd_csfb"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/modem_switch_tdd_csfb" >
-            </RadioButton>
-
-            <RadioButton
-                android:id="@+id/modem_switch_auto"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="3dp"
-                android:text="@string/modem_switch_auto" >
-            </RadioButton>
-        </RadioGroup>
-
-        <Button
-            android:id="@+id/modem_switch_set"
-            android:layout_width="100dp"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/modem_switch_set" >
-        </Button>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="10dp"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:textSize="16sp"
-            android:text="@string/modem_switch_timer_hint" />
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:orientation="horizontal" >
-
-            <EditText
-                android:id="@+id/modem_switch_timer"
-                android:layout_width="120dp"
-                android:layout_height="wrap_content"
-                android:inputType="number" >
-            </EditText>
-
-            <Button
-                android:id="@+id/modem_switch_set_timer"
-                android:layout_width="120dp"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dp"
-                android:text="@string/modem_switch_set" >
-            </Button>
-        </LinearLayout>
-<!--
-        <Spinner
-            android:id="@+id/Spinner_ModemSwitch"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" />
--->
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/modem_test_activity.xml b/EngineerMode/res/layout/modem_test_activity.xml
deleted file mode 100644
index 8ede19e..0000000
--- a/EngineerMode/res/layout/modem_test_activity.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:gravity="center_horizontal"
-    android:orientation="vertical" >
-
-    <TextView
-        android:id="@+id/modem_test_textview"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginBottom="30dip"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </TextView>
-
-    <Button
-        android:id="@+id/modem_test_none_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:text="@string/modem_test_none"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/modem_test_cta_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_integrity_off"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/modem_test_fta_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_fta"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/modem_test_iot_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_iot"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/modem_test_operator_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_operator"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/modem_test_activity_6589.xml b/EngineerMode/res/layout/modem_test_activity_6589.xml
deleted file mode 100644
index d00be26..0000000
--- a/EngineerMode/res/layout/modem_test_activity_6589.xml
+++ /dev/null
@@ -1,99 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-<LinearLayout
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:gravity="center_horizontal"
-    android:orientation="vertical" >
-    <TextView
-        android:id="@+id/modem_test_textview"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </TextView>
-
-    <CheckBox
-        android:id="@+id/modem_test_unlock"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20dip"
-        android:text="@string/modem_test_unlock"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </CheckBox>
-
-    <CheckBox
-        android:id="@+id/modem_test_tdddataonly"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20dip"
-        android:text="@string/modem_test_tdddataonly"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </CheckBox>
-
-    <Button
-        android:id="@+id/modem_test_none_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_none"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/modem_test_cta_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_integrity_off"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/modem_test_fta_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_fta"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/modem_test_iot_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_iot"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/modem_test_operator_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_operator"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/modem_test_factory_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_factory"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/modem_test_c2k_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/modem_test_c2k"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-</LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/moms.xml b/EngineerMode/res/layout/moms.xml
deleted file mode 100644
index b4dbab8..0000000
--- a/EngineerMode/res/layout/moms.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <Button
-        android:id="@+id/disable_moms_for_cts"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/disable_moms_for_cts"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/reenable_moms"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/reenable_moms"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/msdc_hopset.xml b/EngineerMode/res/layout/msdc_hopset.xml
deleted file mode 100644
index 5bb4c90..0000000
--- a/EngineerMode/res/layout/msdc_hopset.xml
+++ /dev/null
@@ -1,94 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="vertical" >
-
-            <Spinner
-                android:id="@+id/MSDC_HopSet_HOST_sppiner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip" >
-            </Spinner>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="0dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/NEW_MSDC_HOPPING_BIT" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/MSDC_hopping_bit_spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="2dip" >
-            </Spinner>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="0dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/NEW_MSDC_HOPPING_TIME" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/MSDC_hopping_time_spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="2dip" >
-            </Spinner>
-
-            <View
-                android:layout_width="240dip"
-                android:layout_height="1dip"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="20dip"
-                android:background="#FF909090" >
-            </View>
-
-            <LinearLayout
-                android:id="@+id/LinearLayout"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dip"
-                android:orientation="horizontal" >
-
-                <Button
-                    android:id="@+id/MSDC_HopSet_Get"
-                    android:layout_width="110dip"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="10dip"
-                    android:layout_marginTop="10dip"
-                    android:text="@string/MSDC_HopSet_Get" >
-                </Button>
-
-                <Button
-                    android:id="@+id/MSDC_HopSet_Set"
-                    android:layout_width="110dip"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="20dip"
-                    android:layout_marginTop="10dip"
-                    android:text="@string/MSDC_HopSet_Set" >
-                </Button>
-            </LinearLayout>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/msdc_sd3test.xml b/EngineerMode/res/layout/msdc_sd3test.xml
deleted file mode 100644
index af43026..0000000
--- a/EngineerMode/res/layout/msdc_sd3test.xml
+++ /dev/null
@@ -1,118 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dip"
-        android:orientation="vertical" >
-
-        <Spinner
-            android:id="@+id/msdc_sd3test_host_spinner"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="10dip" >
-        </Spinner>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="0dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/msdc_sd3test_mode" >
-        </TextView>
-
-        <Spinner
-            android:id="@+id/msdc_sd3test_mode_spinner"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="2dip" >
-        </Spinner>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="0dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/msdc_sd3test_max_current" >
-        </TextView>
-
-        <Spinner
-            android:id="@+id/msdc_sd3test_max_current_spinner"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="2dip" >
-        </Spinner>
-        
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="0dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/msdc_sd3test_drive" >
-        </TextView>
-
-        <Spinner
-            android:id="@+id/msdc_sd3test_drive_spinner"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="2dip" >
-        </Spinner>
-        
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="0dip"
-            android:layout_marginTop="20dip"
-            android:text="@string/msdc_sd3test_power_control" >
-        </TextView>
-
-        <Spinner
-            android:id="@+id/msdc_sd3test_power_control_spinner"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="2dip" >
-        </Spinner>
-
-        <View
-            android:layout_width="240dip"
-            android:layout_height="1dip"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="20dip"
-            android:background="#FF909090" >
-        </View>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/msdc_sd3test_get"
-                android:layout_width="110dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/MSDC_Get" >
-            </Button>
-
-            <Button
-                android:id="@+id/msdc_sd3test_set"
-                android:layout_width="110dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/MSDC_Set" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/msdc_select.xml b/EngineerMode/res/layout/msdc_select.xml
deleted file mode 100644
index d0e692f..0000000
--- a/EngineerMode/res/layout/msdc_select.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_msdcSelect"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/mydialog.xml b/EngineerMode/res/layout/mydialog.xml
deleted file mode 100644
index bb3aa4e..0000000
--- a/EngineerMode/res/layout/mydialog.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<EditText xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/save_file_name"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-</EditText>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/network_select_sim_type.xml b/EngineerMode/res/layout/network_select_sim_type.xml
deleted file mode 100644
index d6f85ce..0000000
--- a/EngineerMode/res/layout/network_select_sim_type.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_SimSelect"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/networkinfo.xml b/EngineerMode/res/layout/networkinfo.xml
deleted file mode 100644
index 73c20ed..0000000
--- a/EngineerMode/res/layout/networkinfo.xml
+++ /dev/null
@@ -1,446 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_2G"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Cell"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_Cell" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Ch"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_Ch" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Ctrl"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_Ctrl" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_RACH"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_RACH" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_LAI"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_LAI" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Radio"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_Radio" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Meas"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_Meas" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Ca"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_Ca" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Control"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_Control" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_SI2Q"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_SI2Q" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_MI"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_MI" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_BLK"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_BLK" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_TBF"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_TBF" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_GPRS"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_GPRS" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-
-        <!-- FOR Common -->
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_COMMON"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GSmEmInfo"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GSmEmInfo" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMmEmInfo"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GMmEmInfo" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GGmmEmInfo"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GGmmEmInfo" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GTcmMmiEmInfo"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GTcmMmiEmInfo" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-
-        <!-- FOR 3G -->
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_3G_COMMON"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GGeneralStatus"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GGeneralStatus" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_xGCsceEMNeighCellSStatusInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_xGCsceEMNeighCellSStatusInd" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GCsceEMServCellSStatusInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GCsceEMServCellSStatusInd" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GCsceEmInfoMultiPlmn"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GCsceEmInfoMultiPlmn" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMemeEmPeriodicBlerReportInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GMemeEmPeriodicBlerReportInd" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUrrUmtsSrncId"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GUrrUmtsSrncId" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMemeEmInfoHServCellInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GMemeEmInfoHServCellInd" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GSlceVoice"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GSlceVoice" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GSecurityConfiguration"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GSecurityConfiguration" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_3G_FDD"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMemeEmInfoUmtsCellStatus"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GMemeEmInfoUmtsCellStatus" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GSlceEmPsDataRateStatusInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GSlceEmPsDataRateStatusInd" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_3G_TDD"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GHandoverSequenceIndStuct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GHandoverSequenceIndStuct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmAdmPoolStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GUl2EmAdmPoolStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmPsDataRateStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GUl2EmPsDataRateStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3Gul2EmHsdschReconfigStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3Gul2EmHsdschReconfigStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmUrlcEventStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GUl2EmUrlcEventStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmPeriodicBlerReportInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_3GUl2EmPeriodicBlerReportInd" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-
-        <!-- FOR CDMA -->
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_CDMA"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_1xRTT_Radio"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_1xRTT_Radio" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_1xRTT_Info"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_1xRTT_Info" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_1xRTT_SCH_Info"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_1xRTT_SCH_Info" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_1xRTT_Statistics"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_1xRTT_Statistics" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_1xRTT_Serving"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_1xRTT_Serving" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_EVDO_Serving_Info"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_EVDO_Serving_Info" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_EVDO_Active_Set"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_EVDO_Active_Set" >
-                </CheckBox>
-                
-                <CheckBox
-                    android:id="@+id/NetworkInfo_EVDO_Candidate_Set"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_EVDO_Candidate_Set" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_EVDO_Neighbor_Set"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_EVDO_Neighbor_Set" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_EVDO_FL"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_EVDO_FL" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_EVDO_RL"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_EVDO_RL" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_EVDO_State"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/NetworkInfo_EVDO_State" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/networkinfo_info.xml b/EngineerMode/res/layout/networkinfo_info.xml
deleted file mode 100644
index a6b194e..0000000
--- a/EngineerMode/res/layout/networkinfo_info.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-
-        <Button
-            android:id="@+id/NetworkInfo_PageUp"
-            android:layout_width="160dip"
-            android:layout_height="wrap_content"
-            android:text="@string/NetworkInfo_PageUp" >
-        </Button>
-
-        <Button
-            android:id="@+id/NetworkInfo_PageDown"
-            android:layout_width="160dip"
-            android:layout_height="wrap_content"
-            android:text="@string/NetworkInfo_PageDown" >
-        </Button>
-    </LinearLayout>
-
-    <FrameLayout
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent" >
-        <ScrollView
-            android:layout_width="fill_parent"
-            android:layout_height="fill_parent" >
-
-            <TextView
-                android:id="@+id/NetworkInfo_Info"
-                android:layout_width="fill_parent"
-                android:layout_height="fill_parent" >
-            </TextView>
-        </ScrollView>
-
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-            <TextView
-                android:id="@+id/NetworkInfo_List_Header"
-                android:visibility="gone"
-                android:layout_width="fill_parent"
-                android:layout_height="fill_parent" >
-            </TextView>
-            <ListView
-                android:id="@+id/NetworkInfo_List"
-                android:visibility="gone"
-                android:layout_width="fill_parent"
-                android:layout_height="fill_parent"
-                android:dividerHeight="1dp"
-                android:divider="#FF303030" >
-            </ListView>
-        </LinearLayout>
-    </FrameLayout>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/networkmode_switching.xml b/EngineerMode/res/layout/networkmode_switching.xml
deleted file mode 100644
index 0e97635..0000000
--- a/EngineerMode/res/layout/networkmode_switching.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/Settings/assets/res/any/layout/radio_info.xml
-**
-** Copyright 2006, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
-*/
--->
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-
-    <LinearLayout style="@style/info_layout" >
-        <TextView
-            style="@style/info_label"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/network_mode_set_label" />
-
-        <Spinner
-            android:id="@+id/networkModeSwitching"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" />
-
-        <TextView
-            style="@style/info_label"
-            android:id="@+id/network_mode_set_hint"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/network_mode_set_hint" />
-        <CheckBox
-            android:id="@+id/disable_eHRPD"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:padding="10dp"
-            android:text="@string/disable_eHRPD" >
-        </CheckBox>
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/networkselection.xml b/EngineerMode/res/layout/networkselection.xml
deleted file mode 100644
index adcca76..0000000
--- a/EngineerMode/res/layout/networkselection.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-
-    <LinearLayout style="@style/info_layout" >
-
-        <!-- Preferred Network Type -->
-
-        <TextView
-            style="@style/info_label"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/network_selection_label" />
-
-        <Spinner
-            android:id="@+id/networktype"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" />
-
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/new_auto_calibration.xml b/EngineerMode/res/layout/new_auto_calibration.xml
deleted file mode 100644
index bc4ef6c..0000000
--- a/EngineerMode/res/layout/new_auto_calibration.xml
+++ /dev/null
@@ -1,1334 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:scrollbars="vertical" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-        <!-- Camera Sensor Select -->
-        <LinearLayout 
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal">
-	        <TextView
-	            android:layout_width="wrap_content"
-	            android:layout_height="wrap_content"
-	            android:layout_marginLeft="8dip"
-	            android:text="@string/auto_clibr_camera_sensor"
-	            android:textColor="#FFFFFF"
-	            android:minWidth="170dip"
-	            android:textSize="18sp" />
-            <Spinner
-                    android:id="@+id/auto_clibr_camera_sensor_spnr"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:textSize="14sp">
-            </Spinner>
-        </LinearLayout>
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/setting"
-            android:textSize="15sp" />
-
-        <!-- Capture mode settings -->
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:layout_marginTop="5dip"
-            android:text="@string/auto_clibr_capture_mode"
-            android:textColor="#FFFFFF"
-            android:textSize="18sp" />
-
-        <!-- Capture mode: Normal mode -->
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:minWidth="260dip"
-                android:text="@string/auto_clibr_capture_normal"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-
-            <RadioButton
-                android:id="@+id/raido_capture_normal"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:textSize="18sp" />
-        </LinearLayout>
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/normal_capture_set"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="28dip"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="150dip"
-                    android:text="@string/auto_clibr_capture_size"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <Spinner
-                    android:id="@+id/normal_capture_size"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </Spinner>
-            </LinearLayout>
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="150dip"
-                    android:text="@string/auto_clibr_capture_type"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <Spinner
-                    android:id="@+id/normal_capture_type"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:entries="@array/auto_calib_capture_type"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </Spinner>
-            </LinearLayout>
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="150dip"
-                    android:text="@string/auto_clibr_capture_number"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-                <EditText
-                    android:id="@+id/normal_capture_number"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="3"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-            </LinearLayout>
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="150dip"
-                    android:text="@string/auto_clibr_capture_shutter_speed"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-                <EditText
-                    android:id="@+id/normal_capture_shutter_speed"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="5"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-            </LinearLayout>
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="150dip"
-                    android:text="@string/auto_clibr_capture_sensor_gain"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-                <EditText
-                    android:id="@+id/normal_capture_sensor_gain"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="5"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-            </LinearLayout>
-        </LinearLayout>
-
-        <!-- Capture mode: Video Clip -->
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/video_clip_raw_id"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:minWidth="260dip"
-                android:text="@string/auto_clibr_video_clip"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-
-            <RadioButton
-                android:id="@+id/raido_capture_video"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:textSize="18sp" />
-        </LinearLayout>
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/video_capture_set"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="28dip"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="145dip"
-                    android:text="@string/auto_clibr_video_resolution"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <Spinner
-                    android:id="@+id/video_capture_resolution"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </Spinner>
-            </LinearLayout>
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:id="@+id/video_frame_set"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="vertical" >
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="145dip"
-                    android:text="@string/auto_clibr_video_frame"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <Spinner
-                    android:id="@+id/auto_clibr_video_frame_set"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:entries="@array/auto_calib_on_off_value"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </Spinner>
-            </LinearLayout>
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:id="@+id/video_frame_set_min"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="145dip"
-                    android:text="@string/auto_clibr_video_frame_low"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-                <EditText
-                    android:id="@+id/video_frame_min_rate"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="3"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-            </LinearLayout>
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:id="@+id/video_frame_set_max"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="145dip"
-                    android:text="@string/auto_clibr_video_frame_high"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <EditText
-                    android:id="@+id/video_frame_max_rate"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="3"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-            </LinearLayout>
-            </LinearLayout>
-        </LinearLayout>
-
-        <!-- ISO setting -->
-
-        <ListView
-            android:id="@+id/listview_iso"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:scrollbars="none" >
-        </ListView>
-
-        <!-- Flicker setting -->
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/tv_flicker"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/flicker"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/auto_calib_flicker_type"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-       <!-- Use for 2nd MP(JB2)  -->
-       <!--  LED flash setting  -->
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/auto_calib_strobe_mode_ll"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/led_flash"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/led_flash"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/auto_calib_led_flash"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- HDR Debug  -->
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/auto_clibr_hdr_debug"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/hdr_debug"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/auto_calib_on_off_value"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-        
-        <!-- Shutter Delay  -->
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/shutter_delay_ll"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/auto_clibr_shutter_delay"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/shutter_delay_spn"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/auto_clib_shutter_delay_vals"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-        
-        <!-- Shading Table  -->
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/shading_table_ll"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/auto_clibr_shading_table"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/shading_table_spn"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/auto_clib_shading_table_items"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-        
-        <!-- Output sdblk File  -->
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/output_sdblk_file_ll"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/auto_clibr_output_sdblk_file"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/output_sdblk_file_spn"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/auto_clib_output_sdblk_options"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-        <!-- vHDR -->
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/video_hdr_id"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal">
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/video_hdr"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-            <Spinner
-                android:id="@+id/video_hdr_spinner"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/auto_calib_on_off_value"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-        <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:id="@+id/vhdr_set_id"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:orientation="vertical" >
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="145dip"
-                    android:text="@string/vhdr_set_mode"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-                <Spinner
-                    android:id="@+id/vhdr_set_mode_spinner"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </Spinner>
-            </LinearLayout>
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:id="@+id/video_frame_set_min"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="145dip"
-                    android:text="@string/vhdr_set_ratio"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-                <EditText
-                    android:id="@+id/vhdr_set_ratio_edit"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="4"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-            </LinearLayout>
-        </LinearLayout>
-        <!-- Mutli pass NR -->
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/multi_pass_nr_id"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal">
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/multi_pass_nr"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-            <Spinner
-                android:id="@+id/multi_pass_nr_spinner"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/multi_pass_nr_value"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-        <!-- Normal mode: Multi Frame -->
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/mult_frame_capture"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal">
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/auto_clibr_multi_frame"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-            <Spinner
-                android:id="@+id/auto_clibr_multi_frame"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/auto_calib_on_off_value"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/mult_frame_capture_set"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:minWidth="150dip"
-                android:text="@string/auto_clibr_capture_number"
-                android:textColor="#FFFFFF"
-                android:textSize="16sp" >
-            </TextView>
-            <EditText
-                android:id="@+id/mult_capture_number"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:inputType="number"
-                android:maxLength="3"
-                android:minHeight="40dip"
-                android:minWidth="90dip"
-                android:textSize="14sp" >
-            </EditText>
-        </LinearLayout>
-        <!-- Normal mode: ISO interpolation capture -->
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/mult_frame_capture"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal">
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/auto_clibr_iso_interpolation"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-            <Spinner
-                android:id="@+id/auto_clibr_iso_inter_spinner"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/auto_calib_on_off_value"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/auto_clibr_iso_inter_set"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:minWidth="150dip"
-                android:text="@string/auto_clibr_iso_inter_ratio"
-                android:textColor="#FFFFFF"
-                android:textSize="16sp" >
-            </TextView>
-            <EditText
-                android:id="@+id/auto_clibr_iso_inter_edit"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:inputType="number"
-                android:maxLength="3"
-                android:minHeight="40dip"
-                android:minWidth="90dip"
-                android:textSize="14sp" >
-            </EditText>
-        </LinearLayout>
-        <!-- Normal mode: Flash Calibration -->
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal">
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/auto_clibr_flash_calibration"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-            <Spinner
-                android:id="@+id/auto_clibr_flash_spinner"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/auto_calib_on_off_value"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-        <!-- Scene mode -->
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:orientation="horizontal">
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="50dip"
-                android:minWidth="200dip"
-                android:text="@string/auto_clibr_scene_mode"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-            <Spinner
-                android:id="@+id/auto_clibr_scene_mode_spinner"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:entries="@array/normal_capture_scene_mode"
-                android:minHeight="50dip"
-                android:minWidth="90dip"
-                android:textSize="18sp" >
-            </Spinner>
-        </LinearLayout>
-        <!-- common option List-->
-        <ListView
-            android:id="@+id/common_option_list"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:scrollbars="none" >
-        </ListView>
-         <!-- Verification -->
-        <TextView
-            android:id="@+id/auto_clibr_veri_awb"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:text="@string/auto_clibr_verification_awb"
-            android:textColor="#FFFFFF"
-            android:textSize="18sp" />
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:id="@+id/auto_clibr_veri_awb_id"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:orientation="vertical" >
-                <CheckBox
-                    android:id="@+id/auto_clibr_veri_awb_mtk"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/auto_clibr_veri_awb_mtk" />
-                <CheckBox
-                    android:id="@+id/auto_clibr_veri_awb_sensor"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/auto_clibr_veri_awb_sensor" />
-            </LinearLayout>
-        <TextView
-            android:id="@+id/auto_clibr_veri_shading"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:text="@string/auto_clibr_verification_shading"
-            android:textColor="#FFFFFF"
-            android:textSize="18sp" />  
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:id="@+id/auto_clibr_veri_shading_id"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:orientation="vertical" >
-                <CheckBox
-                    android:id="@+id/auto_clibr_veri_shading_mtk_sensor"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/auto_clibr_veri_shading_sensor" />
-                <CheckBox
-                    android:id="@+id/auto_clibr_veri_shading_mtk_1to3"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/auto_clibr_veri_shading_mtk_1to3" />
-                <CheckBox
-                    android:id="@+id/auto_clibr_veri_shading_mtk"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:text="@string/auto_clibr_veri_shading_mtk" />
-            </LinearLayout>
-        <!-- Af Setting -->
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="8dip"
-            android:text="@string/auto_clibr_af_setting"
-            android:textColor="#FFFFFF"
-            android:textSize="18sp" />
-
-        <!-- Af: Auto -->
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/camera_af_auto_ll"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:minWidth="260dip"
-                android:text="@string/auto_clibr_af_auto"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-
-            <RadioButton
-                android:id="@+id/raido_af_auto"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:textSize="18sp" />
-        </LinearLayout>
-
-        <!-- Af: Bracket -->
-        <LinearLayout
-            android:id="@+id/camera_af_bracket_ll"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:minWidth="260dip"
-                android:text="@string/auto_clibr_af_bracket"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-
-            <RadioButton
-                android:id="@+id/raido_af_bracket"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:textSize="18sp" />
-        </LinearLayout>
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/af_bracket_set"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="28dip"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="200dip"
-                    android:text="@string/auto_clibr_af_bracket_range"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <EditText
-                    android:id="@+id/af_bracket_range"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="3"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-            </LinearLayout>
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="200dip"
-                    android:text="@string/auto_clibr_af_bracket_interval"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <Spinner
-                    android:id="@+id/af_bracket_interval"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:entries="@array/auto_calib_af_bracket_interval"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </Spinner>
-            </LinearLayout>
-        </LinearLayout>
-        </LinearLayout>
-        
-        <!-- Af: Full scan -->
-        <LinearLayout
-            android:id="@+id/camera_af_full_scan_ll"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:minWidth="260dip"
-                android:text="@string/auto_clibr_af_full"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-
-            <RadioButton
-                android:id="@+id/raido_af_full"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:textSize="18sp" />
-        </LinearLayout>
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/af_full_scan_set_layout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="28dip"
-            android:orientation="horizontal" >
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="200dip"
-                    android:text="@string/auto_clibr_full_scan_frame_interval"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <EditText
-                    android:id="@+id/af_full_scan_frame_interval_edit"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="5"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-        </LinearLayout>
-        </LinearLayout>
-        
-        <!-- Af: Through focus -->
-        <LinearLayout
-            android:id="@+id/camera_af_through_focus_ll"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:minWidth="260dip"
-                android:text="@string/auto_clibr_af_through"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-
-            <RadioButton
-                android:id="@+id/raido_af_through"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:textSize="18sp" />
-        </LinearLayout>
-
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/af_through_set"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="28dip"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="170dip"
-                    android:text="@string/auto_clibr_af_through_interval"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <EditText
-                    android:id="@+id/af_through_interval"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:maxLength="3"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-            </LinearLayout>
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="170dip"
-                    android:text="@string/auto_clibr_af_through_dirct"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <Spinner
-                    android:id="@+id/af_through_dirct"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:entries="@array/auto_calib_af_through_direct"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </Spinner>
-            </LinearLayout>
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:id="@+id/through_focus_start_set"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="170dip"
-                    android:text="@string/auto_clibr_manual_start"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <EditText
-                    android:id="@+id/af_through_manual_start"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-            </LinearLayout>
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:id="@+id/through_focus_end_set"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="170dip"
-                    android:text="@string/auto_clibr_manual_end"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <EditText
-                    android:id="@+id/af_through_manual_end"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:inputType="number"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </EditText>
-            </LinearLayout>
-            
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:orientation="horizontal" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="170dip"
-                    android:text="@string/auto_clibr_af_through_repeat"
-                    android:textColor="#FFFFFF"
-                    android:textSize="16sp" >
-                </TextView>
-
-                <Spinner
-                    android:id="@+id/af_through_repeat_sp"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:minHeight="40dip"
-                    android:minWidth="90dip"
-                    android:textSize="14sp" >
-                </Spinner>
-            </LinearLayout>
-        </LinearLayout>
-        </LinearLayout>
-        
-        <!-- AF Continuous -->
-        <LinearLayout
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/camera_af_continuous"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:minWidth="260dip"
-                android:text="@string/auto_clibr_af_continuous"
-                android:textColor="#FFFFFF"
-                android:textSize="18sp" />
-
-            <RadioButton
-                android:id="@+id/raido_af_continuous"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:minHeight="40dip"
-                android:textSize="18sp" />
-        </LinearLayout>
-        
-        <!-- custom parameters -->
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:text="@string/camera_custom_parameter"
-            android:textSize="15sp" />
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" 
-            android:layout_marginLeft="8dip"
-            android:layout_marginRight="8dip">
-            <EditText android:id="@+id/camera_custom_param_0_edit"
-                android:layout_height="wrap_content"
-                android:layout_width="90dip"
-                android:textSize="14sp"/>
-            <EditText android:id="@+id/camera_custom_param_1_edit"
-                android:layout_height="wrap_content"
-                android:layout_width="90dip"
-                android:textSize="14sp"/>
-            <EditText android:id="@+id/camera_custom_param_2_edit"
-                android:layout_height="wrap_content"
-                android:layout_width="match_parent"
-                android:hint="@string/camera_custom_param_hint_delimiter"
-                android:textSize="14sp"/>
-        </LinearLayout>
-        
-        <!-- Start preview -->
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:text="@string/capture"
-            android:textSize="15sp" />
-
-        <ListView
-            android:id="@+id/listview_capture"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:scrollbars="none" >
-        </ListView>
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/new_camera.xml b/EngineerMode/res/layout/new_camera.xml
deleted file mode 100644
index 2d94e28..0000000
--- a/EngineerMode/res/layout/new_camera.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2010 The Android Open Source Project Licensed under the Apache 
-    License, Version 2.0 (the "License"); you may not use this file except in compliance 
-    with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
-    Unless required by applicable law or agreed to in writing, software distributed under 
-    the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
-    OF ANY KIND, either express or implied. See the License for the specific language 
-    governing permissions and limitations under the License. -->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/app_root" android:layout_width="match_parent"
-    android:layout_height="match_parent" android:orientation="vertical"
-    android:gravity="center">
-    <TextView android:id="@+id/camear_info_tv" android:layout_width="match_parent"
-        android:layout_height="wrap_content" android:textSize="14sp"/>
-    <!-- <include layout="@layout/mt6589_preview_frame" /> -->
-    <RelativeLayout android:id="@+id/frame_layout"
-        android:layout_width="match_parent" android:layout_height="match_parent"
-        android:layout_weight="1">
-        <com.mediatek.engineermode.cameranew.PreviewFrameLayout
-            android:id="@+id/frame" android:layout_centerInParent="true"
-            android:layout_width="match_parent" android:layout_height="match_parent">
-            <SurfaceView android:id="@+id/camera_preview"
-                android:layout_width="match_parent" android:layout_height="match_parent" />
-            <include layout="@layout/new_focus_indicator" />
-        </com.mediatek.engineermode.cameranew.PreviewFrameLayout>
-    </RelativeLayout>
-    <Button android:id="@+id/capture_btn" android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginBottom="15dip" android:text="@string/capture_picture"
-        android:textSize="16sp">
-    </Button>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/new_focus_indicator.xml b/EngineerMode/res/layout/new_focus_indicator.xml
deleted file mode 100644
index 4d8696b..0000000
--- a/EngineerMode/res/layout/new_focus_indicator.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- Copyright (C) 2011 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<com.mediatek.engineermode.cameranew.RotateLayout xmlns:android="http://schemas.android.com/apk/res/android"
-        android:id="@+id/focus_indicator_rotate_layout"
-        android:layout_height="wrap_content"
-        android:layout_width="wrap_content"
-        android:layout_centerInParent="true">
-    <com.mediatek.engineermode.cameranew.FocusIndicatorView android:id="@+id/focus_indicator"
-            android:layout_height="80dp"
-            android:layout_width="80dp"/>
-</com.mediatek.engineermode.cameranew.RotateLayout>
diff --git a/EngineerMode/res/layout/new_msdc.xml b/EngineerMode/res/layout/new_msdc.xml
deleted file mode 100644
index 5e51fac..0000000
--- a/EngineerMode/res/layout/new_msdc.xml
+++ /dev/null
@@ -1,195 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="vertical" >
-
-            <Spinner
-                android:id="@+id/NEW_MSDC_HOST_sppiner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip" >
-            </Spinner>
-
-            <TextView
-                android:id="@+id/MSDC_Clk_pu_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="0dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/NEW_MSDC_CLK_PU" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/MSDC_Clk_pu_spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="2dip" >
-            </Spinner>
-
-            <TextView
-                android:id="@+id/MSDC_Clk_pd_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="0dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/NEW_MSDC_CLK_PD" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/MSDC_clk_pd_spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="2dip" >
-            </Spinner>
-
-            <TextView
-                android:id="@+id/MSDC_Cmd_pu_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="0dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/NEW_MSDC_CMD_PU" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/MSDC_cmd_pu_spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="2dip" >
-            </Spinner>
-
-            <TextView
-                android:id="@+id/MSDC_Cmd_pd_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="0dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/NEW_MSDC_CMD_PD" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/MSDC_cmd_pd_spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="2dip" >
-            </Spinner>
-
-            <TextView
-                android:id="@+id/MSDC_Data_pu_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="0dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/NEW_MSDC_DATA_PU" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/MSDC_data_pu_spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="2dip" >
-            </Spinner>
-
-            <TextView
-                android:id="@+id/MSDC_Data_pd_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="0dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/NEW_MSDC_DATA_PD" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/MSDC_data_pd_spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="2dip" >
-            </Spinner>
-            <TextView
-                android:id="@+id/MSDC_Rst_pu_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="0dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/NEW_MSDC_RST" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/MSDC_rst_pu_spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="2dip" >
-            </Spinner>
-            <TextView
-                android:id="@+id/MSDC_Ds_pu_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="0dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/NEW_MSDC_DS" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/MSDC_ds_pu_spinner"
-                android:layout_width="240dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="2dip" >
-            </Spinner>
-            <View
-                android:layout_width="240dip"
-                android:layout_height="1dip"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="20dip"
-                android:background="#FF909090" >
-            </View>
-
-            <LinearLayout
-                android:id="@+id/LinearLayout"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dip"
-                android:orientation="horizontal" >
-
-                <Button
-                    android:id="@+id/NEW_MSDC_Get"
-                    android:layout_width="110dip"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="10dip"
-                    android:layout_marginTop="10dip"
-                    android:text="@string/NEW_MSDC_Get" >
-                </Button>
-
-                <Button
-                    android:id="@+id/NEW_MSDC_Set"
-                    android:layout_width="110dip"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="20dip"
-                    android:layout_marginTop="10dip"
-                    android:text="@string/NEW_MSDC_Set" >
-                </Button>
-            </LinearLayout>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/nfc_entry.xml b/EngineerMode/res/layout/nfc_entry.xml
deleted file mode 100644
index 382f7ad..0000000
--- a/EngineerMode/res/layout/nfc_entry.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    >
-
-
-<ListView android:layout_width="fill_parent" android:layout_height="wrap_content" 
-			android:id="@+id/ListView_mainmenu">
-</ListView>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/nfc_rawdata.xml b/EngineerMode/res/layout/nfc_rawdata.xml
deleted file mode 100644
index fe4dc61..0000000
--- a/EngineerMode/res/layout/nfc_rawdata.xml
+++ /dev/null
@@ -1,161 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-	android:layout_width="fill_parent" android:layout_height="fill_parent">
-	
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:layout_width="fill_parent" android:layout_height="fill_parent"
-	android:orientation="vertical">
-
-
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="fill_parent" android:layout_height="fill_parent">
-		
-
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="fill_parent" android:layout_marginTop = "5pt">
-				
-			<RadioGroup android:layout_height="fill_parent" android:layout_width="fill_parent" 
-			android:orientation="vertical" android:id="@+id/NFC_RawData_Group">
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_RawData_Item1" android:text="@string/NFC_RawData_Item1" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_RawData_Item2" android:text="@string/NFC_RawData_Item2" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_RawData_Item3" android:text="@string/NFC_RawData_Item3" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_RawData_Item4" android:text="@string/NFC_RawData_Item4" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_RawData_Item5" android:text="@string/NFC_RawData_Item5" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_RawData_Item6" android:text="@string/NFC_RawData_Item6" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_RawData_Item7" android:text="@string/NFC_RawData_Item7" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_RawData_Item8" android:text="@string/NFC_RawData_Item8" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-			</RadioGroup>
-		</TableRow>	
-		
-	</TableLayout>	
-
-	
-		
-			
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-			android:id="@+id/View_Alwayse_on_appendix">
-			
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-		<TextView android:text="@string/NFC_RawData_Alwayson_appendix_module"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FF009000"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-		<Spinner android:layout_height="wrap_content" 
-		 android:layout_width="fill_parent" 
-		 android:layout_marginLeft="3dip" 
-		 android:id="@+id/NFC_RawData_Alwayson_appendix_module" 
-  		android:layout_marginTop="3dip"></Spinner>  
-			
-		<TextView android:text="@string/NFC_RawData_Alwayson_appendix_bitrate"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FF009000"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-		<Spinner android:layout_height="wrap_content" 
-		 android:layout_width="fill_parent" 
-		 android:layout_marginLeft="3dip" 
-		 android:id="@+id/NFC_RawData_Alwayson_appendix_bitrate" 
-  		android:layout_marginTop="3dip"></Spinner>  
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-
-</LinearLayout>
-
-</ScrollView>
-
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-			android:id="@+id/View_Card_emul_mode_appendix">
-			
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-		<TextView android:text="@string/NFC_RawData_cardEmulMode_appendix_type"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FF009000"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-		<Spinner android:layout_height="wrap_content" 
-		 android:layout_width="fill_parent" 
-		 android:layout_marginLeft="3dip" 
-		 android:id="@+id/NFC_RawData_cardEmulMode_appendix_type" 
-  		android:layout_marginTop="3dip"></Spinner>  
-			
-		<TextView android:text="@string/NFC_RawData_cardEmulMode_appendix_protocol"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FF009000"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-		<Spinner android:layout_height="wrap_content" 
-		 android:layout_width="fill_parent" 
-		 android:layout_marginLeft="3dip" 
-		 android:id="@+id/NFC_RawData_cardEmulMode_appendix_protocol" 
-  		android:layout_marginTop="3dip"></Spinner>  
-
-
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-
-</LinearLayout>
-
-</ScrollView>
-
-
-
-		<Button android:id="@+id/NFC_RawData_Start" android:text="@string/NFC_RawData_Start"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"
-			android:layout_marginTop = "1pt"></Button>		
-	
-	
-		<Button android:id="@+id/NFC_RawData_Stop" android:text="@string/NFC_RawData_Stop"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"
-			android:layout_marginTop = "1pt"></Button>
-	
-	
-
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-	<TextView 	android:text="@string/NFC_RawData_Result"
-				android:id="@+id/NFC_RawData_Result"
-				android:layout_marginLeft = "3pt" 
-				android:layout_marginTop = "5pt"
-				android:textColor="#FF00FF00"				
-				android:layout_width="fill_parent" android:layout_height="fill_parent"></TextView>
-	
-</LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/nfc_settings.xml b/EngineerMode/res/layout/nfc_settings.xml
deleted file mode 100644
index 4260057..0000000
--- a/EngineerMode/res/layout/nfc_settings.xml
+++ /dev/null
@@ -1,77 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-	android:layout_width="fill_parent" android:layout_height="wrap_content">
-	
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:layout_width="fill_parent" android:layout_height="fill_parent"
-	android:orientation="vertical">
-
-
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="fill_parent">
-		
-
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="fill_parent"  android:gravity="center|center_horizontal">
-			<TextView android:text="@string/NFC_Settings_NFC_Text"
-				android:textColor="#FF00FF00"
-				android:layout_marginLeft = "3pt"  android:gravity="center_vertical"
-				android:layout_width="wrap_content" android:layout_height="fill_parent"></TextView>
-				
-			<RadioGroup android:layout_height="fill_parent" android:layout_width="wrap_content" android:orientation="horizontal" android:id="@+id/NFC_Settings_NFC">
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_Settings_NFC_OFF" android:text="@string/NFC_Settings_NFC_OFF" 
-									  android:layout_width="wrap_content"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_Settings_NFC_ON" android:text="@string/NFC_Settings_NFC_ON" 
-									  android:layout_width="wrap_content"></RadioButton>
-				
-			</RadioGroup>
-		</TableRow>	
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="fill_parent"  android:gravity="center_horizontal">
-			<TextView android:text="@string/NFC_Settings_NFCDBG_Text"
-				android:textColor="#FF00FF00"
-				android:layout_marginLeft = "3pt"  android:gravity="center_vertical"
-				android:layout_width="wrap_content" android:layout_height="fill_parent"></TextView>
-				
-			<RadioGroup android:layout_height="fill_parent" android:layout_width="wrap_content" android:orientation="horizontal" android:id="@+id/NFC_Settings_NFCDBG">
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_Settings_NFCDBG_OFF" android:text="@string/NFC_Settings_NFCDBG_OFF" 
-									  android:layout_width="wrap_content"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_Settings_NFCDBG_ON" android:text="@string/NFC_Settings_NFCDBG_ON" 
-									  android:layout_width="wrap_content"></RadioButton>
-				
-			</RadioGroup>
-		</TableRow>	
-		
-		
-			<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="fill_parent"   android:gravity="center_horizontal">
-			<TextView android:text="@string/NFC_Settings_Protocol_Text"
-				android:layout_marginLeft = "3pt" android:gravity="center_vertical"
-				android:textColor="#FF00FF00"
-				android:layout_width="wrap_content" android:layout_height="fill_parent"></TextView>
-				
-			<RadioGroup android:layout_height="fill_parent" android:layout_width="wrap_content" android:orientation="horizontal" android:id="@+id/NFC_Settings_Protocol">
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_Settings_Protocol_OFF" android:text="@string/NFC_Settings_Protocol_OFF" 
-									android:singleLine="true" android:layout_width="wrap_content"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_Settings_Protocol_RD" android:text="@string/NFC_Settings_Protocol_RD" 
-									 android:layout_width="wrap_content"></RadioButton>
-				<!--<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_Settings_Protocol_SW" android:text="@string/NFC_Settings_Protocol_SW" 
-									android:singleLine="true" android:layout_width="wrap_content"></RadioButton>-->
-			</RadioGroup>
-		</TableRow>	
-		
-</TableLayout>	
-	
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-
-<Button android:id="@+id/NFC_Settings_Btn_Set" android:text="@string/NFC_Settings_Btn_Set"
-		android:layout_width="fill_parent" android:layout_height="fill_parent"
-		android:layout_marginTop = "5pt"></Button>
-	
-</LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/nfc_settings_result.xml b/EngineerMode/res/layout/nfc_settings_result.xml
deleted file mode 100644
index 61ff657..0000000
--- a/EngineerMode/res/layout/nfc_settings_result.xml
+++ /dev/null
@@ -1,163 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="center_horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-	
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="center_horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content">
-		<TextView android:text="@string/NFC_Settings_Result_Version"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909090">
-</View>
-					
-		<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content"
-		android:gravity="left">
-		
-			<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-				android:layout_height="wrap_content" android:gravity="left">
-				<TextView android:text="@string/NFC_Settings_Result_Version_FW"				
-					android:layout_marginLeft = "3pt"
-					android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>
-				<TextView android:id="@+id/NFC_Settings_Result_Version_FW"
-					android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-					android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>		
-			</TableRow>
-			
-			<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-				android:layout_height="wrap_content" android:gravity="left">
-				<TextView android:text="@string/NFC_Settings_Result_Version_HW"				
-					android:layout_marginLeft = "3pt"
-					android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-				<TextView android:id="@+id/NFC_Settings_Result_Version_HW"
-					android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-					android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>		
-			</TableRow>
-			
-			<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-				android:layout_height="wrap_content" android:gravity="left">
-				<TextView android:text="@string/NFC_Settings_Result_Version_SW"				
-					android:layout_marginLeft = "3pt"
-					android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-				<TextView android:id="@+id/NFC_Settings_Result_Version_SW"
-					android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-					android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>		
-			</TableRow>	
-		
-		</TableLayout>
-
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909090">
-</View>
-		<TextView android:text="@string/NFC_Settings_Result_Support"				
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909090">
-</View>
-
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_Settings_Result_Support_Reader" 
-			android:id="@+id/NFC_Settings_Result_Support_Reader"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"			
-			android:textColor="#FF009000"></TextView>
-			
-			<TextView android:text="@string/NFC_Settings_Result_Support_Card" 
-			android:id="@+id/NFC_Settings_Result_Support_Card"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"			
-			android:textColor="#FF009000"></TextView>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_MifareUL" android:id="@+id/NFC_Settings_Result_Support_RM_MifareUL"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_MifareUL" android:id="@+id/NFC_Settings_Result_Support_CM_MifareUL"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_MifareStd" android:id="@+id/NFC_Settings_Result_Support_RM_MifareStd"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_MifareStd" android:id="@+id/NFC_Settings_Result_Support_CM_MifareStd"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_ISO14443_4A" android:id="@+id/NFC_Settings_Result_Support_RM_ISO14443_4A"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_ISO14443_4A" android:id="@+id/NFC_Settings_Result_Support_CM_ISO14443_4A"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_ISO14443_4B" android:id="@+id/NFC_Settings_Result_Support_RM_ISO14443_4B"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_ISO14443_4B" android:id="@+id/NFC_Settings_Result_Support_CM_ISO14443_4B"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_Jewel" android:id="@+id/NFC_Settings_Result_Support_RM_Jewel"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_Jewel" android:id="@+id/NFC_Settings_Result_Support_CM_Jewel"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_NFC" android:id="@+id/NFC_Settings_Result_Support_RM_NFC"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_NFC" android:id="@+id/NFC_Settings_Result_Support_CM_NFC"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_Felica" android:id="@+id/NFC_Settings_Result_Support_RM_Felica"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_Felica" android:id="@+id/NFC_Settings_Result_Support_CM_Felica"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_ISO15693" android:id="@+id/NFC_Settings_Result_Support_RM_ISO15693"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_ISO15693" android:id="@+id/NFC_Settings_Result_Support_CM_ISO15693"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-
-
-</TableLayout>
-
-	
-</LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/nfc_software_stack.xml b/EngineerMode/res/layout/nfc_software_stack.xml
deleted file mode 100644
index ee818e3..0000000
--- a/EngineerMode/res/layout/nfc_software_stack.xml
+++ /dev/null
@@ -1,169 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="center_horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-	
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="center_horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content">
-		
-		<TextView android:text="@string/NFC_SoftwareStack_RegisterNotification"				
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>		
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_MifareUL" android:id="@+id/NFC_Settings_Result_Support_MifareUL"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_MifareStd" android:id="@+id/NFC_Settings_Result_Support_MifareStd"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_ISO14443_4A" android:id="@+id/NFC_Settings_Result_Support_ISO14443_4A"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_ISO14443_4B" android:id="@+id/NFC_Settings_Result_Support_ISO14443_4B"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_Jewel" android:id="@+id/NFC_Settings_Result_Support_Jewel"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_NFC" android:id="@+id/NFC_Settings_Result_Support_NFC"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_Felica" android:id="@+id/NFC_Settings_Result_Support_Felica"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_ISO15693" android:id="@+id/NFC_Settings_Result_Support_ISO15693"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_Settings_Result_Support_ALL" android:id="@+id/NFC_Settings_Result_Support_ALL"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>
-		</TableRow>
-		
-<Button android:id="@+id/NFC_SoftwareStack_RegisterNotification_BtnSet" android:text="@string/NFC_SoftwareStack_RegisterNotification_BtnSet"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "3pt"></Button>
-				
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-<TextView android:text="@string/NFC_SoftwareStack_DiscoveryNotification"				
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-				
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_DN_ISO14443A" android:id="@+id/NFC_SoftwareStack_DN_ISO14443A"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_DN_ISO14443B" android:id="@+id/NFC_SoftwareStack_DN_ISO14443B"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_DN_felica212" android:id="@+id/NFC_SoftwareStack_DN_felica212"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_DN_felica424" android:id="@+id/NFC_SoftwareStack_DN_felica424"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_DN_ISO15693" android:id="@+id/NFC_SoftwareStack_DN_ISO15693"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_DN_NFCActive" android:id="@+id/NFC_SoftwareStack_DN_NFCActive"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_DN_DCE" android:id="@+id/NFC_SoftwareStack_DN_DCE"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_DN_DisableP2P" android:id="@+id/NFC_SoftwareStack_DN_DisableP2P"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-</TableLayout>
-
-
-<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="fill_parent" android:layout_height="fill_parent">
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_DN_Duration"
-			     android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>	
-			<EditText android:layout_height="wrap_content" android:layout_width="120dip"
-			     android:numeric="integer" android:maxLength="8"
-			     android:id="@+id/NFC_SoftwareStack_DN_Duration" android:singleLine="true"></EditText>		
-		</TableRow>
-</TableLayout>	
-
-<Button android:id="@+id/NFC_SoftwareStack_DiscoveryNotification_BtnSet" android:text="@string/NFC_SoftwareStack_DiscoveryNotification_BtnSet"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "3pt"></Button>	
-		
-</LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/nfc_software_stack_p2p_init_dect.xml b/EngineerMode/res/layout/nfc_software_stack_p2p_init_dect.xml
deleted file mode 100644
index 0636a15..0000000
--- a/EngineerMode/res/layout/nfc_software_stack_p2p_init_dect.xml
+++ /dev/null
@@ -1,61 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="center_horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-	
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="center_horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content"
-		android:gravity="left">
-		
-		<TextView android:text="@string/NFC_SoftwareStack_P2P_InitDect_Text"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FF00FF00" android:focusable="false"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-				
-		<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					android:minLines="5" android:maxLines="12" android:editable="false"	android:enabled="true"	
-					android:textColor="#FFFFFF00" android:background="#FF707070" android:scrollbars="vertical"		    
-			     android:id="@+id/NFC_SoftwareStack_P2P_InitDect_Out" android:singleLine="false"></EditText>
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF00FF00">
-</View>	
-		<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					android:maxLines="12" android:textColor="#FFFFFF00" android:background="#FF707070"	
-					 android:scrollbars="vertical"		    
-			     android:id="@+id/NFC_SoftwareStack_P2P_InitDect_In" android:singleLine="false"></EditText>	     
-
-
-		
-		<Button android:id="@+id/NFC_SoftwareStack_P2P_InitDect_Send" 
-				android:text="@string/NFC_SoftwareStack_P2P_InitDect_Send"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"
-			android:layout_marginTop = "3pt"></Button>			     
-			     
-		<Button android:id="@+id/NFC_SoftwareStack_P2P_InitDect_Recv" 
-				android:text="@string/NFC_SoftwareStack_P2P_InitDect_Recv"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"
-			android:layout_marginTop = "1pt"></Button>
-			
-				     
-
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-								
-						
-</TableLayout>	
-	
-</LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/nfc_software_stack_raw_command.xml b/EngineerMode/res/layout/nfc_software_stack_raw_command.xml
deleted file mode 100644
index 49faa96..0000000
--- a/EngineerMode/res/layout/nfc_software_stack_raw_command.xml
+++ /dev/null
@@ -1,55 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="center_horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-	
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="center_horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content"
-		android:gravity="left">
-		
-		<TextView android:text="@string/NFC_SoftwareStack_RawCommand_Desc_Text"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FF00FF00" android:focusable="false"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-				
-		<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					android:minLines="5" android:maxLines="12" android:editable="true"	android:enabled="true"	
-					android:textColor="#FFFFFF00" android:background="#FF707070" android:scrollbars="vertical"		    
-			     android:id="@+id/NFC_SoftwareStack_RawCommand_String" android:singleLine="false"></EditText>
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-		
-		<Button android:id="@+id/NFC_SoftwareStack_RawCommand_Send" 
-				android:text="@string/NFC_SoftwareStack_RawCommand_Send"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"
-			android:layout_marginTop = "3pt"></Button>			     
-			     
-		<Button android:id="@+id/NFC_SoftwareStack_RawCommand_Examp" 
-				android:text="@string/NFC_SoftwareStack_RawCommand_Examp"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"
-			android:layout_marginTop = "1pt"></Button>
-			
-				     
-
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-								
-						
-</TableLayout>	
-	
-</LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/nfc_software_stack_scan.xml b/EngineerMode/res/layout/nfc_software_stack_scan.xml
deleted file mode 100644
index d3bbb1b..0000000
--- a/EngineerMode/res/layout/nfc_software_stack_scan.xml
+++ /dev/null
@@ -1,154 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-	
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content"
-		android:gravity="left">
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_Scan_TagDect" android:id="@+id/NFC_SoftwareStack_Scan_TagDect"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_Scan_NDEF" android:id="@+id/NFC_SoftwareStack_Scan_NDEF"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<!-- TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_Scan_P2PTarget" android:id="@+id/NFC_SoftwareStack_Scan_P2PTarget"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_Scan_P2PInit" android:id="@+id/NFC_SoftwareStack_Scan_P2PInit"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow -->		
-		
-	</TableLayout>
-	
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content"
-		android:gravity="left">
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content" android:gravity="left">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_CardType"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_CardType"
-				android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-				android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content" android:gravity="left">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Uid"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_Uid"
-				android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content" android:gravity="left">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Sak"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_Sak"
-				android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content" android:gravity="left">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_AtqA"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_AtqA"
-				android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content" android:gravity="left">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_AppData"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_AppData"
-				android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content" android:gravity="left">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_MaxDataRate"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_MaxDataRate"
-				android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>		
-		</TableRow>
-</TableLayout>
-
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF009000">
-</View>	
-	
-	<Button android:id="@+id/NFC_SoftwareStack_Scan_BtnRead" android:text="@string/NFC_SoftwareStack_Scan_BtnRead"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "1pt"></Button>
-				
-	
-
-	<Button android:id="@+id/NFC_SoftwareStack_Scan_BtnWrite" android:text="@string/NFC_SoftwareStack_Scan_BtnWrite"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "1pt"></Button>
-				
-
-
-	<Button android:id="@+id/NFC_SoftwareStack_Scan_BtnDisconnected" android:text="@string/NFC_SoftwareStack_Scan_BtnDisconnected"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "1pt"></Button>
-				
-
-
-	<Button android:id="@+id/NFC_SoftwareStack_Scan_BtnRawCommand" android:text="@string/NFC_SoftwareStack_Scan_BtnRawCommand"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "1pt"></Button>
-				
-
-
-	<Button android:id="@+id/NFC_SoftwareStack_Scan_BtnFormat" android:text="@string/NFC_SoftwareStack_Scan_BtnFormat"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "1pt"></Button>
-				
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:layout_marginTop = "10pt"
-			android:background="#FF009000">
-</View>	
-
-	
-</LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/nfc_software_stack_scan_read_ndef.xml b/EngineerMode/res/layout/nfc_software_stack_scan_read_ndef.xml
deleted file mode 100644
index 813b34f..0000000
--- a/EngineerMode/res/layout/nfc_software_stack_scan_read_ndef.xml
+++ /dev/null
@@ -1,343 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-	
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
- 
- 
- 
-              
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-			android:id="@+id/View_Tag">
-			
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_TagType"				
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content"
-		android:gravity="left">
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_Scan_Read_URI" 
-			android:id="@+id/NFC_SoftwareStack_Scan_Read_URI"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_Scan_Read_TEXT" 
-			android:id="@+id/NFC_SoftwareStack_Scan_Read_TEXT"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>	
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_TEXT_Lang"
-				android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_Read_TEXT_Lang"
-				android:textColor="#FF00FF00"
-				android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_Scan_Read_SmartPos" 
-			android:id="@+id/NFC_SoftwareStack_Scan_Read_SmartPos"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content">
-			<CheckBox android:text="@string/NFC_SoftwareStack_Scan_Read_Other" 
-			android:id="@+id/NFC_SoftwareStack_Scan_Read_Other"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>			
-		</TableRow>
-	</TableLayout>
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_TagInfo"				
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-	
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content"
-		android:gravity="left">
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content" android:gravity="left">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_RecFlags"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_Read_RecFlags"
-				android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-				android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content" android:gravity="left">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_RecId"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_Read_RecId"
-				android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content" android:gravity="left">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_RecTnf"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_Read_RecTnf"
-				android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="wrap_content" android:gravity="left">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PayloadLen"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-			<TextView android:id="@+id/NFC_SoftwareStack_Scan_Read_PayloadLen"
-				android:layout_marginLeft = "3pt" android:textColor="#FF00FF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>		
-		</TableRow>
-		
-</TableLayout>
-		
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PayloadHex"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-		<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					android:minLines="1" android:maxLines="10" android:editable="false"	android:enabled="true"	
-					android:textColor="#FF00FF00" android:background="#FF707070" android:scrollbars="vertical"		    
-			     android:id="@+id/NFC_SoftwareStack_Scan_Read_PayloadHex" android:singleLine="false"></EditText>
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PayloadASCII"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>			
-		<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					android:minLines="1" android:maxLines="10" android:editable="false"	android:enabled="true"	
-					android:textColor="#FF00FF00" android:background="#FF707070" android:scrollbars="vertical"		    
-			     android:id="@+id/NFC_SoftwareStack_Scan_Read_PayloadASCII" android:singleLine="false"></EditText>
-
-</LinearLayout>			     
-</ScrollView>
-
-
-
-
-
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-			android:id="@+id/View_Page">
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageInfo"				
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="fill_parent" android:layout_height="fill_parent">
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageAddr"
-			     android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>	
-			<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-			     android:numeric="integer" android:maxLength="2"
-			     android:id="@+id/NFC_SoftwareStack_Scan_Read_PageAddr" android:singleLine="true"></EditText>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageDataDesc"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>			
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageDataDescBit"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageI"
-				android:id="@+id/NFC_SoftwareStack_Scan_Read_PageI_T"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>			
-			<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					 android:editable="false"	android:enabled="true"	
-					android:textColor="#FF00FF00" android:background="#FF707070"  android:singleLine="true"		    
-			     android:id="@+id/NFC_SoftwareStack_Scan_Read_PageI"></EditText>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageII"	
-				android:id="@+id/NFC_SoftwareStack_Scan_Read_PageII_T"			
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>			
-			<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					 android:editable="false"	android:enabled="true"	
-					android:textColor="#FF00FF00" android:background="#FF707070"  android:singleLine="true"		    
-			     android:id="@+id/NFC_SoftwareStack_Scan_Read_PageII"></EditText>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageIII"
-				android:id="@+id/NFC_SoftwareStack_Scan_Read_PageIII_T"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>			
-			<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					 android:editable="false"	android:enabled="true"	
-					android:textColor="#FF00FF00" android:background="#FF707070"  android:singleLine="true"		    
-			     android:id="@+id/NFC_SoftwareStack_Scan_Read_PageIII"></EditText>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageIV"	
-				android:id="@+id/NFC_SoftwareStack_Scan_Read_PageIV_T"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>			
-			<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					 android:editable="false"	android:enabled="true"	
-					android:textColor="#FF00FF00" android:background="#FF707070"  android:singleLine="true"		    
-			     android:id="@+id/NFC_SoftwareStack_Scan_Read_PageIV"></EditText>
-		</TableRow>
-		
-	</TableLayout>
-	
-	<Button android:id="@+id/NFC_SoftwareStack_Scan_Read_Btn1KOK" 
-		android:text="@string/NFC_SoftwareStack_Scan_Read_BtnOK"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "5pt"></Button>	
-	
-</LinearLayout>	
-</ScrollView>	
-	
-	
-	
-	
-	
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-			android:id="@+id/View_Sector">
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"              
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-              
-              	
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_SectorInfo_Text"				
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>		
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="fill_parent" android:layout_height="fill_parent">
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_SectorNo"
-			     android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>	
-			<EditText android:layout_height="wrap_content" android:layout_width="120dip"
-			     android:numeric="integer" android:maxLength="8"
-			     android:id="@+id/NFC_SoftwareStack_Scan_Read_SectorNo" android:singleLine="true"></EditText>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_BlockNo"
-			     android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>	
-			<EditText android:layout_height="wrap_content" android:layout_width="120dip"
-			     android:numeric="integer" android:maxLength="8"
-			     android:id="@+id/NFC_SoftwareStack_Scan_Read_BlockNo" android:singleLine="true"></EditText>		
-		</TableRow>
-		
-		
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_SectorInfo"
-			     android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>	
-		<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					 android:editable="false"	android:enabled="true"	
-					 android:minLines="1" android:maxLines="10"
-					android:textColor="#FF00FF00" android:background="#FF707070"  
-					android:singleLine="false"		    
-			     android:id="@+id/NFC_SoftwareStack_Scan_Read_SectorInfo"></EditText>		
-		
-		
-	</TableLayout>
-	
-		
-	
-	<Button android:id="@+id/NFC_SoftwareStack_Scan_Read_Btn4KOK" 
-		android:text="@string/NFC_SoftwareStack_Scan_Read_BtnOK"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "5pt"></Button>
-				
-	
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:layout_marginTop = "10pt"
-			android:background="#FF009000">
-</View>	
-
-</LinearLayout>
-</ScrollView>	
-	
-</LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/nfc_software_stack_scan_write_ndef.xml b/EngineerMode/res/layout/nfc_software_stack_scan_write_ndef.xml
deleted file mode 100644
index 4bb9edd..0000000
--- a/EngineerMode/res/layout/nfc_software_stack_scan_write_ndef.xml
+++ /dev/null
@@ -1,161 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-	
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="left"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_TagType"				
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content"
-		android:gravity="left">
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="fill_parent" android:layout_marginTop = "5pt">
-				
-			<RadioGroup android:layout_height="fill_parent" android:layout_width="fill_parent" 
-			android:orientation="vertical" android:id="@+id/NFC_SoftwareStack_Scan_Write_TagGP">
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_SoftwareStack_Scan_Write_URI" android:text="@string/NFC_SoftwareStack_Scan_Read_URI" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_SoftwareStack_Scan_Write_TEXT" android:text="@string/NFC_SoftwareStack_Scan_Read_TEXT" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_SoftwareStack_Scan_Write_SmartPos" android:text="@string/NFC_SoftwareStack_Scan_Read_SmartPos" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_SoftwareStack_Scan_Write_Vcard" android:text="@string/NFC_SoftwareStack_Scan_Read_Vcard" 
-									android:layout_weight="1" android:layout_width="fill_parent"></RadioButton>
-				
-			</RadioGroup>
-		</TableRow>	
-		
-		<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-				android:minLines="1" android:maxLines="10"			      
-			     android:id="@+id/NFC_SoftwareStack_Scan_Write_TEXT" android:singleLine="false"></EditText>		
-			     
-	</TableLayout>
-
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageInfo"				
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="fill_parent" android:layout_height="fill_parent">
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageAddr"
-			     android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>	
-			<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-			     android:numeric="integer" android:maxLength="2"
-			     android:id="@+id/NFC_SoftwareStack_Scan_Write_PageAddr" android:singleLine="true"></EditText>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_PageDataDesc"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>			
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Write_PageDataDescBit"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_PageX"
-				android:id="@+id/NFC_SoftwareStack_Scan_Read_PageX_T"				
-				android:layout_marginLeft = "3pt"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>			
-			<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					 android:editable="true" android:enabled="true"	
-					android:singleLine="true" android:maxLength="11"	    
-			     android:id="@+id/NFC_SoftwareStack_Scan_Write_PageX"></EditText>
-		</TableRow>
-		
-		
-	</TableLayout>	
-	
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_SectorInfo_Text"				
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-<View android:layout_height="1dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>		
-
-	<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="fill_parent" android:layout_height="fill_parent">
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_SectorNo"
-			     android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>	
-			<EditText android:layout_height="wrap_content" android:layout_width="120dip"
-			     android:numeric="integer" android:maxLength="8"
-			     android:id="@+id/NFC_SoftwareStack_Scan_Write_SectorNo" android:singleLine="true"></EditText>		
-		</TableRow>
-		
-		<TableRow android:id="@+id/TableRow01" android:layout_width="fill_parent"
-			android:layout_height="wrap_content">
-			<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_BlockNo"
-			     android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>	
-			<EditText android:layout_height="wrap_content" android:layout_width="120dip"
-			     android:numeric="integer" android:maxLength="8"
-			     android:id="@+id/NFC_SoftwareStack_Scan_Write_BlockNo" android:singleLine="true"></EditText>		
-		</TableRow>
-		
-		
-		<TextView android:text="@string/NFC_SoftwareStack_Scan_Read_SectorInfo"
-			     android:layout_width="fill_parent" android:layout_height="wrap_content"></TextView>	
-		<EditText android:layout_height="wrap_content" android:layout_width="fill_parent"
-					 android:editable="false"	android:enabled="true"	
-					 android:minLines="1" android:maxLines="10"
-					android:textColor="#FF00FF00" android:background="#FF707070"  
-					android:singleLine="false"		    
-			     android:id="@+id/NFC_SoftwareStack_Scan_Write_SectorInfo"></EditText>	
-			     
-	</TableLayout>
-	
-	
-	<Button android:id="@+id/NFC_SoftwareStack_Scan_Write_BtnOK" 
-		android:text="@string/NFC_SoftwareStack_Scan_Read_BtnOK"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "5pt"></Button>
-				
-	
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:layout_marginTop = "10pt"
-			android:background="#FF009000">
-</View>	
-
-	
-</LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/nfc_software_stack_secure.xml b/EngineerMode/res/layout/nfc_software_stack_secure.xml
deleted file mode 100644
index 59b3cdd..0000000
--- a/EngineerMode/res/layout/nfc_software_stack_secure.xml
+++ /dev/null
@@ -1,132 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="center_horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-	
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              android:orientation="vertical"
-              android:padding="4dip"
-              android:gravity="center_horizontal"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent">
-
-<TableLayout android:id="@+id/TableLayout01"
-		android:layout_width="wrap_content" android:layout_height="wrap_content"
-		android:gravity="left">
-		
-		<TextView android:text="@string/NFC_SoftwareStack_Secure_Ele_Text"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-		<CheckBox android:text="@string/NFC_SoftwareStack_Secure_Ele_Dect" android:id="@+id/NFC_SoftwareStack_Secure_Ele_Dect"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"></CheckBox>	
-		<TextView android:text="@string/NFC_SoftwareStack_Secure_Ele_Info"
-				android:id="@+id/NFC_SoftwareStack_Secure_Ele_Info"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FF00FF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-					
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-
-		<TextView android:text="@string/NFC_SoftwareStack_Secure_Ele_SetMode_Text"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>	
-		<TextView android:text="@string/NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_Text"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FF009000"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-				
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="fill_parent"  android:gravity="center|center_horizontal">				
-			<RadioGroup android:layout_height="fill_parent" android:layout_width="wrap_content" android:orientation="horizontal" android:id="@+id/NFC_SoftwareStack_Secure_Ele_SetMode_Ele1">
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_OFF" android:text="@string/NFC_SoftwareStack_Secure_Ele_SetMode_Ele_OFF" 
-									  android:layout_width="wrap_content"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_Virtual" android:text="@string/NFC_SoftwareStack_Secure_Ele_SetMode_Ele_Virtual" 
-									  android:layout_width="wrap_content"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_Wired" android:text="@string/NFC_SoftwareStack_Secure_Ele_SetMode_Ele_Wired" 
-									  android:layout_width="wrap_content"></RadioButton>
-			</RadioGroup>
-		</TableRow>		
-		
-		<TextView android:text="@string/NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_Text"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FF009000"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-				
-		<TableRow android:id="@+id/TableRow01" android:layout_width="wrap_content"
-			android:layout_height="fill_parent"  android:gravity="center|center_horizontal">				
-			<RadioGroup android:layout_height="fill_parent" android:layout_width="wrap_content" android:orientation="horizontal" android:id="@+id/NFC_SoftwareStack_Secure_Ele_SetMode_Ele2">
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_OFF" android:text="@string/NFC_SoftwareStack_Secure_Ele_SetMode_Ele_OFF" 
-									  android:layout_width="wrap_content"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_Virtual" android:text="@string/NFC_SoftwareStack_Secure_Ele_SetMode_Ele_Virtual" 
-									  android:layout_width="wrap_content"></RadioButton>
-				<RadioButton android:layout_height="wrap_content" android:id="@+id/NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_Wired" android:text="@string/NFC_SoftwareStack_Secure_Ele_SetMode_Ele_Wired" 
-									  android:layout_width="wrap_content"></RadioButton>
-			</RadioGroup>
-		</TableRow>		
-						
-		<Button android:id="@+id/NFC_SoftwareStack_Secure_Ele_SetMode_Set" android:text="@string/NFC_SoftwareStack_Secure_Ele_SetMode_Set"
-		android:layout_width="fill_parent" android:layout_height="wrap_content"
-		android:layout_marginTop = "1pt"></Button>		
-				
-<View android:layout_height="3dip" android:layout_width="fill_parent"
-			android:background="#FF909000">
-</View>		
-
-		<TextView android:text="@string/NFC_SoftwareStack_Secure_Ele_EventDect_Text"
-				android:layout_marginLeft = "3pt"				
-				android:textColor="#FFFFFF00"
-				android:layout_width="wrap_content" android:layout_height="wrap_content"></TextView>
-				
-		
-			<CheckBox android:text="@string/NFC_SoftwareStack_Secure_Ele_EventDect_StartTrans" 
-						android:id="@+id/NFC_SoftwareStack_Secure_Ele_EventDect_StartTrans"
-					android:layout_width="fill_parent" android:layout_height="wrap_content">
-			</CheckBox>
-			<CheckBox android:text="@string/NFC_SoftwareStack_Secure_Ele_EventDect_RF_ON" 
-					android:id="@+id/NFC_SoftwareStack_Secure_Ele_EventDect_RF_ON"
-			android:layout_width="fill_parent" android:layout_height="wrap_content">
-			</CheckBox>
-		
-		
-		
-			<CheckBox android:text="@string/NFC_SoftwareStack_Secure_Ele_EventDect_EndTrans" 
-						android:id="@+id/NFC_SoftwareStack_Secure_Ele_EventDect_EndTrans"
-					android:layout_width="fill_parent" android:layout_height="wrap_content">
-			</CheckBox>
-			<CheckBox android:text="@string/NFC_SoftwareStack_Secure_Ele_EventDect_RF_OFF" 
-					android:id="@+id/NFC_SoftwareStack_Secure_Ele_EventDect_RF_OFF"
-			android:layout_width="fill_parent" android:layout_height="wrap_content">
-			</CheckBox>
-		
-			<CheckBox android:text="@string/NFC_SoftwareStack_Secure_Ele_EventDect_Trans" 
-						android:id="@+id/NFC_SoftwareStack_Secure_Ele_EventDect_Trans"
-					android:layout_width="fill_parent" android:layout_height="wrap_content">
-			</CheckBox>
-			<CheckBox android:text="@string/NFC_SoftwareStack_Secure_Ele_EventDect_Conn" 
-					android:id="@+id/NFC_SoftwareStack_Secure_Ele_EventDect_Conn"
-			android:layout_width="fill_parent" android:layout_height="wrap_content">
-			</CheckBox>
-					
-						
-						
-</TableLayout>	
-	
-</LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/non_sleep_mode.xml b/EngineerMode/res/layout/non_sleep_mode.xml
deleted file mode 100644
index 3f5d0c6..0000000
--- a/EngineerMode/res/layout/non_sleep_mode.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-	android:layout_height="wrap_content" android:layout_width="match_parent"
-	android:orientation="vertical">
-	<LinearLayout android:id="@+id/linearLayout2"
-		android:layout_height="wrap_content" android:layout_width="match_parent">
-		  <Button android:id="@+id/non_sleep_switch"
-        android:layout_height="wrap_content" android:layout_margin="10dp"
-        android:text="@string/non_sleep_enable" android:layout_width="match_parent"></Button>
-        </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/phone_auto_test_tool.xml b/EngineerMode/res/layout/phone_auto_test_tool.xml
deleted file mode 100644
index 47d6b8f..0000000
--- a/EngineerMode/res/layout/phone_auto_test_tool.xml
+++ /dev/null
@@ -1,104 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/TextView01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/phone_auto_test_01" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/EditText01"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-        </EditText>
-
-        <TextView
-            android:id="@+id/TextView02"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/phone_auto_test_02" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/EditText02"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-        </EditText>
-
-        <TextView
-            android:id="@+id/TextView03"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/phone_auto_test_03" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/EditText03"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-        </EditText>
-
-        <TextView
-            android:id="@+id/TextView04"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/phone_auto_test_04" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/EditText04"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-        </EditText>
-
-        <TextView
-            android:id="@+id/TextView05"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/phone_auto_test_05" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/EditText05"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-        </EditText>
-
-        <TextView
-            android:id="@+id/TextView06"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/phone_auto_test_08" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/EditText06"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-        </EditText>
-
-        <Button
-            android:id="@+id/Button01"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/phone_auto_test_06" >
-        </Button>
-
-        <Button
-            android:id="@+id/Button02"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/phone_auto_test_07" >
-        </Button>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/pll_cg.xml b/EngineerMode/res/layout/pll_cg.xml
deleted file mode 100644
index d55f1a8..0000000
--- a/EngineerMode/res/layout/pll_cg.xml
+++ /dev/null
@@ -1,61 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
- <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-     android:layout_width="fill_parent"
-     android:layout_height="fill_parent"
-     android:orientation="vertical" >
-
-     <LinearLayout 
-         android:layout_width="fill_parent"
-         android:layout_height="wrap_content"
-         android:orientation="horizontal"
-         android:layout_marginTop="10dip">
-	    <EditText android:id="@+id/pllcg_clkmux_id_edit"
-	        android:layout_width="140dip"
-	        android:layout_height="wrap_content"
-	        android:layout_marginLeft="10dip"
-	        android:numeric="decimal"
-	        android:singleLine="true"
-	        android:hint="@string/pllcg_clkmux_id"/>
-       <Button
-          android:id="@+id/pllcg_clkmux_btn"
-          android:layout_width="100dip"
-          android:layout_height="wrap_content"
-          android:layout_gravity="right"
-          android:layout_marginLeft="50dip"
-          android:text="@string/pllcg_clkmux" >
-        </Button>
-    </LinearLayout>
-    <LinearLayout 
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal">
-    <EditText android:id="@+id/pllcg_cg_id_edit"
-        android:layout_width="140dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:numeric="decimal"
-        android:singleLine="true"
-        android:hint="@string/pllcg_cg_id"/>
-    <Button
-        android:id="@+id/pllcg_enable_btn"
-        android:layout_width="100dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="50dip"
-        android:layout_gravity="right"
-        android:text="@string/pllcg_enable" >
-    </Button>
-    </LinearLayout>
-     <Button
-         android:id="@+id/pllcg_disable_btn"
-         android:layout_width="100dip"
-         android:layout_height="wrap_content"
-         android:layout_marginLeft="200dip"
-         android:text="@string/pllcg_disable" />
-     <Button
-         android:id="@+id/pllcg_read_all_btn"
-         android:layout_width="100dip"
-         android:layout_height="wrap_content"
-         android:layout_marginLeft="200dip"
-         android:text="@string/pllcg_read_all" />
-  </LinearLayout>
-
diff --git a/EngineerMode/res/layout/plls_list_item.xml b/EngineerMode/res/layout/plls_list_item.xml
deleted file mode 100644
index 5dd1a01..0000000
--- a/EngineerMode/res/layout/plls_list_item.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:gravity="right"
-    android:orientation="horizontal"
-    android:paddingRight="10dip" >
-
-    <TextView
-        android:id="@+id/plls_list_item_name"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginRight="10dip"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </TextView>
-
-    <EditText
-        android:id="@+id/plls_list_item_edit"
-        android:layout_width="100dip"
-        android:layout_height="wrap_content"
-        android:singleLine="true" >
-    </EditText>
-
-    <Button
-        android:id="@+id/plls_list_item_btn"
-        android:layout_width="60dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:text="@string/desense_text_set"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/power.xml b/EngineerMode/res/layout/power.xml
deleted file mode 100644
index 86ce387..0000000
--- a/EngineerMode/res/layout/power.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_Power"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/power_pmu6575_tabs.xml b/EngineerMode/res/layout/power_pmu6575_tabs.xml
deleted file mode 100644
index f88dc72..0000000
--- a/EngineerMode/res/layout/power_pmu6575_tabs.xml
+++ /dev/null
@@ -1,208 +0,0 @@
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/FrameLayout01"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <LinearLayout
-        android:id="@+id/LinerLayout_pmu_info_text"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:orientation="vertical"
-        android:visibility="visible" >
-
-        <ScrollView
-            android:id="@+id/ScrollView01"
-            android:layout_width="fill_parent"
-            android:layout_height="0px"
-            android:layout_weight="1" >
-
-            <TextView
-                android:id="@+id/pmu_info_text"
-                android:layout_width="fill_parent"
-                android:layout_height="fill_parent"
-                android:scrollbars="vertical" >
-            </TextView>
-        </ScrollView>
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/LinerLayout_pmu_reg"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:orientation="vertical"
-        android:visibility="visible" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <Spinner
-                android:id="@+id/pmu_bank_spinner"
-                android:layout_width="290dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="10dip" >
-            </Spinner>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/address6575_text"
-                android:layout_width="140dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:text="@string/address6575_text" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/value6575_text"
-                android:layout_width="140dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:text="@string/value6575_text" >
-            </TextView>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="1dip"
-            android:orientation="horizontal" >
-
-            <EditText
-                android:id="@+id/pmu_edit_addr"
-                android:layout_width="140dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:maxLength="2"
-                android:singleLine="true" >
-            </EditText>
-
-            <EditText
-                android:id="@+id/pmu_edit_val"
-                android:layout_width="140dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:maxLength="3"
-                android:singleLine="true" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/pmu_btn_get"
-                android:layout_width="140dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:text="@string/pmu_btn_get" >
-            </Button>
-
-            <Button
-                android:id="@+id/pmu_btn_set"
-                android:layout_width="140dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:text="@string/pmu_btn_set" >
-            </Button>
-        </LinearLayout>
-        
-        <LinearLayout 
-            android:id="@+id/mt6333_layout_controler"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="vertical">
-                <LinearLayout
-		            android:layout_width="fill_parent"
-		            android:layout_height="wrap_content"
-		            android:layout_marginTop="1dip"
-		            android:orientation="horizontal" >
-		
-		            <EditText
-		                android:id="@+id/pmu_edit_addr_mt6333"
-		                android:layout_width="140dip"
-		                android:layout_height="wrap_content"
-		                android:layout_marginLeft="10dip"
-		                android:layout_marginTop="1dip"
-		                android:maxLength="4"
-		                android:singleLine="true" >
-		            </EditText>
-		
-		            <EditText
-		                android:id="@+id/pmu_edit_val_mt6333"
-		                android:layout_width="140dip"
-		                android:layout_height="wrap_content"
-		                android:layout_marginLeft="10dip"
-		                android:layout_marginTop="1dip"
-		                android:maxLength="4"
-		                android:singleLine="true" >
-		            </EditText>
-		        </LinearLayout>
-		
-		        <LinearLayout
-		            android:layout_width="fill_parent"
-		            android:layout_height="wrap_content"
-		            android:layout_marginTop="5dip"
-		            android:orientation="horizontal" >
-		
-		            <Button
-		                android:id="@+id/pmu_btn_get_mt6333"
-		                android:layout_width="140dip"
-		                android:layout_height="wrap_content"
-		                android:layout_marginLeft="10dip"
-		                android:layout_marginTop="1dip"
-		                android:text="@string/pmu_btn_get" >
-		            </Button>
-		
-		            <Button
-		                android:id="@+id/pmu_btn_set_mt6333"
-		                android:layout_width="140dip"
-		                android:layout_height="wrap_content"
-		                android:layout_marginLeft="10dip"
-		                android:layout_marginTop="1dip"
-		                android:text="@string/pmu_btn_set" >
-		            </Button>
-		        </LinearLayout>
-            </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/warning_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:text="@string/warning_text" >
-            </TextView>
-        </LinearLayout>
-    </LinearLayout>
-
-</FrameLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/power_pmu_tabs.xml b/EngineerMode/res/layout/power_pmu_tabs.xml
deleted file mode 100644
index b61ccaf..0000000
--- a/EngineerMode/res/layout/power_pmu_tabs.xml
+++ /dev/null
@@ -1,131 +0,0 @@
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/FrameLayout01"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <LinearLayout
-        android:id="@+id/LinerLayout_pmu_info_text"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:orientation="vertical"
-        android:visibility="visible" >
-
-        <ScrollView
-            android:id="@+id/ScrollView01"
-            android:layout_width="fill_parent"
-            android:layout_height="0px"
-            android:layout_weight="1" >
-
-            <TextView
-                android:id="@+id/pmu_info_text"
-                android:layout_width="fill_parent"
-                android:layout_height="fill_parent"
-                android:scrollbars="vertical" >
-            </TextView>
-        </ScrollView>
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/LinerLayout_pmu_reg"
-        android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
-        android:orientation="vertical"
-        android:visibility="visible" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/address_text"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:text="@string/address_text" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/value_text"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:text="@string/value_text" >
-            </TextView>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="1dip"
-            android:orientation="horizontal" >
-
-            <EditText
-                android:id="@+id/pmu_edit_addr"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:singleLine="true" >
-            </EditText>
-
-            <EditText
-                android:id="@+id/pmu_edit_val"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:singleLine="true" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/pmu_btn_get"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:layout_marginTop="1dip"
-                android:text="@string/pmu_btn_get" >
-            </Button>
-
-            <Button
-                android:id="@+id/pmu_btn_set"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="30dip"
-                android:layout_marginTop="1dip"
-                android:text="@string/pmu_btn_set" >
-            </Button>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/warning_text"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:layout_marginTop="1dip"
-                android:text="@string/warning_text" >
-            </TextView>
-        </LinearLayout>
-    </LinearLayout>
-
-</FrameLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/preference_sim_info.xml b/EngineerMode/res/layout/preference_sim_info.xml
deleted file mode 100644
index b2b9197..0000000
--- a/EngineerMode/res/layout/preference_sim_info.xml
+++ /dev/null
@@ -1,91 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+android:id/widget_frame"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:gravity="center_vertical"
-    android:minHeight="?android:attr/listPreferredItemHeight"
-    android:paddingRight="?android:attr/scrollbarSize" >
-
-    <RelativeLayout
-        android:id="@+id/simIcon"
-        android:layout_width="38dip"
-        android:layout_height="38dip"
-        android:layout_centerVertical="true"
-        android:layout_marginBottom="6sp"
-        android:layout_marginLeft="6sp"
-        android:layout_marginRight="6sp"
-        android:layout_marginTop="6sp" >
-
-        <ImageView
-            android:id="@+id/simStatus"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center" />
-
-        <TextView
-            android:id="@+id/sim3g"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentRight="true"
-            android:layout_alignParentTop="true"
-            android:includeFontPadding="false"
-            android:text="@string/gemini_3g_indic"
-            android:textColor="@android:color/white"
-            android:textSize="11sp"
-            android:textStyle="bold" />
-
-        <TextView
-            android:id="@+id/simNum"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignParentBottom="true"
-            android:layout_alignParentRight="true"
-            android:layout_gravity="right|bottom"
-            android:layout_marginBottom="0sp"
-            android:layout_marginTop="12dip"
-            android:includeFontPadding="false"
-            android:textColor="@android:color/white"
-            android:textSize="12sp" />
-    </RelativeLayout>
-
-    <RelativeLayout
-        android:id="@+id/text_layout"
-        android:layout_width="0dip"
-        android:layout_height="wrap_content"
-        android:layout_centerVertical="true"
-        android:layout_marginBottom="6sp"
-        android:layout_marginRight="6sp"
-        android:layout_marginTop="6sp"
-        android:layout_weight="1" >
-
-        <TextView
-            android:id="@+android:id/title"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:ellipsize="middle"
-            android:singleLine="true"
-            android:textAppearance="?android:attr/textAppearanceLarge"
-            android:textColor="?android:attr/textColorPrimary" />
-
-        <TextView
-            android:id="@+android:id/summary"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_alignLeft="@android:id/title"
-            android:layout_below="@android:id/title"
-            android:ellipsize="middle"
-            android:textAppearance="?android:attr/textAppearanceSmall"
-            android:textColor="?android:attr/textColorSecondary" />
-    </RelativeLayout>
-
-    <CheckBox
-        android:id="@+id/Check_Enable"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_centerVertical="true"
-        android:clickable="false"
-        android:focusable="false"
-        android:gravity="center_vertical|center" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ptp_ptp1.xml b/EngineerMode/res/layout/ptp_ptp1.xml
deleted file mode 100644
index a050466..0000000
--- a/EngineerMode/res/layout/ptp_ptp1.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" 
-    android:layout_marginLeft="10dip"
-    android:orientation="vertical">    
-    <LinearLayout android:id="@+id/ptp1_setting"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical">
-	    <CheckBox android:id="@+id/ptp1_enable_ptp_cb"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:text="@string/ptp1_enable_ptp"/>
-    </LinearLayout>
-    <LinearLayout android:id="@+id/ptp1_setting_ext"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical">
-        <CheckBox android:id="@+id/ptp1_enable_big_core_cb"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:text="@string/ptp1_enable_big_core"/>
-	    <CheckBox android:id="@+id/ptp1_enable_little_core_cb"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:text="@string/ptp1_enable_little_core"/>
-	    <CheckBox android:id="@+id/ptp1_enable_gpu_cb"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:text="@string/ptp1_enable_gpu"/>
-	    <CheckBox android:id="@+id/ptp1_enable_vcore_ao_cb"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:text="@string/ptp1_enable_vcore_ao"/>
-	    <CheckBox android:id="@+id/ptp1_enable_vcore_pdn_cb"
-	        android:layout_width="wrap_content"
-	        android:layout_height="wrap_content"
-	        android:text="@string/ptp1_enable_vcore_pdn"/>
-    </LinearLayout>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ptp_ptp2.xml b/EngineerMode/res/layout/ptp_ptp2.xml
deleted file mode 100644
index 6ee7d9a..0000000
--- a/EngineerMode/res/layout/ptp_ptp2.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" 
-    android:layout_marginLeft="10dip"
-    android:orientation="vertical">
-    <CheckBox android:id="@+id/ptp2_enable_spark_cb"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/ptp2_enable_spark"/>
-    <CheckBox android:id="@+id/ptp2_enable_fbb_cb"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/ptp2_enable_fbb"/>
-    <TextView android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/ptp2_status"/>
-    <TextView android:id="@+id/ptp2_status_content_tv"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/ptp2_status_unknown"/>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/radio_info.xml b/EngineerMode/res/layout/radio_info.xml
deleted file mode 100644
index 53f4875..0000000
--- a/EngineerMode/res/layout/radio_info.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/Settings/assets/res/any/layout/radio_info.xml
-**
-** Copyright 2006, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License");
-** you may not use this file except in compliance with the License.
-** You may obtain a copy of the License at
-**
-**     http://www.apache.org/licenses/LICENSE-2.0
-**
-** Unless required by applicable law or agreed to in writing, software
-** distributed under the License is distributed on an "AS IS" BASIS,
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-** See the License for the specific language governing permissions and
-** limitations under the License.
-*/
--->
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-
-    <LinearLayout style="@style/info_layout" >
-
-        <!-- Preferred Network Type -->
-
-        <TextView
-            style="@style/info_label"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/radio_info_set_perferred_label" />
-
-        <Spinner
-            android:id="@+id/preferredNetworkType"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginTop="5pt"
-            android:layout_marginBottom="5pt"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="3pt"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            style="@style/info_label"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="3pt"
-            android:text="@string/radio_info_warning" />
-
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/rf_desense_test.xml b/EngineerMode/res/layout/rf_desense_test.xml
deleted file mode 100644
index 1a67d7a..0000000
--- a/EngineerMode/res/layout/rf_desense_test.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/list"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/rf_desense_tx_test.xml b/EngineerMode/res/layout/rf_desense_tx_test.xml
deleted file mode 100644
index 1a67d7a..0000000
--- a/EngineerMode/res/layout/rf_desense_tx_test.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/list"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/rf_desense_tx_test_cdma.xml b/EngineerMode/res/layout/rf_desense_tx_test_cdma.xml
deleted file mode 100644
index 2f9e948..0000000
--- a/EngineerMode/res/layout/rf_desense_tx_test_cdma.xml
+++ /dev/null
@@ -1,152 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-    <ScrollView 
-        android:layout_width="match_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1"
-        android:fillViewport="true" >
-
-        <TableLayout
-	        android:id="@+id/TableLayout01"
-	        android:layout_width="fill_parent"
-	        android:layout_height="wrap_content"
-	        android:stretchColumns="1"
-            android:padding="20dp" >
-
-            <!-- Band -->
-	        <TableRow
-	            android:id="@+id/TableRow01"
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-                android:gravity="center_vertical" >
-	            <TextView 
-	        		android:id="@+id/band" 
-					android:layout_width="wrap_content" 
-					android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-					android:text="@string/rf_desense_band" />
-		        <Spinner android:id="@+id/band_spinner"
-		            android:layout_width="0dp"
-		            android:layout_height="wrap_content"
-                    android:text="@string/rf_desense_band"
-		            android:drawSelectorOnTop="true" />
-	        </TableRow>
-
-            <TableRow
-                android:id="@+id/TableRow02"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:gravity="center_vertical" >
-                <TextView 
-                    android:id="@+id/modulation" 
-                    android:layout_width="wrap_content" 
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_modulation" />
-		        <RadioGroup
-                    android:id="@+id/modulation_radio_group"
-                    android:layout_width="wrap_content"
-		            android:layout_height="wrap_content"
-		            android:orientation="horizontal" >
-
-		            <RadioButton
-		                android:id="@+id/modulation_1x"
-		                android:layout_width="wrap_content"
-		                android:layout_height="wrap_content"
-		                android:text="@string/rf_desense_modulation_1x" >
-		            </RadioButton>
-
-		            <RadioButton
-		                android:id="@+id/modulation_evdo"
-		                android:layout_width="wrap_content"
-		                android:layout_height="wrap_content"
-		                android:text="@string/rf_desense_modulation_evdo" >
-		            </RadioButton>
-		        </RadioGroup>
-            </TableRow>
-
-            <!-- Channel -->
-            <TableRow
-                android:id="@+id/TableRow03"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:gravity="center_vertical" >
-                <TextView 
-                    android:id="@+id/channel" 
-                    android:layout_width="wrap_content" 
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_channel" />
-                <EditText
-                    android:id="@+id/channel_editor" 
-					android:layout_width="0dp"
-					android:layout_height="wrap_content"
-					android:singleLine="true"
-                    android:maxLength="5"
-					android:inputType="number">
-                </EditText>
-            </TableRow>
-
-            <!-- Power -->
-            <TableRow
-                android:id="@+id/TableRow04"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:gravity="center_vertical" >
-                <TextView 
-                    android:id="@+id/power" 
-                    android:layout_width="wrap_content" 
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_power" />
-                <EditText
-                    android:id="@+id/power_editor" 
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="3"
-                    android:inputType="numberSigned">
-                </EditText>
-                <TextView 
-                    android:id="@+id/power" 
-                    android:layout_width="wrap_content" 
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    android:text="@string/rf_desense_dbm" />
-            </TableRow>
-        </TableLayout>
-    </ScrollView>
-
-	<LinearLayout
-		android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-		android:layout_alignParentBottom="true"
-		android:orientation="horizontal"
-		android:gravity="center" >
-		<Button 
-			android:id="@+id/button_start" 
-			android:layout_width="0dp" 
-	        android:layout_height="wrap_content"
-			android:layout_weight="1"
-			android:text="@string/rf_desense_button_start" />
-		<Button
-			android:id="@+id/button_pause" 
-			android:layout_width="0dp" 
-	        android:layout_height="wrap_content"
-			android:layout_weight="1"
-			android:text="@string/rf_desense_button_pause" />
-        <Button
-            android:id="@+id/button_stop" 
-            android:layout_width="0dp" 
-	        android:layout_height="wrap_content"
-			android:layout_weight="1"
-            android:text="@string/rf_desense_button_stop" />
-    </LinearLayout> 
-</LinearLayout>
diff --git a/EngineerMode/res/layout/rf_desense_tx_test_gsm.xml b/EngineerMode/res/layout/rf_desense_tx_test_gsm.xml
deleted file mode 100644
index f9cc60d..0000000
--- a/EngineerMode/res/layout/rf_desense_tx_test_gsm.xml
+++ /dev/null
@@ -1,213 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-    <ScrollView
-        android:layout_width="match_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1"
-        android:fillViewport="true" >
-
-        <TableLayout
-            android:id="@+id/TableLayout01"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:stretchColumns="1"
-            android:padding="20dp" >
-
-            <!-- Band -->
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/band"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_band" />
-                <Spinner android:id="@+id/band_spinner"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:text="@string/rf_desense_band"
-                    android:drawSelectorOnTop="true" />
-            </TableRow>
-<!--
-
-            <TableRow
-                android:id="@+id/TableRow02"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/modulation"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_modulation" />
-                <RadioGroup
-                    android:id="@+id/modulation_radio_group"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:orientation="horizontal" >
-
-                    <RadioButton
-                        android:id="@+id/modulation_gmsk"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/rf_desense_modulation_gmsk" >
-                    </RadioButton>
-
-                    <RadioButton
-                        android:id="@+id/modulation_edge"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/rf_desense_modulation_edge" >
-                    </RadioButton>
-                </RadioGroup>
-            </TableRow>
--->
-            <!-- Channel -->
-            <TableRow
-                android:id="@+id/TableRow03"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/channel"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_channel" />
-                <EditText
-                    android:id="@+id/channel_editor"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="5"
-                    android:inputType="number">
-                </EditText>
-            </TableRow>
-
-            <!-- Power -->
-            <TableRow
-                android:id="@+id/TableRow04"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/power"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_power" />
-                <EditText
-                    android:id="@+id/power_editor"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="3"
-                    android:inputType="numberSigned">
-                </EditText>
-                <TextView
-                    android:id="@+id/power"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    android:text="@string/rf_desense_dbm" />
-            </TableRow>
-
-            <!-- AFC -->
-            <TableRow
-                android:id="@+id/TableRow05"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/afc"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_afc" />
-                <EditText
-                    android:id="@+id/afc_editor"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="4"
-                    android:inputType="number">
-                </EditText>
-            </TableRow>
-
-            <!-- TSC -->
-            <TableRow
-                android:id="@+id/TableRow06"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/tsc"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_tsc" />
-                <EditText
-                    android:id="@+id/tsc_editor"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="1"
-                    android:inputType="number">
-                </EditText>
-            </TableRow>
-
-            <!-- Pattern -->
-            <TextView
-                android:id="@+id/pattern"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="15dp"
-                android:text="@string/rf_desense_pattern" />
-            <Spinner android:id="@+id/pattern_spinner"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:text="@string/rf_desense_pattern"
-                android:drawSelectorOnTop="true" />
-
-        </TableLayout>
-    </ScrollView>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_alignParentBottom="true"
-        android:orientation="horizontal"
-        android:gravity="center" >
-        <Button
-            android:id="@+id/button_start"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/rf_desense_button_start" />
-        <Button
-            android:id="@+id/button_pause"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/rf_desense_button_pause" />
-        <Button
-            android:id="@+id/button_stop"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/rf_desense_button_stop" />
-    </LinearLayout>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/rf_desense_tx_test_lte.xml b/EngineerMode/res/layout/rf_desense_tx_test_lte.xml
deleted file mode 100644
index e506157..0000000
--- a/EngineerMode/res/layout/rf_desense_tx_test_lte.xml
+++ /dev/null
@@ -1,264 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-
-    <ScrollView
-        android:layout_width="match_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1" >
-
-        <TableLayout
-            android:id="@+id/TableLayout01"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:stretchColumns="1"
-            android:padding="20dp" >
-
-            <!-- Duplex -->
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="1"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_duplex" />
-                <RadioGroup
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:layout_weight="2"
-                    android:orientation="horizontal" >
-                    <RadioButton android:id="@+id/fdd_radio_button"
-                        android:layout_width="0dp"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="1"
-                        android:text="@string/rf_desense_fdd" />
-                    <RadioButton android:id="@+id/tdd_radio_button"
-                        android:layout_width="0dp"
-                        android:layout_height="wrap_content"
-                        android:layout_weight="1"
-                        android:text="@string/rf_desense_tdd" />
-                </RadioGroup>
-            </LinearLayout>
-
-            <!-- Band -->
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/band"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_band" />
-                <Spinner android:id="@+id/band_spinner"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:text="@string/rf_desense_band"
-                    android:drawSelectorOnTop="true" />
-            </TableRow>
-
-            <!-- Band Width -->
-            <TableRow
-                android:id="@+id/TableRow02"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/bandwidth"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_bandwidth" />
-                <Spinner android:id="@+id/bandwidth_spinner"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:drawSelectorOnTop="true" />
-            </TableRow>
-
-            <!-- Freq -->
-            <TableRow
-                android:id="@+id/TableRow03"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/freq"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_freq" />
-                <EditText
-                    android:id="@+id/freq_editor"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="5"
-                    android:inputType="number">
-                </EditText>
-            </TableRow>
-
-            <!-- TDD Config Index -->
-            <TableRow
-                android:id="@+id/TableRow04"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/tdd_config"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_tdd_config" />
-                <Spinner android:id="@+id/tdd_config_spinner"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:drawSelectorOnTop="true" />
-            </TableRow>
-
-            <!-- TDD Special Config Index -->
-            <TableRow
-                android:id="@+id/TableRow05"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/tdd_special"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_tdd_special" />
-                <Spinner android:id="@+id/tdd_special_spinner"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:drawSelectorOnTop="true" />
-            </TableRow>
-
-            <!-- VRB Start -->
-            <TableRow
-                android:id="@+id/TableRow06"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/vrb_start"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_vrb_start" />
-                <EditText
-                    android:id="@+id/vrb_start_editor"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="2"
-                    android:inputType="number">
-                </EditText>
-            </TableRow>
-
-            <!-- VRB Length -->
-            <TableRow
-                android:id="@+id/TableRow07"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/vrb_length"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_vrb_length" />
-                <EditText
-                    android:id="@+id/vrb_length_editor"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="3"
-                    android:inputType="number">
-                </EditText>
-            </TableRow>
-
-            <!-- MCS -->
-            <TableRow
-                android:id="@+id/TableRow08"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/mcs"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_mcs" />
-                <Spinner android:id="@+id/mcs_spinner"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:drawSelectorOnTop="true" />
-            </TableRow>
-
-            <!-- Power -->
-            <TableRow
-                android:id="@+id/TableRow09"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/power"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_lte_power" />
-                <EditText
-                    android:id="@+id/power_editor"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="3"
-                    android:inputType="numberSigned">
-                </EditText>
-            </TableRow>
-        </TableLayout>
-    </ScrollView>
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_alignParentBottom="true"
-        android:orientation="horizontal"
-        android:gravity="center" >
-        <Button
-            android:id="@+id/button_start"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/rf_desense_button_start" />
-        <Button
-            android:id="@+id/button_pause"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/rf_desense_button_pause" />
-        <Button
-            android:id="@+id/button_stop"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/rf_desense_button_stop" />
-    </LinearLayout>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/rf_desense_tx_test_td.xml b/EngineerMode/res/layout/rf_desense_tx_test_td.xml
deleted file mode 100644
index cc8dc28..0000000
--- a/EngineerMode/res/layout/rf_desense_tx_test_td.xml
+++ /dev/null
@@ -1,119 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-    <ScrollView
-        android:layout_width="match_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1"
-        android:fillViewport="true" >
-
-        <TableLayout
-            android:id="@+id/TableLayout01"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:stretchColumns="1"
-            android:padding="20dp" >
-
-            <!-- Band -->
-            <TableRow
-                android:id="@+id/TableRow01"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/band"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_band" />
-                <Spinner android:id="@+id/band_spinner"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:text="@string/rf_desense_band"
-                    android:drawSelectorOnTop="true" />
-            </TableRow>
-
-            <!-- Channel -->
-            <TableRow
-                android:id="@+id/TableRow03"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/channel"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_channel" />
-                <EditText
-                    android:id="@+id/channel_editor"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="5"
-                    android:inputType="number">
-                </EditText>
-            </TableRow>
-
-            <!-- Power -->
-            <TableRow
-                android:id="@+id/TableRow04"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:gravity="center_vertical" >
-                <TextView
-                    android:id="@+id/power"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginRight="10dp"
-                    android:text="@string/rf_desense_power" />
-                <EditText
-                    android:id="@+id/power_editor"
-                    android:layout_width="0dp"
-                    android:layout_height="wrap_content"
-                    android:singleLine="true"
-                    android:maxLength="3"
-                    android:inputType="numberSigned">
-                </EditText>
-                <TextView
-                    android:id="@+id/power"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    android:text="@string/rf_desense_dbm" />
-            </TableRow>
-
-        </TableLayout>
-    </ScrollView>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_alignParentBottom="true"
-        android:orientation="horizontal"
-        android:gravity="center" >
-        <Button
-            android:id="@+id/button_start"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/rf_desense_button_start" />
-        <Button
-            android:id="@+id/button_pause"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/rf_desense_button_pause" />
-        <Button
-            android:id="@+id/button_stop"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/rf_desense_button_stop" />
-    </LinearLayout>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/rx_nosig_test.xml b/EngineerMode/res/layout/rx_nosig_test.xml
deleted file mode 100644
index 89b067d..0000000
--- a/EngineerMode/res/layout/rx_nosig_test.xml
+++ /dev/null
@@ -1,198 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <TableLayout
-        android:id="@+id/TableLayout01"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content" >
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/NSRX_StrPattern" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/NSRX_PatternSpinner"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow04"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/NSRX_StrPocketType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/NSRX_PocketTypeSpinner"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow03"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/NSRX_StrFrequency" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/NSRX_editFrequency"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:numeric="integer"
-                android:singleLine="true" >
-            </EditText>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow05"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/NSRX_StrAddress" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/NSRX_editTesterAddr"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:maxLength="8"
-                android:singleLine="true" >
-            </EditText>
-        </TableRow>
-    </TableLayout>
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/NSRX_StartTest"
-            android:layout_width="100dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="80dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/NSRX_StartTest" />
-    </LinearLayout>
-
-    <TableLayout
-        android:id="@+id/TableLayout01"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content" >
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/NSRX_StrPackCnt" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/NSRX_StrPackCnt"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt" >
-            </TextView>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/NSRX_StrPackErrRate" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/NSRX_StrPackErrRate"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt" >
-            </TextView>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/NSRX_StrPackByteCnt" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/NSRX_StrPackByteCnt"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt" >
-            </TextView>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/NSRX_StrBitErrRate" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/NSRX_StrBitErrRate"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt" >
-            </TextView>
-        </TableRow>
-    </TableLayout>
-
-</LinearLayout></ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/rx_only_test.xml b/EngineerMode/res/layout/rx_only_test.xml
deleted file mode 100644
index bc3293d..0000000
--- a/EngineerMode/res/layout/rx_only_test.xml
+++ /dev/null
@@ -1,247 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/BTRxTitle"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/BTRxTitle" >
-        </TextView>
-
-        <!-- Rx Pattern type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <TextView
-                android:id="@+id/RxPattern"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxPattern" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/RxPatternSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- Rx Channel type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <TextView
-                android:id="@+id/RxChannel"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxChannel" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/RxChannelSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- Frequency -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxFrequency" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/RxFrequency"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-        </LinearLayout>
-
-        <!-- Rx Packet type select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <TextView
-                android:id="@+id/RxPacketType"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxPacketType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/RxPacketTypeSpinner"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- polling period value -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxPollPeriod" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/RxPollPeriod"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-        </LinearLayout>
-        <!-- Access Code value -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxAccessCode" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/RxAccessCode"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-        </LinearLayout>
-
-        <!-- data length value -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxDataLength" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/RxDataLength"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content" >
-            </EditText>
-        </LinearLayout>
-
-        <!-- Rx power control select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <CheckBox
-                android:id="@+id/RxPowerControl"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxPowerControl" >
-            </CheckBox>
-
-            <Spinner
-                android:id="@+id/RxPowerControlSpinner"
-                android:layout_width="120dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-
-            <Button
-                android:id="@+id/RxSetPwr"
-                android:layout_width="60dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxSetPwr" >
-            </Button>
-        </LinearLayout>
-
-        <!-- Rx Written function -->
-
-        <CheckBox
-            android:id="@+id/RxWritten"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:checked="false"
-            android:text="@string/RxWritten" >
-        </CheckBox>
-
-        <!-- start/stop button -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal"
-            android:paddingTop="10dip" >
-
-            <Button
-                android:id="@+id/RxStart"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxStart" >
-            </Button>
-
-            <Button
-                android:id="@+id/RxStop"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/RxStop" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/sbp.xml b/EngineerMode/res/layout/sbp.xml
deleted file mode 100644
index cb2fb29..0000000
--- a/EngineerMode/res/layout/sbp.xml
+++ /dev/null
@@ -1,80 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-
-    <TableLayout
-        android:id="@+id/TableLayout01"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content" >
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dp"
-                android:textSize="16sp"
-                android:text="@string/sbp_id" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/sbp_id"
-                android:textSize="16sp"
-                android:layout_marginLeft="10dp"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="1" >
-            </TextView>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow02"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dp"
-                android:textSize="16sp"
-                android:text="@string/sbp_feature" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/sbp_feature"
-                android:textSize="16sp"
-                android:layout_marginLeft="10dp"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="1" >
-            </TextView>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow03"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dp"
-                android:textSize="16sp"
-                android:text="@string/sbp_data" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/sbp_data"
-                android:textSize="16sp"
-                android:layout_marginLeft="10dp"
-                android:layout_width="0dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="1" >
-            </TextView>
-        </TableRow>
-    </TableLayout>
-</ScrollView>
diff --git a/EngineerMode/res/layout/security_status.xml b/EngineerMode/res/layout/security_status.xml
deleted file mode 100644
index 04c509c..0000000
--- a/EngineerMode/res/layout/security_status.xml
+++ /dev/null
@@ -1,227 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    style="@style/info_layout" >
-
-    <LinearLayout
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TableLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3dp"
-                
-                android:text="@string/security_status_2g" >
-            </TextView>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:background="#FFF39A1E" >
-            </View>
-
-            <TableRow
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    
-                    android:text="@string/security_status_2g_cipher" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/security_status_2g_cipher"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    
-                    android:layout_marginLeft="3dp" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    
-                    android:text="@string/security_status_2g_gprs" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/security_status_2g_gprs"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    
-                    android:layout_marginLeft="3dp" >
-                </TextView>
-            </TableRow>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:layout_marginLeft="3dp"
-                
-                android:text="@string/security_status_3g" >
-            </TextView>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:background="#FFF39A1E" >
-            </View>
-
-            <TableRow
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    
-                    android:text="@string/security_status_3g_cipher" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/security_status_3g_cipher"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    
-                    android:layout_marginLeft="3dp" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    
-                    android:text="@string/security_status_3g_integrity" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/security_status_3g_integrity"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    
-                    android:layout_marginLeft="3dp" >
-                </TextView>
-            </TableRow>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="10dp"
-                android:layout_marginLeft="3dp"
-                
-                android:text="@string/security_status_4g" >
-            </TextView>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:background="#FFF39A1E" >
-            </View>
-
-            <TableRow
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    
-                    android:text="@string/security_status_4g_enas_cipher" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/security_status_4g_enas_cipher"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    
-                    android:layout_marginLeft="3dp" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    
-                    android:text="@string/security_status_4g_enas_integrity" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/security_status_4g_enas_integrity"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    
-                    android:layout_marginLeft="3dp" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    
-                    android:text="@string/security_status_4g_errc_cipher" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/security_status_4g_errc_cipher"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    
-                    android:layout_marginLeft="3dp" >
-                </TextView>
-            </TableRow>
-
-            <TableRow
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3dp"
-                    
-                    android:text="@string/security_status_4g_errc_integrity" >
-                </TextView>
-
-                <TextView
-                    android:id="@+id/security_status_4g_errc_integrity"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    
-                    android:layout_marginLeft="3dp" >
-                </TextView>
-            </TableRow>
-        </TableLayout>
-    </LinearLayout>
-</ScrollView>
diff --git a/EngineerMode/res/layout/sensor_calibration.xml b/EngineerMode/res/layout/sensor_calibration.xml
deleted file mode 100644
index e57ff1f..0000000
--- a/EngineerMode/res/layout/sensor_calibration.xml
+++ /dev/null
@@ -1,99 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <Button
-            android:id="@+id/button_sensor_calibration_do_20"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:text="@string/sensor_calibration_do_20" />
-
-        <Button
-            android:id="@+id/button_sensor_calibration_do_40"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:text="@string/sensor_calibration_do_40" />
-
-        <Button
-            android:id="@+id/button_sensor_calibration_clear"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:layout_marginBottom="3dp"
-            android:text="@string/sensor_calibration_clear" />
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginRight="15dp"
-            android:layout_marginBottom="10dp"
-            android:text="@string/sensor_calibration_note" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginTop="10dp"
-            android:layout_marginBottom="10dp"
-            android:text="@string/sensor_calibration_current_data_hint" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/text_sensor_calibration_current_data"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:typeface="monospace"
-            android:layout_marginLeft="15dp"
-            android:layout_marginBottom="10dp" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="15dp"
-            android:layout_marginTop="10dp"
-            android:layout_marginBottom="10dp"
-            android:text="@string/sensor_calibration_sensor_data_hint" >
-        </TextView>
-
-        <TextView
-            android:id="@+id/text_sensor_calibration_cali_data"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:typeface="monospace"
-            android:layout_marginLeft="15dp" >
-        </TextView>
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/sensor_calibration_select.xml b/EngineerMode/res/layout/sensor_calibration_select.xml
deleted file mode 100644
index beae364..0000000
--- a/EngineerMode/res/layout/sensor_calibration_select.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/list_view_calibration"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/sensor_curve.xml b/EngineerMode/res/layout/sensor_curve.xml
deleted file mode 100644
index f5f7c74..0000000
--- a/EngineerMode/res/layout/sensor_curve.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    >
-
-<SurfaceView 
-	android:layout_width="fill_parent" 
-	android:layout_height="fill_parent" android:id="@+id/curve_surface"/>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/sensor_mag_curve.xml b/EngineerMode/res/layout/sensor_mag_curve.xml
deleted file mode 100644
index 0d2fd65..0000000
--- a/EngineerMode/res/layout/sensor_mag_curve.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    >
-
-<TextView 
-	android:id="@+id/label_mag_curve" 
-	android:textSize="12sp"
-	android:layout_width="wrap_content" 
-	android:layout_height="wrap_content"/>
-	
-<SurfaceView 
-	android:layout_width="fill_parent" 
-	android:layout_height="fill_parent" android:id="@+id/mag_curve_surface"/>
-
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/sensor_ps_calibration.xml b/EngineerMode/res/layout/sensor_ps_calibration.xml
deleted file mode 100644
index 135f644..0000000
--- a/EngineerMode/res/layout/sensor_ps_calibration.xml
+++ /dev/null
@@ -1,138 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <TableLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dp"
-        android:layout_marginRight="10dp"
-        android:stretchColumns="1" >
-
-        <TextView
-            android:id="@+id/text_sensor_ps_calibration_current_data"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:layout_marginBottom="3dp"
-            android:text="@string/sensor_ps_calibration_current_data" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/sensor_ps_calibration_min_hint" >
-        </TextView>
-
-        <TableRow>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center_vertical"
-                android:text="@string/sensor_ps_calibration_min_value" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/text_sensor_ps_calibration_min_value"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center_vertical" >
-            </TextView>
-
-            <Button
-                android:id="@+id/button_sensor_ps_calibration_get_min"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:textSize="16sp"
-                android:text="@string/sensor_ps_calibration_get_min" />
-        </TableRow>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" >
-        </View>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:text="@string/sensor_ps_calibration_max_hint" >
-        </TextView>
-
-        <TableRow>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center_vertical"
-                android:text="@string/sensor_ps_calibration_max_value" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/text_sensor_ps_calibration_max_value"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_gravity="center_vertical" >
-            </TextView>
-
-            <Button
-                android:id="@+id/button_sensor_ps_calibration_get_max"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:textSize="16sp"
-                android:text="@string/sensor_ps_calibration_get_max" />
-        </TableRow>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" >
-        </View>
-
-        <Button
-            android:id="@+id/button_sensor_ps_calibration_do_cali"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:textSize="16sp"
-            android:text="@string/sensor_ps_calibration_do_cali" />
-
-        <Button
-            android:id="@+id/button_sensor_ps_calibration_clear_cali"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:textSize="16sp"
-            android:text="@string/sensor_ps_calibration_clear_cali" />
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/sensor_ps_calibration_result" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/text_sensor_ps_calibration_result"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-            </TextView>
-        </LinearLayout>
-
-    </TableLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/sensor_ps_change_threshold.xml b/EngineerMode/res/layout/sensor_ps_change_threshold.xml
deleted file mode 100644
index 86c6168..0000000
--- a/EngineerMode/res/layout/sensor_ps_change_threshold.xml
+++ /dev/null
@@ -1,56 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <TableLayout
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dp"
-        android:layout_marginRight="10dp"
-        android:stretchColumns="1" >
-
-        <TableRow>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/sensor_ps_threshold_high" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/edit_sensor_ps_threshold_high"
-                android:inputType="number"
-                android:maxLength="5"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" />
-        </TableRow>
-
-        <TableRow android:layout_marginTop="10dp" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/sensor_ps_threshold_low" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/edit_sensor_ps_threshold_low"
-                android:inputType="number"
-                android:maxLength="5"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content" />
-        </TableRow>
-
-        <Button
-            android:id="@+id/button_sensor_ps_change_threshold"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dp"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:text="@string/sensor_ps_change_threshold_set" />
-
-    </TableLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/sensor_ps_collection.xml b/EngineerMode/res/layout/sensor_ps_collection.xml
deleted file mode 100644
index eb978be..0000000
--- a/EngineerMode/res/layout/sensor_ps_collection.xml
+++ /dev/null
@@ -1,268 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-    <TableLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical" >
-        <TableRow
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-            <TextView
-                android:id="@+id/tx_1"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_2"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_3"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_4"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_5"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_6"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_7"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_8"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_9"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_10"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_11"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-        </TableRow>
-        <TableRow
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-            <TextView
-                android:id="@+id/data_tx_1"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_2"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_3"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_4"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_5"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_6"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_7"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_8"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_9"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_10"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_11"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-        </TableRow>
-       <TableRow
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-            <TextView
-                android:id="@+id/tx_12"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_13"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_14"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_15"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_16"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_17"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_18"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_19"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_20"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_21"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/tx_22"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-        </TableRow>
-        <TableRow
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" >
-            <TextView
-                android:id="@+id/data_tx_12"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_13"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_14"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_15"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_16"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_17"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_18"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_19"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_20"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_21"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-            <TextView
-                android:id="@+id/data_tx_22"
-                android:layout_width="match_parent"
-                android:layout_height="fill_parent">
-            </TextView>
-        </TableRow>
-    </TableLayout>
-    <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dp"
-            android:layout_marginTop="10dp"
-            android:orientation="horizontal" >
-            <Button
-                android:id="@+id/btn_clear"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/psensor_clear_data"/>
-            <Button
-                android:id="@+id/btn_get"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/psensor_get_data" />
-    </LinearLayout>
-    <com.mediatek.engineermode.sensor.CollectionCurveView
-        android:id="@+id/curve_view"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content" />
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/settings_fontsize.xml b/EngineerMode/res/layout/settings_fontsize.xml
deleted file mode 100644
index 12ac7a9..0000000
--- a/EngineerMode/res/layout/settings_fontsize.xml
+++ /dev/null
@@ -1,112 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_margin="10dip"
-        android:gravity="center"
-        android:text="@string/settings_fontsize_text"
-        android:textAppearance="?android:attr/textAppearanceLarge" >
-    </TextView>
-
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="10dip"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:layout_width="85dip"
-            android:layout_height="wrap_content"
-            android:text="@string/settings_fs_small_text" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/settings_fs_small_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:digits="0123456789."
-            android:inputType="number"
-            android:maxLength="9">
-        </EditText>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/settings_fs_small_bound" >
-        </TextView>
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="10dip"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:layout_width="85dip"
-            android:layout_height="wrap_content"
-            android:text="@string/settings_fs_large_text" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/settings_fs_large_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:digits="0123456789."
-            android:inputType="number"
-            android:maxLength="9">
-        </EditText>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/settings_fs_large_bound" >
-        </TextView>
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="10dip"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:layout_width="85dip"
-            android:layout_height="wrap_content"
-            android:text="@string/settings_fs_extralarge_text" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/settings_fs_extralarge_edit"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:digits="0123456789."
-            android:inputType="number"
-            android:maxLength="9">
-        </EditText>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/settings_fs_extralarge_bound" >
-        </TextView>
-    </LinearLayout>
-
-    <Button
-        android:id="@+id/settings_fs_ok"
-        android:layout_width="80dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="210dip"
-        android:gravity="center"
-        android:text="@string/settings_fs_ok" >
-    </Button>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/sim1_networkinfo.xml b/EngineerMode/res/layout/sim1_networkinfo.xml
deleted file mode 100644
index 42990a2..0000000
--- a/EngineerMode/res/layout/sim1_networkinfo.xml
+++ /dev/null
@@ -1,291 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_2G"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Cell"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Cell" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Ch"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Ch" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Ctrl"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Ctrl" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_RACH"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_RACH" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_LAI"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_LAI" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Radio"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Radio" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Meas"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Meas" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Ca"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Ca" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Control"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Control" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_SI2Q"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_SI2Q" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_MI"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_MI" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_BLK"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_BLK" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_TBF"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_TBF" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_GPRS"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_GPRS" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_xGCsceEMNeighCellSStatusInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_xGCsceEMNeighCellSStatusInd" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-        <!-- FOR 3G -->
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_3G_COMMON"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMmEmInfo"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GMmEmInfo" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GTcmMmiEmInfo"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GTcmMmiEmInfo" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GCsceEMServCellSStatusInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GCsceEMServCellSStatusInd" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GCsceEmInfoMultiPlmn"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GCsceEmInfoMultiPlmn" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMemeEmPeriodicBlerReportInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GMemeEmPeriodicBlerReportInd" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUrrUmtsSrncId"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GUrrUmtsSrncId" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMemeEmInfoHServCellInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GMemeEmInfoHServCellInd" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_3G_FDD"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMemeEmInfoUmtsCellStatus"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GMemeEmInfoUmtsCellStatus" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GSlceEmPsDataRateStatusInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GSlceEmPsDataRateStatusInd" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_3G_TDD"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GHandoverSequenceIndStuct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GHandoverSequenceIndStuct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmAdmPoolStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GUl2EmAdmPoolStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmPsDataRateStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GUl2EmPsDataRateStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3Gul2EmHsdschReconfigStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3Gul2EmHsdschReconfigStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmUrlcEventStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GUl2EmUrlcEventStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmPeriodicBlerReportInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GUl2EmPeriodicBlerReportInd" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/sim2_networkinfo.xml b/EngineerMode/res/layout/sim2_networkinfo.xml
deleted file mode 100644
index 42990a2..0000000
--- a/EngineerMode/res/layout/sim2_networkinfo.xml
+++ /dev/null
@@ -1,291 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_2G"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Cell"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Cell" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Ch"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Ch" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Ctrl"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Ctrl" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_RACH"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_RACH" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_LAI"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_LAI" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Radio"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Radio" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Meas"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Meas" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Ca"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Ca" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_Control"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_Control" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_SI2Q"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_SI2Q" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_MI"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_MI" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_BLK"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_BLK" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_TBF"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_TBF" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_GPRS"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_GPRS" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_xGCsceEMNeighCellSStatusInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_xGCsceEMNeighCellSStatusInd" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-        <!-- FOR 3G -->
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_3G_COMMON"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMmEmInfo"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GMmEmInfo" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GTcmMmiEmInfo"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GTcmMmiEmInfo" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GCsceEMServCellSStatusInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GCsceEMServCellSStatusInd" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GCsceEmInfoMultiPlmn"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GCsceEmInfoMultiPlmn" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMemeEmPeriodicBlerReportInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GMemeEmPeriodicBlerReportInd" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUrrUmtsSrncId"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GUrrUmtsSrncId" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMemeEmInfoHServCellInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GMemeEmInfoHServCellInd" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_3G_FDD"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GMemeEmInfoUmtsCellStatus"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GMemeEmInfoUmtsCellStatus" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GSlceEmPsDataRateStatusInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GSlceEmPsDataRateStatusInd" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-
-        <ScrollView
-            xmlns:android="http://schemas.android.com/apk/res/android"
-            android:id="@+id/View_3G_TDD"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:gravity="left"
-            android:orientation="vertical" >
-
-            <LinearLayout
-                xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:gravity="left"
-                android:orientation="vertical" >
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GHandoverSequenceIndStuct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GHandoverSequenceIndStuct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmAdmPoolStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GUl2EmAdmPoolStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmPsDataRateStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GUl2EmPsDataRateStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3Gul2EmHsdschReconfigStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3Gul2EmHsdschReconfigStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmUrlcEventStatusIndStruct"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GUl2EmUrlcEventStatusIndStruct" >
-                </CheckBox>
-
-                <CheckBox
-                    android:id="@+id/NetworkInfo_3GUl2EmPeriodicBlerReportInd"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:text="@string/DualTalkNetworkInfo_3GUl2EmPeriodicBlerReportInd" >
-                </CheckBox>
-            </LinearLayout>
-        </ScrollView>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/sim_switch.xml b/EngineerMode/res/layout/sim_switch.xml
deleted file mode 100644
index c8d9ba5..0000000
--- a/EngineerMode/res/layout/sim_switch.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content" >
-
-    <Button
-        android:id="@+id/sim_switch"
-        android:layout_width="120dip"
-        android:layout_height="wrap_content" >
-    </Button>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/simselect.xml b/EngineerMode/res/layout/simselect.xml
deleted file mode 100644
index d6f85ce..0000000
--- a/EngineerMode/res/layout/simselect.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_SimSelect"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/sleep_mode_6572.xml b/EngineerMode/res/layout/sleep_mode_6572.xml
deleted file mode 100644
index 7c26f9d..0000000
--- a/EngineerMode/res/layout/sleep_mode_6572.xml
+++ /dev/null
@@ -1,120 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-        android:id="@+id/sleep_mode_contrl"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-	        <TextView
-	            android:layout_width="240dip"
-	            android:layout_height="wrap_content"
-	            android:layout_marginTop="10dip"
-	            android:layout_marginLeft="10dip"
-	            android:text="@string/sleep_mode_6572" >
-	        </TextView>
-	
-	        <LinearLayout 
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	            <RadioGroup
-	                android:layout_width="fill_parent"
-	                android:layout_height="wrap_content"
-	                android:orientation="vertical">
-	                <RadioButton android:id="@+id/sleep_mode_disable"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/sleep_mode_disable"/>
-                    <RadioButton android:id="@+id/sleep_mode_legacy_sleep"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginLeft="10dip"
-                        android:text="@string/sleep_mode_legacy_sleep"/>   
-                    <RadioButton android:id="@+id/sleep_mode_shutdown"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/sleep_mode_shutdown"/>       
-	            </RadioGroup>
-	        </LinearLayout>
-        </LinearLayout>
-        
-        <LinearLayout
-        android:id="@+id/sleep_mode_wake_timer_contrl"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-	        <TextView
-	            android:layout_width="240dip"
-	            android:layout_height="wrap_content"
-	            android:layout_marginLeft="10dip"
-	            android:text="@string/sleep_mode_wakeup_timer" >
-	        </TextView>
-	        <LinearLayout 
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="vertical">
-	                <RadioButton android:id="@+id/sleep_mode_timer_disable"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/sleep_mode_disable"/>
-	                <RadioButton android:id="@+id/sleep_mode_timer_fuel_gauge"
-	                    android:layout_width="wrap_content"
-	                    android:layout_height="wrap_content"
-	                    android:layout_marginLeft="10dip"
-	                    android:text="@string/sleep_mode_fuel_gauge"/>
-	                <LinearLayout 
-	                    android:layout_width="fill_parent"
-			            android:layout_height="wrap_content"
-			            android:orientation="horizontal">
-                    <RadioButton android:id="@+id/sleep_mode_timer_val_set"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:layout_marginLeft="10dip"/>
-                    <EditText
-		                android:id="@+id/sleep_mode_timer_val"
-		                android:layout_width="100dip"
-		                android:layout_height="wrap_content"
-		                android:maxLength="7"
-		                android:numeric="integer" />
-      				<TextView
-			            android:layout_width="240dip"
-			            android:layout_height="wrap_content"
-			            android:text="@string/sleep_mode_timer_val_tip" />
-                    </LinearLayout>
-                    <Button
-                        android:id="@+id/sleep_mode_start_timer"
-			            android:layout_width="240dip"
-			            android:layout_height="wrap_content"
-			            android:layout_marginLeft="20dip"
-			            android:layout_marginTop="5dip"
-			            android:text="@string/sleep_mode_start_timer" />
-	        </LinearLayout>
-        </LinearLayout>
-        
-        <LinearLayout 
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="vertical">
-         <Button
-            android:id="@+id/sleep_mode_get_setting"
-            android:layout_width="240dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/sleep_mode_get_setting" >
-        </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/ssp_debug_mode.xml b/EngineerMode/res/layout/ssp_debug_mode.xml
deleted file mode 100644
index 32dad52..0000000
--- a/EngineerMode/res/layout/ssp_debug_mode.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content" >
-
-    <TextView
-        android:id="@+id/SSPDebugModetxv"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="3pt"
-        android:layout_marginTop="20px"
-        android:layout_weight="1" >
-    </TextView>
-
-    <CheckBox
-        android:id="@+id/SSPDebugModeCb"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20px"
-        android:layout_weight="1"
-        android:text="@string/emptyStr" >
-    </CheckBox>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/swla_activity.xml b/EngineerMode/res/layout/swla_activity.xml
deleted file mode 100644
index 84074f5..0000000
--- a/EngineerMode/res/layout/swla_activity.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:gravity="center_horizontal"
-    android:orientation="vertical" >
-
-    <Button
-        android:id="@+id/swla_assert_btn1"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/swla_assert_text"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-    <Button
-        android:id="@+id/swla_assert_btn2"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/swla_assert_text"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-    <Button
-        android:id="@+id/swla_swla_btn"
-        android:layout_width="200dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="30dip"
-        android:text="@string/swla_swla_text"
-        android:textAppearance="?android:attr/textAppearanceMedium" >
-    </Button>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/tddbandselect.xml b/EngineerMode/res/layout/tddbandselect.xml
deleted file mode 100644
index c2c20e8..0000000
--- a/EngineerMode/res/layout/tddbandselect.xml
+++ /dev/null
@@ -1,266 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <ScrollView
-        android:layout_width="fill_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1" >
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:orientation="vertical" >
-
-            <TableLayout
-                android:id="@+id/TableLayout"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/TDD_BandSel_GSM" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-
-                <TableRow
-                    android:id="@+id/TableRow"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/TDD_GSM_EGSM900"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/TDD_GSM_EGSM900" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/TDD_GSM_DCS1800"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/TDD_GSM_DCS1800" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/TDD_GSM_PCS1900"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/TDD_GSM_PCS1900" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/TDD_GSM_GSM850"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/TDD_GSM_GSM850" >
-                    </CheckBox>
-                </TableRow>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="3dip"
-                    android:background="#FF00FF00" >
-                </View>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/TDD_BandSel_UMTS" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-
-                <TableRow
-                    android:id="@+id/TableRow"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/TDD_UMTS_BAND_I"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/TDD_UMTS_BAND_I" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/TDD_UMTS_BAND_II"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/TDD_UMTS_BAND_II" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/TDD_UMTS_BAND_III"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/TDD_UMTS_BAND_III" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/TDD_UMTS_BAND_IV"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/TDD_UMTS_BAND_IV" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/TDD_UMTS_BAND_V"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/TDD_UMTS_BAND_V" >
-                    </CheckBox>
-                </TableRow>
-
-                <TableRow
-                    android:id="@+id/TableRow"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content" >
-
-                    <CheckBox
-                        android:id="@+id/TDD_UMTS_BAND_VI"
-                        android:layout_width="fill_parent"
-                        android:layout_height="wrap_content"
-                        android:text="@string/TDD_UMTS_BAND_VI" >
-                    </CheckBox>
-                </TableRow>
-            </TableLayout>
-
-            <TableLayout
-                android:id="@+id/TableLayout02"
-                android:visibility="gone"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="3dip"
-                    android:background="#FF00FF00" >
-                </View>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/bandmodesim1_LTE" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-            </TableLayout>
-
-            <TableLayout
-                android:id="@+id/TableLayout03"
-                android:visibility="gone"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="3dip"
-                    android:background="#FF00FF00" >
-                </View>
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginLeft="3pt"
-                    android:text="@string/BandSel_CDMA" >
-                </TextView>
-
-                <View
-                    android:layout_width="fill_parent"
-                    android:layout_height="1dip"
-                    android:background="#FF909090" >
-                </View>
-            </TableLayout>
-
-            <View
-                android:layout_width="fill_parent"
-                android:layout_height="1dip"
-                android:background="#FF909090" >
-            </View>
-        </LinearLayout>
-    </ScrollView>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/TDD_Btn_Set"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/TDD_Btn_SET" >
-        </Button>
-
-        <Button
-            android:id="@+id/TDD_Btn_Reset"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/BandSel_RESET" >
-        </Button>
-    </LinearLayout>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/test_mode.xml b/EngineerMode/res/layout/test_mode.xml
deleted file mode 100644
index 24c46d6..0000000
--- a/EngineerMode/res/layout/test_mode.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/TestModetxv"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:layout_marginTop="20px"
-            android:layout_weight="1" >
-        </TextView>
-
-        <CheckBox
-            android:id="@+id/TestModeCb"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="20px"
-            android:layout_weight="1"
-            android:text="@string/emptyStr" >
-        </CheckBox>
-    </LinearLayout>
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/BTTestMode_edit_Text"
-            android:layout_width="220dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/BTTestMode_edit_Text" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/BTTestMode_edit"
-            android:layout_width="100dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="10dip"
-            android:maxLength="1"
-            android:numeric="integer"
-            android:singleLine="true"
-            android:text="@string/BTTestMode_edit" >
-        </EditText>
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/touch_settings.xml b/EngineerMode/res/layout/touch_settings.xml
deleted file mode 100644
index 752818a..0000000
--- a/EngineerMode/res/layout/touch_settings.xml
+++ /dev/null
@@ -1,81 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/TouchScreen_Settings_TextSpinner"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/TouchScreen_Settings_TextSpinner" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/TouchScreen_Settings_Spinner"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="10dip" >
-            </Spinner>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/TouchScreen_Settings_TextValue"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/TouchScreen_Settings_TextValue" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/TouchScreen_Settings_Value"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="5dip"
-                android:layout_marginTop="10dip"
-                android:numeric="integer"
-                android:singleLine="true"
-                android:text="@string/TouchScreen_Settings_Value" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/TouchScreen_Settings_TextSet"
-                android:layout_width="180dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="110dip"
-                android:layout_marginTop="10dip"
-                android:text="@string/TouchScreen_Settings_TextSet" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/touchscreen.xml b/EngineerMode/res/layout/touchscreen.xml
deleted file mode 100644
index e4c9b08..0000000
--- a/EngineerMode/res/layout/touchscreen.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_TouchScreen"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/touchscreen_verification.xml b/EngineerMode/res/layout/touchscreen_verification.xml
deleted file mode 100644
index c2e66f9..0000000
--- a/EngineerMode/res/layout/touchscreen_verification.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_TP_Verification"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/tx_only_test.xml b/EngineerMode/res/layout/tx_only_test.xml
deleted file mode 100644
index c47abf9..0000000
--- a/EngineerMode/res/layout/tx_only_test.xml
+++ /dev/null
@@ -1,120 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content" >
-
-    <TableLayout
-        android:id="@+id/TableLayout01"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content" >
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:id="@+id/TextView01"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/StrPattern" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/PatternSpinner"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow02"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:id="@+id/TextView02"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/StrChannel" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/ChannelsSpinner"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow03"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:id="@+id/FreqText"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/StrFrequency" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/edtFrequency"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:maxLength="10"
-                android:numeric="integer"
-                android:singleLine="true"
-                android:text="@string/emptyStr" >
-            </EditText>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow04"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:id="@+id/TextView04"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/StrPocketType" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/PocketTypeSpinner"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow05"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:id="@+id/PockLenText"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/StrPocketLength" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/edtPocketLength"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:maxLength="10"
-                android:singleLine="true"
-                android:numeric="integer"
-                android:text="@string/emptyStr" >
-            </EditText>
-        </TableRow>
-    </TableLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/u3_phy_switch.xml b/EngineerMode/res/layout/u3_phy_switch.xml
deleted file mode 100644
index da54944..0000000
--- a/EngineerMode/res/layout/u3_phy_switch.xml
+++ /dev/null
@@ -1,46 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:padding="10dip"
-    android:orientation="vertical">
-
-    <RadioGroup
-        android:id="@+id/u3_phy_switch_group"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:gravity="left"
-        android:orientation="vertical">
-
-        <RadioButton
-            android:id="@+id/u3_phy_switch_ap"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/u3_phy_switch_ap">
-        </RadioButton>
-
-        <RadioButton
-            android:id="@+id/u3_phy_switch_md"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/u3_phy_switch_md">
-        </RadioButton>
-    </RadioGroup>
-
-    <TextView
-        android:id="@+id/u3_phy_switch_hint"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dip"
-        android:text="@string/u3_phy_switch_hint">
-    </TextView>
-
-    <Button android:id="@+id/u3_phy_switch_set"
-        android:layout_width="120dip"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dip"
-        android:gravity="center"
-        android:text="@string/u3_phy_switch_set">
-    </Button>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/uart_usb_switch.xml b/EngineerMode/res/layout/uart_usb_switch.xml
deleted file mode 100644
index 6a58bfa..0000000
--- a/EngineerMode/res/layout/uart_usb_switch.xml
+++ /dev/null
@@ -1,54 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:layout_margin="10dip"
-    android:gravity="center_horizontal"
-    android:orientation="vertical" >
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dip"
-        android:text="@string/uart_usb_switch_current"
-        android:textAppearance="?android:attr/textAppearanceLarge" />
-
-    <TextView
-        android:id="@+id/uart_usb_switch_current_mode"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dip"
-        android:textAppearance="?android:attr/textAppearanceLarge" />
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20dip"
-        android:text="@string/uart_usb_switch_force_switch" />
-
-    <RadioGroup
-        android:id="@+id/uart_usb_switch_mode"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="20dip"
-        android:orientation="horizontal" >
-
-        <RadioButton
-            android:id="@+id/uart_usb_switch_mode_usb"
-            android:layout_width="0dp"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:layout_margin="10dip"
-            android:checked="true"
-            android:text="@string/uart_usb_switch_usb" />
-
-        <RadioButton
-            android:id="@+id/uart_usb_switch_mode_uart"
-            android:layout_width="0dp"
-            android:layout_margin="10dip"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/uart_usb_switch_uart" />
-    </RadioGroup>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/usb.xml b/EngineerMode/res/layout/usb.xml
deleted file mode 100644
index 62a1299..0000000
--- a/EngineerMode/res/layout/usb.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <ListView
-        android:id="@+id/ListView_USB"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/usb_acm.xml b/EngineerMode/res/layout/usb_acm.xml
deleted file mode 100644
index 83d0379..0000000
--- a/EngineerMode/res/layout/usb_acm.xml
+++ /dev/null
@@ -1,65 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <Button
-            android:id="@+id/button_acm_open_gs0"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:text="@string/usbacm_open_gs0" />
-
-        <Button
-            android:id="@+id/button_acm_open_gs1"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:text="@string/usbacm_open_gs1" />
-
-        <Button
-            android:id="@+id/button_acm_open_gs2"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:text="@string/usbacm_open_gs2" />
-
-        <Button
-            android:id="@+id/button_acm_open_gs3"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:layout_marginBottom="3dp"
-            android:text="@string/usbacm_open_gs3" />
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:layout_marginLeft="3pt"
-            android:layout_marginRight="5pt"
-            android:background="#FF909090" >
-        </View>
-
-        <Button
-            android:id="@+id/button_acm_close"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="3dp"
-            android:layout_marginLeft="10dp"
-            android:layout_marginRight="10dp"
-            android:text="@string/usbacm_close" />
-
-    </LinearLayout>
-
-</ScrollView>
diff --git a/EngineerMode/res/layout/usb_otg20_test.xml b/EngineerMode/res/layout/usb_otg20_test.xml
deleted file mode 100644
index e61550a..0000000
--- a/EngineerMode/res/layout/usb_otg20_test.xml
+++ /dev/null
@@ -1,362 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <TableLayout
-        android:id="@+id/TableLayout01"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/USB_IF_OTG20_TEST_MODE" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" >
-        </View>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_ENTER_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_EXIT_Text" >
-            </Button>
-        </TableRow>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="3dip"
-            android:background="#FF00FF00" >
-        </View>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/USB_IF_Proto_Test_Text" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" >
-        </View>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_IF_Proto_AUUT_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Proto_AUUT_Start_ID"
-                android:layout_width="70dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Proto_AUUT_Stop_ID"
-                android:layout_width="70dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_IF_Proto_BUUT_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Proto_BUUT_Start_ID"
-                android:layout_width="65dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Proto_BUUT_Stop_ID"
-                android:layout_width="65dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_STOP_Text" >
-            </Button>
-
-        </TableRow>
-        
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="3dip"
-            android:background="#FFFF0000" >
-        </View>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/USB_IF_Elec_Test_Text" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" >
-        </View>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_IF_Elec_EnVBUS_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_EnVBUS_Start_ID"
-                android:layout_width="70dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_EnVBUS_Stop_ID"
-                android:layout_width="70dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM1_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_TEST_SE0_NAK_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_TEST_SE0_NAK_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM2_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_TEST_J_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_TEST_J_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM3_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_TEST_K_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_TEST_K_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM4_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_TEST_PACKET_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_TEST_PACKET_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM5_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_SUSPEND_RESUME_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_SUSPEND_RESUME_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM6_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_GET_DESCRIPTOR_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_GET_DESCRIPTOR_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM7_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_SET_FEATURE_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_OTG20_Elec_SET_FEATURE_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_OTG20_STOP_Text" >
-            </Button>
-        </TableRow>
-        
-
-    </TableLayout>
-
-</LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/usb_phy_tuning.xml b/EngineerMode/res/layout/usb_phy_tuning.xml
deleted file mode 100644
index afb293a..0000000
--- a/EngineerMode/res/layout/usb_phy_tuning.xml
+++ /dev/null
@@ -1,76 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent">
-    <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:layout_marginTop="10dip"
-        android:layout_marginLeft="10dip">
-        <TextView
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content" 
-            android:text="@string/usb_phy_driving_capability"/>
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal">
-            <Spinner android:id="@+id/usb_phy_driving_capability_sp"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"/>
-            <Button android:id="@+id/usb_phy_driving_capability_btn"
-                android:layout_marginLeft="10dip"
-                android:layout_width="wrap_content" 
-                android:layout_height="wrap_content" 
-                android:text="@string/usb_phy_submit"/>
-          </LinearLayout>
-    </LinearLayout>
-    
-    <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:layout_marginLeft="10dip">
-        <TextView
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content" 
-            android:text="@string/usb_phy_hstx_srctrl"/>
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal">
-            <Spinner android:id="@+id/usb_phy_hstx_srctrl_sp"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"/>
-            <Button android:id="@+id/usb_phy_hstx_srctrl_btn"
-                android:layout_marginLeft="10dip"
-                android:layout_width="wrap_content" 
-                android:layout_height="wrap_content" 
-                android:text="@string/usb_phy_submit"/>
-          </LinearLayout>
-    </LinearLayout>
-
-    <LinearLayout android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"
-        android:layout_marginLeft="10dip">
-        <TextView
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content" 
-            android:text="@string/usb_phy_intr_en"/>
-        <LinearLayout
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:orientation="horizontal">
-            <Spinner android:id="@+id/usb_phy_intr_en_sp"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"/>
-            <Button android:id="@+id/usb_phy_intr_en_btn"
-                android:layout_marginLeft="10dip"
-                android:layout_width="wrap_content" 
-                android:layout_height="wrap_content" 
-                android:text="@string/usb_phy_submit"/>
-          </LinearLayout>
-    </LinearLayout>
-
-</LinearLayout>
diff --git a/EngineerMode/res/layout/usb_test.xml b/EngineerMode/res/layout/usb_test.xml
deleted file mode 100644
index cb59b5a..0000000
--- a/EngineerMode/res/layout/usb_test.xml
+++ /dev/null
@@ -1,214 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <TableLayout
-        android:id="@+id/TableLayout01"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/USB_IF_Elec_Test_Text" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" >
-        </View>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_IF_Elec_EnVBUS_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_Elec_EnVBUS_Start_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_Elec_EnVBUS_Stop_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_IF_Elec_DeVBUS_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_Elec_DeVBUS_Start_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_Elec_DeVBUS_Stop_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_IF_Elec_EnSRP_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_Elec_EnSRP_Start_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_Elec_EnSRP_Stop_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_IF_Elec_DeSRP_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_Elec_DeSRP_Start_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_Elec_DeSRP_Stop_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="3dip"
-            android:background="#FF00FF00" >
-        </View>
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/USB_IF_Proto_Test_Text" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" >
-        </View>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_IF_Proto_AUUT_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_Proto_AUUT_Start_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_Proto_AUUT_Stop_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_IF_Proto_BUUT_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_IF_Proto_BUUT_Start_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_Proto_BUUT_Stop_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_IF_Proto_BUUT_TD5_9_ID"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_TD5_9_Text" >
-            </Button>
-        </TableRow>
-    </TableLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/usb_test_ex.xml b/EngineerMode/res/layout/usb_test_ex.xml
deleted file mode 100644
index a80abf8..0000000
--- a/EngineerMode/res/layout/usb_test_ex.xml
+++ /dev/null
@@ -1,221 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="wrap_content"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <TableLayout
-        android:id="@+id/TableLayout01"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content" >
-
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/USB_Ex_Test_Text" >
-        </TextView>
-
-        <View
-            android:layout_width="fill_parent"
-            android:layout_height="1dip"
-            android:background="#FF909090" >
-        </View>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM1_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM1_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM1_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM2_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM2_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM2_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM3_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM3_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM3_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM4_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM4_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM4_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM5_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM5_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM5_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM6_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM6_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM6_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-
-        <TableRow
-            android:id="@+id/TableRow01"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content" >
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="3pt"
-                android:text="@string/USB_EX_ITEM7_Text" >
-            </TextView>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM7_Start_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_START_Text" >
-            </Button>
-
-            <Button
-                android:id="@+id/USB_EX_ITEM7_Stop_ID"
-                android:layout_width="100dip"
-                android:layout_height="wrap_content"
-                android:text="@string/USB_IF_STOP_Text" >
-            </Button>
-        </TableRow>
-    </TableLayout>
-
-    <View
-        android:layout_width="fill_parent"
-        android:layout_height="1dip"
-        android:background="#FF909090" >
-    </View>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/user2root.xml b/EngineerMode/res/layout/user2root.xml
deleted file mode 100644
index 0b8f6f9..0000000
--- a/EngineerMode/res/layout/user2root.xml
+++ /dev/null
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent" >
-
-    <TextView
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/user2root_hello" />
-
-    <LinearLayout
-        android:id="@+id/details"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="10dp"
-        android:layout_marginBottom="10dp"
-        android:orientation="vertical" >
-
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/Details"
-            android:textSize="20sp" />
-    </LinearLayout>
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:layout_gravity="fill_horizontal" >
-
-        <Button
-            android:id="@+id/root"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/Root" />
-
-        <Button
-            android:id="@+id/user"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_weight="1"
-            android:text="@string/User" />
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/video_entry.xml b/EngineerMode/res/layout/video_entry.xml
deleted file mode 100644
index f19b5c9..0000000
--- a/EngineerMode/res/layout/video_entry.xml
+++ /dev/null
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent">
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:layout_marginTop="10dip"
-        android:layout_marginLeft="5dip">
-        <TextView
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content" 
-            android:text="@string/video_clearmotion_customize"/>
-        <Spinner android:id="@+id/video_customize_spn"
-            android:layout_marginLeft="10dip"
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content"/>
-    </LinearLayout>
-    
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal"
-        android:layout_marginLeft="5dip">
-        <TextView
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content" 
-            android:text="@string/video_clearmotion_demo"/>
-        <Spinner android:id="@+id/video_demo_spn"
-            android:layout_marginLeft="10dip"
-            android:layout_width="wrap_content" 
-            android:layout_height="wrap_content"/>
-    </LinearLayout>
-</LinearLayout>
diff --git a/EngineerMode/res/layout/vilte_config.xml b/EngineerMode/res/layout/vilte_config.xml
deleted file mode 100644
index ce55ac4..0000000
--- a/EngineerMode/res/layout/vilte_config.xml
+++ /dev/null
@@ -1,156 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
-
-    <LinearLayout style="@style/info_layout" >
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/vilte_ut_support_title" />
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="match_parent" >
-
-            <Button
-                android:id="@+id/vilte_ut_support_enable"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:text="@string/vilte_ut_support_enable" />
-
-            <Button
-                android:id="@+id/vilte_ut_support_disable"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:text="@string/vilte_ut_support_disable" />
-        </LinearLayout>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="10dp"
-            android:background="#FF909090" />
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/vilte_video_fps_title" />
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="match_parent" >
-
-            <Spinner
-                android:id="@+id/vilte_video_fps_values"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:entries="@array/vilte_video_fps_values" />
-
-            <Button
-                android:id="@+id/vilte_video_fps_set"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:text="@string/vilte_video_fps_set" />
-        </LinearLayout>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" />
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/vilte_dump_data_title" />
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/vilte_source_bitstream_title" />
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="match_parent" >
-
-            <Button
-                android:id="@+id/vilte_source_bitstream_enable"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:text="@string/vilte_ut_support_enable" />
-
-            <Button
-                android:id="@+id/vilte_source_bitstream_disable"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:text="@string/vilte_ut_support_disable" />
-        </LinearLayout>
-
-        <TextView
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/vilte_sink_bitstream_title" />
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="match_parent" >
-
-            <Button
-                android:id="@+id/vilte_sink_bitstream_enable"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:text="@string/vilte_ut_support_enable" />
-
-            <Button
-                android:id="@+id/vilte_sink_bitstream_disable"
-                android:layout_width="100dp"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="5dp"
-                android:text="@string/vilte_ut_support_disable" />
-        </LinearLayout>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="1dp"
-            android:layout_marginTop="5dp"
-            android:background="#FF909090" />
-
-        <TextView
-            android:id="@+id/vilte_ut_support_status"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp" />
-
-        <TextView
-            android:id="@+id/vilte_video_fps_status"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp" />
-
-        <TextView
-            android:id="@+id/vilte_source_bitstream_status"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp" />
-
-        <TextView
-            android:id="@+id/vilte_sink_bitstream_status"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp" />
-    </LinearLayout>
-</ScrollView>
diff --git a/EngineerMode/res/layout/voice_common_setting.xml b/EngineerMode/res/layout/voice_common_setting.xml
deleted file mode 100644
index a56b19e..0000000
--- a/EngineerMode/res/layout/voice_common_setting.xml
+++ /dev/null
@@ -1,86 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:textSize="16dp"
-        android:text="@string/voice_settings_convenient" >
-    </TextView>
-    <LinearLayout 
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:orientation="horizontal">
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/voice_settings_clean">
-            </TextView>
-        <Spinner android:id="@+id/voice_settings_clean_spn"
-            android:layout_width="80dip"
-            android:layout_height="wrap_content">
-            </Spinner>
-    </LinearLayout>
-    <LinearLayout 
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:orientation="horizontal">
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/voice_settings_noisy">
-            </TextView>
-        <Spinner android:id="@+id/voice_settings_noisy_spn"
-            android:layout_width="80dip"
-            android:layout_height="wrap_content">
-            </Spinner>
-    </LinearLayout>
-    
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:textSize="16dp"
-        android:text="@string/voice_settings_detection_sensitivity" >
-    </TextView>
-    <LinearLayout 
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:orientation="horizontal">
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/voice_settings_training">
-            </TextView>
-        <Spinner android:id="@+id/voice_settings_training_spn"
-            android:layout_width="80dip"
-            android:layout_height="wrap_content">
-            </Spinner>
-    </LinearLayout>
-    <LinearLayout 
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:orientation="horizontal">
-        <TextView
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/voice_settings_testing">
-            </TextView>
-        <Spinner android:id="@+id/voice_settings_testing_spn"
-            android:layout_width="80dip"
-            android:layout_height="wrap_content">
-            </Spinner>
-    </LinearLayout>
-    
-    <Button android:id="@+id/voice_settings_set_btn"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/voice_settings_set"/>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/voice_list.xml b/EngineerMode/res/layout/voice_list.xml
deleted file mode 100644
index bed3083..0000000
--- a/EngineerMode/res/layout/voice_list.xml
+++ /dev/null
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <ListView
-        android:id="@id/android:list"
-        android:layout_width="fill_parent"
-        android:layout_height="0dip"
-        android:layout_weight="1"
-        android:drawSelectorOnTop="false" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/voice_recorder.xml b/EngineerMode/res/layout/voice_recorder.xml
deleted file mode 100644
index 91797ea..0000000
--- a/EngineerMode/res/layout/voice_recorder.xml
+++ /dev/null
@@ -1,49 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <TextView
-        android:id="@+id/voice_recorder_state"
-        android:layout_margin="20dip"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/voice_recorder_state_stopped"
-        android:textSize="30sp">
-    </TextView>
-
-    <RadioGroup
-        android:id="@+id/voice_recorder_storage_grp"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="20dip"
-        android:orientation="vertical" >
-        <RadioButton
-            android:id="@+id/voice_recorder_male_rb"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/voice_recorder_male" 
-            android:checked="true"/>
-        <RadioButton
-            android:id="@+id/voice_recorder_female_rb"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/voice_recorder_female" />
-    </RadioGroup>
-   
-   <LinearLayout android:orientation="horizontal"
-       android:layout_width="fill_parent"
-       android:layout_height="wrap_content">
-       <Button android:id="@+id/voice_recorder_start_btn"
-           android:layout_width="100dip"
-           android:layout_height="wrap_content"
-           android:layout_margin="20dip"
-           android:text="@string/voice_recorder_start"/>
-       <Button android:id="@+id/voice_recorder_directory_btn"
-           android:layout_width="wrap_content"
-           android:layout_height="wrap_content"
-           android:layout_marginTop="20dip"
-           android:text="@string/voice_recorder_directory"/>
-   </LinearLayout>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/voice_wakeup.xml b/EngineerMode/res/layout/voice_wakeup.xml
deleted file mode 100644
index b020454..0000000
--- a/EngineerMode/res/layout/voice_wakeup.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <TextView
-        android:layout_width="170dip"
-        android:layout_height="wrap_content"
-        android:text="@string/voice_wakeup_function_switch" >
-    </TextView>
-
-    <RadioGroup
-        android:id="@+id/voice_wakeup_function_switch"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:layout_marginLeft="20dip"
-        android:orientation="vertical" >
-        <RadioButton
-            android:id="@+id/voice_switch_1"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/voice_wakeup_switch_1" />
-        <RadioButton
-            android:id="@+id/voice_switch_2"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/voice_wakeup_switch_2" />
-   </RadioGroup>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/voice_wakeup_detector.xml b/EngineerMode/res/layout/voice_wakeup_detector.xml
deleted file mode 100644
index 46e0544..0000000
--- a/EngineerMode/res/layout/voice_wakeup_detector.xml
+++ /dev/null
@@ -1,170 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:scrollbars="vertical" >
-    
-    <LinearLayout 
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-        <LinearLayout 
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/voice_settings_detector_par01">
-                </TextView>
-            <Spinner android:id="@+id/voice_detector_par01"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content">
-                </Spinner>
-        </LinearLayout>
-        <LinearLayout 
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/voice_settings_detector_par02">
-                </TextView>
-            <Spinner android:id="@+id/voice_detector_par02"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content">
-                </Spinner>
-        </LinearLayout>
-        <LinearLayout 
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/voice_settings_detector_par03">
-                </TextView>
-            <Spinner android:id="@+id/voice_detector_par03"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content">
-                </Spinner>
-        </LinearLayout>
-        <LinearLayout 
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/voice_settings_detector_par04">
-                </TextView>
-            <Spinner android:id="@+id/voice_detector_par04"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content">
-                </Spinner>
-        </LinearLayout>
-        <LinearLayout 
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/voice_settings_detector_par05">
-                </TextView>
-            <Spinner android:id="@+id/voice_detector_par05"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content">
-                </Spinner>
-        </LinearLayout>
-        <LinearLayout 
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/voice_settings_detector_par06">
-                </TextView>
-            <Spinner android:id="@+id/voice_detector_par06"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content">
-                </Spinner>
-        </LinearLayout>
-        <LinearLayout 
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/voice_settings_detector_par07">
-                </TextView>
-            <Spinner android:id="@+id/voice_detector_par07"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content">
-                </Spinner>
-        </LinearLayout>
-        <LinearLayout 
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/voice_settings_detector_par08">
-                </TextView>
-            <Spinner android:id="@+id/voice_detector_par08"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content">
-                </Spinner>
-        </LinearLayout>
-        <LinearLayout 
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/voice_settings_detector_par09">
-                </TextView>
-            <Spinner android:id="@+id/voice_detector_par09"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content">
-                </Spinner>
-        </LinearLayout>
-        <LinearLayout 
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="horizontal">
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/voice_settings_detector_par10">
-                </TextView>
-            <Spinner android:id="@+id/voice_detector_par10"
-                android:layout_width="80dip"
-                android:layout_height="wrap_content">
-                </Spinner>
-        </LinearLayout>
-
-
-        <Button android:id="@+id/voice_detector_set_btn"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="30dip"
-            android:text="@string/voice_settings_set"/>
-    </LinearLayout>
-        
-</ScrollView>
diff --git a/EngineerMode/res/layout/wfd_iot_property.xml b/EngineerMode/res/layout/wfd_iot_property.xml
deleted file mode 100644
index 6dc2014..0000000
--- a/EngineerMode/res/layout/wfd_iot_property.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-    
-    <CheckBox
-        android:id="@+id/checkBoxScena"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dp"
-        android:text="@string/wfd_iot_scenario_mode" />
-    <CheckBox
-        android:id="@+id/checkBoxDrop"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dp"
-        android:text="@string/wfd_iot_drop_dummy" />
-    <CheckBox
-        android:id="@+id/checkBoxAcSync"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dp"
-        android:text="@string/wfd_iot_av_sync" />
-    <Button
-        android:id="@+id/buttonSet"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center_horizontal"
-        android:text="@string/wfd_iot_set" />
-   
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wfd_latency_profiling.xml b/EngineerMode/res/layout/wfd_latency_profiling.xml
deleted file mode 100644
index 5f491ec..0000000
--- a/EngineerMode/res/layout/wfd_latency_profiling.xml
+++ /dev/null
@@ -1,68 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-        
-
-        <TextView
-            android:id="@+id/Wfd_Chosen_Latency_tx"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_lp_capability" >
-        </TextView>
-
-        
-        <TextView
-            android:id="@+id/Wfd_CL_Content"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" 
-            android:layout_marginLeft="20dip">
-        </TextView>
-        
-
-        <TextView
-            android:id="@+id/Wfd_Wifi_Info_tx"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_wifi_info" >
-        </TextView>
-
-        
-        <TextView
-            android:id="@+id/Wfd_Wifi_Content"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" 
-            android:layout_marginLeft="20dip">
-        </TextView>
-        
- 
-        <TextView
-            android:id="@+id/Wfd_Latency_tx"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_latency" >
-        </TextView>
-
-        
-        <TextView
-            android:id="@+id/Wfd_Latency_Content"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content" 
-            android:layout_marginLeft="20dip">
-        </TextView>
-        
-        <CheckBox
-            android:id="@+id/Wfd_Profiling_Screen"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:text="@string/wfd_profiling_on" />
-    
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wfd_list.xml b/EngineerMode/res/layout/wfd_list.xml
deleted file mode 100644
index bed3083..0000000
--- a/EngineerMode/res/layout/wfd_list.xml
+++ /dev/null
@@ -1,14 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-    <ListView
-        android:id="@id/android:list"
-        android:layout_width="fill_parent"
-        android:layout_height="0dip"
-        android:layout_weight="1"
-        android:drawSelectorOnTop="false" />
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wfd_power_saving.xml b/EngineerMode/res/layout/wfd_power_saving.xml
deleted file mode 100644
index 8d32b66..0000000
--- a/EngineerMode/res/layout/wfd_power_saving.xml
+++ /dev/null
@@ -1,68 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <RadioGroup
-        android:id="@+id/Wfd_Power_Saving_Style"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginTop="5dp"
-        android:orientation="vertical" >
-        <RadioButton
-            android:id="@+id/Wfd_Power_Style_0"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_power_saving_style_0" />
-        <RadioButton
-            android:id="@+id/Wfd_Power_Style_1"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_power_saving_style_1" />
-        <RadioButton
-            android:id="@+id/Wfd_Power_Style_2"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_power_saving_style_2" />
-        <RadioButton
-            android:id="@+id/Wfd_Power_Style_3"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_power_saving_style_3" />
-    </RadioGroup>
-    <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:orientation="horizontal" >
-            <TextView
-                android:id="@+id/Wfd_Power_Delay_Time"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/wfd_power_delay_time" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/Wfd_Power_Delay_Time_Edit"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:maxLength="10"
-                android:numeric="integer" >
-            </EditText>
-    </LinearLayout>
-    <CheckBox android:id="@+id/wfd_power_saving_ext_display"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="@string/wfd_power_saving_ext_display"/>
-
-    <Button
-        android:id="@+id/Wfd_Done"
-        android:layout_width="100dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="80dip"
-        android:layout_marginTop="10dip"
-        android:text="@string/wfd_Done" />
-</LinearLayout>
-
diff --git a/EngineerMode/res/layout/wfd_quality.xml b/EngineerMode/res/layout/wfd_quality.xml
deleted file mode 100644
index 9a37e7d..0000000
--- a/EngineerMode/res/layout/wfd_quality.xml
+++ /dev/null
@@ -1,94 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-        
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/Wfd_Display_Toast_Time"
-                android:layout_width="220dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wfd_display_toast_time" >
-            </TextView>
-
-            <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content">
-                <EditText
-                    android:id="@+id/Wfd_Display_Toast_Time_Edit"
-                    android:layout_width="100dip"
-                    android:layout_height="wrap_content"
-                    android:maxLength="10"
-                    android:numeric="integer" >
-                </EditText>
-            </LinearLayout>
-        </LinearLayout>
-        
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/Wfd_Display_Notif_Time"
-                android:layout_width="220dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wfd_display_notif_time" >
-            </TextView>
-
-            <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content">
-                <EditText
-                    android:id="@+id/Wfd_Display_Notif_Time_Edit"
-                    android:layout_width="100dip"
-                    android:layout_height="wrap_content"
-                    android:maxLength="10"
-                    android:numeric="integer" >
-                </EditText>
-            </LinearLayout>
-        </LinearLayout>
-
-        <CheckBox
-            android:id="@+id/Wfd_Sqc_Info"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_sqc_tx" >
-        </CheckBox>
-        
-        <CheckBox
-            android:id="@+id/Wfd_qe_Info"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_qe_tx" >
-        </CheckBox>
-        
-        <CheckBox
-            android:id="@+id/Wfd_acs_Info"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_acs_tx" >
-        </CheckBox> 
-        <Button
-            android:id="@+id/Wfd_Done"
-            android:layout_width="100dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="80dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/wfd_Done" />
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wfd_security.xml b/EngineerMode/res/layout/wfd_security.xml
deleted file mode 100644
index 6412fe0..0000000
--- a/EngineerMode/res/layout/wfd_security.xml
+++ /dev/null
@@ -1,48 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical"  >
-        
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/Wfd_Sec_Content_tx"
-            android:layout_width="170dip"
-            android:layout_height="wrap_content"
-            android:text="@string/wfd_sec_content" >
-        </TextView>
-        <RadioGroup
-            android:id="@+id/Wfd_Sec_Tv_Shows"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginTop="5dp"
-            android:orientation="vertical" >
-            <RadioButton
-                android:id="@+id/Wfd_Sec_Tv_Shows_0"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/wfd_sec_tv_shows_0" />
-            <RadioButton
-                android:id="@+id/Wfd_Sec_Tv_Shows_1"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/wfd_sec_tv_shows_1" />
-        </RadioGroup>
-    </LinearLayout>
-    
-
-    <Button
-        android:id="@+id/Wfd_Done"
-        android:layout_width="100dip"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="80dip"
-        android:layout_marginTop="10dip"
-        android:text="@string/wfd_Done" />
-</LinearLayout>
-
diff --git a/EngineerMode/res/layout/wfd_vdo_capability.xml b/EngineerMode/res/layout/wfd_vdo_capability.xml
deleted file mode 100644
index b70e1ba..0000000
--- a/EngineerMode/res/layout/wfd_vdo_capability.xml
+++ /dev/null
@@ -1,129 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-        <CheckBox android:id="@+id/wfd_vdo_portrait_resolution_cb"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/wfd_vdo_enable_portrait_resolution"/>
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="vertical" >
-
-            <TextView
-                android:id="@+id/Wfd_Vdo_Max_Resolution_tx"
-                android:layout_width="170dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wfd_vdo_max_resolution" >
-            </TextView>
-
-            <RadioButton
-                android:id="@+id/Wfd_Vdo_720p_1"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/wfd_vdo_720p_1" />
-            <!--
-            <RadioButton
-                android:id="@+id/Wfd_Vdo_720p_2"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/wfd_vdo_720p_2" />
-            -->
-            <LinearLayout
-                android:id="@+id/LinearLayout"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:orientation="vertical" 
-                android:visibility="gone">
-                <CheckBox
-                    android:id="@+id/Wfd_Setting_Menu_720p"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginTop="5dp"
-                    android:text="@string/wfd_vdo_setting_menu" />
-                <RadioGroup
-                    android:id="@+id/Wfd_Vdo_Definition_720p"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_marginTop="5dp"
-                    android:layout_marginLeft="20dip"
-                    android:orientation="vertical" >
-                    <RadioButton
-                        android:id="@+id/Wfd_Vdo_720p_def_h"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/wfd_vdo_720p_2" />
-                    <RadioButton
-                        android:id="@+id/Wfd_Vdo_720p_def_l"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/wfd_vdo_720p_1" />
-               </RadioGroup>
-            </LinearLayout>
-            <RadioButton
-                android:id="@+id/Wfd_Vdo_1080p"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/wfd_vdo_1080p" />
-        
-            <LinearLayout
-                android:id="@+id/LinearLayout"
-                android:layout_width="fill_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="20dip"
-                android:orientation="vertical" >
-                <CheckBox
-                    android:id="@+id/Wfd_Setting_Menu_1080p"
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:layout_marginTop="5dp"
-                    android:text="@string/wfd_vdo_setting_menu" />
-                <RadioGroup
-                    android:id="@+id/Wfd_Vdo_Definition_1080p"
-                    android:layout_width="fill_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_marginTop="5dp"
-                    android:layout_marginLeft="20dip"
-                    android:orientation="vertical" >
-                    <RadioButton
-                        android:id="@+id/Wfd_Vdo_def_f"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/wfd_vdo_1080p" />
-                    <!--
-                    <RadioButton
-                        android:id="@+id/Wfd_Vdo_def_h"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/wfd_vdo_720p_2" />
-                    -->
-                    <RadioButton
-                        android:id="@+id/Wfd_Vdo_def_l"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:text="@string/wfd_vdo_720p_1" />
-               </RadioGroup>
-            </LinearLayout>
-        </LinearLayout>
-
-
-        <Button
-            android:id="@+id/Wfd_Done"
-            android:layout_width="100dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="80dip"
-            android:layout_marginTop="10dip"
-            android:text="@string/wfd_Done" />
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wifi.xml b/EngineerMode/res/layout/wifi.xml
deleted file mode 100644
index 36d4b9b..0000000
--- a/EngineerMode/res/layout/wifi.xml
+++ /dev/null
@@ -1,62 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:scrollbars="vertical" >
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <ListView
-        android:id="@+id/ListView_WiFi"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content" >
-    </ListView>
-
-    <CheckBox
-        android:id="@+id/wifi_wfa_switcher"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/wifi_wfa_enabler" >
-    </CheckBox>
-
-    <CheckBox
-        android:id="@+id/wifi_ctia_switcher"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/wifi_ctia_enabler" >
-    </CheckBox>
-    
-    <CheckBox
-        android:id="@+id/wifi_ap_wps2_support"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/wifi_ap_wps2_support_enabler" 
-        android:visibility="gone">
-    </CheckBox>
-    
-    <CheckBox
-        android:id="@+id/wifi_wps_test_mode"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/wifi_wps_test_mode" >
-    </CheckBox>
-
-    <CheckBox
-        android:id="@+id/wifi_cert_speedup_cpu"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:text="@string/wifi_cert_speedup_cpu_freq" >
-    </CheckBox>
-
-    <TextView
-        android:id="@+id/wifi_version"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="10dip"
-        android:paddingTop="10dip" >
-    </TextView>
-
-</LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wifi_eeprom.xml b/EngineerMode/res/layout/wifi_eeprom.xml
deleted file mode 100644
index 302567a..0000000
--- a/EngineerMode/res/layout/wifi_eeprom.xml
+++ /dev/null
@@ -1,235 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <TextView
-            android:id="@+id/WiFi_WordAccess_Text"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/wifi_wordaccess_text" >
-        </TextView>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginRight="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_addr_Text"
-                android:layout_width="150dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:text="@string/wifi_addr_text" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/WiFi_addr_Content"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:singleLine="true"
-                android:text="@string/wifi_addr_content" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginRight="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_value_Text"
-                android:layout_width="150dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:text="@string/wifi_value_text" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/WiFi_value_Content"
-                android:singleLine="true"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_value_content" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginRight="10dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/WiFi_Read_Word"
-                android:layout_width="160dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_read_word" >
-            </Button>
-
-            <Button
-                android:id="@+id/WiFi_Write_Word"
-                android:layout_width="150dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_write_word" >
-            </Button>
-        </LinearLayout>
-
-        <TextView
-            android:id="@+id/WiFi_StringAccess_Text"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:text="@string/wifi_stringaccess_text" >
-        </TextView>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginRight="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_addr_Text_String"
-                android:layout_width="150dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:text="@string/wifi_addr_text_string" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/WiFi_addr_Content_String"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:singleLine="true"
-                android:text="@string/wifi_addr_content_string" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginRight="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_length_Text_String"
-                android:layout_width="150dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:text="@string/wifi_length_text_string" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/WiFi_length_Content_String"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:numeric="integer"
-                android:singleLine="true"
-                android:text="@string/wifi_length_content_string" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginRight="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_value_Text_String"
-                android:layout_width="150dip"
-                android:layout_height="wrap_content"
-                android:layout_marginLeft="10dip"
-                android:text="@string/wifi_value_text_string" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/WiFi_value_Content_String"
-                android:layout_width="200dip"
-                android:layout_height="wrap_content"
-                android:singleLine="true"
-                android:text="@string/wifi_value_content_string" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginRight="10dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/WiFi_Read_String"
-                android:layout_width="160dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_read_word" >
-            </Button>
-
-            <Button
-                android:id="@+id/WiFi_Write_String"
-                android:layout_width="150dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_write_word" >
-            </Button>
-        </LinearLayout>
-
-        <!--
-        LinearLayout android:id="@+id/LinearLayout"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"
-				android:layout_marginRight = "10dip"
-			android:orientation="horizontal">
-
-			<Button android:text="@string/wifi_SaveBtn" android:id="@+id/WiFi_SaveBtn"
-				android:layout_width="160dip" android:layout_height="wrap_content"></Button>
-			<Button android:text="@string/wifi_BurnBtn" android:id="@+id/WiFi_BurnBtn"
-				android:layout_width="150dip" android:layout_height="wrap_content"></Button>
-
-		</LinearLayout>
-		<LinearLayout android:id="@+id/LinearLayout"
-			android:layout_width="fill_parent" android:layout_height="wrap_content"
-				android:layout_marginRight = "10dip"
-			android:orientation="horizontal">
-
-			<Button android:text="@string/wifi_readAllBtn" android:id="@+id/WiFi_ReadAllBtn"
-				android:layout_width="160dip" android:layout_height="wrap_content"></Button>
-			<Button android:text="@string/wifi_ClearBtn" android:id="@+id/WiFi_ClearBtn"
-				android:layout_width="150dip" android:layout_height="wrap_content"></Button>
-
-		</LinearLayout
-        -->
-
-        <ScrollView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="5dip"
-            android:layout_marginTop="10dip"
-            android:fillViewport="true"
-            android:scrollbarStyle="outsideOverlay" >
-
-            <EditText
-                android:id="@+id/WiFi_ShowWindow"
-                android:layout_width="305dip"
-                android:layout_height="fill_parent"
-                android:layout_marginRight="5dip"
-                android:editable="false" >
-            </EditText>
-        </ScrollView>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wifi_mcr.xml b/EngineerMode/res/layout/wifi_mcr.xml
deleted file mode 100644
index 6906e09..0000000
--- a/EngineerMode/res/layout/wifi_mcr.xml
+++ /dev/null
@@ -1,82 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <TextView
-        android:id="@+id/WiFi_MCR_Text"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="3pt"
-        android:layout_marginTop="10dip"
-        android:text="@string/wifi_mcr_text" >
-    </TextView>
-
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/WiFi_MCR_Addr_Text"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/wifi_mcr_addr_text" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/WiFi_MCR_Addr_Content"
-            android:singleLine="true"
-            android:layout_width="160dip"
-            android:layout_height="wrap_content" >
-        </EditText>
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="horizontal" >
-
-        <TextView
-            android:id="@+id/WiFi_MCR_Value_Text"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="3pt"
-            android:text="@string/wifi_mcr_value_text" >
-        </TextView>
-
-        <EditText
-            android:id="@+id/WiFi_MCR_Value_Content"
-            android:singleLine="true"
-            android:layout_width="160dip"
-            android:layout_height="wrap_content" >
-        </EditText>
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/LinearLayout"
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="3pt"
-        android:orientation="horizontal" >
-
-        <Button
-            android:id="@+id/WiFi_MCR_ReadBtn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/wifi_mcr_readbtn" >
-        </Button>
-
-        <Button
-            android:id="@+id/WiFi_MCR_WriteBtn"
-            android:layout_width="120dip"
-            android:layout_height="wrap_content"
-            android:text="@string/wifi_mcr_writebtn" >
-        </Button>
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wifi_rx_6620.xml b/EngineerMode/res/layout/wifi_rx_6620.xml
deleted file mode 100644
index d5d76d2..0000000
--- a/EngineerMode/res/layout/wifi_rx_6620.xml
+++ /dev/null
@@ -1,228 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Channel_Text"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/wifi_channel_text" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/WiFi_RX_Channel_Spinner"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!-- Bandwidth select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Bandwidth"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:textSize="13sp"
-                android:text="@string/wifi_bandwidth" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/WiFi_Bandwidth_Spinner"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-        <LinearLayout android:id="@+id/wifi_bandwidth_advanced_ll"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="vertical">
-            <!-- bandwidth advanced CBW -->
-            <LinearLayout
-	            android:id="@+id/wifi_bandwidth_advanced_cbw_ll"
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	            <TextView
-	                android:id="@+id/wifi_bandwidth_cbw"
-	                android:layout_width="70dip"
-	                android:layout_height="wrap_content"
-	                android:text="@string/wifi_bw_advanced_cbw" 
-	                android:textSize="12sp">
-	            </TextView>
-	
-	            <Spinner
-	                android:id="@+id/wifi_bandwidth_cbw_spn"
-	                android:layout_width="120dip"
-	                android:layout_height="wrap_content" 
-	                android:textSize="12sp">
-	            </Spinner>
-            </LinearLayout>
-	        <!-- bandwidth advanced DBW -->
-            <LinearLayout
-	            android:id="@+id/wifi_bandwidth_advanced_dbw_ll"
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	
-	            <TextView
-	                android:id="@+id/wifi_bandwidth_dbw"
-	                android:layout_width="70dip"
-	                android:layout_height="wrap_content"
-	                android:text="@string/wifi_bw_advanced_dbw" 
-	                android:textSize="12sp">
-	            </TextView>
-	
-	            <Spinner
-	                android:id="@+id/wifi_bandwidth_dbw_spn"
-	                android:layout_width="120dip"
-	                android:layout_height="wrap_content" 
-	                android:textSize="12sp">
-	            </Spinner>
-	        </LinearLayout>
-	        <!-- bandwidth advanced PRIMARY CH -->
-            <LinearLayout
-	            android:id="@+id/wifi_bandwidth_advanced_prim_ch_ll"
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	
-	            <TextView
-	                android:id="@+id/wifi_bandwidth_prim_ch"
-	                android:layout_width="70dip"
-	                android:layout_height="wrap_content"
-	                android:text="@string/wifi_bw_advanced_prim_ch" 
-	                android:textSize="12sp">
-	            </TextView>
-	
-	            <Spinner
-	                android:id="@+id/wifi_bandwidth_prim_ch_spn"
-	                android:layout_width="120dip"
-	                android:layout_height="wrap_content" 
-	                android:textSize="12sp">
-	            </Spinner>
-	        </LinearLayout>
-        
-        </LinearLayout>
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:layout_marginTop="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_FCS_Text"
-                android:layout_width="130dip"
-                android:layout_height="30dip"
-                android:text="@string/wifi_fcs_text" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/WiFi_FCS_Content"
-                android:layout_width="250dip"
-                android:layout_height="30dip"
-                android:text="@string/wifi_fcs_content" >
-            </TextView>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Rx_Text"
-                android:layout_width="130dip"
-                android:layout_height="30dip"
-                android:text="@string/wifi_rx_text" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/WiFi_Rx_Content"
-                android:layout_width="250dip"
-                android:layout_height="30dip"
-                android:text="@string/wifi_rx_content" >
-            </TextView>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_PER_Text"
-                android:layout_width="130dip"
-                android:layout_height="30dip"
-                android:text="@string/wifi_per_text" >
-            </TextView>
-
-            <TextView
-                android:id="@+id/WiFi_PER_Content"
-                android:layout_width="250dip"
-                android:layout_height="30dip"
-                android:text="@string/wifi_per_content" >
-            </TextView>
-        </LinearLayout>
-
-        <!--
-         CheckBox android:text="@string/wifi_alc" 
-		android:id="@+id/WiFi_ALC_Rx" 
-		android:layout_width="wrap_content" 
-		android:layout_height="wrap_content"
-		android:layout_marginLeft="10dip"
-		android:checked="false"></CheckBox
-        -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="60dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/WiFi_Go_Rx"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_go" >
-            </Button>
-
-            <Button
-                android:id="@+id/WiFi_Stop_Rx"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_stop" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wifi_tx_6620.xml b/EngineerMode/res/layout/wifi_tx_6620.xml
deleted file mode 100644
index 4f081e6..0000000
--- a/EngineerMode/res/layout/wifi_tx_6620.xml
+++ /dev/null
@@ -1,365 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="wrap_content" >
-
-    <LinearLayout
-        android:layout_width="fill_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical" >
-
-        <!-- channels list -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Channel_Text"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/wifi_channel_text" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/WiFi_Channel_Spinner"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Pkt_Text"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_pkt_text" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/WiFi_Pkt_Edit"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content"
-                android:numeric="integer"
-                android:singleLine="true"
-                android:text="@string/wifi_pkt_edit" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Pktcnt_Text"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_pktcnt_text" >
-            </TextView>
-
-            <EditText
-                android:id="@+id/WiFi_Pktcnt_Edit"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content"
-                android:numeric="integer"
-                android:singleLine="true"
-                android:text="@string/wifi_pktcnt_edit" >
-            </EditText>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Tx_Text"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_tx_text" >
-            </TextView>
-
-            <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content">
-              <EditText
-                android:id="@+id/WiFi_Tx_Gain_Edit"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content"
-                android:singleLine="true"
-                android:text="@string/wifi_tx_gain_edit" >
-              </EditText>
-            </LinearLayout>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Rate_Text"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/wifi_rate_text" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/WiFi_Rate_Spinner"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Mode_Text"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/wifi_mode_text" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/WiFi_Mode_Spinner"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!--
-    LinearLayout android:id="@+id/LinearLayout" 
-		android:layout_width="fill_parent" 
-		android:layout_height="wrap_content"
-		android:layout_marginLeft="10dip"
-		android:orientation="horizontal">
-		
-		<TextView android:text="@string/wifi_XtalTrim_text" 
-			android:id="@+id/WiFi_XtalTrim_Text" 
-			android:layout_width="80dip" 
-			android:layout_height="wrap_content"></TextView>
-		<EditText android:text="@string/wifi_XtalTrim_edit" 
-			android:id="@+id/WiFi_XtalTrim_Edit" 
-			android:layout_width="230dip" 
-			android:layout_height="wrap_content"></EditText>
-			
-	</LinearLayout>
-	
-	<LinearLayout android:id="@+id/LinearLayout" 
-		      android:layout_width="fill_parent" 
-		      android:layout_height="wrap_content"
-		      android:orientation="horizontal"
-		      android:layout_marginLeft="90dip">
-		
-		<Button android:text="@string/wifi_XtalTrim_Read" 
-			android:id="@+id/WiFi_XtalTrim_Read" 
-			android:layout_width="115dip" 
-			android:layout_height="wrap_content"></Button>
-		<Button android:text="@string/wifi_XtalTrim_Write" 
-			android:id="@+id/WiFi_XtalTrim_Write" 
-			android:layout_width="115dip" 
-			android:layout_height="wrap_content"></Button>
-		
-	</LinearLayout
-        -->
-
-
-        <!-- Preamble select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Preamble"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/wifi_preamble" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/WiFi_Preamble_Spinner"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-        <!-- Bandwidth select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Bandwidth"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/wifi_bandwidth" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/WiFi_Bandwidth_Spinner"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-        <LinearLayout android:id="@+id/wifi_bandwidth_advanced_ll"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="20dip"
-            android:orientation="vertical">
-            <!-- bandwidth advanced CBW -->
-            <LinearLayout
-	            android:id="@+id/wifi_bandwidth_advanced_cbw_ll"
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	            <TextView
-	                android:id="@+id/wifi_bandwidth_cbw"
-	                android:layout_width="70dip"
-	                android:layout_height="wrap_content"
-	                android:text="@string/wifi_bw_advanced_cbw" 
-	                android:textSize="12sp">
-	            </TextView>
-	
-	            <Spinner
-	                android:id="@+id/wifi_bandwidth_cbw_spn"
-	                android:layout_width="120dip"
-	                android:layout_height="wrap_content" 
-	                android:textSize="12sp">
-	            </Spinner>
-            </LinearLayout>
-	        <!-- bandwidth advanced DBW -->
-            <LinearLayout
-	            android:id="@+id/wifi_bandwidth_advanced_dbw_ll"
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	
-	            <TextView
-	                android:id="@+id/wifi_bandwidth_dbw"
-	                android:layout_width="70dip"
-	                android:layout_height="wrap_content"
-	                android:text="@string/wifi_bw_advanced_dbw" 
-	                android:textSize="12sp">
-	            </TextView>
-	
-	            <Spinner
-	                android:id="@+id/wifi_bandwidth_dbw_spn"
-	                android:layout_width="120dip"
-	                android:layout_height="wrap_content" 
-	                android:textSize="12sp">
-	            </Spinner>
-	        </LinearLayout>
-	        <!-- bandwidth advanced PRIMARY CH -->
-            <LinearLayout
-	            android:id="@+id/wifi_bandwidth_advanced_prim_ch_ll"
-	            android:layout_width="fill_parent"
-	            android:layout_height="wrap_content"
-	            android:orientation="horizontal">
-	
-	            <TextView
-	                android:id="@+id/wifi_bandwidth_prim_ch"
-	                android:layout_width="70dip"
-	                android:layout_height="wrap_content"
-	                android:text="@string/wifi_bw_advanced_prim_ch" 
-	                android:textSize="12sp">
-	            </TextView>
-	
-	            <Spinner
-	                android:id="@+id/wifi_bandwidth_prim_ch_spn"
-	                android:layout_width="120dip"
-	                android:layout_height="wrap_content" 
-	                android:textSize="12sp">
-	            </Spinner>
-	        </LinearLayout>
-        
-        </LinearLayout>
-        <!-- guard interval select -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <TextView
-                android:id="@+id/WiFi_Bandwidth"
-                android:layout_width="130dip"
-                android:layout_height="wrap_content"
-                android:paddingTop="10dip"
-                android:text="@string/wifi_guard_interval" >
-            </TextView>
-
-            <Spinner
-                android:id="@+id/WiFi_Guard_Interval_Spinner"
-                android:layout_width="320dip"
-                android:layout_height="wrap_content" >
-            </Spinner>
-        </LinearLayout>
-
-        <!--
-        CheckBox android:text="@string/wifi_ALC" 
-		android:id="@+id/WiFi_ALC" 
-		android:layout_width="wrap_content" 
-		android:layout_height="wrap_content"
-		android:layout_marginLeft="10dip"
-		android:checked="false"></CheckBox
-        -->
-
-        <LinearLayout
-            android:id="@+id/LinearLayout"
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dip"
-            android:orientation="horizontal" >
-
-            <Button
-                android:id="@+id/WiFi_Go"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_go" >
-            </Button>
-
-            <Button
-                android:id="@+id/WiFi_Stop"
-                android:layout_width="155dip"
-                android:layout_height="wrap_content"
-                android:text="@string/wifi_stop" >
-            </Button>
-        </LinearLayout>
-    </LinearLayout>
-
-</ScrollView>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wps_nfc.xml b/EngineerMode/res/layout/wps_nfc.xml
deleted file mode 100644
index 6969227..0000000
--- a/EngineerMode/res/layout/wps_nfc.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-    
-    
-        <LinearLayout
-        android:id="@+id/linearLayout2"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="5dp"
-        android:orientation="vertical" >
-
-    <ListView
-        android:id="@id/android:list"
-        android:layout_width="fill_parent"
-        android:layout_height="0dip"
-        android:layout_weight="1"
-        android:drawSelectorOnTop="false" />
-
-
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wps_nfc_em.xml b/EngineerMode/res/layout/wps_nfc_em.xml
deleted file mode 100644
index a267ed8..0000000
--- a/EngineerMode/res/layout/wps_nfc_em.xml
+++ /dev/null
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="fill_parent"
-    android:layout_height="fill_parent"
-    android:orientation="vertical" >
-
-
-    <LinearLayout
-        android:id="@+id/linearLayout1"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="5dp"
-        android:orientation="vertical" >
-        <CheckBox
-            android:id="@+id/checkBox1"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:text="@string/wps_wifi_enable" />
-
-    </LinearLayout>
-
-    <LinearLayout
-        android:id="@+id/linearLayout2"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="5dp"
-        android:orientation="vertical" >
-        <CheckBox
-            android:id="@+id/checkBox2"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:text="@string/wps_p2p_enable" />
-    </LinearLayout>
-    <LinearLayout
-        android:id="@+id/linearLayout3"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="5dp"
-        android:orientation="vertical" >
-        <CheckBox
-            android:id="@+id/checkBox3"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:text="@string/wps_nfc_wfa_enable" />
-    </LinearLayout>
-    <LinearLayout
-        android:id="@+id/linearLayout4"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="5dp"
-        android:orientation="vertical" >
-    <ListView
-        android:id="@id/android:list"
-        android:layout_width="fill_parent"
-        android:layout_height="0dip"
-        android:layout_weight="1"
-        android:drawSelectorOnTop="false" />
-    </LinearLayout>
-    
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/layout/wps_nfc_role_enrollee.xml b/EngineerMode/res/layout/wps_nfc_role_enrollee.xml
deleted file mode 100644
index 347f6e7..0000000
--- a/EngineerMode/res/layout/wps_nfc_role_enrollee.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical" >
-    
-    
-        <LinearLayout
-        android:id="@+id/linearLayout2"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="5dp"
-        android:orientation="vertical" >
-
-    <ListView
-        android:id="@id/android:list"
-        android:layout_width="fill_parent"
-        android:layout_height="0dip"
-        android:layout_weight="1"
-        android:drawSelectorOnTop="false" />
-
-
-    </LinearLayout>
-    <LinearLayout
-        android:id="@+id/linearLayout2"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_margin="5dp"
-        android:orientation="vertical" >
-
-
-        <CheckBox
-            android:id="@+id/checkBox"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_marginLeft="10dp"
-            android:text="@string/wps_use_different_key" />
-
-    </LinearLayout>
-</LinearLayout>
\ No newline at end of file
diff --git a/EngineerMode/res/menu/menu_show.xml b/EngineerMode/res/menu/menu_show.xml
deleted file mode 100644
index ad5ebec..0000000
--- a/EngineerMode/res/menu/menu_show.xml
+++ /dev/null
@@ -1,15 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<menu xmlns:android="http://schemas.android.com/apk/res/android" >
-
-    <item
-        android:id="@+id/menu_done"
-        android:alphabeticShortcut="\n"
-        android:icon="@android:drawable/ic_menu_save"
-        android:title="@string/menu_done"/>
-    <item
-        android:id="@+id/menu_discard"
-        android:alphabeticShortcut="q"
-        android:icon="@android:drawable/ic_menu_close_clear_cancel"
-        android:title="@string/menu_doNotSave"/>
-
-</menu>
\ No newline at end of file
diff --git a/EngineerMode/res/raw/point1.data b/EngineerMode/res/raw/point1.data
deleted file mode 100644
index 7733245a814583812b02b7d4d2c1143d0a15a2ce..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 800
zcmWl|=T;5?007YMnNY~e9%V!&vm|>I$|xCGWu@$yjI1P^A}T9;lO!W#uSow~=boDo
zXc0&Vw6v8$2HV;;wl&0dwzq>F?PRE(?P6EE+1(!Yw3of@W0>LgwV(YRV1xr5WTa6>
zJJ=Y9IMiVdcZ4I2HO^7SJKF!oIM#8FcY+h0<YcEf)kKq==5%M6Y>G3T<!tAeYMOIR
zcb@ZI;6gK8<YJe&)MaLx<#JcJ(p9cD+coBx>sr^j-VJValbhY*R=2s`9p<^ye0RCq
zJ?^!@eeU;w2R&q=hb{7m#UAyT$35XmPkGuip0&hM&w1W5FL=>%E3EXAm%ZXuuUX}F
zZ+O#N-u8}nz2|)&_|Qi__K8oe_L((4x7HWd`O;Uu_Ko$v^_}l+@Pi-y<Y&M5)o*_H
Rhd=#gqrd%QlYeav`~#0L!tDS6

diff --git a/EngineerMode/res/values/arrays.xml b/EngineerMode/res/values/arrays.xml
deleted file mode 100644
index 1fa24cc..0000000
--- a/EngineerMode/res/values/arrays.xml
+++ /dev/null
@@ -1,1509 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-	<!-- Bluetooth start -->
-	<string-array name="bt_chip_id">
-	    <item>MT6611</item>
-	    <item>MT6612</item>
-	    <item>MT6616</item>
-	    <item>MT6620</item>
-	    <item>MT6622</item>
-	    <item>MT6626</item>
-	    <item>MT6628</item>				
-	</string-array>
-
-	<string-array name="bt_chip_eco">
-	    <item>UNKNOWN</item>
-	    <item>E1</item>
-	    <item>E2</item>
-	    <item>E3</item>
-	    <item>E4</item>
-	    <item>E5</item>
-	    <item>E6</item>
-	    <item>E7</item>				
-	</string-array>
-	
-	<string-array name="bt_baudrate">
-	    <item>9600</item>
-	    <item>19200</item>
-	    <item>38400</item>
-	    <item>57600</item>
-	    <item>115200</item>
-	    <item>230400</item>
-	    <item>460800</item>
-	    <item>500000</item>	
-	    <item>576000</item>
-	    <item>921600</item>				
-	</string-array>
-
-	<string-array name="bt_uart">
-	    <item>UART1</item>
-	    <item>UART2</item>
-	    <item>UART3</item>
-	    <item>UART4</item>
-	    <item>USB</item>			
-	</string-array>
-
-    <string-array name="bt_ble_test_pattern">
-        <item>PRBS9</item>
-        <item>11110000</item>
-        <item>10101010</item>      
-    </string-array>	
-
-    <string-array name="rx_Pocket_type">
-        <item>NULL</item>
-        <item>POLL</item>
-        <item>FHS</item>
-        <item>DM1</item>
-        <item>DH1</item>
-        <item>HV1</item>
-        <item>HV2</item>
-        <item>HV3</item>
-        <item>DV</item>
-        <item>AUX</item>
-        <item>DM3</item>
-        <item>DH3</item>
-        <item>DM5</item>
-        <item>DH5</item>
-        <item>EV3</item>
-        <item>EV4</item>
-        <item>EV5</item>
-    </string-array>
-    
-    
-	<!-- Bluetooth end -->
-    <string-array name="tx_pattern">
-        <item>0000</item>
-        <item>1111</item>
-        <item>1010</item>
-        <item>Pseudo random bit</item>
-        <item>11110000</item>
-    </string-array>
-    <string-array name="tx_channels">
-        <item>Single Frequency</item>
-        <item>79 Channel</item>
-    </string-array>
-    <string-array name="tx_Pocket_type">
-        <item>NULL(0x00)</item>
-        <item>POLL(0x01)</item>
-        <item>FHS(0x02)</item>
-        <item>DM1(0x03)</item>
-        <item>DH1(0x04)</item>
-        <item>HV1(0x05)</item>
-        <item>HV2(0x06)</item>
-        <item>HV3(0x07)</item>
-        <item>DV(0x08)</item>
-        <item>AUX(0x09)</item>
-        <item>DM3(0x0A)</item>
-        <item>DH3(0x0B)</item>
-        <item>DM5(0x0E)</item>
-        <item>DH5(0x0F)</item>
-        <item>EV3(0x17)</item>
-        <item>EV4(0x1C)</item>
-        <item>EV5(0x1D)</item>
-        <item>2-DH1(0x24)</item>
-        <item>3-DH1(0x28)</item>
-        <item>2-DH3(0x2A)</item>
-        <item>3-DH3(0x2B)</item>
-        <item>2-DH5(0x2E)</item>
-        <item>3-DH5(0x2F)</item>
-        <item>2-EV3(0x36)</item>
-        <item>3-EV3(0x37)</item>
-        <item>2-EV5(0x3C)</item>
-        <item>3-EV5(0x3D)</item>
-        <item>non-modulated</item>
-    </string-array>
-    <string-array name="nsrx_pattern">
-        <item>0000</item>
-        <item>1111</item>
-        <item>1010</item>
-        <item>Pseudo random bit</item>
-        <item>11110000</item>
-    </string-array>
-    <string-array name="nsrx_Pocket_type">
-        <item>DM1(0x03)</item>
-        <item>DH1(0x04)</item>
-        <item>DM3(0x0A)</item>
-        <item>DH3(0x0B)</item>
-        <item>DM5(0x0E)</item>
-        <item>DH5(0x0F)</item>
-        <item>2-DH1(0x24)</item>
-        <item>3-DH1(0x28)</item>
-        <item>2-DH3(0x2A)</item>
-        <item>3-DH3(0x2B)</item>
-        <item>2-DH5(0x2E)</item>
-        <item>3-DH5(0x2F)</item>
-    </string-array>
-    <string-array name="modem_test_cta_options">
-        <item>Integrity Check</item>
-        <item>RLC TL1</item>
-        <item>K1297</item>
-        <item>SN Conflict</item>
-        <item>CF query</item>
-        <item>DLMN lock</item>
-        <item>Measurement open</item>
-        <item>Disable DPA</item>
-        <item>Intra CMR</item>
-    </string-array>
-    
-    <string-array name="modem_test_fta_options">
-        <item>ANITE</item>
-        <item>CRTUG</item>
-        <item>CRTUW</item>
-        <item>ANRITSU</item>
-        <item>CMW500</item>
-    </string-array>
-
-    <string-array name="modem_test_c2k_options">
-        <item>NONE</item>
-        <item>SPIRENT</item>
-    </string-array>
-    
-    <string-array name="modem_test_iot_options_6589">
-        <item>General</item>
-        <item>NSN</item>
-        <item>DCM CB</item>
-        <item>ERICSSON</item>
-    </string-array>
-    
-    <string-array name="modem_test_operator_options">
-        <item>MS_USIM_COMPATIPLE</item>
-    </string-array>
-    
-    <string-array name="modem_test_operator_options_6589">   
-        <item>MS_USIM_COMPATIPLE</item>
-        <item>ATNT</item>
-        <item>TMOBILE</item>
-        <item>ORANGE</item>
-        <item>VODAFONE</item>
-        <item>O2</item>
-        <item>TELEFONICA</item>
-        <item>DOCOMO</item>
-        <item>SOFTBANK</item>
-        <item>VIVO</item>
-        <item>CLARO</item>
-        <item>TIM</item>
-        <item>CU</item>
-    </string-array>
-    <!-- Fast Dormancy -->
-    <string-array name="modem_test_iot_options">
-        <item>Fast Dormancy</item>
-    </string-array>
-    <!-- GSM/UMTS Options strings -->
-    <string-array name="gsm_umts_network_preferences_choices">
-        <item>GSM/TD (auto mode)</item>
-        <item>TD only</item>
-        <item>GSM only</item>
-    </string-array>
-    <string-array name="gsm_umts_network_preferences_values">
-        <item>"0"</item>
-        <item>"2"</item>
-        <item>"1"</item>
-        <!-- <item>"3"</item> -->
-    </string-array>
-
-    <!-- Device Manager -->
-    <string-array name="device_mgr_entries">
-        <item>Disable</item>
-        <item>Enable</item>
-    </string-array>
-    <string-array name="device_mgr_values">
-        <item>0</item>
-        <item>1</item>
-    </string-array>
-    <string-array name="device_mgr_dm_conf_switch_entries">
-        <item>Test Environment</item>
-        <item>Productive Environment</item>
-    </string-array>
-    <string-array name="device_mgr_dm_conf_switch_values">
-        <item>0</item>
-        <item>1</item>
-    </string-array>
-    <!-- Add for TV out start -->
-    <string-array name="tvout_system_list" translatable="false">
-        <item>PAL</item>
-        <item>NTSC</item>
-    </string-array>
-    <string-array name="tvout_page_list" translatable="false">
-        <item>0_white_level</item>
-        <item>1_luma_bw"</item>
-        <item>2_luma_linear_distortion</item>
-        <item>3_chroma_snr</item>
-        <item>4_diff_gain</item>
-        <item>5_color_bar</item>
-        <item>6_luma_nonlinearity</item>
-    </string-array>
-    <!-- Add for TV out end -->
-    <!-- Audio start -->
-    <string-array name="audio_functions">
-        <item>Normal Mode</item>
-        <item>Headset Mode</item>
-        <item>LoudSpeaker Mode</item>
-        <item>Headset_LoudSpeaker Mode</item>
-        <item>Speech Enhancement</item>
-        <!-- <item>Debug Info</item>
-        <item>Debug Session</item>
-        <item>Speech Logger</item>
-        <item>Audio Logger</item>
-        <item>Audio Wake Lock</item> -->
-    </string-array>
-    <string-array name="Audio_GetAudioCommandSpinner">
-        <item>0x64</item>
-        <item>0x66</item>
-        <item>0x68</item>
-    </string-array>
-    
-    <string-array name="Audio_SetAudioCommandSpinner">
-        <item>0x99, 1</item>
-        <item>0x98, 1</item>
-    </string-array>
-    
-       <string-array name="Audio_GetAudioParameterSpinner">
-        <item>GetFmEnable</item>
-        <item>GetFmTxEnable</item>
-        <item>DUAL_MIC_GET_GAIN</item>
-
-    </string-array>
-    
-    <string-array name="Audio_SetAudioParameterSpinner">
-        <item>TDM_Record=0</item>
-        <item>SET_MODE=0</item>
-        <item>HAHA=0</item>
-        <item>Set_SpeechCall_DL_Mute=0</item>
-        <item>SetFmVolume=0</item>
-    </string-array>
-    <string-array name="mode_type0">
-        <item>Sip</item>
-        <item>Mic</item>
-        <item>Sph</item>
-        <item>Sid</item>
-        <item>Media</item>
-    </string-array>
-    <string-array name="mode_type1">
-        <item>Sip</item>
-        <item>Mic</item>
-        <item>FMR</item>
-        <item>Sph</item>
-        <item>Sid</item>
-        <item>Media</item>
-        <item>Matv</item>
-    </string-array>
-    <string-array name="mode_type2">
-        <item>Ring</item>
-        <item>Sip</item>
-        <item>Mic</item>
-        <item>FMR</item>
-        <item>Sph</item>
-        <item>Sid</item>
-        <item>Media</item>
-        <item>Matv</item>
-    </string-array>
-    <string-array name="mode_type0_enh">
-        <item>@string/audio_val_type_sip</item>
-        <item>@string/audio_val_type_mic</item>
-        <item>@string/audio_val_type_sph</item>
-        <item>@string/audio_val_type_sph2</item>
-        <item>@string/audio_val_type_sid</item>
-        <item>@string/audio_val_type_media</item>
-    </string-array>
-    <string-array name="mode_type1_enh">
-        <item>@string/audio_val_type_sip</item>
-        <item>@string/audio_val_type_mic</item>
-        <item>@string/audio_val_type_fmr</item>
-        <item>@string/audio_val_type_sph</item>
-        <item>@string/audio_val_type_sph2</item>
-        <item>@string/audio_val_type_sid</item>
-        <item>@string/audio_val_type_media</item>
-        <item>@string/audio_val_type_matv</item>
-    </string-array>
-    <string-array name="mode_type2_enh">
-        <item>@string/audio_val_type_ring</item>
-        <item>@string/audio_val_type_sip</item>
-        <item>@string/audio_val_type_mic</item>
-        <item>@string/audio_val_type_fmr</item>
-        <item>@string/audio_val_type_sph</item>
-        <item>@string/audio_val_type_sph2</item>
-        <item>@string/audio_val_type_sid</item>
-        <item>@string/audio_val_type_media</item>
-        <item>@string/audio_val_type_matv</item>
-    </string-array>
-    <string-array name="mode_type3_enh">
-        <item>@string/audio_val_type_ring</item>
-    </string-array>
-    <string-array name="mode_level">
-        <item>Level 0</item>
-        <item>Level 1</item>
-        <item>Level 2</item>
-        <item>Level 3</item>
-        <item>Level 4</item>
-        <item>Level 5</item>
-        <item>Level 6</item>
-    </string-array>
-    <string-array name="mode_fir">
-        <item>FIR 0</item>
-        <item>FIR 1</item>
-        <item>FIR 2</item>
-        <item>FIR 3</item>
-        <item>FIR 4</item>
-        <item>FIR 5</item>
-    </string-array>
-    <string-array name="speech_enhance_mode">
-        <item>Common Parameter</item>
-        <item>Normal Mode</item>
-        <item>Headset Mode</item>
-        <item>LoudSpeaker Mode</item>
-        <item>BT Earphone Mode</item>
-        <item>BT Cordless Mode</item>
-        <item>BT Karkit Mode</item>
-        <item>AUX1 Mode</item>
-        <item>AUX2 Mode</item>
-    </string-array>
-    <!-- Audio end -->
-    <!-- Camera start -->
-    <string-array name="camera_items">
-        <item>AF EM</item>
-        <item>Raw Capture Mode</item>
-        <item>Raw Type</item>
-        <item>Flicker</item>
-        <item>ISO</item>
-        <item>Start Preview</item>
-        <item>Help</item>
-    </string-array>
-    <string-array name="af_mode_dialog">
-        <item>Normal AF</item>
-        <item>AF Bracket</item>
-        <item>Full Scan</item>
-        <item>Full Scan Repeat</item>
-        <item>AF Repeat</item>
-        <item>AF and Full Repeat</item>
-    </string-array>
-    <string-array name="capture_mode_dialog">
-        <item>Preview Mode</item>
-        <item>Capture Mode</item>
-        <item>JPEG Only</item>
-    </string-array>
-    <string-array name="raw_type_dialog">
-        <item>Processed Raw</item>
-        <item>Pure Raw</item>
-    </string-array>
-    <string-array name="anti_flicker_dialog">
-        <item>50HZ</item>
-        <item>60HZ</item>
-    </string-array>
-    <string-array name="iso_dialog">
-        <item>AUTO</item>
-        <item>ISO100</item>
-        <item>ISO150</item>
-        <item>ISO200</item>
-        <item>ISO300</item>
-        <item>ISO400</item>
-        <item>ISO600</item>
-        <item>ISO800</item>
-        <item>ISO1600</item>
-    </string-array>
-    <string-array name="camera_common_option_entries">
-        <item>@string/camera_ev_calibration</item>
-    </string-array>
-    <string-array name="normal_captrue_size">
-        <item>Preview size</item>
-        <item>Capture size</item>
-        <item>Capture size(ZSD)</item>
-        <item>Video size</item>
-        <item>Slim Video1</item>
-        <item>Slim Video2</item>
-        <item>Custom1</item>
-        <item>Custom2</item>
-        <item>Custom3</item>
-        <item>Custom4</item>
-        <item>Custom5</item>
-    </string-array>
-    <string-array name="normal_captrue_name_prefix">
-        <item>Preview</item>
-        <item>Capture</item>
-        <item>Capture</item>
-        <item>Video</item>
-        <item>SlimVideo1</item>
-        <item>SlimVideo2</item>
-        <item>Custom1</item>
-        <item>Custom2</item>
-        <item>Custom3</item>
-        <item>Custom4</item>
-        <item>Custom5</item>
-    </string-array>
-    <string-array name="normal_capture_scene_mode">
-        <item>Auto</item>
-        <item>Night</item>
-        <item>Sunset</item>
-        <item>Party</item>
-        <item>Portrait</item>
-        <item>Landscape</item>
-        <item>Night portrait</item>
-        <item>Theatre</item>
-        <item>Beach</item>
-        <item>Snow</item>
-        <item>Steady photo</item>
-        <item>Fireworks</item>
-        <item>Sports</item>
-        <item>Candle light</item>
-    </string-array>
-    <!-- Camera end -->
-
-    <!-- RAT Mode Start -->
-	<string-array name="mPreferredNetworkLabels">
-		<item>GSM/WCDMA (auto)</item>
-		<item>GSM/WCDMA (WCDMA preferred)</item>
-		<item>WCDMA only</item>
-		<item>GSM only</item>
-		<item>LTE only</item>
-        <item>4G/3G/2G(auto)</item>
-        <item>4G/3G</item>
-                <item>Not Specified</item>
-	</string-array>
-	<string-array name="mTddPreferredNetworkLabels">
-		<item>GSM/TD-SCDMA(auto)</item>
-		<item>TD-SCDMA preferred</item>
-		<item>TD-SCDMA only</item>
-		<item>GSM only</item>
-		<item>LTE only</item>
-        <item>4G/3G/2G(auto)</item>
-        <item>4G/3G</item>
-                <item>Not Specified</item>
-	</string-array>
-
-	<!-- RAT Mode End -->
-
-	<!-- Network Mode Switching Start -->
-    <string-array name="network_mode_labels">
-        <item>GSM/WCDMA (WCDMA preferred)</item>
-        <item>GSM only</item>
-        <item>WCDMA only</item>
-        <item>TD-SCDMA only</item>
-        <item>GSM/WCDMA (auto)</item>
-        <item>GSM/TD-SCDMA(auto)</item>
-        <item>LTE only</item>
-        <item>CDMA only</item>
-        <item>4G/3G/2G(auto)</item>
-        <item>4G/3G</item>
-    </string-array>
-	<string-array name="mTddNetworkLabels">
-		<item>GSM only</item>
-		<item>TD-SCDMA only</item>
-		<item>GSM/TD-SCDMA(auto)</item>
-        <item>LTE only</item>
-        <item>4G/3G/2G(auto)</item>
-        <item>4G/3G</item>
-	</string-array>
-	<string-array name="mWcdmaNetworkLabels">
-	    <item>GSM/WCDMA (WCDMA preferred)</item>
-	    <item>GSM only</item>
-	    <item>WCDMA only</item>
-	    <item>GSM/WCDMA (auto)</item>
-        <item>LTE only</item>
-        <item>4G/3G/2G(auto)</item>
-        <item>4G/3G</item>
-	</string-array>
-	<string-array name="mCdmaNetworkLabels">
-	    <item>Hybrid</item>
-	    <item>CDMA 1X only</item>
-	    <item>EVDO only</item>
-	</string-array>
-	<!-- Network Mode Switching End -->
-
-<!-- MSDC Start -->
-	<string-array name="host_type">
-		<item>Host Number 0</item>
-		<item>Host Number 1</item>
-		<item>Host Number 2</item>
-		<item>Host Number 3</item>
-		<item>Host Number 4</item>
-	</string-array>
-
-	<string-array name="host_data">
-		<item>4 mA</item>
-		<item>8 mA</item>
-		<item>12 mA</item>
-		<item>16 mA</item>
-	</string-array>
-
-	<string-array name="hopping_bit">
-		<item>None</item>
-		<item>2.26MHZ</item>
-		<item>4.52MHZ</item>
-		<item>9.04MHZ</item>
-	</string-array>
-	<string-array name="hopping_time">
-		<item>30.5us</item>
-		<item>61.0us</item>
-		<item>122.1us</item>
-		<item>244.1us</item>
-		<item>488.3us</item>
-	</string-array>
-
-	<string-array name="command_data">
-		<item>0</item>
-		<item>1</item>
-		<item>2</item>
-		<item>3</item>
-		<item>4</item>
-		<item>5</item>
-		<item>6</item>
-		<item>7</item>
-	</string-array>
-
-	<string-array name="msdc_select">
-		<item>Driving SET</item>
-		<item>Hopping SET</item>
-		<item>SD3.0 TEST</item>
-	</string-array>
-	
-	<string-array name="msdc_sd3_mode">
-	    <item>SDHC HIGHSPEED</item>
-	    <item>UHS SDR12</item>
-	    <item>UHS SDR25</item>
-	    <item>UHS SDR50</item>
-	    <item>UHS SDR104</item>
-	    <item>UHS DDR50</item>
-	    <item>HS400</item>
-	</string-array>
-	
-	<string-array name="msdc_sd3_max_current">
-	    <item>MAX CURRENT 200</item>
-	    <item>MAX CURRENT 400</item>
-	    <item>MAX CURRENT 600</item>
-	    <item>MAX CURRENT 800</item>
-	</string-array>
-	
-	<string-array name="msdc_sd3_drive">
-	    <item>DRIVER TYPE A</item>
-	    <item>DRIVER TYPE B</item>
-	    <item>DRIVER TYPE C</item>
-	    <item>DRIVER TYPE D</item>
-	</string-array>
-	
-	<string-array name="msdc_sd3_power_control">
-	    <item>SDXC NO POWER CONTROL</item>
-	    <item>SDXC POWER CONTROL</item>
-	</string-array>
-	<!-- MSDC End -->
-    <!-- Freq Hopping Start -->
-    <string-array name="desense_freqhopping_plls">
-        <item>ARMPLL</item>
-        <item>MAINPLL</item>
-        <item>MEMPLL</item>
-        <item>MSDCPLL</item>
-        <item>TVDPLL</item>
-        <item>LVDSPLL</item>
-    </string-array>
-    <string-array name="desense_freqhopping_plls_6572">
-        <item>ARMPLL</item>
-        <item>MAINPLL</item>
-    </string-array>
-    <string-array name="desense_freqhopping_plls_6582">
-        <item>ARMPLL</item>
-        <item>MAINPLL</item>
-        <item>MEMPLL</item>
-        <item>MSDCPLL</item>
-        <item>MMPLL</item>
-        <item>VENCPLL</item>
-    </string-array>
-    <!-- Freq Hopping End -->
-    <!-- HQA NFC Start -->
-    <string-array name="nfc_lang">
-        <item>default</item>
-        <item>de</item>
-        <item>en</item>
-        <item>fr</item>
-    </string-array>
-    <!-- HQA  NFC End -->
-    
-    <!-- Auto calibration start -->
-    <string-array name="auto_calib_capture_mode1">
-        <item>Capture size</item>
-        <item>Capture type</item>
-    </string-array>
-    <string-array name="auto_calib_capture_type">
-        <item>Processed Raw</item>
-        <item>Pure Raw</item>
-        <item>Jpeg Only</item>
-    </string-array>
-    <string-array name="auto_calib_capture_type1">
-        <item>Processed Raw</item>
-        <item>Pure Raw</item>
-    </string-array>
-    <string-array name="auto_calib_capture_mode2">
-        <item>Capture number</item>
-        <item>Multiple Frame Raw Dump</item>
-        <item>Video Clip Raw Dump</item>
-    </string-array>
-    <string-array name="auto_calib_capture_number">
-        <item>Single</item>
-        <item>Double</item>
-        <item>Triple</item>
-    </string-array>
-    <string-array name="auto_calib_multi_frame">
-        <item>4 frames</item>
-        <item>8 frames</item>
-        <item>12 frames</item>
-    </string-array>
-    <string-array name="auto_calib_video_clip">
-        <item>Keep resolution</item>
-        <item>Crop resolution</item>
-        <!-- <item>Sensor binning</item> -->
-    </string-array>
-    <string-array name="auto_calib_iso">
-        <item>Select None</item>
-        <item>Select All</item>
-        <item>Auto</item>
-        <item>ISO 1x</item>
-        <item>ISO 1.5x</item>
-        <item>ISO 2x</item>
-        <item>ISO 3x</item>
-        <item>ISO 4x</item>
-        <item>ISO 6x</item>
-        <item>ISO 8x</item>
-        <item>ISO 12x</item>
-        <item>ISO 16x</item>
-        <item>ISO 20x</item>
-        <item>ISO 24x</item>
-        <item>ISO 28x</item>
-        <item>ISO 32x</item>
-    </string-array>
-    <string-array name="auto_calib_special_iso">
-        <item>Auto</item>
-        <item>ISO 1x</item>
-        <item>ISO 1.5x</item>
-        <item>ISO 2x</item>
-        <item>ISO 3x</item>
-        <item>ISO 4x</item>
-        <item>ISO 6x</item>
-        <item>ISO 8x</item>
-        <item>ISO 12x</item>
-        <item>ISO 16x</item>
-        <item>ISO 24x</item>
-        <item>ISO 32x</item>
-    </string-array>
-    <string-array name="auto_calib_flicker_type">
-        <item>50Hz</item>
-        <item>60Hz</item>
-    </string-array>
-    <string-array name="auto_calib_led_flash">
-        <item>AUTO</item>
-        <item>ON</item>
-        <item>OFF</item>
-    </string-array>
-    <string-array name="auto_calib_flash">
-        <item>1</item>
-        <item>2</item>
-        <item>3</item>
-        <item>4</item>
-        <item>5</item>
-        <item>6</item>
-        <item>7</item>
-        <item>8</item>
-        <item>9</item>
-        <item>10</item>
-        <item>11</item>
-        <item>12</item>
-        <item>13</item>
-        <item>14</item>
-        <item>15</item>
-        <item>16</item>
-        <item>17</item>
-        <item>18</item>
-        <item>19</item>
-        <item>20</item>
-        <item>21</item>
-        <item>22</item>
-        <item>23</item>
-        <item>24</item>
-        <item>25</item>
-        <item>26</item>
-        <item>27</item>
-        <item>28</item>
-        <item>29</item>
-        <item>30</item>
-        <item>31</item>
-        <item>32</item>
-    </string-array>
-    <string-array name="auto_calib_af">
-        <item>AF</item>
-    </string-array>
-    <string-array name="auto_calib_af_bracket_interval">
-        <item>1</item>
-        <item>2</item>
-        <item>4</item>
-    </string-array>
-    <string-array name="auto_calib_af_mode">
-        <item>Auto</item>
-        <item>AF Bracket</item>
-        <item>Full Scan</item>
-        <item>Through focus</item>
-    </string-array>
-    <string-array name="auto_calib_af_through_direct">
-        <item>Macro to Inf.</item>
-        <item>Inf. to Macro</item>
-        <item>Manual configure</item>
-    </string-array>
-    <string-array name="auto_calib_capture">
-        <item>Start Preview</item>
-    </string-array>
-    <string-array name="auto_calib_on_off_value">
-        <item>OFF</item>
-        <item>ON</item>
-    </string-array>
-    <string-array name="multi_pass_nr_value">
-        <item>Auto</item>
-        <item>Disable</item>
-        <item>HWNR</item>
-        <item>SWNR</item>
-    </string-array>
-    <!-- When launching the camera app first time, we will set the picture
-         size to the first one in the list that is also supported by the
-         driver -->
-    <string-array name="pref_camera_picturesize_entryvalues" translatable="false">
-        <item>320x240</item>
-        <item>640x480</item>
-        <item>1024x768</item>
-        <item>1280x960</item>
-        <item>1600x1200</item>
-        <item>2048x1536</item>
-        <item>2560x1920</item>
-        <item>2592x1936</item>
-        <item>2592x1944</item>
-        <item>3264x2448</item>
-        <item>4096x3072</item>
-    </string-array>
-    <!-- Default focus mode setting. -->
-    <string-array name="pref_camera_focusmode_default_array" translatable="false">
-        <item>continuous-picture</item>
-        <item>auto</item>
-    </string-array>
-    <string-array name="desense_camera_items" translatable="false">
-        <item>2 mA</item>
-        <item>4 mA</item>
-        <item>6 mA</item>
-        <item>8 mA</item>
-        <item>Clear setting file</item>
-    </string-array>
-    <string-array name="auto_clib_shutter_delay_vals">
-        <item>0 s</item>
-        <item>5 s</item>
-        <item>10 s</item>
-    </string-array>
-    <string-array name="auto_clib_shading_table_items">
-        <item>Auto</item>
-        <item>Low</item>
-        <item>Middle</item>
-        <item>High</item>
-        <item>TSF</item>
-    </string-array>
-    <string-array name="auto_clib_output_sdblk_options">
-        <item>OFF</item>
-        <item>ON</item>
-    </string-array>
-    <!-- Auto calibration end -->
-        <!-- NFC part start-->
-	<string-array name="matv_frame_rate_entries">
-		<item>Frame Rate 30</item>
-		<item>Frame Rate 20</item>
-		<item>Frame Rate 15</item>
-	</string-array>
-	<string-array name="matv_frame_rate_values">
-		<item>30</item>
-		<item>20</item>
-		<item>15</item>
-	</string-array>
-	<string-array name="matv_nr_level_entries">
-		<item>NR Level 0x31</item>
-		<item>NR Level 0x32</item>
-		<item>NR Level 0x33</item>
-		<item>NR Level 0x34</item>
-		<item>NR Level 0x35</item>
-	</string-array>
-	<string-array name="matv_nr_level_values">
-		<item>31</item>
-		<item>32</item>
-		<item>33</item>
-		<item>34</item>
-		<item>35</item>
-	</string-array>
-	<string-array name="always_on_module">
-		<item>Type A</item>
-		<item>Type B</item>
-		<item>Type F</item>
-		<item>No modulation</item>
-	</string-array>
-	<string-array name="always_on_bitrate">
-		<item>106 kbps</item>
-		<item>212 kbps</item>
-		<item>424 kbps</item>
-	</string-array>
-	<string-array name="card_emul_mode_type">
-		<item>MifareUL</item>
-		<item>MifareStd</item>
-		<item>ISO14443_4A</item>
-		<item>ISO14443_4B</item>
-		<item>Jewel</item>
-		<item>Felica</item>
-		<item>ISO15693</item>
-	</string-array>
-	<string-array name="card_emul_mode_prot">
-		<item>ISO14443A</item>
-		<item>ISO14443B</item>
-		<item>Felica212</item>
-		<item>Felica424</item>
-		<item>ISO15693</item>
-	</string-array>
-	<!--NFC part end -->
-
-    <string-array name="rf_desense_tx_test_gsm_modulation">
-        <item>GMSK</item>
-        <item>EDGE</item>
-    </string-array>
-    <integer-array name="rf_desense_tx_test_gsm_modulation_values">
-        <item>0</item>
-        <item>1</item>
-    </integer-array>
-
-    <string-array name="rf_desense_tx_test_gsm_band">
-        <item>GSM 850</item>
-        <item>P-GSM 900</item>
-        <item>E-GSM 900</item>
-        <item>R-GSM 900</item>
-        <item>DCS 1800</item>
-        <item>PCS 1900</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_gsm_band_values">
-        <item>128</item>
-        <item>1</item>
-        <item>2</item>
-        <item>4</item>
-        <item>8</item>
-        <item>16</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_gsm_gmsk_limits">
-        <!-- Format: default channel, channel min/max/min2/max2, default TX power, TX power min/max -->
-        <item>128,128,251,128,251,33,7,33</item>
-        <item>1,1,124,1,124,33,7,33</item>
-        <item>0,0,124,975,1023,33,7,33</item>
-        <item>0,0,124,955,1023,33,7,33</item>
-        <item>512,512,885,512,885,30,2,30</item>
-        <item>512,512,810,512,885,30,2,30</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_gsm_edge_limits">
-        <!-- Format: default channel, channel min/max/min2/max2, default TX power, TX power min/max -->
-        <item>128,128,251,128,251,27,7,27</item>
-        <item>1,1,124,1,124,27,7,27</item>
-        <item>0,0,124,975,1023,27,7,27</item>
-        <item>0,0,124,955,1023,27,7,27</item>
-        <item>512,512,885,512,885,26,2,26</item>
-        <item>512,512,810,512,885,26,2,26</item>
-    </string-array>
-
-    <string-array name="rf_desense_tx_test_td_band">
-        <item>Band A</item>
-        <item>Band E</item>
-        <item>Band F</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_td_band_values">
-        <item>1</item>
-        <item>5</item>
-        <item>6</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_td_limits">
-        <!-- Format: default channel, channel min/max/min2/max2, default TX power, TX power min/max -->
-        <item>10087,10054,10121,10054,10121,34,-50,34</item>
-        <item>11750,11504,11996,11504,11996,34,-50,34</item>
-        <item>9500,9404,9596,9404,9596,34,-50,34</item>
-    </string-array>
-
-    <string-array name="rf_desense_tx_test_fd_band">
-        <item>Band 1</item>
-        <item>Band 2</item>
-        <item>Band 3</item>
-        <item>Band 4</item>
-        <item>Band 5</item>
-        <item>Band 6</item>
-        <item>Band 7</item>
-        <item>Band 8</item>
-        <item>Band 9</item>
-        <item>Band 10</item>
-        <item>Band 11</item>
-        <item>Band 12</item>
-        <item>Band 13</item>
-        <item>Band 14</item>
-        <item>Band 19</item>
-        <item>Band 20</item>
-        <item>Band 21</item>
-        <item>Band 22</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_fd_band_values">
-        <item>1</item>
-        <item>2</item>
-        <item>3</item>
-        <item>4</item>
-        <item>5</item>
-        <item>6</item>
-        <item>7</item>
-        <item>8</item>
-        <item>9</item>
-        <item>10</item>
-        <item>11</item>
-        <item>12</item>
-        <item>13</item>
-        <item>14</item>
-        <item>19</item>
-        <item>20</item>
-        <item>21</item>
-        <item>22</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_fd_limits">
-        <!-- Format: default channel, channel min/max/min2/max2, default TX power, TX power min/max -->
-        <item>9612,9612,9888,9612,9888,24,-55,24</item>
-        <item>9262,9262,9538,12,287,24,-55,24</item>
-        <item>937,937,1288,937,1288,24,-55,24</item>
-        <item>1312,1312,1513,1662,1862,24,-55,24</item>
-        <item>4132,4132,4233,782,862,24,-55,24</item>
-        <item>4162,4162,4188,812,837,24,-55,24</item>
-        <item>2012,2012,2338,2362,2687,24,-55,24</item>
-        <item>2712,2712,2863,2712,2863,24,-55,24</item>
-        <item>8762,8762,8912,8762,8912,24,-55,24</item>
-        <item>2887,2887,3163,3187,3462,24,-55,24</item>
-        <item>3487,3487,3562,3487,3562,24,-55,24</item>
-        <item>3617,3617,3678,3707,3767,24,-55,24</item>
-        <item>3792,3792,3818,3842,3867,24,-55,24</item>
-        <item>3892,3892,3918,3942,3967,24,-55,24</item>
-        <item>312,312,363,387,437,24,-55,24</item>
-        <item>4287,4287,4413,4287,4413,24,-55,24</item>
-        <item>462,462,512,462,512,24,-55,24</item>
-        <item>4437,4437,4813,4437,4813,24,-55,24</item>
-    </string-array>
-
-    <string-array name="rf_desense_tx_test_gsm_pattern">
-        <item>RFTOOL_NB_TX_RANDOM_WITH_TSC</item>
-        <item>RFTOOL_NB_TX_ALL_ONES_WITHOUT_TSC</item>
-        <item>RFTOOL_AB_TX_RANDOM_WITH_SYNC_SEQ</item>
-        <item>RFTOOL_CONT_TX_ALL_ZEROS</item>
-        <item>RFTOOL_CONT_TX_ALL_ONES</item>
-        <item>RFTOOL_CONT_TX_ALTERNATE_BITS</item>
-        <item>RFTOOL_CONT_TX_PSEUDO_RANDOM</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_gsm_pattern_values">
-        <item>0</item>
-        <item>1</item>
-        <item>2</item>
-        <item>3</item>
-        <item>4</item>
-        <item>5</item>
-        <item>6</item>
-    </string-array>
-
-    <string-array name="rf_desense_tx_test_lte_bandwidth">
-        <item>1.4M</item>
-        <item>3M</item>
-        <item>5M</item>
-        <item>10M</item>
-        <item>15M</item>
-        <item>20M</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_lte_mcs">
-        <item>QPSK</item>
-        <item>16QAM</item>
-        <item>64QAM</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_lte_freq_range">
-        <item>19200,19800</item>
-        <item>18500,19100</item>
-        <item>17100,17850</item>
-        <item>17100,17550</item>
-        <item>8240,8490</item>
-        <item>8300,8400</item>
-        <item>25000,25700</item>
-        <item>8800,9150</item>
-        <item>17499,17849</item>
-        <item>17100,17700</item>
-        <item>14279,14479</item>
-        <item>6990,7160</item>
-        <item>7770,7870 </item>
-        <item>7880,7980</item>
-        <item>0,0</item>
-        <item>0,0</item>
-        <item>7040,7160</item>
-        <item>8150,8300</item>
-        <item>8300,8450</item>
-        <item>8320,8620</item>
-        <item>14479,14629</item>
-        <item>34100,34900</item>
-        <item>20000,20200</item>
-        <item>16265,16605</item>
-        <item>18500,19150</item>
-        <item>8140,8490 </item>
-        <item>8070,8240</item>
-        <item>7030,7480</item>
-        <item>0,0</item>
-        <item>23050,23150</item>
-        <item>4525,4575</item>
-        <item>0,0</item>
-        <item>19000,19200</item>
-        <item>20100,20250</item>
-        <item>18500,19100</item>
-        <item>19300,19900</item>
-        <item>19100,19300</item>
-        <item>25700,26200</item>
-        <item>18800,19200</item>
-        <item>23000,24000</item>
-        <item>24960,26900</item>
-        <item>34000,36000</item>
-        <item>36000,38000</item>
-        <item>7030,8030</item>
-    </string-array>
-
-    <string-array name="rf_desense_tx_test_cdma_modulation">
-        <item>1X</item>
-        <item>EVDO</item>
-    </string-array>
-    <integer-array name="rf_desense_tx_test_cdma_modulation_values">
-        <item>0</item>
-        <item>1</item>
-    </integer-array>
-
-    <string-array name="rf_desense_tx_test_cdma_band">
-        <item>Band 0(North American Celluar Band)</item>
-        <item>Band 1(North American PCS band)</item>
-        <item>Band 2(TACS band)</item>
-        <item>Band 3(JTACS band)</item>
-        <item>Band 4(Korean PCS band)</item>
-        <item>Band 5(NMT-450 Band)</item>
-        <item>Band 6(IMT-2000 band)</item>
-        <item>Band 7(North American 700Mhz Celluar Band)</item>
-        <item>Band 8(1800-MHz Band)</item>
-        <item>Band 9(900-MHz Band)</item>
-        <item>Band 10(Secondary 800 MHz Band)</item>
-        <item>Band 11(400 MHz European PAMR Band</item>
-        <item>Band 12(800 MHz PAMR Band)</item>
-        <item>Band 13(2.5 GHz IMT-2000 Extension Band)</item>
-        <item>Band 14(US PCS 1.9GHz Band)</item>
-        <item>Band 15(AWS Band)</item>
-    </string-array>
-    <string-array name="rf_desense_tx_test_cdma_band_values">
-        <item>0</item>
-        <item>1</item>
-        <item>2</item>
-        <item>3</item>
-        <item>4</item>
-        <item>5</item>
-        <item>6</item>
-        <item>7</item>
-        <item>8</item>
-        <item>9</item>
-        <item>10</item>
-        <item>11</item>
-        <item>12</item>
-        <item>13</item>
-        <item>14</item>
-        <item>15</item>
-    </string-array>
-
-    <string-array name="hspa_info_mode_array_td">
-        <item>HSDPA off</item>
-        <item>HSDPA on\nHSUPA off</item>
-        <item>HSDPA on\nHSUPA on</item>
-        <item>HSDPA on\nHSUPA on</item>
-    </string-array>
-    <string-array name="hspa_info_mode_array_fd">
-        <item>HSDPA off</item>
-        <item>HSDPA on\nHSUPA off</item>
-        <item>HSDPA on\nHSUPA on\nHSPA+ off</item>
-        <item>HSDPA on\nHSUPA on\nHSPA+ on</item>
-    </string-array>
-    <!-- DCM Start -->
-	<string-array name="dcm_lpm_ref_clk_entries">
-	    <item>CLOCK_104M</item>
-	    <item>CLOCK_32K</item>
-	</string-array>
-	<string-array name="dcm_lpm_signal_entries">
-	    <item>CONN_SRCCLKENA_ACK</item>
-	    <item>CONN_SRCCLKENA</item>
-	    <item>MD_SRCCLKENA</item>
-	    <item>MD_SRCCLKENA_ACK</item>
-	    <item>CLKSQ_OFF</item>
-	    <item>INFRASYS_TOP_MTCMOS_POWER_ON</item>
-	    <item>CA7_CORE0_MTCMOS_POWER_ON</item>
-	    <item>CA7_CORE1_MTCMOS_POWER_ON</item>
-	    <item>DCM_ALL_IDLE</item>
-	    <item>MDSYS_BUS_PORT_IDLE</item>
-	    <item>EMI_CONTROLLER_IDLE</item>
-	    <item>EMI_BUS_SLAVE_PORT_IDLE</item>
-	    <item>INFRASYS_BUS_IDLE</item>
-	    <item>PERISYS_BUS_IDLE</item>
-	    <item>CA7_CORE0_STANDBYWFI</item>
-	    <item>CA7_CORE1_STANDBYWFI</item>
-	</string-array>
-	<!-- DCM End -->
-	<!-- CT Device Register start -->
-	<string-array name="device_register_entries">
-		<item>Turn On</item>
-		<item>Turn Off</item>
-	</string-array>
-	<string-array name="device_register_values">
-		<item>1</item>
-		<item>0</item>
-	</string-array>
-	<!-- CT Device Register end -->
-	
-	<!-- ESN track start -->
-	<string-array name="esn_track_entries">
-		<item>Turn On</item>
-		<item>Turn Off</item>
-	</string-array>
-	<string-array name="esn_track_values">
-		<item>1</item>
-		<item>0</item>
-	</string-array>
-	<!-- ESN track end -->
-	
-    <!-- LTE start -->
-	<string-array name="lte_threshold_operation_on_off">
-		<item>Not use (0)</item>
-		<item>Use (1)</item>
-	</string-array>
-	<string-array name="lte_threshold_operation_and_or">
-		<item>OR (0)</item>
-		<item>AND (1)</item>
-	</string-array>
-	<string-array name="lte_threshold">
-		<item>measured 2G RSSI threshold (0~63):</item>
-		<item>current 2G RSSI minimal (0~63):</item>
-		<item>measured 3G RSCP threshold (0~96):</item>
-		<item>current 3G RSCP minimal (0~96):</item>
-		<item>measured LTE RSRP threshold (0~97):</item>
-		<item>current LTE RSRP minimal (0~97):</item>
-		<item>measured LTE RSRQ threshold (0~34):</item>
-		<item>current LTE RSRQ minimal (0~34):</item>
-	</string-array>
-	<integer-array name="lte_threshold_max">
-		<item>63</item>
-		<item>63</item>
-		<item>96</item>
-		<item>96</item>
-		<item>97</item>
-		<item>97</item>
-		<item>34</item>
-		<item>34</item>
-	</integer-array>
-	<string-array name="lte_timer">
-		<item>T1:</item>
-		<item>T2:</item>
-		<item>T3:</item>
-		<item>T4:</item>
-	</string-array>
-	<string-array name="lte_search_timer_1">
-		<item>T1</item>
-		<item>T2</item>
-		<item>T3</item>
-		<item>T4</item>
-		<item>T5</item>
-		<item>T6</item>
-		<item>T7</item>
-		<item>T8</item>
-		<item>T9</item>
-		<item>T10</item>
-	</string-array>
-	<string-array name="lte_search_timer_2">
-		<item>T11</item>
-		<item>T12</item>
-		<item>T13</item>
-		<item>T14</item>
-		<item>T15</item>
-		<item>T16</item>
-		<item>T17</item>
-		<item>T18</item>
-		<item>T19</item>
-	</string-array>
-	<string-array name="lte_preferred_network_labels">
-		<item>2G Only</item>
-        <item>3G Only</item>
-		<item>3G and 2G</item>
-		<item>4G and 2G</item>
-		<item>4G only</item>
-        <item>4G/3G</item>
-        <item>4G/3G and 2G</item>
-        <item>3G/2G Preferred</item>
-	</string-array>
-    <string-array name="lte_network_info_labels">
-        <item>4G ERRC Misc Info</item>
-        <item>4G LTE Support Band</item>
-        <item>4G Active Intra-RAT Meas (LTE)</item>
-        <item>4G Active Inter-RAT Meas (UMTS)</item>
-        <item>4G Active Inter-RAT Meas (GSM)</item>
-        <item>4G SIB Receive Status</item>
-        <item>4G CSG Autonomous Search</item>
-        <item>4G Config Info</item>
-        <item>ESM</item>
-        <item>EMM</item>
-        <item>MMDC</item>
-        <item>EL1</item>
-        <item>Timer Information</item>
-        <item>TDD TAS</item>
-        <item>GSM TAS</item>
-        <item>WCDMA TAS</item>
-    </string-array>
-    <!-- LTE end -->
-
-    <!-- CT Network Selection start -->
-    <string-array name="ct_network_selection">
-        <item>Global mode</item>
-        <item>CDMA only</item>
-        <item>WCDMA(GSM) only</item>
-    </string-array>
-    <!-- CT Network Selection End -->
-
-    <!-- Antenna Test start -->
-    <string-array name="antenna_modes_4g">
-        <item>RX1 &amp; RX2</item>
-        <item>RX1</item>
-        <item>RX2</item>
-    </string-array>
-    <string-array name="antenna_modes_3g">
-        <item>Please select a mode:</item>
-        <item>RX1</item>
-        <item>RX2</item>
-        <item>RX1 &amp; RX2</item>
-        <item>Resume default setting</item>
-    </string-array>
-    <!-- Antenna Test End -->
-
-    <string-array name="band_mode_lte_fdd">
-        <item>Band 1</item>
-        <item>Band 2</item>
-        <item>Band 3</item>
-        <item>Band 4</item>
-        <item>Band 5</item>
-        <item>Band 6</item>
-        <item>Band 7</item>
-        <item>Band 8</item>
-        <item>Band 9</item>
-        <item>Band 10</item>
-        <item>Band 11</item>
-        <item>Band 12</item>
-        <item>Band 13</item>
-        <item>Band 14</item>
-        <item>Band 15</item>
-        <item>Band 16</item>
-        <item>Band 17</item>
-        <item>Band 18</item>
-        <item>Band 19</item>
-        <item>Band 20</item>
-        <item>Band 21</item>
-        <item>Band 22</item>
-        <item>Band 23</item>
-        <item>Band 24</item>
-        <item>Band 25</item>
-        <item>Band 26</item>
-        <item>Band 27</item>
-        <item>Band 28</item>
-        <item>Band 29</item>
-        <item>Band 30</item>
-        <item>Band 31</item>
-        <item>Band 32</item>
-    </string-array>
-    <string-array name="band_mode_lte_tdd">
-        <item>Band 33</item>
-        <item>Band 34</item>
-        <item>Band 35</item>
-        <item>Band 36</item>
-        <item>Band 37</item>
-        <item>Band 38</item>
-        <item>Band 39</item>
-        <item>Band 40</item>
-        <item>Band 41</item>
-        <item>Band 42</item>
-        <item>Band 43</item>
-        <item>Band 44</item>
-    </string-array>
-    <string-array name="band_mode_cdma">
-        <item>Band 0(North American Celluar Band)</item>
-        <item>Band 1(North American PCS band)</item>
-        <item>Band 2(TACS band)</item>
-        <item>Band 3(JTACS band)</item>
-        <item>Band 4(Korean PCS band)</item>
-        <item>Band 5(NMT-450 Band)</item>
-        <item>Band 6(IMT-2000 band)</item>
-        <item>Band 7(North American 700Mhz Celluar Band)</item>
-        <item>Band 8(1800-MHz Band)</item>
-        <item>Band 9(900-MHz Band)</item>
-        <item>Band 10(Secondary 800 MHz Band)</item>
-        <item>Band 11(400 MHz European PAMR Band</item>
-        <item>Band 12(800 MHz PAMR Band)</item>
-        <item>Band 13(2.5 GHz IMT-2000 Extension Band)</item>
-        <item>Band 14(US PCS 1.9GHz Band)</item>
-        <item>Band 15(AWS Band)</item>
-    </string-array>
-
-    <string-array name="low_battery_protect_stop">
-        <item>0</item>
-        <item>1</item>
-    </string-array>
-    <string-array name="low_battery_protect_ut">
-        <item>0</item>
-        <item>1</item>
-        <item>2</item>
-    </string-array>
-    <string-array name="misc_features">
-        <item>2G only feature</item>
-        <item>Vibrate on outgoing call connected</item>
-        <item>Self Register</item>
-    </string-array>
-
-    <string-array name="network_info_1xrtt_radio">
-        <item>Channel</item>
-        <item>bandClass</item>
-        <item>pilotPN</item>
-        <item>rxPower</item>
-        <item>txPower</item>
-        <item>FER</item>
-    </string-array>
-    <string-array name="network_info_1xrtt_info">
-        <item>cpState</item>
-        <item>Calibration</item>
-        <item>RfFileMajorVersion</item>
-        <item>RfFileMinorVersion</item>
-        <item>RfFileValueVersion</item>
-        <item>RfFileCustVersion</item>
-        <item>sid</item>
-        <item>nid</item>
-        <item>sysDetIndication</item>
-        <item>regZone</item>
-        <item>baseLat</item>
-        <item>baseLong</item>
-        <item>networkPrefSCI</item>
-        <item>qpchMode</item>
-        <item>mcc</item>
-        <item>imsi_11_12</item>
-        <item>currentPacketZoneID</item>
-        <item>serviceOption</item>
-        <item>T_ADD</item>
-        <item>T_DROP</item>
-        <item>T_COMP</item>
-        <item>T_tDROP</item>
-    </string-array>
-    <string-array name="network_info_1xrtt_sch_info">
-        <item>ForSchMux</item>
-        <item>ForSchRc</item>
-        <item>ForSchStatus</item>
-        <item>ForSchDuration(20ms)</item>
-        <item>ForSchRate</item>
-        <item>RevSchMux</item>
-        <item>RevSchRc</item>
-        <item>RevSchStatus</item>
-        <item>RevSchDuration(20ms)</item>
-        <item>RevSchRate</item>
-    </string-array>
-    <string-array name="network_info_1xrtt_statistics">
-        <item>total_msg</item>
-        <item>error_msg</item>
-        <item>acc_1</item>
-        <item>acc_2</item>
-        <item>acc_8</item>
-        <item>dpchloss_count</item>
-        <item>dtchloss_count</item>
-        <item>idelHO_count</item>
-        <item>hardHO_count</item>
-        <item>interFreqIdleHO_count</item>
-        <item>silentRetryTimeout_count</item>
-        <item>T40_count</item>
-        <item>T41_count</item>
-    </string-array>
-    <string-array name="network_info_1xrtt_serving">
-        <item>pilotPN</item>
-        <item>pilotEcIo</item>
-        <item>pilotPhase</item>
-    </string-array>
-    <string-array name="network_info_evdo_serving_info">
-        <item>Band</item>
-        <item>Channel</item>
-        <item>PilotPN</item>
-        <item>PhySubtype</item>
-        <item>RSSI(dbm)</item>
-        <item>SectorID</item>
-        <item>SubnetMask</item>
-        <item>ColorCode</item>
-        <item>UATI</item>
-        <item>PilotInc</item>
-        <item>ActiveSetWindow</item>
-        <item>NeighborSetWindow</item>
-        <item>RemainSetWindow</item>
-        <item>PilotAdd</item>
-        <item>PilotDrop</item>
-        <item>PilotDropTimer</item>
-    </string-array>
-    <string-array name="network_info_evdo_active_set">
-        <item>PilotPN</item>
-        <item>PilotEcIo</item>
-        <item>DRC Cover</item>
-    </string-array>
-    <string-array name="network_info_evdo_set">
-        <item>band</item>
-        <item>channel</item>
-        <item>pilotPN</item>
-        <item>pilotEcIo</item>
-    </string-array>
-    <string-array name="network_info_evdo_fl">
-        <item>C/I</item>
-        <item>DRC average value</item>
-        <item>FTC crc error count</item>
-        <item>FTC total count</item>
-        <item>Sync crc error ratio</item>
-    </string-array>
-    <string-array name="network_info_evdo_rl">
-        <item>Average tbsize</item>
-        <item>RTC retransmit count</item>
-        <item>RTC transmit total count</item>
-        <item>TX power</item>
-        <item>pilot power</item>
-        <item>RAB=1 ratio</item>
-    </string-array>
-    <string-array name="network_info_evdo_state_info">
-        <item>Session State</item>
-        <item>AT State</item>
-        <item>ALMP State</item>
-        <item>Init State</item>
-        <item>Idle State</item>
-        <item>Overhead State</item>
-        <item>Connected State</item>
-        <item>Route Update State</item>
-    </string-array>
-
-    <string-array name="usb_phy_tuning_val_0_7b">
-        <item>000</item>
-        <item>001</item>
-        <item>010</item>
-        <item>011</item>
-        <item>100</item>
-        <item>101</item>
-        <item>110</item>
-        <item>111</item>
-    </string-array>
-
-    <string-array name="usb_phy_tuning_val_0_1d">
-        <item>0</item>
-        <item>1</item>
-    </string-array>
-    <string-array name="vilte_video_fps_values">
-        <item>15</item>
-        <item>20</item>
-        <item>30</item>
-    </string-array>
-
-    <string-array name="bypass_names">
-        <item>@string/usb_mode_bypass_ets</item>
-        <item>@string/usb_mode_bypass_modem</item>
-    </string-array>
-    <integer-array name="bypass_codes">
-        <item>8</item>
-        <item>16</item>
-    </integer-array>
-    <string-array name="c2k_ir_integrity_off">
-        <item>disable integrity check OFF</item>
-        <item>disable integrity check ON</item>
-    </string-array>
-</resources>
diff --git a/EngineerMode/res/values/colors.xml b/EngineerMode/res/values/colors.xml
deleted file mode 100644
index 7d3bde3..0000000
--- a/EngineerMode/res/values/colors.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2007 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-  
-          http://www.apache.org/licenses/LICENSE-2.0
-  
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-<resources>
-
-    <color name="recording_current_shot_text">#FFFFFFFF</color>
-    <color name="gray">#FFD3D3D3</color>
-    <color name="black">#000000</color>
-    <color name="help_title">@android:color/holo_blue_light</color>
-    <color name="gray_black">#282828</color>
-</resources>
diff --git a/EngineerMode/res/values/strings.xml b/EngineerMode/res/values/strings.xml
deleted file mode 100644
index 565ccbf..0000000
--- a/EngineerMode/res/values/strings.xml
+++ /dev/null
@@ -1,2745 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2007 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-
-    <string name="hello">Hello World, EngineerMode!</string>
-    <string name="app_name">EngineerMode</string>
-    <string name="internal_app_name">InternalEngineerMode</string>
-    <string name="Settings">Settings</string>
-
-    <!-- Main View -->
-    <string name="title_activity_engineer_mode">EngineerMode</string>
-    <string name="tab_telephony">Telephony</string>
-    <string name="tab_connectivity">Connectivity</string>
-    <string name="tab_hardware_testing">Hardware Testing</string>
-    <string name="tab_location">Location</string>
-    <string name="tab_log_and_debugging">Log and Debugging</string>
-    <string name="tab_others">Others</string>
-    <string name="activiti_notfind">Can not find module!</string>
-
-    <string name="cmmb">CMMB</string>
-    <string name="simme_lock">Simme Lock</string>
-    <string name="cfu">CFU</string>
-    <string name="bandmode">BandMode</string>
-    <string name="rat_mode">RAT Mode</string>
-    <string name="repeat_call_test">Repeat Call Test</string>
-    <string name="network_info">NetworkInfo</string>
-    <string name="dualtalk_network_info">Dual Talk NetworkInfo</string>
-    <string name="dualtalk_bandmode">Dual Talk BandMode</string>
-    <string name="network_setting">Network Setting</string>
-    <string name="modem_test">Modem Test</string>
-    <string name="rf_desense_test">RF De-sense Test</string>
-
-    <string name="fast_dormancy">Fast Dormancy</string>
-    <string name="nfc_6605">NFC(6605)</string>
-    <string name="nfc_3110">NFC(MSR3110)</string>
-    <string name="fm_receiver">FM Receiver</string>
-    <string name="fm_transmitter">FM Transmitter</string>
-
-
-    <string name="io">IO</string>
-    <string name="touchscreen">TouchScreen</string>
-    <string name="sd_card_test">SD Card Test</string>
-    <string name="sd_test_choose_storage">Test Storage</string>
-    <string name="sd_test_stop_test_first">test is running, please stop it first</string>
-    <string name="sd_test_sd_removed">sd card was removed</string>
-    <string name="audio">Audio</string>
-    <string name="camera">Camera</string>
-    <string name="cpu_stress_test">CPU Stress Test</string>
-    <string name="de_sense">De-Sense</string>
-    <string name="digital_standard">Digital Standard</string>
-    <string name="usb">USB</string>
-    <string name="power">Power</string>
-    <string name="tv_out">TV Out</string>
-    <string name="matv">MATV</string>
-    <string name="device_manager">Device Manager</string>
-
-
-    <string name="location_basedservice">Location Based Service</string>
-    <string name="fused_location_provider">Fused Location Provider</string>
-    <string name="auto_dialer">Auto Dialer</string>
-
-    <string name="system_logger">System Logger</string>
-    <string name="tag_log">Tag Log</string>
-    <string name="mtk_logger">MTKLogger</string>
-    <string name="ext_md_logger">ExtModemLog</string>
-    <string name="debug_utils">Debug Utils</string>
-
-    <string name="swla">SWLA</string>
-    <string name="settings_font">Settings Font</string>
-    <string name="cds_information">CDS Information</string>
-    <string name="thermal">Thermal</string>
-
-    <!-- Non sleep mode start -->
-    <string name="non_sleep_mode">Non-sleep mode</string>
-    <string name="non_sleep_disable">Disable Non-sleep mode</string>
-    <string name="non_sleep_enable">Enable Non-sleep mode</string>
-    <!-- Non sleep mode end -->
-
-    <!-- Mobile data service preferred start -->
-    <string name="pch_data_prefer_title">Mobile data service preferred</string>
-    <string name="pch_data_prefer_summary">Allow mobile data transmission at full speed</string>
-    <string name="pch_data_prefer_message">Mobile data service preferred is used to improve the data transmission efficiency at the cost of lower call receiving rate. Not recommended to do so.\n\nAre you sure to allow mobile data service preferred?</string>
-    <!-- Mobile data service preferred end -->
-
-
-    <!-- BatteryLog start -->
-    <string name="BatteryLog">BatteryLog</string>
-    <string name="Log_Record_Interval">Interval Of Info Record [1-100]:</string>
-    <string name="battery_info_Log">Battery Info Record:</string>
-    <string name="battery_info_Log_Start">Start</string>
-    <string name="battery_info_Log_End">Stop</string>
-    <string name="battery_info_10">10</string>
-    <string name="battery_info_s">s</string>
-    <string name="battery_charging">Charging</string>
-    <string name="battery_stop">Stop</string>
-    <string name="battery_restart">Restart</string>
-    <string name="battery_current">Current</string>
-    <string name="battery_rise">Rise</string>
-    <string name="battery_reduce">Reduce</string>
-    <string name="battery_temperature">Battery temperature</string>
-    <string name="battery_set">Set</string>
-
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_status_label">Battery status:</string>
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_scale_label">Battery scale:</string>
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_level_label">Battery level:</string>
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_health_label">Battery health:</string>
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_technology_label">Battery technology:</string>
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_voltage_label">Battery voltage:</string>
-    <!-- Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_voltage_units">mV</string>
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_temperature_label">Battery temperature:</string>
-    <!-- Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_temperature_units">\u00B0 C</string>
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_uptime">Time since boot:</string>
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_awake_battery">Awake time on battery:</string>
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_awake_plugged">Awake time when charging:</string>
-    <!-- Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_screen_on">Screen ON time:</string>
-
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_status_unknown">Unknown</string>
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_status_charging">Charging</string>
-    <!-- Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_status_charging_ac">(AC)</string>
-    <!-- Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_status_charging_usb">(USB)</string>
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_status_discharging">Discharging</string>
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_status_not_charging">Not charging</string>
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_status_full">Full</string>
-
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_health_unknown">Unknown</string>
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_health_good">Good</string>
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_health_overheat">Overheat</string>
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_health_dead">Dead</string>
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_health_over_voltage">Over voltage</string>
-    <!-- Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="battery_info_health_unspecified_failure">Unknown error</string>
-    <!-- BatteryLog end -->
-
-
-    <!-- GPRS start -->
-    <string name="GPRS">GPRS</string>
-    <string name="SIM1">SIM1</string>
-    <string name="SIM2">SIM2</string>
-    <string name="IMEI">Write IMEI</string>
-    <string name="DefSIMText">Default SIM Setting</string>
-    <string name="default_sim1">Default SIM1</string>
-    <string name="default_sim2">Default SIM2</string>
-    <string name="GPRS_Attached">Attached</string>
-    <string name="GPRS_Detached">Detached</string>
-    <string name="GPRS_FD">Send FD</string>
-    <string name="GPRS_ConfigFD">Config SCRI/FD</string>
-    <string name="GPRS_1st_PDP">1st PDP</string>
-    <string name="GPRS_2nd_PDP">2nd PDP</string>
-    <string name="GPRS_As_Primary">As Primary</string>
-    <string name="GPRS_As_Secondary">As Secondary</string>
-    <string name="GPRS_Activate_PDP">Activate PDP</string>
-    <string name="GPRS_Deactivate_PDP">Deactivate PDP</string>
-    <string name="GPRS_1000">1000</string>
-    <string name="GPRS_Send_Data">Send Data</string>
-    <string name="GPRS_FD_SCREEN_ON">Set FD timer for screen on</string>
-    <string name="GPRS_FD_SCREEN_OFF">Set FD timer for screen off</string>
-    <string name="GPRS_ALWAYS_ATTACH">Always Attach</string>
-    <string name="GPRS_WHEN_NEEDED">When Needed</string>
-    <string name="GPRS_ALWAYS_ATTACH_CONTINUE">Always Attach Continue</string>
-    <string name="GPRS_WHEN_NEEDED_CONTINUE">When Needed Continue</string>
-    <string name="GPRS_CANCEL_SPECIFY">Not to Specify</string>
-    <string name="GPRS_pdn_reuse_on">PDN reuse on</string>
-    <string name="GPRS_pdn_reuse_off">PDN reuse off</string>
-
-    <!-- TouchScreen start -->
-    <string name="TouchScreen">TouchScreen</string>
-    <string name="TouchScreen_HandWriting">HandWriting</string>
-    <string name="TouchScreen_RateReport">RateReport</string>
-    <string name="TouchScreen_Verification">Verification</string>
-    <string name="TouchScreen_VerificationPoint">PointVerification</string>
-    <string name="TouchScreen_VerificationLine">LineVerification</string>
-    <string name="TouchScreen_VerificationShaking">ShakingVerification</string>
-    <string name="TouchScreen_MultiTouch">MultiTouch</string>
-    <string name="TouchScreen_Settings_TextValue">The value</string>
-    <string name="TouchScreen_Settings_TextSpinner">Category</string>
-    <string name="TouchScreen_Settings_TextSet">Set</string>
-    <string name="TouchScreen_Settings">Settings</string>
-    <string name="TouchScreen_Settings_Value">0</string>
-    <string name="TouchScreen_Settings_sdcard">OFF</string>
-    <string name="TouchScreen_Settings_uart">OFF</string>
-    <string name="TouchScreen_Settings_TextUart">Enable Uart Log</string>
-    <string name="TouchScreen_Settings_TextSDcard">Enable SD card Log</string>
-    <!-- TouchScreen end -->
-
-
-    <!-- Memory start -->
-    <string name="memory">Memory</string>
-    <string name="memory_item_emi">EMI Registers</string>
-    <string name="memory_title_flash">Flash</string>
-    <string name="memory_title_emi">EMI Register</string>
-    <string name="memory_select_error">Select item error</string>
-    <string name="memory_comm_info">Common Info</string>
-    <string name="memory_file_sys_info">File System Info</string>
-    <string name="memory_partition_info">Partition Info</string>
-    <string name="memory_getinfo_error">Can not get flash info</string>
-    <string name="memory_dialog_title">Error</string>
-    <string name="memory_dialog_message">Not implementation</string>
-    <string name="memory_dialog_ok">OK</string>
-    <string name="memory_help_msg" product="default">
-    Feature name: Memory\n\n
-    Used to check flash, file system and partition information.\n\n
-    It supports EMMC and NAND flash.\n\n
-    There are 2 tabs for detailed information:\n\n
-    file system information and partition information.\n\n
-    </string>
-    <!-- Memory end -->
-
-
-    <!-- Power PMU start -->
-    <string name="Power">Power</string>
-    <string name="PMU">PMU</string>
-    <string name="ChargeBattery">ChargeBattery</string>
-    <string name="pmu_btn_get">Get</string>
-    <string name="pmu_btn_set">Set</string>
-    <string name="address_text">Address[Hex input:Fz0xxxxx]-> [z00xxxxx]</string>
-    <string name="address6575_text">Address[Hex 00-FF]</string>
-    <string name="address6589_text">Address[Hex 0000-FFFF]</string>
-    <string name="warning_text">WARNING: Wrong set may cause system error.</string>
-    <string name="value_text">Value</string>
-    <string name="value6575_text">Value[Hex 00-FF]</string>
-    <string name="value6589_text">Value[Hex 0000-FFFF]</string>
-    <string name="pmu_info_text">PMU Info</string>
-    <string name="pmu_reg">PMU Register</string>
-    <string name="battery_charge_info_text"></string>
-    <!-- Power PMU end -->
-
-
-    <!-- IO EINT start -->
-    <string name="IO">IO</string>
-    <string name="EINT">EINT</string>
-    <string name="GPIO">GPIO</string>
-
-    <string name="EINT_edit_Text">EINT NO: #</string>
-    <string name="EINT_edit">0</string>
-    <string name="EINT_query">Query</string>
-    <string name="EINT_sensitivity_Text">Sensitivity[level/edge]: </string>
-    <string name="EINT_polarity_Text">Polarity[high/low]: </string>
-    <!-- IO EINT end -->
-
-
-    <!-- IO GPIO start -->
-    <string name="GPIO_init_error">IO Driver Init error!</string>
-    <string name="GPIO_max_num">Max Num:</string>
-    <string name="GPIO_input_err">ERR: please input proper number.</string>
-    <string name="GPIO_set_direction_in_ok">Set Direction Input succeeded.</string>
-    <string name="GPIO_set_direction_in_fail">Set Direction Input Failed.</string>
-    <string name="GPIO_set_direction_out_ok">Set Direction Output succeeded.</string>
-    <string name="GPIO_set_direction_out_fail">Set Direction Output Failed.</string>
-    <string name="GPIO_set_data_high_ok">Set Data High succeeded.</string>
-    <string name="GPIO_set_data_high_fail">Set Data High Failed.</string>
-    <string name="GPIO_set_data_low_ok">Set Data Low succeeded.</string>
-    <string name="GPIO_set_data_low_fail">Set Data Low Failed.</string>
-
-    <string name="GPIO_Setno_Text">GPIO No#</string>
-    <string name="GPIO_Setnomax_Text">MaxNumber:</string>
-    <string name="GPIO_Direction_Text">Set Direction</string>
-    <string name="GPIO_Direction_In">Input</string>
-    <string name="GPIO_Direction_Out">Output</string>
-    <string name="GPIO_Data_Text">Set Data Level</string>
-    <string name="GPIO_Data_High">High</string>
-    <string name="GPIO_Data_Low">Low</string>
-    <string name="GPIO_Edit_Value">0</string>
-    <!-- IO GPIO end -->
-
-    <!-- MSDC start -->
-	<string name="msdc_get_fail_title"> Failed</string>
-	<string name="msdc_get_fail_message"> Get Failed</string>
-	<string name="msdc_set_ok_title"> Success</string>
-	<string name="msdc_set_ok_message"> Set succeeded</string>
-	<string name="msdc_set_fail_title"> Failed</string>
-	<string name="msdc_set_fail_message"> Set Failed</string>
-	<string name="msdc_btn_text"> OK</string>
-    <string name="msdc_drive_set"> Driving Set</string>
-	<string name="msdc_hop_set"> Hopping Set</string>
-	<string name="msdc_sd3_test"> SD3.0 Test</string>
-    <string name="New_MSDC">MSDC</string>
-    <string name="MSDC">MSDC</string>
-    <string name="MSDC_Get">Get</string>
-    <string name="MSDC_Set">Set</string>
-    <string name="NEW_MSDC_Get">Get</string>
-    <string name="NEW_MSDC_Set">Set</string>
-    <string name="MSDC_Current_cmd_spininer">Data current</string>
-    <string name="NEW_MSDC_CLK">Clk</string>
-    <string name="NEW_MSDC_CMD">Cmd</string>
-    <string name="NEW_MSDC_DATA">Data</string>
-    <string name="NEW_MSDC_CLK_PU">Clk pu</string>
-    <string name="NEW_MSDC_CLK_PD">Clk pd</string>
-    <string name="NEW_MSDC_CMD_PU">Cmd pu</string>
-    <string name="NEW_MSDC_CMD_PD">Cmd pd</string>
-    <string name="NEW_MSDC_DATA_PU">Data pu</string>
-    <string name="NEW_MSDC_DATA_PD">Data pd</string>
-    <string name="NEW_MSDC_RST">Rst</string>
-    <string name="NEW_MSDC_DS">Ds</string>
-    <string name="MSDC_Current_data_spininer">Command current</string>
-    <string name="NEW_MSDC_HOPPING_BIT">Hopping bit</string>
-    <string name="NEW_MSDC_HOPPING_TIME">Hopping time</string>
-    <string name="MSDC_HopSet_Get">GET</string>
-    <string name="MSDC_HopSet_Set">SET</string>
-    <string name="MSDC_Select">MSDC Select</string>
-    <string name="MSDC_Driving">MSDC Driving</string>
-    <string name="MSDC_HopSet">MSDC Hopping</string>
-    <string name="MSDC_Sd3test">MSDC SD3.0 Test</string>
-    <string name="msdc_sd3test_mode">SD3 mode</string>
-    <string name="msdc_sd3test_max_current">SD3 max current</string>
-    <string name="msdc_sd3test_drive">SD3 drive</string>
-    <string name="msdc_sd3test_power_control">SD3 power control</string>
-    <!-- MSDC end -->
-
-    <!-- Baseband start -->
-    <string name="Baseband">Baseband</string>
-    <string name="Baseband_addr_text">Address(Hex)</string>
-    <string name="Baseband_val_text">Value(Hex)</string>
-    <string name="Baseband_Addr">FF</string>
-    <string name="Baseband_Val">0</string>
-    <string name="Baseband_len_text">Block Size(Dec)</string>
-    <string name="Baseband_Len">1</string>
-    <string name="Baseband_Read">Read</string>
-    <string name="Baseband_Write">Write</string>
-    <string name="Baseband_Info">Memory:</string>
-    <!-- Baseband end -->
-
-
-    <!-- Sleep Mode start -->
-    <string name="enable_sleep_mode">Enable SleepMode</string>
-    <string name="disable_sleep_mode">Disable SleepMode</string>
-    <string name="enable_dcm">Enable DCM</string>
-    <string name="disable_dcm">Disable DCM</string>
-    <string name="modem_activity">ModemActivity</string>
-    <string name="sleep_mode">Sleep Mode</string>
-    <string name="dcm">DCM</string>
-    <string name="memory_dump">Memory Dump</string>
-    <string name="on">ON</string>
-    <string name="off">OFF</string>
-    <!-- Sleep Mode end -->
-
-
-    <!-- HQA.CPUSTRESS test start -->
-    <string name="hqa_cpustress_name">CPU Stress Test</string>
-    <string name="hqa_cpustress_toast_load_notsupport">Load not support</string>
-    <string name="hqa_cpustress_dialog_waiting_title">Waiting</string>
-    <string name="hqa_cpustress_dialog_waiting_message">Please wait for getting status...</string>
-    <string name="hqa_cpustress_dialog_error_title">Error</string>
-    <string name="hqa_cpustress_dialog_error_message">Dialog ID wrong</string>
-    <string name="hqa_cpustress_toast_mode">Please select mode</string>
-    <string name="hqa_cpustress_toast_item_error">Item select error</string>
-    <string name="hqa_cpustress_toast_loopcount_error">Loop count error</string>
-    <string name="hqa_cpustress_toast_not_force">Not force test mode</string>
-    <string name="hqa_cpustress_on">On</string>
-    <string name="hqa_cpustress_off">Off</string>
-    <string name="hqa_cpustress_result"></string>
-    <string name="hqa_cpustress_result_no_test">---</string>
-    <string name="hqa_cpustress_result_pass">PASS</string>
-    <string name="hqa_cpustress_result_fail">FAIL</string>
-    <string name="hqa_cpustress_radiobutton_default">Default</string>
-    <string name="hqa_cpustress_radiobutton_testmode">Test mode</string>
-    <string name="hqa_cpustress_radiobutton_test">Test mode</string>
-    <string name="hqa_cpustress_radiobutton_single">Force single core</string>
-    <string name="hqa_cpustress_radiobutton_dual">Force dual core</string>
-    <string name="hqa_cpustress_radiobutton_triple">Force triple core</string>
-    <string name="hqa_cpustress_radiobutton_quad">Force quad core</string>
-    <string name="hqa_cpustress_radiobutton_octa">Force octa core</string>
-    <string name="hqa_cpustress_radiobutton_custom_mode">Custom mode</string>
-    <string name="hqa_cpustress_main_force_core">Force core</string>
-    <string name="hqa_cpustress_core_little">Little</string>
-    <string name="hqa_cpustress_core_big">Big</string>
-    <string name="hqa_cpustress_ok">Ok</string>
-    <string name="hqa_cpustress_force_core_run">Run</string>
-    <string name="hqa_cpustress_force_core_idle">Idle</string>
-    <string name="hqa_cpustress_force_core_off">Off</string>
-    <string name="hqa_cpustress_force_core0_run">Force core 0:  Run</string>
-    <string name="hqa_cpustress_cancel">Cancel</string>
-    <string name="hqa_cpustress_custom_mode_tip">Custom mode must select at least one</string>
-    <string name="hqa_cpustress_checkbox_thermal">Disable Thermal</string>
-    <string name="hqa_cpustress_test_toast_threadhandler_error">Thread handler start error</string>
-    <string name="hqa_cpustress_apmcu_name">AP MCU</string>
-    <string name="hqa_cpustress_apmcu_loopcount">Loop Count</string>
-    <string name="hqa_cpustress_apmcu_loopcount_value">1000</string>
-    <string name="hqa_cpustress_apmcu_l2c">Enable L2C test</string>
-    <string name="hqa_cpustress_apmcu_neon">Enable Neon test</string>
-    <string name="hqa_cpustress_apmcu_vfp">Enable VFP test</string>
-    <string name="hqa_cpustress_apmcu_ca9">Enable CA9 Max Power test</string>
-    <string name="hqa_cpustress_apmcu_max_power">Enable Max Power test</string>
-    <string name="hqa_cpustress_apmcu_dhrystone">Enable Dhrystone test</string>
-    <string name="hqa_cpustress_apmcu_memcpy">Enable L2 MEMCPY test</string>
-    <string name="hqa_cpustress_apmcu_fdct">Enable FDCT test</string>
-    <string name="hqa_cpustress_apmcu_imdct">Enable IMDCT test</string>
-    <string name="hqa_cpustress_apmcu_max_power_64">Enable Max Power test(64bit)</string>
-    <string name="hqa_cpustress_apmcu_dhrystone_64">Enable Dhrystone test(64bit)</string>
-    <string name="hqa_cpustress_apmcu_saxpy">Enable SAXPY test</string>
-    <string name="hqa_cpustress_apmcu_saxpy_64">Enable SAXPY test(64bit)</string>
-    <string name="hqa_cpustress_apmcu_adv_sim">Enable Adv SIM test</string>
-    <string name="hqa_cpustress_apmcu_idle_to_max">Enable Idle to Max test</string>
-    <string name="hqa_cpustress_apmcu_start">Start</string>
-    <string name="hqa_cpustress_apmcu_stop">Stop</string>
-    <string name="hqa_cpustress_apmcu_result">Result:</string>
-    <string name="hqa_cpustress_apmcu_result_l2c"> L2C: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_neon"> NEON: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_vfp"> VFP: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_ca9"> MaxPower: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_dhry"> Dhrystone: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_memcpy"> L2 MEMCPY: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_fdct"> FDCT: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_imdct"> IMDCT: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_maxpower64"> MaxPower64: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_dhry64"> Dhrystone64: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_saxpy"> SAXPY: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_saxpy64"> SAXPY64: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_adv_sim"> Adv SIM: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_apmcu_result_idle2max"> Idle to Max: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_clockswitch_name">Clock Switch</string>
-    <string name="hqa_cpustress_clockswitch_enabledebug">Enable debug message</string>
-    <string name="hqa_cpustress_clockswitch_settimeout">Set Timeout</string>
-    <string name="hqa_cpustress_clockswitch_s">s</string>
-    <string name="hqa_cpustress_clockswitch_s_value">5</string>
-    <string name="hqa_cpustress_clockswitch_ns_value">5</string>
-    <string name="hqa_cpustress_clockswitch_ns">ns</string>
-    <string name="hqa_cpustress_clockswitch_start">Start</string>
-    <string name="hqa_cpustress_clockswitch_stop">Stop</string>
-    <string name="hqa_cpustress_clockswitch_switch26">Switch to 26MHz</string>
-    <string name="hqa_cpustress_clockswitch_switch1g">Switch to 1GHz</string>
-    <string name="hqa_cpustress_clockswitch_cpuspeed">CPU speed dynamic adjusting</string>
-    <string name="hqa_cpustress_clockswitch_command_error">Command error, skip it</string>
-    <string name="hqa_cpustress_clockswitch_set">Set</string>
-    <string name="hqa_cpustress_swvideo_name">SW Video Codec</string>
-    <string name="hqa_cpustress_swvideo_loopcount">Loop Count</string>
-    <string name="hqa_cpustress_swvideo_loopcount_value">1000</string>
-    <string name="hqa_cpustress_swvideo_iteration_value">1000</string>
-    <string name="hqa_cpustress_swvideo_iteration">Iteration</string>
-    <string name="hqa_cpustress_swvideo_start">Start</string>
-    <string name="hqa_cpustress_swvideo_stop">Stop</string>
-    <string name="hqa_cpustress_codec_result"> Test Pass: %1$d/%2$d %3$3.2f%%</string>
-    <string name="hqa_cpustress_help_msg" product="default">
-    Feature name: CPU Stress Test\n\n
-    Used to do CPU stress test. It support for single core and dual core.\n\n
-    There are 3 items for test: AP MCU, SW Video Codec, Clock Switch.\n\n
-    AP MCU: contains NEON test and MaxPower test.\n\n
-    SW Video Codec: run software video codec test.\n\n
-    Clock Switch: switch CA9 clock between CLKSQ and ARMPLL.\n\n
-    </string>
-    <string name="hqa_cpustress_help_msg_new" product="default">
-    Feature name: CPU Stress Test\n\n
-    Used to do CPU stress test. It support for single core, dual core and quad core.\n\n
-    There are 3 items for test: AP MCU, SW Video Codec, Clock Switch.\n\n
-    AP MCU: contains VFP test, MaxPower test, Dhrystone test, L2 MEMCPY test, FDCT test and IMDCT test.\n\n
-    SW Video Codec: run software video codec test.\n\n
-    Clock Switch: switch clock between CLKSQ and ARMPLL.\n\n
-    </string>
-    <string name="hqa_cpustress_dvfs">DVFS</string>
-    <string name="hqa_cpustress_dvfs_interval">Interval(ms):</string>
-    <string name="hqa_cpustress_dvfs_interval_value">5000</string>
-    <string name="hqa_cpustress_dvfs_op_0">OPP0</string>
-    <string name="hqa_cpustress_dvfs_op_1">OPP1</string>
-    <string name="hqa_cpustress_dvfs_op_2">OPP2</string>
-    <string name="hqa_cpustress_dvfs_op_3">OPP3</string>
-    <string name="hqa_cpustress_dvfs_op_4">OPP4</string>
-    <string name="hqa_cpustress_dvfs_op_5">OPP5</string>
-    <string name="hqa_cpustress_dvfs_op_6">OPP6</string>
-    <string name="hqa_cpustress_dvfs_op_7">OPP7</string>
-    <string name="hqa_cpustress_dvfs_start">Start</string>
-    <string name="hqa_cpustress_dvfs_stop">Stop</string>
-    <string name="hqa_cpustress_dvfs_stopping_message">Please wait for stop test...</string>
-    <string name="hqa_cpustress_dvfs_idx">cpufreq_oppidx = </string>
-    <!-- HQA.CPUSTRESS test end -->
-
-    <!-- Audio start -->
-    <string name="Audio_AudioCommand">AudioCommand</string>
-    <string name="Audio_AudioParameter">AudioParameter</string>
-    <string name="Audio_Set">Set</string>
-    <string name="Audio_Get">Get</string>
-    <string name="Audio_ReceiveMsg">The Receive msg is:</string>
-    <string name="Audio">Audio</string>
-    <string name="Audio_ModeSetting">Audio_ModeSetting</string>
-    <string name="Audio_ModeSetting_TextView">Value is 0~255</string>
-    <string name="Audio_ModeSetting_EditText">0</string>
-    <string name="Audio_ModeSetting_Button">Set</string>
-    <string name="Audio_SpeechEnhancement">Audio_SpeechEnhancement</string>
-    <string name="Audio_SpEnhancement_TextView">Value is 0~100</string>
-    <string name="Audio_SpEnhancement_EditText">0</string>
-    <string name="Audio_SpEnhancement_Button">Set</string>
-    <string name="Audio_SpEnhancement_Vol">Volume Index 3</string>
-    <string name="Audio_DebugInfo">Audio_DebugInfo</string>
-    <string name="Audio_DebugSession">Audio_DebugSession</string>
-    <string name="Audio_MagiAsr_Text">Enable using Sound Recorder to verify MagiASR feature</string>
-    <string name="Audio_MagiAsr">MagiASR Verify Mode Enable</string>
-    <string name="Audio_AecRec_Text">Enable recording with AEC processing</string>
-    <string name="Audio_AecRec">Record with AEC enable</string>
-    <string name="Audio_DebugInfo_ParameterText">Please choose the parameter:</string>
-    <string name="Audio_DebugInfo_ValueText">Please input the value:</string>
-    <string name="Audio_DebugInfo_EditText">0</string>
-    <string name="Audio_DebugInfo_Button">Set</string>
-    <string name="Audio_SpeechLogger">Speech Logger</string>
-    <string name="Audio_SpeechLogger_EnableText">Enable speech logger:</string>
-    <string name="Audio_SpeechLogger_Enable">Enable speech log</string>
-    <string name="Audio_SpeechLogger_FileText">File:/sdcard/mtklog/audio_dump/VM_log</string>
-    <string name="Audio_SpeechLogger_LocationText">File location:/sdcard/speechlog</string>
-    <string name="Audio_SpeechLogger_Play">Play log</string>
-    <string name="Audio_LogPlayer">Audio_LogPlayer</string>
-    <string name="Audio_Level_Text">Level</string>
-    <string name="Audio_VOIPLogger_Enable">Enable VOIP switch</string>
-    <string name="Audio_VOIPLogger_EnableText">Enable VOIP logger:</string>
-    <string name="Audio_EPLDebug_FileText">File:/sdcard/mtklog/audio_dump/SPE_EPL.EPL</string>
-    <string name="Audio_EPLDebug_Enable">Enable AP Speech log</string>
-    <string name="Audio_MaxVol_Text">Max Vol. 0~160 </string>
-    <string name="Audio_MaxVol_Text_headset">Max Headset Vol. 0~160 </string>
-    <string name="Audio_MaxVol_Text_speaker">Max Speaker Vol. 0~160 </string>
-    <string name="Audio_MaxVol_Set">Set</string>
-    <string name="Audio_VOIPLogger_Info">File Location: /sdcard/VOIP_DebugInfo</string>
-    <string name="Audio_CTM4WAYLogger_EnableText">Enable CTM4WAY Logger</string>
-    <string name="Audio_CTM4WAYLogger_Enable">Enable</string>
-    <string name="Audio_KTone">K Tone</string>
-    <string name="Audio_KTone_StopBtn">Stop</string>
-    <string name="Audio_KTone_StartBtn">Start</string>
-    <string name="Audio_KTone_Freq">Frequency</string>
-    <string name="Audio_Fir_Title">Current FIR Type</string>
-    <string name="Audio_ModeSetting_Title">Type</string>
-    <string name="Audio_AudioLogger">Audio Logger</string>
-    <string name="Audio_Enable_EPL">Normal-VM + EPL</string>
-    <string name="Audio_Enable_Normalvm">Normal-VM Only</string>
-    <string name="Audio_Dump_SpeechDbgInfo">Dump Speech Debug Info</string>
-    <string name="Audio_AudioLogger_Text">File:/sdcard/mtklog/audio_dump/*.pcm</string>
-    <string name="Audio_AudioLogger_Text1">File location: /sdcard/StreamIn_*.vm</string>
-    <string name="Audio_StreamOutput_Dump">Audio Stream Output Dump</string>
-    <string name="Audio_MixerBuffer_Dump">Audio Mixer Buffer Dump</string>
-    <string name="Audio_TrackBuffer_Dump">Audio Track Buffer Dump</string>
-    <string name="A2DP_StreamOutput_Dump">A2DP Stream Output Dump</string>
-    <string name="Audio_StreamInput_Dump">Audio Stream Input Dump</string>
-    <string name="Audio_IdleModeRecdVM_Dump">Audio Idle Mode Record VM Dump</string>
-    <string name="Dump_Audio_DebgInfo">Dump Audio Debug Info</string>
-    <string name="get_data_error_title">Get data error</string>
-    <string name="get_data_error_msg">Get audio data error.</string>
-    <string name="get_wbdata_error_title">Get WB data error</string>
-    <string name="get_wbdata_error_msg">Get audio WB data error.</string>
-    <string name="set_success_title">Setting success</string>
-    <string name="set_success_msg">Set audio volume succeeded.</string>
-    <string name="set_error_title">Setting error</string>
-    <string name="set_error_msg">Set audio volume failed.</string>
-    <string name="number_arrage_tip">The input is not correct. Please input the number
- 	between 0 and </string>
-    <string name="input_null_tip">Please input the value.</string>
-    <string name="set_success_tip">set parameter success.</string>
-    <string name="set_failed_tip">set parameter failed.</string>
-    <string name="no_sdcard_title">SD Card is not available</string>
-    <string name="no_sdcard_msg">Please insert the SD Card.</string>
-    <string name="sdcard_busy_title">SD card is busy</string>
-    <string name="sdcard_busy_msg">Sorry, your SD card is busy.</string>
-    <string name="input_length_error">The input is not correct. Please input the number
-	between 0 and 65535.</string>
-    <string name="set_debuginfo_success">Set the DebugInfo parameter succeeded.</string>
-    <string name="set_debuginfo_failed">Set the DebugInfo parameter failed.</string>
-    <string name="start_tone">Start tone </string>
-    <string name="stop_tone">Stop tone </string>
-    <string name="paramter">Parameter </string>
-    <string name="speech_enhance_text">Value is 0~65535</string>
-    <string name="set_speech_enhance_success">Set the speech enhancement value succeeded.</string>
-    <string name="set_speech_enhance_failed">Set the speech enhancement value failed.</string>
-    <string name="set_wb_success">Set WB data succeeded.</string>
-    <string name="set_wb_failed">Set WB data failed.</string>
-    <string name="text_tip">Value is 0~160</string>
-    <string name="fir_text">***NO FIR Selected***</string>
-    <string name="audio_val_type_sip">Sip</string>
-    <string name="audio_val_type_ring">Ring</string>
-    <string name="audio_val_type_mic">Mic</string>
-    <string name="audio_val_type_fmr">FMR</string>
-    <string name="audio_val_type_sph">Sph</string>
-    <string name="audio_val_type_sph2">Sph2</string>
-    <string name="audio_val_type_sid">Sid</string>
-    <string name="audio_val_type_media">Media</string>
-    <string name="audio_val_type_matv">Matv</string>
-    <string name="Audio_Headset_Detect_Hint">Headset Jak Detection:</string>
-    <string name="Audio_Headset_Detect_Button">Detect</string>
-    <string name="Audio_Headset_None">None</string>
-    <string name="Audio_Headset_Jak_Headphone">Headphone</string>
-    <string name="Audio_Headset_Jak_Headset">Headset</string>
-    <string name="Audio_AncLogger_FileText">File:/sdcard/mtklog/audio_dump/ANC_log</string>
-    <string name="Audio_AncLogger_Enable">Enable ANC Logger</string>
-    <string name="Audio_Enable_Down">Down-Sample</string>
-    <string name="Audio_Enable_NoDown">No Down-Sample</string>
-    <string name="Audio_MagiConference_EnableText">Enable MagiConference</string>
-    <string name="Audio_MagiConference_Enable">Enable</string>
-    <string name="audio_wakelock">Wake Lock</string>
-    <string name="audio_wakelock_lock">Locked</string>
-    <string name="audio_wakelock_unlock">Unlocked</string>
-    <!-- Audio end -->
-
-
-    <!-- Camera start -->
-    <string name="Camera">Camera</string>
-    <string name="Camera_Preview">Camera_Preview</string>
-    <string name="start_preview_failed">"StartPreview failed."</string>
-    <!-- Dialog "OK" button. Dismisses dialog. -->
-    <string name="dialog_ok">OK</string>
-    <string name="af_mode_dailog_title">Set AF Mode</string>
-    <string name="step_dailog_title">Set step</string>
-    <string name="capture_mode_dailog_title">Set Raw Capture Mode</string>
-    <string name="raw_type_dailog_title">Set Raw Type</string>
-    <string name="flicker_dailog_title">Set Flicker</string>
-    <string name="iso_dailog_title">Set ISO</string>
-    <string name="full_scan_tip">It is in full scan, please wait......</string>
-    <string name="sdcard_error_tip">Please make sure your sdcard is available!</string>
-    <string name="camera_help_msg" product="default">
-    Feature name: Camera.\n\nAF EM item used to set capture auto focus mode.
-    \n\nRaw Capture Mode item used to select raw capture mode.\n\nRaw Type item
-    used to select store what kind of raw file.\n\nFlicker item used to set
-    camera\'s Anti-fiicker value.\n\nISO item used to set camera\'s iso value.
-    \n\nStart Preview item to open the camera and start camera preview,
-    in the preview page, press Capture button will take picture(s) with the previous settings.
-    The picture(s) will be store in the path: SDCard//DCIM//EMCamera.</string>
-    <!-- Camera start -->
-
-
-    <!-- WiFi start -->
-    <string name="wifi">WiFi</string>
-    <string name="wifi_item_tx">Tx</string>
-    <string name="wifi_item_rx">Rx</string>
-    <string name="wifi_item_mcr">MCR</string>
-    <string name="wifi_item_nvram">NVRAM</string>
-    <string name="wifi_item_dpd">DPD Calibration</string>
-    <string name="wifi_item_tem">Temperature Sensor</string>
-    <string name="wifi_dialog_warn">Error</string>
-    <string name="wifi_dialog_warn_message">Please make sure:\n1. Wi-Fi is off.\n2. Operation is too frequent, please try later.</string>
-    <string name="wifi_dialog_init">Progress</string>
-    <string name="wifi_dialog_init_message">Please wait for device to initialize ...</string>
-    <string name="wifi_dialog_fail">Error</string>
-    <string name="wifi_dialog_fail_message">Enable Wi-Fi failed</string>
-    <string name="wifi_dialog_error">Error</string>
-    <string name="wifi_dialog_error_message">Wifi is not initialized</string>
-    <string name="wifi_dialog_input_file_name">Please input a file name</string>
-    <string name="wifi_toast_select_error">item select error</string>
-    <string name="wifi_toast_packet_error">"Do not accept packet count = 0, unlimited on Android"</string>
-    <string name="wifi_ok">OK</string>
-    <string name="wifi_empty"></string>
-    <string name="wifi_zero">0</string>
-    <string name="wifi_tx">WiFi_Tx</string>
-    <string name="wifi_rx">WiFi_Rx</string>
-    <string name="wifi_eeprom">WiFi_NVRAM</string>
-    <string name="wifi_temperature_sensor">WiFi_Temperature_Sensor</string>
-    <string name="wifi_mcr">WiFi_MCR</string>
-    <string name="wifi_channel_text">Channel:</string>
-    <string name="wifi_preamble">Preamble:</string>
-    <string name="wifi_pkt_text">Pkt length:</string>
-    <string name="wifi_pkt_edit">1024</string>
-    <string name="wifi_pktcnt_text">Pkt cnt:</string>
-    <string name="wifi_pktcnt_edit">3000</string>
-    <string name="wifi_tx_text">Tx power (dBm):</string>
-    <string name="wifi_tx_edit">22</string>
-    <string name="wifi_tx_gain_edit">22</string>
-    <string name="wifi_tx_gain_format">%.1f</string>
-    <string name="wifi_rate_text">Rate:</string>
-    <string name="wifi_mode_text">Mode:</string>
-    <string name="wifi_xtaltrim_text">Xtal Trim:</string>
-    <string name="wifi_xtaltrim_edit"></string>
-    <string name="wifi_xtaltrim_read">Read</string>
-    <string name="wifi_xtaltrim_write">Write</string>
-    <string name="wifi_alc">ALC Function for Normal Packet Tx/Rx</string>
-    <string name="wifi_bandwidth">Bandwidth:</string>
-    <string name="wifi_guard_interval">Guard interval:</string>
-    <string name="wifi_go">Go</string>
-    <string name="wifi_stop">Stop</string>
-    <string name="wifi_fcs_text">FCS ERR:</string>
-    <string name="wifi_fcs_content">30</string>
-    <string name="wifi_rx_text">RX OK:</string>
-    <string name="wifi_rx_content">0</string>
-    <string name="wifi_per_text">PER:</string>
-    <string name="wifi_per_content">100</string>
-    <string name="wifi_wordaccess_text">WORD Access:</string>
-    <string name="wifi_addr_text">addr(h,byte):</string>
-    <string name="wifi_addr_content"></string>
-    <string name="wifi_value_text">value(h):</string>
-    <string name="wifi_value_content"></string>
-    <string name="wifi_read_word">Read</string>
-    <string name="wifi_write_word">Write</string>
-    <string name="wifi_stringaccess_text">Byte String Access:</string>
-    <string name="wifi_addr_text_string">addr(h,byte):</string>
-    <string name="wifi_addr_content_string"></string>
-    <string name="wifi_length_text_string">length(byte):</string>
-    <string name="wifi_length_content_string"></string>
-    <string name="wifi_value_text_string">value(h):</string>
-    <string name="wifi_value_content_string"></string>
-    <string name="wifi_savebtn">NVRAM Save As File</string>
-    <string name="wifi_burnbtn">Burn From File</string>
-    <string name="wifi_readallbtn">Read All</string>
-    <string name="wifi_clearbtn">Clear</string>
-    <string name="wifi_misc_text">Temperature sensor measurement:</string>
-    <string name="wifi_misc_gobtn">Go</string>
-    <string name="wifi_misc_stopbtn">Stop</string>
-    <string name="wifi_misc_clearbtn">Clear</string>
-    <string name="wifi_mcr_text">MCR:</string>
-    <string name="wifi_mcr_addr_text">Addr(h):</string>
-    <string name="wifi_mcr_value_text">Value(h):</string>
-    <string name="wifi_mcr_readbtn">Read</string>
-    <string name="wifi_mcr_writebtn">Write</string>
-    <string name="wifi_eeprom_save_dialog_title">Save as</string>
-    <string name="wifi_eeprom_save_dir">Please input a file name</string>
-    <string name="wifi_eeprom_save_dir_done">OK</string>
-    <string name="file_list_title">Please select a file to burn</string>
-    <string name="wifi_dpd_text">DPD calibration:</string>
-    <string name="wifi_dpd_calibration">calibration</string>
-    <string name="wifi_dpd_import">import DPD parameters from file</string>
-    <string name="wifi_dpd_read">read DPD parameters</string>
-    <string name="wifi_dpd_save">save DPD parameters to file</string>
-    <string name="wifi_dpd_info"></string>
-    <string name="wifi_wfa_enabler">Enable WFA test UI</string>
-    <string name="wifi_ctia_enabler">Enable CTIA test UI</string>
-    <string name="wifi_ap_wps2_support_enabler">Enable WPS2 test to remove WPA security in Wi-Fi hotspot</string>
-    <string name="wifi_help_msg" product="default">
-    Feature name: WiFi\n\n
-    Used to do WiFi test and check WiFi status by RD.\n\n
-    There are 4 test items: Tx, Rx, MCR, NVRAM and some check boxes as a switch.\n\n
-    Tx: Test WiFi send packages at different frequencies, rates, power and so on. It needs special instruments to analyze the results.\n\n
-    Rx: Test WiFi receive packages at different frequencies and bandwidth. It will show the results of received packages.\n\n
-    MCR: Read and write WiFi control register. Warning: The operation of non-professionals is forbidden.\n\n
-    NVRAM: Read and write WiFi NVRAM, could accessed in word or byte string.\n\n
-    Switch: Some switches used by RD.\n\n</string>
-    <string name="wifi_wps_test_mode">Enable WPS test mode</string>
-    <string name="wifi_bw_advanced_cbw">Channel BW:</string>
-    <string name="wifi_bw_advanced_dbw">Data BW:</string>
-    <string name="wifi_bw_advanced_prim_ch">Primary Ch:</string>
-    <string name="wifi_cert_speedup_cpu_freq">Speed up CPU freq for cert</string>
-    <!-- WiFi end -->
-
-    <!-- CTIA test start -->
-    <string name="wifi_ctia">WiFi CTIA</string>
-    <string name="wifi_ctia_test">CTIA Test Mode Setting</string>
-    <string name="wifi_ctia_test_summary">CTIA Test Mode configuration</string>
-    <string name="ctia_title">Wi-Fi Test Mode</string>
-    <string name="ctia_checkbox">Enable CTIA Test Mode</string>
-    <string name="ctia_dump_checkbox">Enable log for Mgmt Frame</string>
-    <string name="ctia_counter_checkbox">Enable log for Tx Rx Counter</string>
-    <string name="ctia_rate">Rate Selection</string>
-    <string name="ctia_flag">SW Flags</string>
-    <string name="ctia_interval">Period of Counter log(sec)</string>
-    <string name="ctia_id">ID</string>
-    <string name="ctia_value"></string>
-    <string name="ctia_label">0x</string>
-    <string name="ctia_default_val">0</string>
-    <string name="ctia_btn_get">GET</string>
-    <string name="ctia_btn_set">SET</string>
-    <string name="wifi_cancel">Cancel</string>
-    <!-- CTIA test end -->
-
-
-    <!-- NetworkInfo start -->
-    <string name="NetworkInfo">NetworkInfo</string>
-    <string name="NetworkInfo_Info">NetworkInfo_Info</string>
-    <string name="NetworkInfo_Cell">RR Cell Sel</string>
-    <string name="NetworkInfo_Ch">RR Ch Dscr</string>
-    <string name="NetworkInfo_Ctrl">RR Ctrl chan</string>
-    <string name="NetworkInfo_RACH">RR RACH Ctrl</string>
-    <string name="NetworkInfo_LAI">RR LAI Info</string>
-    <string name="NetworkInfo_Radio">RR Radio Link</string>
-    <string name="NetworkInfo_Meas">RR Meas Rep</string>
-    <string name="NetworkInfo_Ca">RR Ca List</string>
-    <string name="NetworkInfo_Control">RR Control Msg</string>
-    <string name="NetworkInfo_SI2Q">RR SI2Q Info</string>
-    <string name="NetworkInfo_MI">RR MI Info</string>
-    <string name="NetworkInfo_BLK">RR BLK Info</string>
-    <string name="NetworkInfo_TBF">RR TBF Info</string>
-    <string name="NetworkInfo_GPRS">RR GPRS Gen</string>
-    <string name="NetworkInfo_PageUp">PageUp</string>
-    <string name="NetworkInfo_PageDown">PageDown</string>
-    <string name="NetworkInfo_3GGeneralStatus">3GGeneralStatusInd</string>
-    <string name="NetworkInfo_3GSmEmInfo">SmEmInfo</string>
-    <string name="NetworkInfo_3GMmEmInfo">3GMmEmInfo</string>
-    <string name="NetworkInfo_3GGmmEmInfo">GmmEmInfo</string>
-    <string name="NetworkInfo_3GTcmMmiEmInfo">3GTcmMmiEmInfo</string>
-    <string name="NetworkInfo_3GCsceEMServCellSStatusInd">3GCsceEMServCellSStatusInd</string>
-    <string name="NetworkInfo_3GCsceEmInfoMultiPlmn">3GCsceEmInfoMultiPlmn</string>
-    <string name="NetworkInfo_3GMemeEmInfoUmtsCellStatus">3GMemeEmInfoUmtsCellStatus</string>
-    <string name="NetworkInfo_3GMemeEmPeriodicBlerReportInd">3GMemeEmPeriodicBlerReportInd</string>
-    <string name="NetworkInfo_3GUrrUmtsSrncId">3GUrrUmtsSrncId</string>
-    <string name="NetworkInfo_3GSlceEmPsDataRateStatusInd">3GSlceEmPsDataRateStatusInd</string>
-    <string name="NetworkInfo_3GMemeEmInfoHServCellInd">3GMemeEmInfoHServCellInd</string>
-    <string name="NetworkInfo_3GHandoverSequenceIndStuct">3GHandoverSequenceIndStuct</string>
-    <string name="NetworkInfo_3GUl2EmAdmPoolStatusIndStruct">3GUl2EmAdmPoolStatusIndStruct</string>
-    <string name="NetworkInfo_3GUl2EmPsDataRateStatusIndStruct">3GUl2EmPsDataRateStatusIndStruct</string>
-    <string name="NetworkInfo_3Gul2EmHsdschReconfigStatusIndStruct">3GUl2EmHsdschReconfigStatusIndStruct</string>
-    <string name="NetworkInfo_3GUl2EmUrlcEventStatusIndStruct">3GUl2EmUrlcEventStatusIndStruct</string>
-    <string name="NetworkInfo_3GUl2EmPeriodicBlerReportInd">3GUl2EmPeriodicBlerReportInd</string>
-    <string name="NetworkInfo_xGCsceEMNeighCellSStatusInd">XGCsceEMNeighCellSStatusInd</string>
-    <string name="NetworkInfo_1xRTT_Radio">1xRTT Radio</string>
-    <string name="NetworkInfo_1xRTT_Info">1xRTT Info</string>
-    <string name="NetworkInfo_1xRTT_SCH_Info">1xRTT SCHInfo</string>
-    <string name="NetworkInfo_1xRTT_Statistics">1xRTT Statistics</string>
-    <string name="NetworkInfo_1xRTT_Serving">1xRTT Serving/Neighbor</string>
-    <string name="NetworkInfo_EVDO_Serving_Info">EVDO Serving_Info</string>
-    <string name="NetworkInfo_EVDO_Active_Set">EVDO Active Set</string>
-    <string name="NetworkInfo_EVDO_Candidate_Set">EVDO Candidate Set</string>
-    <string name="NetworkInfo_EVDO_Neighbor_Set">EVDO Neighbor Set</string>
-    <string name="NetworkInfo_EVDO_FL">EVDO FL</string>
-    <string name="NetworkInfo_EVDO_RL">EVDO RL</string>
-    <string name="NetworkInfo_EVDO_State">EVDO State</string>
-    <!-- For LGE  -->
-    <string name="NetworkInfo_3GSlceVoice">3GSpeechCodec</string>
-    <string name="NetworkInfo_3GSecurityConfiguration">3GSecurityConfiguration</string>
-    <!-- For LGE end -->
-    <!-- NetworkInfo end -->
-
-
-    <!-- Dual Talk NetworkInfo start -->
-    <string name="Dual_Talk_NetworkInfo">SIM Type</string>
-    <string name="dualtalk_NetworkInfo">NetworkInfo Items</string>
-    <string name="dualtalk_NetworkInfo_Info">NetworkInfo Info</string>
-    <string name="DualTalkNetworkInfo_Cell">RR Cell Sel</string>
-    <string name="DualTalkNetworkInfo_Ch">RR Ch Dscr</string>
-    <string name="DualTalkNetworkInfo_Ctrl">RR Ctrl chan</string>
-    <string name="DualTalkNetworkInfo_RACH">RR RACH Ctrl</string>
-    <string name="DualTalkNetworkInfo_LAI">RR LAI Info</string>
-    <string name="DualTalkNetworkInfo_Radio">RR Radio Link</string>
-    <string name="DualTalkNetworkInfo_Meas">RR Meas Rep</string>
-    <string name="DualTalkNetworkInfo_Ca">RR Ca List</string>
-    <string name="DualTalkNetworkInfo_Control">RR Control Msg</string>
-    <string name="DualTalkNetworkInfo_SI2Q">RR SI2Q Info</string>
-    <string name="DualTalkNetworkInfo_MI">RR MI Info</string>
-    <string name="DualTalkNetworkInfo_BLK">RR BLK Info</string>
-    <string name="DualTalkNetworkInfo_TBF">RR TBF Info</string>
-    <string name="DualTalkNetworkInfo_GPRS">RR GPRS Gen</string>
-    <string name="DualTalkNetworkInfo_PageUp">PageUp</string>
-    <string name="DualTalkNetworkInfo_PageDown">PageDown</string>
-    <string name="DualTalkNetworkInfo_3GMmEmInfo">3GMmEmInfo</string>
-    <string name="DualTalkNetworkInfo_3GTcmMmiEmInfo">3GTcmMmiEmInfo</string>
-    <string name="DualTalkNetworkInfo_3GCsceEMServCellSStatusInd">3GCsceEMServCellSStatusInd</string>
-    <string name="DualTalkNetworkInfo_3GCsceEmInfoMultiPlmn">3GCsceEmInfoMultiPlmn</string>
-    <string name="DualTalkNetworkInfo_3GMemeEmInfoUmtsCellStatus">3GMemeEmInfoUmtsCellStatus</string>
-    <string name="DualTalkNetworkInfo_3GMemeEmPeriodicBlerReportInd">3GMemeEmPeriodicBlerReportInd</string>
-    <string name="DualTalkNetworkInfo_3GUrrUmtsSrncId">3GUrrUmtsSrncId</string>
-    <string name="DualTalkNetworkInfo_3GSlceEmPsDataRateStatusInd">3GSlceEmPsDataRateStatusInd</string>
-    <string name="DualTalkNetworkInfo_3GMemeEmInfoHServCellInd">3GMemeEmInfoHServCellInd</string>
-    <string name="DualTalkNetworkInfo_3GHandoverSequenceIndStuct">3GHandoverSequenceIndStuct</string>
-    <string name="DualTalkNetworkInfo_3GUl2EmAdmPoolStatusIndStruct">3GUl2EmAdmPoolStatusIndStruct</string>
-    <string name="DualTalkNetworkInfo_3GUl2EmPsDataRateStatusIndStruct">3GUl2EmPsDataRateStatusIndStruct</string>
-    <string name="DualTalkNetworkInfo_3Gul2EmHsdschReconfigStatusIndStruct">3GUl2EmHsdschReconfigStatusIndStruct</string>
-    <string name="DualTalkNetworkInfo_3GUl2EmUrlcEventStatusIndStruct">3GUl2EmUrlcEventStatusIndStruct</string>
-    <string name="DualTalkNetworkInfo_3GUl2EmPeriodicBlerReportInd">3GUl2EmPeriodicBlerReportInd</string>
-    <string name="DualTalkNetworkInfo_xGCsceEMNeighCellSStatusInd">XGCsceEMNeighCellSStatusInd</string>
-    <!-- Dual Talk NetworkInfo end -->
-
-
-    <!-- AutoAnswer start -->
-    <string name="AutoAnswer">AutoAnswer</string>
-    <string name="autoanswer_disable">Disable</string>
-    <string name="autoanswer_enable">Enable</string>
-    <!-- AutoAnswer end -->
-
-
-    <!-- GSM/UMTS Options start -->
-    <string name="gemini_gsm_umts_network_preferences_title">Network Mode</string>
-    <string name="gemini_gsm_umts_network_preferneces_summary">Not implemented yet! </string>
-    <string name="gemini_gsm_umts_network_preferences_dialogtitle">Network Mode</string>
-    <string name="gemini_3g_indic">3G</string>
-    <string name="gemini_sim_management_title">Digital Standard</string>
-    <string name="gemini_general_settings_title">General settings</string>
-    <string name="gemini_data_connection_progress_message">"Please wait...</string>
-    <!-- GSM/UMTS Options end -->
-
-
-    <!-- Device Mgr start -->
-    <string name="device_mgr">"Device Management"</string>
-    <string name="device_mgr_sms_auto_reg">"SMS AutoRegister"</string>
-    <string name="device_mgr_dm_conf_switch">"DM Configuration Settings"</string>
-    <string name="device_mgr_dm_productive">"Productive Environment"</string>
-    <string name="device_mgr_dm_test">"Test Environment"</string>
-    <string name="device_mgr_dm_reboot">"Reboot"</string>
-    <!-- Device Mgr end -->
-
-
-    <!-- YGPS start -->
-    <string name="YGPS">YGPS</string>
-    <!-- YGPS start -->
-
-
-    <!-- AGPS start -->
-    <string name="AGPS">AGPS</string>
-    <!-- AGPS end -->
-
-
-    <!-- BlutTooth start -->
-	<string name="OK">OK</string>
-	<string name="Error">Error</string>
-    <string name="Success">Success</string>
-	<string name="BT_turn_bt_off">Please turn off Bluetooth first</string>
-	<string name="BT_no_dev">No bluetooth device found</string>
-	<string name="BT_init_dev">Please wait for device to initialize ...</string>
-	<string name="BT_relayer_start">BT relayer is initializing, please wait...</string>
- 	<string name="BT_open">Please wait for Bluetooth to turn on ...</string>
- 	<string name="BT_close">Please wait for Bluetooth to turn off ...</string>
- 	<string name="BT_exit_em">SSP Debug mode is open, exit EngineerMode Bluetooth test.</string>
- 	<string name="BT_deinit">Please wait for Bluetooth to deinit ...</string>
-  	<string name="BT_data_fail">Transmit data failed, please try again.</string>
-    <string name="BT_tx_test">Tx test operation is in process, please wait ...</string>
-
-    <string name="BT_no_sig_rx_fail">No signal rx test failed.</string>
-
-  	<string name="BT_0x6620">6620</string>
-  	<string name="BT_0x6622">6622</string>
-  	<string name="BT_0x6628">6628</string>
-
-    <!-- BT chip information part -->
-    <string name="BT_chipTitle">Chip Information</string>
-    <string name="BT_chipId">BT Chip Id</string>
-    <string name="BT_ecoVersion">HW ECO version</string>
-    <string name="BT_patchSize">Patch Size</string>
-    <string name="BT_patchDate">Patch Date</string>
-    <!-- bt relayer mode -->
-    <string name="BT_RelayerModeTitle">BT Relayer Mode</string>
-    <string name="BT_serial_port_baudrate">Serial port baudrate</string>
-    <string name="BT_serial_port_number">Serial port number</string>
-    <string name="BT_start">Start</string>
-    
-    <!-- BLE GATT Profile test -->
-    <string name="BT_profile">GattProfile</string>
-
-    <!-- No signal Rx test part -->
-    <string name="BTNSRXTitle">Non-signaling RX Test</string>
-    <string name="NSRX_StrPattern">RX Pattern</string>
-    <string name="NSRX_StrFrequency">RX channel:[0,78]</string>
-    <string name="NSRX_StrPocketType">RX Packet Type</string>
-    <string name="NSRX_StrAddress">Tester Address:(Hex)</string>
-    <string name="NSRX_StartTest">Start</string>
-    <string name="NSRX_StrPackCnt">RX Packet Count:</string>
-    <string name="NSRX_StrPackErrRate">Packet Error Rate:</string>
-    <string name="NSRX_StrPackByteCnt">RX Byte Count:</string>
-    <string name="NSRX_StrBitErrRate">Bit Error Rate:</string>
-    <string name="Bluetooth">Bluetooth</string>
-    <!-- param of the slide title -->
-    <string name="BluetoothTitle">Bluetooth</string>
-    <string name="BTTXTitle">Bluetooth_Tx</string>
-    <string name="BTTMTitle">Bluetooth_TestMode</string>
-    <string name="BTSSPDMTitle">Bluetooth SSP Debug Mode</string>
-    <string name="BTRxTitle">Bluetooth_Rx</string>
-
-    <!-- param in tx only test -->
-	<string name="BT_tx_only_Title">TX Only test</string>
-    <string name="StrPattern">Tx Pattern:</string>
-    <string name="StrChannel">Channel:</string>
-    <string name="StrFrequency">Tx channel:</string>
-    <string name="StrPocketType">Pocket Type:</string>
-    <string name="StrPocketLength">Pocket Length:</string>
-    <string name="emptyStr"></string>
-    <string name="BTTestMode_edit">7</string>
-    <string name="BTTestMode_edit_Text">Power Level: [0, 7]</string>
-    <!-- param in rx only test -->
-    <string name="RxPattern">Rx Pattern:</string>
-    <string name="RxChannel">Channel:</string>
-    <string name="RxFrequency">Rx Frequency:</string>
-    <string name="RxPacketType">Pocket Type:</string>
-    <string name="RxDataLength">Data Length:</string>
-    <string name="RxWritten">Written</string>
-    <string name="RxPowerControl">Power ctrl:</string>
-    <string name="RxPollPeriod">Poll period:</string>
-    <string name="RxStart">Start</string>
-    <string name="RxStop">Stop</string>
-    <string name="RxSetPwr">Set</string>
-    <string name="RxAccessCode">Access Code</string>
-
-    <!-- param in test mode -->
-    <string name="strTestMode"><b>Enable test mode</b></string>
-    <!-- param in test mode -->
-    <string name="SSPDebugMode"><b>Enable SSP debug mode</b></string>
-
-    <!-- param in debug feature -->
-    <string name="BtDebugFeatureTitle">BT Debug Feature</string>
-    <string name="BtDebugFeature">Enable BT debug feature</string>
-    <!--
-			Menu item to indicate you are done sending a command and want to save
-			the changes you've made
-    -->
-    <string name="menu_done">Done</string>
-
-    <!-- param in BLE test mode for public -->
-    <string name="BLESet">Set</string>
-    <string name="BLEStart">Start</string>
-    <string name="BLEStop">Stop</string>
-    <string name="BLEScanInterval">Scan Interval:</string>
-    <string name="BLEScanWindow">Scan Window:</string>
-    <string name="BLETimeUnit">*0.625s</string>
-    <string name="BLEOwnAddressType">Own Address Type:</string>
-    <string name="BLEIntervalMin">Interval Min:</string>
-    <string name="BLEIntervalMax">Interval Max:</string>
-    <string name="BLEFilterPolicy">Filter Policy:</string>
-    <!-- param in BLE test mode -->
-	<string name="BT_ble_test_mode_Title">BLE Test Mode</string>
-    <string name="BT_ble_test_channnel">CH </string>
-    <string name="BLETestMode">BLE TestMode:</string>
-    <string name="BLETxRx"></string>
-    <string name="BLETestModeTx">Tx Test</string>
-    <string name="BLETestModeRx">Rx Test</string>
-    <string name="BLEHoppingSingle"></string>
-    <string name="BLEHopping">Hopping</string>
-    <string name="BLESingle">Single</string>
-    <string name="BLEChannel">Channel:</string>
-    <string name="BLEPattern">Pattern:</string>
-    <string name="BLEContiniousTx">Continious</string>
-
-    <!-- param in BLE normal mode -->
-    <string name="BLENormalModet">BLE NormalMode:</string>
-    <string name="BLEWhiteList">BLE WhiteList:</string>
-    <string name="BLEAdvertise">BLE Advertise:</string>
-    <string name="BLEScan">BLE Scan:</string>
-    <string name="BLEInitiate">BLE Initiate:</string>
-    <!-- param in BLE normal mode white list string -->
-    <string name="BLEAddToWhiteList">Add Device To White List</string>
-    <string name="BLERemoveWhiteList">Remove Device From White List</string>
-    <string name="BLEClearWhiteList">Clear White List</string>
-    <string name="BLEHCIReset">HCI reset</string>
-    <string name="BLEMACAddress">MAC Address:</string>
-    <string name="BLEAddressType">Address Type:</string>
-    <!-- param in BLE normal mode Initiate string -->
-    <string name="BLEInitiateFilter">Initiate Filter Policy</string>
-    <string name="BLEPeerAddressType">Peer Address Type</string>
-    <string name="BLEPeerAddress">Peer Address:</string>
-    <string name="BLELatency"> Connection Latency:</string>
-    <string name="BLESupervisionTimeout">Supervision Timeout</string>
-    <string name="BLESupervisionTimeUnit">*10s</string>
-    <string name="BLEMaxCELength">Max CE Length:</string>
-    <string name="BLEMinCELength">Min CE Length:</string>
-
-    <!-- param in BLE normal mode Scan string -->
-    <string name="BLEScanType">Scan Type:</string>
-    <string name="BLEScanFilterDuplicate">Filter Duplicate:</string>
-    <string name="BLEScanResponseData">Scan Response Data:</string>
-
-    <!-- param in BLE normal mode Advertise string -->
-    <string name="BLEAdvertiseType">Advertising Type:</string>
-    <string name="BLEDirectAddressType">Direct Address Type:</string>
-    <string name="BLEDirectAddress">Direct Address:</string>
-    <string name="BLEChannel37Checkbox">Channel 37</string>
-    <string name="BLEChannel38Checkbox">Channel 38</string>
-    <string name="BLEChannel39Checkbox">Channel 39</string>
-    <string name="BLEAdvertiseData">Advertise Data:</string>
-
-    <!--
-			Menu item to indicate you want to stop send a command and NOT save the
-			changes you've made
-    -->
-    <string name="menu_doNotSave">Revert</string>
-    <!-- BlutTooth end -->
-
-    <string name="auto_answer">Auto Answer</string>
-    <string name="ok">OK</string>
-
-    <!-- De-Sense start -->
-    <string name="desense_activity">Desense</string>
-    <string name="desense_lcd_activity">DesenseLcdActivity</string>
-    <string name="desense_back_light">DesenseBackLight</string>
-    <string name="desense_classd_activity">DesenseClassDActivity</string>
-    <string name="desense_plls_activity">Desense PLLs</string>
-    <string name="desense_plls_detail">PLL Detail</string>
-    <string name="desense_freqhopping">Frequency Hopping Setting</string>
-    <string name="desense_mempll">MEMPLL Setting</string>
-    <string name="lcd_write_cycle">LCD Write Cycle</string>
-    <string name="desense_text_set">Set</string>
-    <string name="desense_plls_error">Fail to enter De-Sense PLLs module</string>
-    <string name="desense_plls_updatefail">Fail to update PLLs status</string>
-    <string name="desense_back_light_frequency">PWM Freq</string>
-    <string name="desense_back_light_duty">PWM Duty</string>
-    <string name="desense_sdlog_toggle_start">Running</string>
-    <string name="desense_sdlog_toggle_end">Stopped</string>
-    <string name="desense_freqhopping_0x">0x</string>
-    <string name="desense_freqhopping_enable">Enable</string>
-    <string name="desense_freqhopping_disable">Disable</string>
-    <string name="desense_freqhopping_readall">Read All</string>
-    <string name="desense_freqhopping_hint_dds">DDS</string>
-    <string name="desense_freqhopping_hint_freq">Delta Freq</string>
-    <string name="desense_freqhopping_hint_time">Delta Time</string>
-    <string name="desense_freqhopping_hint_upper">Upper Limit</string>
-    <string name="desense_freqhopping_hint_down">Down Limit</string>
-    <string name="desense_mempll_200to266">200->266</string>
-    <string name="desense_mempll_266to200">266->200</string>
-    <string name="desense_mempll_266to333">266->333</string>
-    <string name="desense_mempll_333to266">333->266</string>
-    <string name="desense_freqhopping_notsupport">Not support Frequency Hopping Setting</string>
-    <string name="desense_freqhopping_set">Frequency Hopping set</string>
-    <string name="desense_freqhopping_geterror">Get Frequency Hopping message error</string>
-    <string name="desense_freqhopping_inputerror">Input error</string>
-    <string name="desense_freqhopping_dialog_title">INFO</string>
-    <string name="desense_mempll_notsupport">Not support MEMPLL Setting</string>
-    <string name="desense_mempll_geterror">Get current DRAMC error</string>
-    <string name="desense_mempll_set">MEMPLL set</string>
-    <string name="desense_text_thousand_sprt">&#8240;</string>
-    <string name="desense_freqhopping_hopdeltafreq">Hop Delta Freq</string>
-    <string name="desense_freqhopping_hopdeltatime">Hop Delta Time</string>
-    <string name="desense_text_plus_sign">+</string>
-    <string name="desense_text_minus_sign">-</string>
-    <string name="desense_freqhopping_enable_ssc">Enable SSC</string>
-    <string name="desense_freqhopping_disable_ssc">Disable SSC</string>
-    <string name="desense_freqhopping_triger_hop">Trigger Hop</string>
-    <string name="desense_freqhopping_disable_hop">Disable Hop</string>
-    <string name="desense_freqhopping_dump_all">Dump All</string>
-    <string name="desense_freqhopping_help">Help/?</string>
-    <string name="desense_freqhopping_hop_dds">Hop DDS</string>
-    <string name="desense_freqhopping_invalid_input">Invalid Input</string>
-    <string name="desense_freqhopping_operate_success">Success</string>
-    <string name="desense_freqhopping_system_warning">Warning:\nSystem may behave unpredictably after you set wrong value</string>
-    <!-- De-Sense end -->
-
-
-    <!-- Modem test start -->
-    <string name="modem_test_none">NONE</string>
-    <string name="modem_test_cta">CTA</string>
-    <string name="modem_test_fta">FTA</string>
-    <string name="modem_test_iot">IOT</string>
-    <string name="modem_test_operator">Operator</string>
-    <string name="modem_test_factory">Factory</string>
-    <string name="modem_test_integrity_off">Integrity Off</string>
-    <string name="modem_test_c2k">C2K Test Mode</string>
-    <string name="modem_test_unlock">Unlock Test SIM</string>
-    <string name="modem_test_tdddataonly">LTE TDD data only lab test</string>
-    <string name="modem_test_unlock_info">It is ONLY for CT unlock USIM/SIM card test, please switch off for other test cases!</string>
-    <string name="modem_test_tdddataonly_info">It is ONLY for LTE Instrument TDD data only test, please switch off for other test cases!</string>
-    <!-- Modem test end -->
-
-
-    <!-- CMMB start -->
-    <string name="cmmb_save">saveMfsFile</string>
-    <string name="cmmb_memset">memSpibuf</string>
-    <string name="cmmb_mts">MTS</string>
-    <string name="cmmb_mbbms30">MBBMS30</string>
-    <string name="cmmb_off">OFF</string>
-    <string name="cmmb_on">ON</string>
-    <string name="cmmb_internal_ft">Internal Test</string>
-    <string name="cmmb_external_ft">External Test</string>
-    <string name="cmmb_external_edit">530</string>
-    <string name="cmmb_external_hz">(MHz)</string>
-    <!-- CMMB end -->
-
-
-    <!-- USB start -->
-    <string name="USB_TEST">USB Test</string>
-    <string name="USB_IF_OTG20_TEST">USB OTG20 IF Test</string>
-    <string name="USB_IF_TEST">USB IF Test</string>
-    <string name="USB_EX_TEST">USB EX Test</string>
-    <string name="USB_msg_err">Execute Command Error!</string>
-    <string name="USB_start_err">Execute START Command Error!</string>
-    <string name="USB_stop_err">Execute STOP Command Error!</string>
-    <string name="USB_message">Message</string>
-    <string name="USB_not_support">Phone not support this module</string>
-    <string name="USB_stop_fail">Native StopTest Fail.</string>
-
-    <string name="USB_IF_Elec_Test_Text">Electrical Test</string>
-    <string name="USB_IF_Proto_Test_Text">Protocol Test</string>
-    <string name="USB_IF_START_Text">Start</string>
-    <string name="USB_IF_STOP_Text">Stop</string>
-    <string name="USB_IF_Elec_EnVBUS_Text">Enable VBUS</string>
-    <string name="USB_IF_Elec_DeVBUS_Text">Detect VBUS</string>
-    <string name="USB_IF_Elec_EnSRP_Text">Enable SRP</string>
-    <string name="USB_IF_Elec_DeSRP_Text">Detect SRP</string>
-    <string name="USB_IF_Proto_AUUT_Text">A-UUT</string>
-    <string name="USB_IF_Proto_BUUT_Text">B-UUT</string>
-    <string name="USB_IF_TD5_9_Text">TD5.9</string>
-    <string name="USB_IF_stop">Stopping, please wait ...</string>
-
-    <string name="USB_Ex_Test_Text">Extra Test</string>
-    <string name="USB_EX_ITEM1_Text">TEST_SE0_NAK</string>
-    <string name="USB_EX_ITEM2_Text">TEST_J</string>
-    <string name="USB_EX_ITEM3_Text">TEST_K</string>
-    <string name="USB_EX_ITEM4_Text">TEST_PACKET</string>
-    <string name="USB_EX_ITEM5_Text">SUSPEND_RESUME</string>
-    <string name="USB_EX_ITEM6_Text">GET_DESCRIPTOR</string>
-    <string name="USB_EX_ITEM7_Text">SET_FEATURE</string>
-    <string name="USB_IF_OTG20_TEST_MODE">Swtich to USBIF Mode</string>
-    <string name="USB_IF_OTG20_ENTER_Text">ENTER</string>
-    <string name="USB_IF_OTG20_EXIT_Text">EXIT</string>
-    <string name="USB_IF_OTG20_START_Text">START</string>
-    <string name="USB_IF_OTG20_STOP_Text">STOP</string>
-
-    <string name="usb_phy_tuning">USB PHY Tuning</string>
-    <string name="usb_phy_submit">Submit</string>
-    <string name="usb_phy_driving_capability">USB_DRIVING_CAPABILITY</string>
-    <string name="usb_phy_hstx_srctrl">RG_USB20_HSTX_SRCTRL</string>
-    <string name="usb_phy_intr_en">RG_USB20_INTR_EN</string>
-    <!-- USB end -->
-
-
-    <!-- Phone Auto Test start -->
-    <string name="phone_auto_test_01">number:</string>
-    <string name="phone_auto_test_02">repeat times:</string>
-    <string name="phone_auto_test_03">duration(s):</string>
-    <string name="phone_auto_test_04">wait(s):</string>
-    <string name="phone_auto_test_05">type(1-voice call;2-video call;3-sip call):</string>
-    <string name="phone_auto_test_06">Run</string>
-    <string name="phone_auto_test_07">Stop</string>
-    <string name="phone_auto_test_08">sim(0-sim1;1-sim2):</string>
-    <!-- Phone Auto Test end -->
-
-
-    <!-- Band select start -->
-    <string name="BandSelect">Band Mode</string>
-    <string name="BandSel_GSM">GSM Mode</string>
-    <string name="BandSel_UMTS">UMTS Mode</string>
-    <string name="BandSel_SET">SET</string>
-    <string name="BandSel_GSM_EGSM900">EGSM900</string>
-    <string name="BandSel_GSM_DCS1800">DCS1800</string>
-    <string name="BandSel_GSM_PCS1900">PCS1900</string>
-    <string name="BandSel_GSM_GSM850">GSM850</string>
-    <string name="BandSel_UMTS_BAND_I">WCDMA-IMT-2000</string>
-    <string name="BandSel_UMTS_BAND_II">WCDMA-PCS-1900</string>
-    <string name="BandSel_UMTS_BAND_III">WCDMA-DCS-1800</string>
-    <string name="BandSel_UMTS_BAND_IV">WCDMA-AWS-1700</string>
-    <string name="BandSel_UMTS_BAND_V">WCDMA-CLR-850</string>
-    <string name="BandSel_UMTS_BAND_VI">WCDMA-800</string>
-    <string name="BandSel_UMTS_BAND_VII">WCDMA-IMT-E-2600</string>
-    <string name="BandSel_UMTS_BAND_VIII">WCDMA-GSM-900</string>
-    <string name="BandSel_UMTS_BAND_IX">WCDMA-1800</string>
-    <string name="BandSel_UMTS_BAND_X">WCDMA-1700</string>
-    <string name="BandSel_RESET">Reset to default</string>
-    <string name="BandSel_CDMA">CDMA Mode</string>
-    <string name="BandSel_CDMA_BAND_0">Band Class 0(North American Celluar Band)</string>
-    <string name="BandSel_CDMA_BAND_1">Band Class 1(North American PCS band)</string>
-    <string name="BandSel_CDMA_BAND_2">Band Class 2(TACS band)</string>
-    <string name="BandSel_CDMA_BAND_3">Band Class 3(JTACS band)</string>
-    <string name="BandSel_CDMA_BAND_4">Band Class 4(Korean PCS band)</string>
-    <string name="BandSel_CDMA_BAND_5">Band Class 5(NMT-450 Band)</string>
-    <string name="BandSel_CDMA_BAND_6">Band Class 6(IMT-2000 band)</string>
-    <string name="BandSel_CDMA_BAND_7">Band Class 7(North American 700Mhz Celluar Band)</string>
-    <string name="BandSel_CDMA_BAND_8">Band Class 8 (1800-MHz Band)</string>
-    <string name="BandSel_CDMA_BAND_9">Band Class 9 (900-MHz Band)</string>
-    <string name="BandSel_CDMA_BAND_10">Band Class 10 (Secondary 800 MHz Band)</string>
-    <string name="BandSel_CDMA_BAND_11">Band Class 11 (400 MHz European PAMR Band</string>
-    <string name="BandSel_CDMA_BAND_12">Band Class 12 (800 MHz PAMR Band)</string>
-    <string name="BandSel_CDMA_BAND_13">Band Class 13 (2.5 GHz IMT-2000 Extension Band)</string>
-    <string name="BandSel_CDMA_BAND_14">Band Class 14 (US PCS 1.9GHz Band) </string>
-    <string name="BandSel_CDMA_BAND_15">Band Class 15 (AWS Band)</string>
-    <!-- Band select end -->
-
-
-    <!-- Fast Dormancy start -->
-    <string name="fd_textView">Turn On/Off SCRI/FD</string>
-    <string name="fd_turn_on">Turn On R8 FD &amp; Legacy FD</string>
-    <string name="fd_turn_off">Turn Off R8 FD &amp; Legacy FD</string>
-    <string name="fd_turn_off_legacy">Turn On R8 FD &amp; Turn Off Legacy FD</string>
-    <string name="fd_ok">OK</string>
-    <string name="fd_simcard_text">SIM Card:</string>
-    <string name="fd_sim1_text">SIM1</string>
-    <string name="fd_sim2_text">SIM2</string>
-    <string name="fd_text_screen_on">Screen On</string>
-    <string name="fd_text_screen_off">Screen Off</string>
-    <string name="fd_text_config">Config</string>
-    <string name="fd_text_r8">R8 FD :</string>
-    <string name="fd_text_legacy">Legacy FD :</string>
-    <string name="fd_text_set">Set</string>
-    <string name="fd_text_send">Send FD</string>
-    <string name="fd_text_config_fd">Config FD</string>
-    <string name="fd_text_unit">0.1s</string>
-    <string name="fd_text_unit_ap">1s (>5s)</string>
-    <!-- Fast Dormancy end -->
-
-
-    <!-- Tv out module start -->
-    <string name="TVOut">TV Out Chinese Test</string>
-    <string name="tv_system_title">TV system</string>
-    <string name="TVOutEntry">TV Out</string>
-    <string name="TVOut_able">TV-out Enable/Disable</string>
-    <string name="Chinese_test_pat">Chinese Test Patterns</string>
-    <string name="TvOutActivity_Title">Chinese Standard Pattern</string>
-    <!-- Tv out module end -->
-
-    <string name="SIMList">SIM Select</string>
-    <!-- Strings for Gemini end -->
-    <!-- Phone info -->
-    <!-- Phone Info screen. Button label to turn on the radio . Only shown in diagnostic screen, so precise translation is not needed. -->
-    <string name="turn_on_radio">Turn on radio</string>
-    <!-- Phone Info screen. Button label to turn off the radio . Only shown in diagnostic screen, so precise translation is not needed. -->
-    <string name="turn_off_radio">Turn off radio</string>
-
-    <!-- Phone SMS over IMS on. Only shown in diagnostic screen, so precise translation is not needed. -->
-    <string name="sms_over_ims_on">Turn on SMS over IMS</string>
-    <!-- Phone SMS over IMS off. Only shown in diagnostic screen, so precise translation is not needed. -->
-    <string name="sms_over_ims_off">Turn off SMS over IMS</string>
-
-    <!-- Phone SMS over IMS IMS registration required on. Only shown in diagnostic screen, so precise translation is not needed. -->
-    <string name="ims_reg_required_on">Turn on IMS registration required</string>
-    <!-- Phone IMS registration required off. Only shown in diagnostic screen, so precise translation is not needed. -->
-    <string name="ims_reg_required_off">Turn off IMS registration required</string>
-
-    <!-- Phone ram dump on. Only shown in diagnostic screen, so precise translation is not needed. -->
-    <string name="lte_ram_dump_on">Turn on lte ram dump</string>
-    <!-- Phone ram dump off. Only shown in diagnostic screen, so precise translation is not needed. -->
-    <string name="lte_ram_dump_off">Turn off lte ram dump</string>
-
-    <!-- Device Info -->
-    <skip />
-    <!-- Device Info screen. Used for a status item's value when the proper value is not known -->
-    <string name="device_info_default">Unknown</string>
-
-    <!-- Phone info -->
-    <!-- <string name="Phone_information">Phone information</string> -->
-    <string name="Phone_info">Phone info</string>
-
-    <!-- Phone Info screen. Button label to turn on the log for QXDM SD . Only shown in diagnostic screen, so precise translation is not needed. -->
-    <string name="turn_on_qxdm">Enable QXDM SD log</string>
-    <!-- Phone Info screen. Button label to turn off the log for QXDM SD . Only shown in diagnostic screen, so precise translation is not needed. -->
-    <string name="turn_off_qxdm">Disable QXDM SD log</string>
-
-    <!-- Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_menu_viewADN">View SIM address book</string>
-    <!-- Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_menu_viewFDN">View Fixed Dialing Numbers</string>
-    <!-- Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_menu_viewSDN">View Service Dialing Numbers</string>
-    <!-- Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_menu_getPDP">Get PDP list</string>
-    <!-- Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_menu_enableData">Enable data connection</string>
-    <!-- Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_menu_disableData">Disable data connection</string>
-    <!-- Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_menu_enableDataOnBoot">Enable data on boot</string>
-    <!-- Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_menu_disableDataOnBoot">Disable data on boot</string>
-
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_service_in">In service</string>
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_service_out">Out of service</string>
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_service_emergency">Emergency calls only</string>
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_service_off">Radio off</string>
-
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_roaming_in">Roaming</string>
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_roaming_not">Not roaming</string>
-
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_phone_idle">Idle</string>
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_phone_ringing">Ringing</string>
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_phone_offhook">Call in progress</string>
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_data_disconnected">Disconnected</string>
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_data_connecting">Connecting</string>
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_data_connected">Connected</string>
-    <!-- Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_data_suspended">Suspended</string>
-    <!-- Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_unknown">unknown</string>
-    <!-- Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_display_packets">pkts</string>
-    <!-- Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_display_bytes">bytes</string>
-    <!-- Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_display_dbm">dBm</string>
-    <!-- Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_display_asu">asu</string>
-    <!-- Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_lac">LAC</string>
-    <!-- Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radioInfo_cid">CID</string>
-    <!-- Used for diagnostic info screens, precise translation isn't needed. Unmounts the SD card from the phone, meaning it will become available for an attached computer  [CHAR LIMIT=25] -->
-    <string name="sdcard_unmount" product="nosdcard">Unmount USB storage</string>
-    <!-- Used for diagnostic info screens, precise translation isn't needed. Unmounts the SD card from the phone, meaning it will become available for an attached computer -->
-    <string name="sdcard_unmount" product="default">Unmount SD card</string>
-
-    <!-- Used for diagnostic info screens, precise translation isn't needed. Formats the SD card in the phone, meaning it will be erased and reformatted [CHAR LIMIT=25] -->
-    <string name="sdcard_format" product="nosdcard">Erase USB storage</string>
-    <!-- Used for diagnostic info screens, precise translation isn't needed. Formats the SD card in the phone, meaning it will be erased and reformatted -->
-    <string name="sdcard_format" product="default">Erase SD card</string>
-    <!-- choice for the font size spinner -->
-    <string name="small_font">Small</string>
-    <!-- choice for the font size spinner -->
-    <!-- Do not translate. label for font size preview.  Does not need to be translated. -->
-    <string name="font_size_preview_text">Servez ce monsieur une bière et des kiwis.</string>
-    <!-- Button. Chosen when they want to save the chosen text size. -->
-    <string name="font_size_save">OK</string>
-
-    <!-- CFU start -->
-    <string name="cfu_textView">CFU Setting:</string>
-    <string name="cfu_default">Default</string>
-    <string name="cfu_turn_on">Always query</string>
-    <string name="cfu_turn_off">Always not query</string>
-    <string name="cfu_ok">OK</string>
-    <!-- CFU end -->
-
-
-    <!-- Radio Info start -->
-    <string name="radio_info_signal_location_label">Location:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_neighboring_location_label">Neighboring CID:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_data_attempts_label">Data attempts:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_roaming_label">Roaming:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_imei_label">IMEI:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_call_redirect_label">Call redirect:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_ppp_resets_label">Number of PPP reset since boot:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_gsm_disconnects_label">GSM disconnects:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_current_network_label">Current network:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_data_successes_label">Data successes:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_ppp_received_label">PPP received:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_gsm_service_label">GSM service:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_signal_strength_label">Signal strength:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_call_status_label">Call status:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_radio_resets_label">Radio resets:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_message_waiting_label">Message waiting:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_phone_number_label">Phone number:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_band_mode_label">Select radio band</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_set_perferred_label">Set preferred network type:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_smsc_label">SMSC:</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_smsc_update_label">Update</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_smsc_refresh_label">Refresh</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="radio_info_toggle_dns_check_label">Toggle DNS check</string>
-    <!-- Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed -->
-    <string name="oem_radio_info_label">OEM-specific Info/Settings</string>
-    <string name="radio_info_warning">
-    WARNING: \n
-    RAT mode in this menu will override the normal network mode setting.\n\n
-    DO NOT use this menu if you just want to change network mode. Keep it at \"Not Specified\".\n
-    Instead, use \"Network Selecting\" in Engineer Mode Telephony page.\n
-    </string>
-    <!-- Radio Info end -->
-
-
-    <!-- SWLA start -->
-    <string name="swla_assert_text">Assert Modem </string>
-    <string name="swla_swla_text">Enable Software LA</string>
-    <!-- SWLA end -->
-
-
-    <!-- Band Mode start -->
-    <!-- Band mode screen.  Title of activity. -->
-    <string name="band_mode_title">Set GSM/UMTS band</string>
-    <!-- Band mode screen.  Loading message. -->
-    <string name="band_mode_loading">Loading band list\u2026</string>
-    <!-- Band mode screen. Button caption to set the bandmode. -->
-    <string name="band_mode_set">Set</string>
-    <!-- Band mode screen. Status message when unsuccessful. -->
-    <string name="band_mode_failed">Unsuccessful</string>
-    <!-- Band mode screen. Statusm essage when successful. -->
-    <string name="band_mode_succeeded">Successful</string>
-    <!-- Band Mode end -->
-
-
-    <!-- Setting Font Size start -->
-    <string name="settings_fontsize_text">Set Font Scale </string>
-    <string name="settings_fs_small_text">Small:</string>
-    <string name="settings_fs_normal_text">Normal:</string>
-    <string name="settings_fs_large_text">Large:</string>
-    <string name="settings_fs_extralarge_text">Extra large:</string>
-    <string name="settings_fs_small_bound"> (default 0.85)</string>
-    <string name="settings_fs_large_bound"> (default 1.15)</string>
-    <string name="settings_fs_extralarge_bound"> (default 1.30)</string>
-    <string name="settings_fs_ok">OK</string>
-    <!-- Setting Font Size end -->
-
-
-    <!-- Dual Talk Band Select start -->
-    <string name="bandmodesim1_GSM">GSM Mode</string>
-    <string name="bandmodesim1_GSM_EGSM900">EGSM900</string>
-    <string name="bandmodesim1_GSM_DCS1800">DCS1800</string>
-    <string name="bandmodesim1_GSM_PCS1900">PCS1900</string>
-    <string name="bandmodesim1_GSM_GSM850">GSM850</string>
-    <string name="bandmodesim1_UMTS">UMTS Mode</string>
-    <string name="bandmodesim1_UMTS_BAND_I">WCDMA-IMT-2000</string>
-    <string name="bandmodesim1_UMTS_BAND_II">WCDMA-PCS-1900</string>
-    <string name="bandmodesim1_UMTS_BAND_III">WCDMA-DCS-1800</string>
-    <string name="bandmodesim1_UMTS_BAND_IV">WCDMA-AWS-1700</string>
-    <string name="bandmodesim1_UMTS_BAND_V">WCDMA-CLR-850</string>
-    <string name="bandmodesim1_UMTS_BAND_VI">WCDMA-800</string>
-    <string name="bandmodesim1_UMTS_BAND_VII">WCDMA-IMT-E-2600</string>
-    <string name="bandmodesim1_UMTS_BAND_VIII">WCDMA-GSM-900</string>
-    <string name="bandmodesim1_UMTS_BAND_IX">WCDMA-1800</string>
-    <string name="bandmodesim1_UMTS_BAND_X">WCDMA-1700</string>
-    <string name="bandmodesim1_LTE">LTE Mode</string>
-    <string name="bandmodesim1_SET">SET</string>
-    <string name="BandStart">Band Mode</string>
-    <string name="BandModeSIM1">Band Mode SIM1</string>
-    <!--
-         <string name="BandModeSIM2">Band Mode SIM2</string>
-         <string name="bandmodesim2_GSM">GSM Mode</string>
-          <string name="bandmodesim2_GSM_EGSM900">EGSM900</string>
-         <string name="bandmodesim2_GSM_DCS1800">DCS1800</string>
-         <string name="bandmodesim2_GSM_PCS1900">PCS1900</string>
-         <string name="bandmodesim2_GSM_GSM850">GSM850</string>
-         <string name="bandmodesim2_SET">SET</string>
-    -->
-    <!-- Dual Talk Band Select end -->
-
-
-    <!-- TDD Band Select start -->
-    <string name="TDD_BandSel_GSM">GSM Mode</string>
-    <string name="TDD_GSM_EGSM900">EGSM900</string>
-    <string name="TDD_GSM_DCS1800">DCS1800</string>
-    <string name="TDD_GSM_PCS1900">PCS1900</string>
-    <string name="TDD_GSM_GSM850">GSM850</string>
-    <string name="TDD_BandSel_UMTS">UMTS Mode</string>
-    <string name="TDD_UMTS_BAND_I">TD_SCDMA Band A</string>
-    <string name="TDD_UMTS_BAND_II">TD_SCDMA Band B</string>
-    <string name="TDD_UMTS_BAND_III">TD_SCDMA Band C</string>
-    <string name="TDD_UMTS_BAND_IV">TD_SCDMA Band D</string>
-    <string name="TDD_UMTS_BAND_V">TD_SCDMA Band E</string>
-    <string name="TDD_UMTS_BAND_VI">TD_SCDMA Band F</string>
-    <string name="TDD_Btn_SET">SET</string>
-    <!-- TDD Band Select end -->
-
-
-    <!-- BandMode SIM2 Select start -->
-    <string name="BandModeSIM2">Band Mode SIM2</string>
-    <string name="bandmodesim2_GSM">GSM Mode</string>
-    <string name="bandmodesim2_GSM_EGSM900">EGSM900</string>
-    <string name="bandmodesim2_GSM_DCS1800">DCS1800</string>
-    <string name="bandmodesim2_GSM_PCS1900">PCS1900</string>
-    <string name="bandmodesim2_GSM_GSM850">GSM850</string>
-    <string name="bandmodesim2_SET">SET</string>
-    <string name="BandModeSIMSelect">SIM Select</string>
-    <string name="BandModeSIMTwo">Band SET</string>
-    <!-- BandMode SIM2 Select end -->
-
-    <!-- BandMode  Start -->
-    <string name="query_result">Query Failed</string>
-    <string name="query_support_message">Query Supported Mode Failed.</string>
-    <string name="query_current_message">Query Current Mode Failed.</string>
-    <string name="query_btn_text">Close</string>
-    <string name="set_success_message">Set OK</string>
-    <string name="set_ok_text">OK</string>
-    <string name="set_fail_title">Failed</string>
-    <string name="set_fail_message">Set Failed</string>
-    <string name="set_fail_text">Close</string>
-    <string name="reset_title">Reset</string>
-    <string name="reset_message">Reset to default setting?</string>
-    <string name="bandmode_sim1">SIM1</string>
-    <string name="bandmode_sim2">SIM2</string>
-    <string name="bandmode_sim3">SIM3</string>
-    <string name="bandmode_sim4">SIM4</string>
-    <!-- BandMode End -->
-
-    <!-- RAT Mode Start-->
-	<string name="rat_query_preferred_type">Query Preferred type fail</string>
-	<string name="rat_3g_status">3G is off</string>
-	<string name="rat_wcdmapreferred_support">Not Support WCDMA Preferred</string>
-	<string name="rat_tdcdmapreferred_support">Not Support TD-SCDMA Preferred</string>
-	<string name="rat_not_exit_usim">EF_RAT_NOT_EXIST_IN_USIM</string>
-	<string name="rat_for_other_case">EF_RAT_FOR_OTHER_CASE</string>
-	<string name="rat_sim1">SIM1</string>
-	<!-- RAT Mode End-->
-
-<!-- NetworkInfo Start-->
-	<string name="networkinfo_check">Check Information</string>
-	<string name="networkinfo_msg">Please select the items you want to check.</string>
-	<string name="open_file_title">Fail</string>
-	<string name="open_file_fail">Open URC File Fail</string>
-	<string name="io_exception_title">Fail</string>
-	<string name="io_exception_fail">Write File Fail</string>
-	<string name="network_btn_text">OK</string>
-	<string name="send_at_fail">NW INFO AT cmd failed.</string>
-	<string name="networkinfo_sim1">SIM1</string>
-	<string name="networkinfo_sim2">SIM2</string>
-	<string name="networkinfo_not_support">Not supported on this project.</string>
-	<!-- NetworkInfo End-->
-
-
-	<!-- Help page start -->
-    <string name="help">Help</string>
-	<!-- Help page end -->
-
-          <!-- BaseBand Start-->
-	<string name="baseband_input_check">Please input the addr or length.</string>
-	<string name="number_format_check">Error: Bad hex number.</string>
-	<string name="length_check">Length is too small.</string>
-	<string name="max_value_check">Max Length is 1024</string>
-	<string name="pipe_check">Error: pipe</string>
-	<string name="information">Error</string>
-	<!-- BaseBand End-->
-
-	<!-- BSP Telephony Dev Tool Start-->
-	<string name="te_devtool_title">BSPTelephonyDevTool</string>
-	<!-- BSP Telephony Dev Tool End-->
-
-	<!-- HotSwap Dev Tool Start-->
-	<string name="hotswap_devtool_title">HotSwapDevTool</string>
-	<!-- HotSwap Dev Tool End-->
-
-	<!-- Configure check start -->
-	  <string name="configure_check">Configure Check</string>
-	<!-- Configure check end -->
-
-	<!-- Configure check 2.0 send test start -->
-	  <string name="configure_check2_send_test">CTSC(送测手机检查)</string>
-	<!-- Configure check 2.0 send test end -->
-
-	<!-- Configure check 2.0 self test start -->
-	  <string name="configure_check2_self_test">CTSC(自测配置检查)</string>
-	<!-- Configure check 2.0 self test end -->
-
-	<!-- CT Configure check test start -->
-	  <string name="CT_configure_check">CT CTSC(配置检查)</string>
-	<!-- CT Configure check test end -->
-
-	<!-- UsbChecker enabler start -->
-		<string name="usb_checker_enabler">UsbChecker Enabler</string>
-	<!-- UsbChecker enabler end -->
-
-	<!-- CMCC FT Pre Check start -->
-      <string name="cmcc_ftprecheck">CMCC FT Pre-Check</string>
-    <!-- CMCC FT Pre Check end -->
-	
-    <!-- MDML Sample start -->
-    <string name="mdml_sample">MDML Sample</string>
-    <!-- MDML Sample end -->
-
-    <!-- Network select start -->
-    <string name="network_select">Network Selecting</string>
-    <string name="cdma_network_select">CDMA Network Select</string>
-    <string name="query_preferred_fail">Query/Set Network Mode Failed!</string>
-    <string name="network_mode_set_label">Set preferred network type:</string>
-    <string name="network_mode_set_hint">To set "CDMA only", please enter Settings/Enable 4G and disable it.</string>
-    <string name="disable_eHRPD">Disable eHRPD</string>
-    <string name="query_eHRPD_state_fail">query fail</string>
-    <string name="set_eHRPD_state_fail">set fail</string>
-	<!-- Network select end -->
-
-    <!-- HQA NFC Start -->
-    <string name="hqa_nfc_always_reader_mode">Always in reader mode</string>
-    <string name="hqa_nfc_always_p2p_mode">Always in peer to peer mode</string>
-    <string name="hqa_nfc_always_card_emulation_mode">Always in card emulation mode</string>
-    <string name="hqa_nfc_polling_loop_mode">Polling loop mode</string>
-    <string name="hqa_nfc_tx_carrier_signal">TX carrier signal always on</string>
-    <string name="hqa_nfc_virtual_card_function">Virtual card function</string>
-    <string name="hqa_nfc_pnfc_command">PNFC command</string>
-    <string name="hqa_nfc_version_query">Version Query</string>
-    <string name="hqa_nfc_option">Option</string>
-    <string name="hqa_nfc_loopback_test">Loopback Test</string>
-    <string name="hqa_nfc_swp_test">SWP Test</string>
-    <string name="hqa_nfc_function_read">Function Read</string>
-    <string name="hqa_nfc_function_write">Function Write</string>
-    <string name="hqa_nfc_result">Result</string>
-    <string name="hqa_nfc_typea"> TypeA</string>
-    <string name="hqa_nfc_typeb"> TypeB</string>
-    <string name="hqa_nfc_typeb2"> TypeB\'</string>
-    <string name="hqa_nfc_typef"> TypeF</string>
-    <string name="hqa_nfc_typev"> TypeV</string>
-    <string name="hqa_nfc_kovio"> Kovio</string>
-    <string name="hqa_nfc_106"> 106kbps</string>
-    <string name="hqa_nfc_212"> 212kbps</string>
-    <string name="hqa_nfc_424"> 424kbps</string>
-    <string name="hqa_nfc_848"> 848kbps</string>
-    <string name="hqa_nfc_166"> 6.62kbps</string>
-    <string name="hqa_nfc_2648"> 26.48kbps</string>
-    <string name="hqa_nfc_subcarrier"> subcarrier</string>
-    <string name="hqa_nfc_dual_subcarrier"> dual subcarrier</string>
-    <string name="hqa_nfc_mode_4"> CodingMode (1 out of 4)</string>
-    <string name="hqa_nfc_mode_256"> CodingMode (1 out of 256)</string>
-    <string name="hqa_nfc_select_all">Default</string>
-    <string name="hqa_nfc_clear_all">Clear All</string>
-    <string name="hqa_nfc_start">Start</string>
-    <string name="hqa_nfc_stop">Stop</string>
-    <string name="hqa_nfc_return">Return</string>
-    <string name="hqa_nfc_run_back">Run in Background</string>
-    <string name="hqa_nfc_rw_function">R\/W function</string>
-    <string name="hqa_nfc_rw_read">Read</string>
-    <string name="hqa_nfc_rw_write">Write</string>
-    <string name="hqa_nfc_rw_format">Format to NDEF</string>
-    <string name="hqa_nfc_rw_cancel">Cancel</string>
-    <string name="hqa_nfc_passive_mode">Passive mode</string>
-    <string name="hqa_nfc_active_mode">Active mode</string>
-    <string name="hqa_nfc_initiator">Initiator</string>
-    <string name="hqa_nfc_target">Target</string>
-    <string name="hqa_nfc_disable_card_emul">Diable Card Emulation</string>
-    <string name="hqa_nfc_swio1">SWIO1</string>
-    <string name="hqa_nfc_swio2">SWIO2</string>
-    <string name="hqa_nfc_swio_se">SWIO_SE</string>
-    <string name="hqa_nfc_pnfc_text">$PNFC</string>
-    <string name="hqa_nfc_send">Send</string>
-    <string name="hqa_nfc_reader_mode">Reader Mode</string>
-    <string name="hqa_nfc_p2p_mode">P2P Mode</string>
-    <string name="hqa_nfc_card_emu_mode">Card Emulation Mode</string>
-    <string name="hqa_nfc_listen">Listen</string>
-    <string name="hqa_nfc_pause">Pause</string>
-    <string name="hqa_nfc_period">Period:</string>
-    <string name="hqa_nfc_ms">ms</string>
-    <string name="hqa_nfc_disable_card_emu">Disable Card Emulation</string>
-    <string name="hqa_nfc_title_ndef">Read NDEF Tag</string>
-    <string name="hqa_nfc_title_type">NDEF Tag Type</string>
-    <string name="hqa_nfc_type_uri">URI</string>
-    <string name="hqa_nfc_type_text">Text</string>
-    <string name="hqa_nfc_type_lang">Lang:</string>
-    <string name="hqa_nfc_type_smart">Smart Poster</string>
-    <string name="hqa_nfc_type_others">Others</string>
-    <string name="hqa_nfc_record_flag">Record flag:</string>
-    <string name="hqa_nfc_record_id">Record ID:</string>
-    <string name="hqa_nfc_record_inf">Record Inf:</string>
-    <string name="hqa_nfc_payload_length">Payload length:</string>
-    <string name="hqa_nfc_payload">Payload:</string>
-    <string name="hqa_nfc_hex">HEX:</string>
-    <string name="hqa_nfc_ascii">ASCII:</string>
-    <string name="hqa_nfc_company">Company:</string>
-    <string name="hqa_nfc_url_pre">URL:http://www.</string>
-    <string name="hqa_nfc_dialog_wait_title">Waiting</string>
-    <string name="hqa_nfc_dialog_wait_message">Please Waiting...</string>
-    <string name="hqa_nfc_connect_fail">Connect server fail</string>
-    <string name="hqa_nfc_emulat_virtual_card">Virtual Card Function</string>
-    <string name="hqa_nfc_p2p_mode_ntf_title">Peer to peer mode rsp.</string>
-    <string name="hqa_nfc_p2p_role_tip">Please select at least one P2P role!</string>
-    <string name="hqa_nfc_mw_version">NFC MW version: </string>
-    <string name="hqa_nfc_fw_version">NFC FW version: </string>
-    <string name="hqa_nfc_hw_version">NFC HW version: </string>
-    <string name="hqa_nfc_set">Set</string>
-    <string name="hqa_nfc_option_force_download">Enable Force Download</string>
-    <string name="hqa_nfc_option_auto_check">Enable Auto Check Presence</string>
-    <string name="hqa_nfc_dialog_warn">Error</string>
-    <string name="hqa_nfc_dialog_warn_message">Please turn off NFC first</string>
-    <!-- HQA NFC End -->
-
-    <!-- Auto calibration start -->
-    <string name="captureImage">CaptureImage</string>
-    <string name="autoCalibration">AutoCalibration</string>
-    <string name="setting">Setting :</string>
-    <string name="capture">Capture :</string>
-    <string name="capture_picture"> Capture </string>
-    <string name="led_flash">Strobe Mode</string>
-    <string name="tv_flicker">Flicker</string>
-    <string name="pre_flash_lev">Pre-Flash Level</string>
-    <string name="main_flash_lev">Main-Flash Level</string>
-    <string name="auto_clibr_cp_size_setting">Set Capture Size</string>
-    <string name="auto_clibr_cp_type_setting">Set Capture Type</string>
-    <string name="auto_clibr_cp_num_setting">Set Capture Nimber</string>
-    <string name="auto_clibr_cp_mul_frame_setting">Set Multi Frame</string>
-    <string name="auto_clibr_cp_video_clip_setting">Set Video Clip</string>
-    <string name="auto_clibr_iso_setting">Set ISO Speed</string>
-    <string name="auto_clibr_af_setting">AF</string>
-    <string name="auto_clibr_key_capture_mode">capture_mode</string>
-    <string name="auto_clibr_key_capture_size">capture_size</string>
-    <string name="auto_clibr_key_capture_type">capture_type</string>
-    <string name="auto_clibr_key_capture_number">capture_number</string>
-    <string name="auto_clibr_key_capture_resolution">capture_resolution</string>
-    <string name="auto_clibr_key_iso_speed">iso_speed</string>
-    <string name="auto_clibr_key_flicker">flicker_type</string>
-    <string name="auto_clibr_key_led_flash">led_flash</string>
-    <string name="auto_clibr_key_pre_flash">pre_flash</string>
-    <string name="auto_clibr_key_main_flash">main_flash</string>
-    <string name="auto_clibr_key_af_mode">af_mode</string>
-    <string name="auto_clibr_key_branket_range">branket_range</string>
-    <string name="auto_clibr_key_branket_interval">branket_interval</string>
-    <string name="auto_clibr_key_through_focus_dirct">through_focus_direction</string>
-    <string name="auto_clibr_key_through_focus_interval">through_focus_interval</string>
-    <string name="auto_clibr_key_through_manual_start_pos">through_focus_start_pos</string>
-    <string name="auto_clibr_key_through_manual_end_pos">through_focus_end_pos</string>
-    <string name="auto_clibr_sdcard_tips">Please make sure your sd-card is available!</string>
-    <string name="auto_clibr_capture_mode">Capture mode</string>
-    <string name="auto_clibr_capture_normal">Normal Capture</string>
-    <string name="auto_clibr_capture_size">Capture size</string>
-    <string name="auto_clibr_capture_type">Capture type</string>
-    <string name="auto_clibr_capture_number">Capture number</string>
-    <string name="auto_clibr_multi_frame">MFLL</string>
-    <string name="auto_clibr_video_clip">Video Clip Raw Dump</string>
-    <string name="auto_clibr_video_resolution">Resolution</string>
-    <string name="auto_clibr_iso_speed">ISO Speed</string>
-    <string name="auto_clibr_af_auto">Auto</string>
-    <string name="auto_clibr_af_bracket">AF Bracket</string>
-    <string name="auto_clibr_af_bracket_range">Bracket Range(0~511):</string>
-    <string name="auto_clibr_af_bracket_interval">Interval:</string>
-    <string name="auto_clibr_af_full">Full Scan</string>
-    <string name="auto_clibr_af_through">Through Focus Dump</string>
-    <string name="auto_clibr_af_through_interval">Interval(1~511):</string>
-    <string name="auto_clibr_af_through_dirct">Scan Direction</string>
-    <string name="auto_clibr_af_bracket_range_tip">AF Bracket Range is 0~511!</string>
-    <string name="auto_clibr_af_through_interval_tip">AF Through Focus Interval is 1~511!</string>
-    <string name="auto_clibr_manual_start">Start position:</string>
-    <string name="auto_clibr_manual_end">End position:</string>
-    <string name="auto_clibr_iso_tips">Any one of the ISO is not selected, use the default: Auto!</string>
-    <!-- message for the dialog showing the error of camera hardware -->
-    <string name="cannot_connect_camera">Can\'t connect to the camera.</string>
-    <!-- title for the dialog showing the error of camera hardware -->
-    <string name="camera_error_title">Camera error</string>
-    <!-- Value for flash off setting-->
-    <string name="pref_camera_flashmode_no_flash" translatable="false">no_flash</string>
-    <!-- alert to the user that the SD card is too full to complete the operation -->
-    <string name="not_enough_space" product="default">Your SD card is full.</string>
-    <!-- Filename prefix for panorama output. -->
-    <string name="pano_file_name_format" translatable="false">"'PANO'_yyyyMMdd_HHmmssSSS"</string>
-    <!-- alert to the user that an SD card must be installed before using the camera -->
-    <string name="no_storage" product="default">Insert an SD card before using the camera.</string>
-    <!-- alert to the user that the camera fails to read or write the SD card. -->
-    <string name="access_sd_fail" product="default">Couldn\'t access SD card.</string>
-    <!-- alert to the user that the SD card is being disk-checked -->
-    <string name="preparing_sd" product="default">Preparing SD card\u2026</string>
-    <!-- Default scene mode setting. -->
-    <string name="pref_camera_scenemode_default" translatable="false">auto</string>
-    <!-- Toast after trying to select a setting that is not allowed to change in scene mode [CHAR LIMIT=NONE] -->
-    <string name="not_selectable_in_scene_mode">Not selectable in scene mode.</string>
-    <!-- Default white balance setting. -->
-    <string name="pref_camera_whitebalance_default" translatable="false">auto</string>
-    <!-- message for the dialog showing the camera is disabled because of security policies. Camera cannot be used. -->
-    <string name="camera_disabled">Camera has been disabled because of security policies.</string>
-    <string name="auto_clibr_hdr_debug">HDR Debug</string>
-    <string name="auto_clibr_video_dump_tips">Only the first option of the ISO value will take effect!</string>
-    <string name="auto_clibr_af_continuous">Continuous</string>
-    <string name="auto_clibr_af_through_repeat">Repeat</string>
-    <string name="auto_clibr_full_scan_wait_time">Wait Time(0~1000ms)</string>
-    <string name="auto_clibr_af_full_scan_time_tip">AF full scan wait time range is 0~1000</string>
-    <string name="auto_clibr_key_full_wait_time">full_wait_time</string>
-    <string name="auto_clibr_full_scan_frame_interval">Frame Interval</string>
-    <string name="auto_clibr_key_full_frame_interval">full_frame_interval_</string>
-    <string name="auto_clibr_key_through_repeat">through_repeat</string>
-    <string name="camera_ae">AE</string>
-    <string name="camera_ev">EV</string>
-    <string name="camera_strobe_duty">Strobe duty</string>
-    <string name="camera_custom_parameter">Custom Parameter</string>
-    <string name="camera_key_custom_parameter">key_custom_parameter</string>
-    <string name="camera_custom_param_hint_delimiter">delimiter is ;</string>
-    <string name="auto_clibr_camera_sensor">Camera Sensor</string>
-    <string name="auto_clibr_camera_sensor_main">Main</string>
-    <string name="auto_clibr_camera_sensor_main2">Main2</string>
-    <string name="auto_clibr_camera_sensor_sub">Sub</string>
-    <string name="camera_key_selected_sensor_id">key_selected_sensor_id</string>
-    <string name="auto_clibr_shutter_delay">Shutter Delay</string>
-    <string name="camera_key_shutter_delay">key_shutter_delay</string>
-    <string name="auto_clibr_shading_table">Shading Table</string>
-    <string name="camera_key_shading_table">key_shading_table</string>
-    <string name="auto_clibr_output_sdblk_file">Output sdblk File</string>
-    <string name="camera_key_output_sdblk">key_output_sdblk</string>
-    <string name="camera_ev_calibration">EV Calibration</string>
-    <string name="camera_key_ev_calibration">key_ev_calibration</string>
-    <string name="camera_ev_calibr_input_tip">LV(10 based):</string>
-    <string name="auto_clibr_capture_number_range_tip">Capture Number Range is 1~100!</string>
-    <string name="auto_clibr_video_clip_2M">Resize to 2M</string>
-    <string name="auto_clibr_video_clip_2K4K">Resize to 4K2K</string>
-    <string name="auto_clibr_video_clip_center_2M">Crop at center to 2M</string>
-    <string name="auto_clibr_video_frame">Mannul Frame Rate</string>
-    <string name="auto_clibr_video_frame_high">High Frame Rate</string>
-    <string name="auto_clibr_video_frame_low">Low Frame Rate</string>
-    <string name="auto_clibr_video_frame_enable">Frame Rate Enabled</string>
-    <string name="auto_clibr_video_frame_range_tip">Frame Rate Range is 15~30!</string>
-    <string name="auto_clibr_key_mfll_enable">Multi frame enabled</string>
-    <string name="auto_clibr_key_mfll_count">Multi frame count</string>
-    <string name="auto_clibr_mfll_count_range_tip">Mfll Count Range is 1~8!</string>
-    <string name="auto_clibr_camera_3d_sensor">Camera 3D sensor</string>
-    <string name="auto_clibr_verification_awb">AWB Verification</string>
-    <string name="auto_clibr_veri_awb_mtk">MTK</string>
-    <string name="auto_clibr_veri_awb_sensor">SENSOR</string>
-    <string name="auto_clibr_verification_shading">Shading Verification</string>
-    <string name="auto_clibr_veri_shading_sensor">SENSOR</string>
-    <string name="auto_clibr_veri_shading_mtk_1to3">MTK+ONE-THREE</string>
-    <string name="auto_clibr_veri_shading_mtk">MTK</string>
-    <string name="video_hdr">VHDR</string>
-    <string name="multi_pass_nr">Multi Pass NR</string>
-    <string name="vhdr_set_mode">Mode</string>
-    <string name="vhdr_set_ratio">Ratio</string>
-    <string name="vhdr_ratio_range_tip">VHDR Ratio Range is 1000~9999!</string>
-    <string name="auto_clibr_capture_shutter_speed">Shutter speed(ms)</string>
-    <string name="auto_clibr_capture_sensor_gain">Sensor gain(1.0=1024)</string>
-    <string name="capture_shutter_range_tip">Please input right shutter speed!</string>
-    <string name="capture_sensor_range_tip">please input right sensor gain!</string>
-    <string name="auto_clibr_iso_interpolation">ISO interpolation</string>
-    <string name="auto_clibr_iso_inter_ratio">Ratio(%)</string>
-    <string name="auto_clibr_scene_mode">Scene mode</string>
-    <string name="auto_clibr_flash_calibration">Flash Calibration</string>
-    <!-- Auto calibration end -->
-    <!-- camera mclk start -->
-    <string name="desense_camera_txt">MCLOCK Driving Current</string>
-    <string name="desense_camera_name">Driving Current Camera</string>
-    <string name="desense_camera_btn">Switch to EM/Camera</string>
-    <!-- camera mclk end -->
-  <!--NFC part start-->
-	<string name="NFC_Entry_Text">NFC</string>
-	<string name="NFC_Settings_Text">Settings</string>
-	<string name="NFC_Settings_NFC_Text">NFC On/Off:</string>
-	<string name="NFC_Settings_NFC_ON">ON</string>
-	<string name="NFC_Settings_NFC_OFF">OFF</string>
-	<string name="NFC_Settings_NFCDBG_Text">NFC Debug:</string>
-	<string name="NFC_Settings_NFCDBG_ON">ON</string>
-	<string name="NFC_Settings_NFCDBG_OFF">OFF</string>
-	<string name="NFC_Settings_Protocol_Text">Protocol:</string>
-	<string name="NFC_Settings_Protocol_RD">RD</string>
-	<string name="NFC_Settings_Protocol_SW">SW Stack</string>
-	<string name="NFC_Settings_Protocol_OFF">OFF</string>
-	<string name="NFC_Settings_Btn_Set">SET</string>
-	<string name="NFC_Settings_Result_Text">Information</string>
-	<string name="NFC_Settings_Result_Version">Version</string>
-	<string name="NFC_Settings_Result_Version_FW">FW Version</string>
-	<string name="NFC_Settings_Result_Version_HW">HW Version</string>
-	<string name="NFC_Settings_Result_Version_SW">SW Version</string>
-	<string name="NFC_Settings_Result_Support">Supported protocols</string>
-	<string name="NFC_Settings_Result_Support_Reader">Reader Mode</string>
-	<string name="NFC_Settings_Result_Support_Card">Card Mode</string>
-	<string name="NFC_Settings_Result_Support_MifareUL">MifareUL</string>
-	<string name="NFC_Settings_Result_Support_MifareStd">MifareStd</string>
-	<string name="NFC_Settings_Result_Support_ISO14443_4A">ISO14443_4A</string>
-	<string name="NFC_Settings_Result_Support_ISO14443_4B">ISO14443_4B</string>
-	<string name="NFC_Settings_Result_Support_Jewel">Jewel</string>
-	<string name="NFC_Settings_Result_Support_NFC">NFC</string>
-	<string name="NFC_Settings_Result_Support_Felica">Felica</string>
-	<string name="NFC_Settings_Result_Support_ISO15693">ISO15693</string>
-	<string name="NFC_Settings_Result_Support_ALL">ALL</string>
-	<string name="NFC_RawData_Text">Raw Data</string>
-	<string name="NFC_RawData_Item1">[1] NFC TX always on with ASK.</string>
-	<string name="NFC_RawData_Item2">[2] NFC TX always on without ASK.</string>
-	<string name="NFC_RawData_Item3">[3] Always in card emulation mode.</string>
-	<string name="NFC_RawData_Item4">[4] Always in reader mode.</string>
-	<string name="NFC_RawData_Item5">[5] P2P mode test.</string>
-	<string name="NFC_RawData_Item6">[6] SWP self test.</string>
-	<string name="NFC_RawData_Item7">[7] NFC antenna self test.</string>
-	<string name="NFC_RawData_Item8">[8] NFC tag uid read/write-RD.</string>
-	<string name="NFC_RawData_Start">Start</string>
-	<string name="NFC_RawData_Stop">Stop</string>
-	<string name="NFC_RawData_Result">Result:</string>
-	<string name="NFC_RawData_Alwayson_appendix_module">Modulation type</string>
-	<string name="NFC_RawData_Alwayson_appendix_bitrate">Bit rate</string>
-	<string name="NFC_RawData_cardEmulMode_appendix_type">Type</string>
-	<string name="NFC_RawData_cardEmulMode_appendix_protocol">Protocol</string>
-	<string name="NFC_SoftwareStack_Text">Software Stack</string>
-	<string name="NFC_SoftwareStack_RegisterNotification">Register Notification</string>
-	<string name="NFC_SoftwareStack_DiscoveryNotification">Discovery Notification</string>
-	<string name="NFC_SoftwareStack_DN_ISO14443A">ISO14443 A</string>
-	<string name="NFC_SoftwareStack_DN_ISO14443B">ISO14443 B</string>
-	<string name="NFC_SoftwareStack_DN_felica212">felica 212</string>
-	<string name="NFC_SoftwareStack_DN_felica424">felica 424</string>
-	<string name="NFC_SoftwareStack_DN_ISO15693">ISO15693</string>
-	<string name="NFC_SoftwareStack_DN_NFCActive">NFC Active</string>
-	<string name="NFC_SoftwareStack_DN_DCE">Disable card emulation</string>
-	<string name="NFC_SoftwareStack_DN_DisableP2P">Disable P2P Ip target</string>
-	<string name="NFC_SoftwareStack_DN_Duration">Duration(ms):</string>
-	<string name="NFC_SoftwareStack_RegisterNotification_BtnSet">Set</string>
-	<string name="NFC_SoftwareStack_DiscoveryNotification_BtnSet">Scan</string>
-	<string name="NFC_SoftwareStackScan_Text">Tag Detected</string>
-	<string name="NFC_SoftwareStack_Scan_TagDect">Tag Detected</string>
-	<string name="NFC_SoftwareStack_Scan_P2PTarget">P2P Target Detected</string>
-	<string name="NFC_SoftwareStack_Scan_P2PInit">P2P Initiator Detected</string>
-	<string name="NFC_SoftwareStack_Scan_NDEF">Tag NDEF</string>
-	<string name="NFC_SoftwareStack_Scan_CardType">Card Type:</string>
-	<string name="NFC_SoftwareStack_Scan_Uid">Uid:</string>
-	<string name="NFC_SoftwareStack_Scan_Sak">Sak:</string>
-	<string name="NFC_SoftwareStack_Scan_AtqA">AtqA:</string>
-	<string name="NFC_SoftwareStack_Scan_AppData">App Data:</string>
-	<string name="NFC_SoftwareStack_Scan_MaxDataRate">Max Data Rate:</string>
-	<string name="NFC_SoftwareStack_Scan_BtnRead">Read</string>
-	<string name="NFC_SoftwareStack_Scan_BtnWrite">Write</string>
-	<string name="NFC_SoftwareStack_Scan_BtnDisconnected">Disconnect</string>
-	<string name="NFC_SoftwareStack_Scan_BtnRawCommand">Raw Command</string>
-	<string name="NFC_SoftwareStack_Scan_BtnFormat">Format to be NDEF compliant</string>
-	<string name="NFC_SoftwareStackSecure_Text">Secure Info</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_Text">Secure Elements</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_Dect">Secure element detected.</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_Info">Info</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_SetMode_Text">Secure Element SetMode</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_Text">Secure Element 1</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_SetMode_Ele_OFF">OFF</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_SetMode_Ele_Virtual">Virtual</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_SetMode_Ele_Wired">Wired</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_Text">Secure Element 2</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_SetMode_Set">SET</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_EventDect_Text">Secure Element Events Detected</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_EventDect_StartTrans">Start of Transaction</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_EventDect_RF_ON">RF Field ON</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_EventDect_EndTrans">End of Transaction</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_EventDect_RF_OFF">RF Field OFF</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_EventDect_Trans">Transaction</string>
-	<string name="NFC_SoftwareStack_Secure_Ele_EventDect_Conn">Connectivity</string>
-	<string name="NFC_SoftwareStack_P2P_InitDect_Text">P2P Initiator Detected</string>
-	<string name="NFC_SoftwareStack_P2P_InitDect_Send">Send</string>
-	<string name="NFC_SoftwareStack_P2P_InitDect_Recv">Receive</string>
-	<string name="NFC_SoftwareStackScan_Read_Text">Read Tag</string>
-	<string name="NFC_SoftwareStack_Scan_Read_TagType">Tag Type</string>
-	<string name="NFC_SoftwareStack_Scan_Read_URI">URI</string>
-	<string name="NFC_SoftwareStack_Scan_Read_TEXT">TEXT</string>
-	<string name="NFC_SoftwareStack_Scan_Read_TEXT_Lang">Lang:</string>
-	<string name="NFC_SoftwareStack_Scan_Read_SmartPos">Smart Poster</string>
-	<string name="NFC_SoftwareStack_Scan_Read_Other">Other</string>
-	<string name="NFC_SoftwareStack_Scan_Read_Vcard">vCard</string>
-	<string name="NFC_SoftwareStack_Scan_Read_TagInfo">Tag Info</string>
-	<string name="NFC_SoftwareStack_Scan_Read_RecFlags">Record Flags</string>
-	<string name="NFC_SoftwareStack_Scan_Read_RecId">Record ID</string>
-	<string name="NFC_SoftwareStack_Scan_Read_RecTnf">Record Tnf</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PayloadLen">Payload Length</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PayloadHex">Payload(Hex)</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PayloadASCII">Payload(ASCII)</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PageInfo">Page Info</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PageAddr">Page Address(0~15)</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PageDataDesc">Data(Hex)</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PageDataDescBit">0- 1- 2- 3</string>
-	<string name="NFC_SoftwareStack_Scan_Write_PageDataDescBit">0--- 1--- 2--- 3</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PageI">Page I</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PageII">Page II</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PageIII">Page III</string>
-	<string name="NFC_SoftwareStack_Scan_Read_PageIV">Page IV</string>
-	<string name="NFC_SoftwareStack_Scan_PageX">Page ></string>
-	<string name="NFC_SoftwareStack_Scan_Read_SectorInfo_Text">Sector Info</string>
-	<string name="NFC_SoftwareStack_Scan_Read_SectorNo">Sector:</string>
-	<string name="NFC_SoftwareStack_Scan_Read_BlockNo">Block:</string>
-	<string name="NFC_SoftwareStack_Scan_Read_SectorInfo">Data(Hex)</string>
-	<string name="NFC_SoftwareStack_Scan_Read_BtnOK">GO</string>
-
-	<string name="NFC_SoftwareStackScan_Write_Text">Write Tag</string>
-	<string name="NFC_SoftwareStackScan_RawCommand_Text">Raw Command</string>
-	<string name="NFC_SoftwareStack_RawCommand_Desc_Text">Data:(Enter the data to send in HEX format
-		separated by a space characters)</string>
-	<string name="NFC_SoftwareStack_RawCommand_Send">Send</string>
-	<string name="NFC_SoftwareStack_RawCommand_Examp">Example:(Echo Application)</string>
-	<string name="dialog_error_title">Internal Error</string>
-	<string name="dialog_init_nfc_msg">Init NFC Driver error, code is </string>
-	<string name="start_activity_msg">JE, ASSERT(). Please report to RD. Thx.</string>
-	<string name="test_mode_nonselec">Test Mode is not selected.</string>
-	<string name="time_out_title">Timeout</string>
-	<string name="time_out_msg">Operation Timeout.</string>
-	<string name="jni_error_msg">JNI Exception.</string>
-	<string name="regi_notif_nonsele">Register Notification is not selected.</string>
-	<string name="hardware_busy">Hardware busy, try later.</string>
-	<string name="disc_notif_nonsele">Discovery Notification is not selected.</string>
-	<string name="secure_elem_nosupt">Secure Element is not supported.</string>
-	<string name="no_target_detect">Does not detect any target.</string>
-	<string name="scan_msg">Scanning ...</string>
-	<string name="scan_title">"Target Scan"</string>
-	<string name="not_ready_title">NOT READY</string>
-	<string name="not_ready_msg">Tag Detected, Function is still under construction.</string>
-	<string name="addr_need">Address is needed.</string>
-	<string name="block_sector_need">"Block and Sector is needed."</string>
-	<!--NFC part end -->
-
-    <!-- System Update start -->
-    <string name="system_update">System Update</string>
-    <!-- System Update end -->
-
-    <!-- RF de-sense test start -->
-    <string name="rf_desense_tx_test">TX Test</string>
-    <string name="rf_desense_tx_test_gsm">GSM</string>
-    <string name="rf_desense_tx_test_td">TD-SCDMA</string>
-    <string name="rf_desense_tx_test_fd">WCDMA</string>
-    <string name="rf_desense_tx_test_cdma">CDMA</string>
-    <string name="rf_desense_band">Band</string>
-    <string name="rf_desense_modulation">Modulation</string>
-    <string name="rf_desense_modulation_gmsk">GMSK</string>
-    <string name="rf_desense_modulation_edge">EDGE</string>
-    <string name="rf_desense_modulation_1x">1X</string>
-    <string name="rf_desense_modulation_evdo">EVDO</string>
-    <string name="rf_desense_channel">Channel (ARFCN)</string>
-    <string name="rf_desense_channel_3g">Channel (UARFCN)</string>
-    <string name="rf_desense_power">Power Level</string>
-    <string name="rf_desense_afc">AFC</string>
-    <string name="rf_desense_tsc">TSC</string>
-    <string name="rf_desense_pattern">PATTERN</string>
-    <string name="rf_desense_button_stop">STOP</string>
-    <string name="rf_desense_button_pause">PAUSE</string>
-    <string name="rf_desense_button_start">START</string>
-    <string name="rf_desense_dbm">dBm</string>
-    <string name="rf_desense_tx_test_lte">LTE</string>
-    <string name="rf_desense_duplex">Duplex</string>
-    <string name="rf_desense_fdd">FDD</string>
-    <string name="rf_desense_tdd">TDD</string>
-    <string name="rf_desense_bandwidth">UL Bandwidth</string>
-    <string name="rf_desense_freq">UL Freq (100kHz)</string>
-    <string name="rf_desense_tdd_config">TDD Config Index</string>
-    <string name="rf_desense_tdd_special">TDD Special SF Config Index</string>
-    <string name="rf_desense_vrb_start">VRB Start (0~99)</string>
-    <string name="rf_desense_vrb_length">VRB Length (1~100)</string>
-    <string name="rf_desense_mcs">MCS</string>
-    <string name="rf_desense_lte_power">Power Level (dBm) (-50~23)</string>
-    <!-- RF de-sense test end -->
-
-    <string name="hspa_info_title">HSPA Info</string>
-
-    <!-- mcdi setting start -->
-    <string name="mcdi_setting_label">MCDI Setting</string>
-    <string name="mcdi_entry_title">MCDI</string>
-    <string name="mcdi_mode">MCDI Mode</string>
-    <string name="mcdi_disable">Disable MCDI</string>
-    <string name="mcdi_only">MCDI Only</string>
-    <string name="mcdi_sodi">MCDI/SODI</string>
-    <string name="mcdi_set_wake_timer">Set Wakeup Timer</string>
-    <string name="mcdi_timer_disable">Disable Timer</string>
-    <string name="mcdi_wake_timer_tip">ms (15 - 1,000,000)</string>
-    <string name="get_mcdi_setting">Get MCDI Setting</string>
-    <string name="mcdi_start_timer">Start MCDI Timer</string>
-    <string name="mcdi_start_timer_success">"Start Wakeup Timer Success"</string>
-    <string name="mcdi_invalid_timer_val">Invalid Timer Value</string>
-    <!-- mcdi setting end -->
-
-    <!-- DVFS Start -->
-    <string name="dvfs_entry_title">DVFS</string>
-    <string name="cpu_dvfs_label">CPU DVFS</string>
-    <string name="dvfs_cpu_clock">CPU Clock</string>
-    <string name="dvfs_cpu_freq_khz">KHZ</string>
-    <string name="dvfs_set_cpu_freq">Set</string>
-    <string name="dvfs_cpu_governor">CPU Governor</string>
-    <string name="dvfs_governor_choose">Choose Governor</string>
-    <string name="dvfs_invalid_clock">Invalid CPU Clock</string>
-    <string name="dvfs_success">Success</string>
-    <string name="dvfs_invalid_clock_range">Invalid CPU Clock; Min: %1$d Max: %2$d</string>
-    <!-- DVFS End -->
-
-    <!-- PLL CG Start -->
-    <string name="pllcg_title">PLL CG</string>
-    <string name="pllcg_clkmux_id">CLKMUX_ID</string>
-    <string name="pllcg_clkmux">CLKMUX</string>
-    <string name="pllcg_cg_id">CG_ID</string>
-    <string name="pllcg_enable">Enable</string>
-    <string name="pllcg_disable">Disable</string>
-    <string name="pllcg_read_all">Read All</string>
-    <string name="pllcg_all_info">PLL CG All Info</string>
-    <string name="pllcg_no_enough_input">Not Enough Input</string>
-    <!-- PLL CG End -->
-
-    <!-- DCM Start -->
-    <string name="dcm_label">DCM</string>
-    <string name="dcm_apdcm">APDCM</string>
-    <string name="dcm_lpm">LPM</string>
-    <string name="dcm_text_arm">ARM</string>
-    <string name="dcm_text_emi">EMI</string>
-    <string name="dcm_text_infra">INFRA</string>
-    <string name="dcm_text_peri">PERI</string>
-    <string name="dcm_text_misc">MISC</string>
-    <string name="dcm_text_mm">MM</string>
-    <string name="dcm_text_mfg">MFG</string>
-    <string name="dcm_text_0x">0x</string>
-    <string name="dcm_text_read">Read</string>
-    <string name="dcm_text_set">Set</string>
-    <string name="dcm_text_dump_regs">Dump Regs</string>
-    <string name="dcm_text_help">Help/?</string>
-    <string name="dcm_lpm_ref_clk_note">Note: 104M -> Max 20.64s</string>
-    <string name="dcm_lpm_hint_good_dur">Good Dur</string>
-    <string name="dcm_lpm_start">Start</string>
-    <string name="dcm_lpm_stop">Stop</string>
-    <string name="dcm_lpm_total_time">TOTAL TIME</string>
-    <string name="dcm_lpm_low2high">LOW2HIGH</string>
-    <string name="dcm_lpm_high_dur">HIGH DUR</string>
-    <string name="dcm_lpm_longest_high">LONGEST HIGH</string>
-    <string name="dcm_lpm_good_dur">GOOD DUR</string>
-    <string name="dcm_operate_success">Success</string>
-    <string name="dcm_invalid_dcm">Invalid DCM Value</string>
-    <string name="dcm_lpm_invalid_good_dur">Invalid Good Duration</string>
-    <string name="dcm_lpm_operate_error_code">Warning: Error Code = </string>
-    <!-- DCM End -->
-
-    <!-- SleepMode start -->
-    <string name="sleep_mode_6572">Sleep Mode</string>
-    <string name="sleep_mode_setting">Sleep Mode Setting</string>
-    <string name="sleep_mode_disable">Disable</string>
-    <string name="sleep_mode_legacy_sleep">Legacy Sleep</string>
-    <string name="sleep_mode_shutdown">Shut Down</string>
-    <string name="sleep_mode_wakeup_timer">Wakeup Timer</string>
-    <string name="sleep_mode_fuel_gauge">Fuel Gauge</string>
-    <string name="sleep_mode_timer_val_tip">ms(15 - 1,000,000)</string>
-    <string name="sleep_mode_start_timer">Start Sleep Mode Timer</string>
-    <string name="sleep_mode_get_setting">Get Sleep Mode Setting</string>
-    <string name="sleep_mode_invalid_timer_val">Invalid Timer Value</string>
-    <string name="sleep_mode_operate_success">Success</string>
-    <!-- SleepMode end -->
-
-    <!-- Deep Idle Start -->
-    <string name="deep_idle_label">Deep Idle</string>
-    <string name="deep_idle_setting">Deep Idle Setting</string>
-    <string name="deep_idle_mode">Deep Idle Mode</string>
-    <string name="deep_idle_disable_dpidle">Disable Deep Idle</string>
-    <string name="deep_idle_legacy_sleep">Legacy Sleep</string>
-    <string name="deep_idle_dormant_mode">Dormant Mode</string>
-    <string name="deep_idle_power_level">Deep Idle Power Level</string>
-    <string name="deep_idle_power_level_0">Level 0</string>
-    <string name="deep_idle_power_level_1">Level 1</string>
-    <string name="deep_idle_set_wakeup_timer">Set Wakeup Timer</string>
-    <string name="deep_idle_disable_timer">Disable Timer</string>
-    <string name="deep_idle_timer_val_tip">ms (15 - 1,000,000)</string>
-    <string name="deep_idle_start_timer">Start Timer</string>
-    <string name="deep_idle_get_setting">Get Setting</string>
-    <string name="deep_idle_invalid_timer_val">Invalid Timer Value</string>
-    <!-- Deep Idle End -->
-
-    <!-- CMAS Settings Start -->
-    <string name="cmas">CMAS</string>
-    <!-- CMAS Settings End -->
-    <!--BT RX ADC Clock selection start-->
-	<string name="clock_select_turn_on">Turn on the feature</string>
-	<string name="clock_select_turn_off">Trun off the feature</string>
-	<string name="ClockSelectionDes">
-	Descriptions: Switch MODEM ADC sample clock to 64MHz when enter
-	full rx/ double rx to avoid receiving ID on wrong channel. Use
-	32MHz MODEM ADC clock in other conditions.
-	</string>
-	<string name="ClockSelectionTitle">BT RX ADC Clock selection</string>
-	<!--BT RX ADC Clock selection end-->
-
-    <!-- Usb mode switch start -->
-    <string name="uart_usb_switch">UART/USB switch</string>
-    <string name="uart_usb_switch_current">Current USB Port Mode</string>
-    <string name="uart_usb_switch_force_switch">Force switch USB Port Mode to:</string>
-    <string name="uart_usb_switch_usb">USB</string>
-    <string name="uart_usb_switch_uart">UART</string>
-    <string name="uart_usb_switch_unknown">UNKNOWN</string>
-    <string name="uart_usb_switch_notsupport">UART/USB switch not support</string>
-    <string name="uart_usb_switch_geterror">Get USB port mode error</string>
-    <string name="uart_usb_switch_set">Switch set</string>
-    <string name="uart_usb_switch_warning">To switch UART/USB, please make sure UART/USB cable is removed!</string>
-    <string name="uart_usb_switch_dialog_title">Warning</string>
-    <string name="uart_usb_switch_dialog_title_error">Error</string>
-    <string name="uart_usb_switch_dialog_usb_error">Please remove usb cable, and re-entry the screen to switch!</string>
-    <!-- Usb mode switch end -->
-    <!--wfd start -->
-    <string name="wfd_display_toast_time">Display toast time</string>
-    <string name="wfd_display_notif_time">Display notification time</string>
-    <string name="wfd_sqc_tx">Enable sqc info</string>
-    <string name="wfd_settings">WiFi Display</string>
-    <string name="wfd_Done">Done</string>
-    <string name="wfd_quality">Quality Enhancement</string>
-    <string name="wfd_qe_tx">Enable quality enhancement</string>
-    <string name="wfd_acs_tx">Enable auto channel selection</string>
-    <string name="wfd_video_capability">Video Capability</string>
-    <string name="wfd_vdo_max_resolution">Max Resolution</string>
-    <string name="wfd_vdo_720p_1">720p HD(For games)</string>
-    <string name="wfd_vdo_720p_2">720p(60 frames/sec)</string>
-    <string name="wfd_vdo_1080p">1080p FHD(For videos)</string>
-    <string name="wfd_vdo_setting_menu">Enable resolution setting menu</string>
-    <string name="wfd_vdo_full_definition">Full definition</string>
-    <string name="wfd_vdo_high_definition">High definition(60p)</string>
-    <string name="wfd_vdo_normal_definition">General(30p)</string>
-    <string name="wfd_power_saving">Power Saving for Playing Video</string>
-    <string name="wfd_power_saving_style_0">Screen off</string>
-    <string name="wfd_power_saving_style_1">Screen dim</string>
-    <string name="wfd_power_saving_style_2">Display on external display</string>
-    <string name="wfd_power_saving_style_3">No power saving</string>
-    <string name="wfd_power_saving_ext_display">Extension display</string>
-    <string name="wfd_power_delay_time">Delay time</string>
-    <string name="wfd_security">Security</string>
-    <string name="wfd_sec_content">DRM content</string>
-    <string name="wfd_sec_tv_shows_0">TV shows black</string>
-    <string name="wfd_sec_tv_shows_1">TV shows prohibited image</string>
-    <string name="wfd_latency_profiling">Latency Profiling</string>
-    <string name="wfd_lp_capability">Chosen capability</string>
-    <string name="wfd_wifi_info">Wi-Fi info</string>
-    <string name="wfd_latency">WFD latency</string>
-    <string name="wfd_profiling_on">Profiling on screen</string>
-    <string name="wfd_vdo_enable_portrait_resolution">Enable Portrait Resolution</string>
-    <string name="wfd_iot_property">IOT Property</string>   
-    <string name="wfd_iot_scenario_mode">Enable scenario mode</string>   
-    <string name="wfd_iot_drop_dummy">Enable drop dummy-nal</string>
-    <string name="wfd_iot_av_sync">Enable av sync</string>
-    <string name="wfd_iot_set">Set</string>
-    <!--wfd end -->
-
-    <!-- World Phone start -->
-    <string name="world_phone">World Phone</string>
-    <string name="modem_switch_current_value">Current Modem Type:</string>
-    <string name="modem_switch_hint">Select Modem Type:</string>
-    <string name="modem_switch_auto">Auto Switch</string>
-    <string name="modem_switch_set">Set</string>
-    <string name="modem_switch_timer_hint">FDD Timer:</string>
-    <string name="modem_switch_is_wg">Current Modem Type: WG</string>
-    <string name="modem_switch_is_tg">Current Modem Type: TG</string>
-    <string name="modem_switch_is_fdd_csfb">Current Modem Type: FDD CSFB</string>
-    <string name="modem_switch_is_tdd_csfb">Current Modem Type: TDD CSFB</string>
-    <string name="modem_switch_wg">WG Modem</string>
-    <string name="modem_switch_tg">TG Modem</string>
-    <string name="modem_switch_fdd_csfb">FDD CSFB Modem</string>
-    <string name="modem_switch_tdd_csfb">TDD CSFB Modem</string>
-    <!-- World Phone end -->
-
-    <string name="nfc_dta">NFC DTA</string>
-    <!-- Motion Sensor start -->
-	<string name="sensor">Sensor</string>
-	<string name="sensor_data">MSensor</string>
-	<string name="msensor_current_data">Msensor Current Data</string>
-	<string name="msensor_read_file">Get history data from file</string>
-	<string name="psensor_clear_data">Clear Current Data</string>
-	<string name="psensor_get_data">Get One Data</string>
-    <string name="sensor_calibration">Sensor Calibration</string>
-    <string name="sensor_calibration_gsensor">Gsensor Calibration</string>
-    <string name="sensor_calibration_gyroscope">Gyroscope Calibration</string>
-    <string name="sensor_calibration_do_20">Do calibration (20% tolerance)</string>
-    <string name="sensor_calibration_do_40">Do calibration (40% tolerance)</string>
-    <string name="sensor_calibration_clear">Clear calibration</string>
-    <string name="sensor_calibration_note">NOTE: The phone must stay still on a horizontal plane during calibration.</string>
-    <string name="sensor_calibration_current_data_hint">Sensor current data: </string>
-    <string name="sensor_calibration_sensor_data_hint">Sensor calibration data: </string>
-    <string name="sensor_ps">Light/Proximity Sensor</string>
-    <string name="psensor_calibration_select">PS Calibration</string>
-    <string name="psensor_data_collection">PS Data Collection</string>
-    <string name="psensor_calibration">Calibration</string>
-    <string name="psensor_change_threshold">Change Threshold</string>
-    <string name="sensor_ps_calibration_current_data">PS:\nThreshold High:\nThreshold Low:"</string>
-    <string name="sensor_ps_calibration_current_data_format">"PS: %1$d\nThreshold High: %2$d\nThreshold Low: %3$d"</string>
-    <string name="sensor_ps_calibration_min_hint">Put phone on a horizontal plane and click the button.\nNOTE: Donnot cover P-Sensor after button clicked.</string>
-    <string name="sensor_ps_calibration_get_min">Calculate min value</string>
-    <string name="sensor_ps_calibration_min_value">Min value: </string>
-    <string name="sensor_ps_calibration_max_hint">Cover P-Sensor then click the button.</string>
-    <string name="sensor_ps_calibration_get_max">Calculate max value</string>
-    <string name="sensor_ps_calibration_max_value">Max value: </string>
-    <string name="sensor_ps_calibration_do_cali">Do calibration</string>
-    <string name="sensor_ps_calibration_clear_cali">Clear calibration</string>
-    <string name="sensor_ps_calibration_result">Result: </string>
-    <string name="sensor_ps_threshold_high">Threshold High (0~65535): </string>
-    <string name="sensor_ps_threshold_low">Threshold Low (0~65535): </string>
-    <string name="sensor_ps_change_threshold_set">Set</string>
-    <string name="sensor_ps_threshold_prefix">0x</string>
-    <!-- Motion Sensor end -->
-
-    <!-- USB ACM start -->
-    <string name="usbacm">USB ACM</string>
-    <string name="usbacm_open_gs0">Open GS0 port</string>
-    <string name="usbacm_open_gs1">Open GS1 port</string>
-    <string name="usbacm_open_gs2">Open GS2 port</string>
-    <string name="usbacm_open_gs3">Open GS3 port</string>
-    <string name="usbacm_close">Close port</string>
-    <string name="usbacm_open_succeed">Open port succeed</string>
-    <string name="usbacm_open_failed">Open port failed</string>
-    <string name="usbacm_close_succeed">Close port succeed</string>
-    <string name="usbacm_close_failed">Close port failed</string>
-    <!-- USB ACM end -->
-
-    <!-- CT Network Selection Start-->
-    <string name="network_selection">Network Selection</string>
-    <string name="ct_sim_select">Sim Select</string>
-    <string name="ct_sim_1">SIM1</string>
-    <string name="ct_sim_2">SIM2</string>
-    <string name="ct_network_selection">Network Selection</string>
-    <string name="network_selection_label">Set network type</string>
-    <!-- CT Network Selection End -->
-
-    <!-- VIA Saber Start-->
-    <string name="saber">Saber</string>
-    <!-- VIA Saber End-->
-
-    <!-- Device Register start -->
-    <string name="device_register_title">Device Register</string>
-    <string name="device_ct_sms_auto_reg">Send Auto Register Message</string>
-    <string name="device_register">Device Register</string>
-    <string name="ct_device_register">Device Register</string>
-    <!-- Device Register end -->
-
-	<!-- ESN Track start -->
-    <string name="esn_track_title">ESN Track</string>
-    <string name="esn_track_pref_title">Send ESN Track SMS</string>
-
-    <!-- ESN Track end -->
-
-    <string name="modem_warning_title">Modem Warning Setting</string>
-    <string name="modem_warning">Enable Yellow Screen for Modem Warning</string>
-
-    <!-- User2root START -->
-    <string name="user2root_hello">User2Root, Write By MTK, Only use for TEST</string>
-    <string name="user2root">User2Root</string>
-    <string name="Root">Root</string>
-    <string name="User">User</string>
-    <string name="Details">Details</string>
-    <!-- User2root END -->
-    <!-- CW Test-->
-    <string name="cw_test">CW Test</string>
-    <string name="cw_test_cnr">CNR(dB-Hz)</string>
-    <string name="cw_test_clock_drift">Clock Drift(ppm)</string>
-    <string name="cw_test_start">Start</string>
-    <string name="cw_test_stop">Stop</string>
-    <string name="cw_test_dialog_error">Error</string>
-    <string name="cw_test_dialog_error_message">Please open GPS provider</string>
-    <string name="cw_test_times_tx">Test times</string>
-    <string name="cw_test_interval_tx">Test interval(>=3s)</string>
-    <string name="cw_test_cur_times_tx">Current times</string>
-    <string name="cw_test_max_cnr">Max CNR=</string>
-    <string name="cw_test_min_cnr">Min CNR=</string>
-    <!-- CW Test end -->
-
-    <!-- LTE start -->
-    <string name="lte">LTE Config</string>
-    <string name="lte_config">LTE Config</string>
-    <string name="lte_network_mode">LTE Network Mode</string>
-    <string name="lte_network_info">LTE Information</string>
-    <string name="lte_threshold">Threshold configuration:</string>
-    <string name="lte_set">Set</string>
-    <string name="lte_get">Get</string>
-    <string name="lte_timer">Timer configuration:</string>
-    <string name="lte_enable_psdm">Enable Background search triggered by PSDM:</string>
-    <string name="lte_enable">Enable</string>
-    <string name="lte_instant_search">Instantaneously LTE search:</string>
-    <string name="lte_search">Search</string>
-    <string name="lte_threshold_operation">LTE thrsholds AND/OR operation:</string>
-    <string name="lte_4g_rsrp">4G RSRP:</string>
-    <string name="lte_4g_rsrq">4G RSRQ:</string>
-    <string name="lte_4g_relation">4G Relation:</string>
-    <string name="lte_search_timer">Background search parameters:</string>
-    <string name="lte_wait_set">Send AT Command</string>
-    <string name="lte_wait_get">Query Parameters</string>
-    <string name="lte_error_set_invalid_value">Error: Invalid value</string>
-    <string name="lte_error_set_invalid_timer">Error: value must >= 100</string>
-    <string name="lte_error_set_invalid_search_timer">Error: value cannot be 0</string>
-    <string name="lte_error_rsrp_rsrq">Error: RSRP and RSRQ cannot both be 0</string>
-    <string name="lte_error_get_invalid_value">Error: Get invalid data</string>
-    <string name="lte_command_succeed">Succeed</string>
-    <string name="lte_command_failed">Set/Query Failed!</string>
-    <string name="lte_inteval">Time inteval: </string>
-    <string name="lte_send">Send</string>
-    <string name="lte_stop">Stop</string>
-    <string name="lte_close">Close</string>
-    <string name="lte_commands">AT Commands:</string>
-    <string name="lte_tool">AT Command Tool</string>
-    <string name="lte_history">History:</string>
-    <!-- LTE end -->
-
-    <!-- Cip START -->
-    <string name="cip_title">CIP</string>
-    <string name="cip_prop_content">CIP Prop Content</string>
-    <!-- Cip END -->
-    <!-- Modem debug reset start -->
-    <string name="modem_reset_debug">Modem Reset Delay Setting</string>
-    <string name="modem_reset_time">Delay Time</string>
-    <string name="modem_reset_Done">Set</string>
-    <string name="modem_reset_msg">(Suggested delay time: 5s, Max delay time: 9s)</string>
-    <string name="modem_debug_input_error">Please input valid value</string>
-    <string name="modem_debug_sucess">Sucessfull!</string>
-    <!-- Modem debug reset end -->
-
-    <!-- Antenna Test Start -->
-    <string name="antenna_title">Antenna Test</string>
-    <string name="antenna_title_4g">Antenna Test (4G)</string>
-    <string name="antenna_title_3g">Antenna Test (3G FDD)</string>
-    <string name="antenna_hint">Note: For Antenna Test (4G), you must REBOOT to apply your change.</string>
-    <!-- Antenna Test End -->
-
-    <!-- wps nfc start -->
-    <string name="wps_nfc_list">WPS NFC</string>
-    <string name="wps_wifi_enable">Enable WPS Wifi Setting</string>
-    <string name="wps_p2p_enable">Enable WPS P2p Setting</string>
-
-    <string name="wps_nfc">NFC</string>
-    <string name="wps_role">Tag Access</string>
-    <string name="wps_role_enrollee">Enrollee</string>
-    <string name="wps_role_registrar">Registrar</string>
-    <string name="wps_send_broadcast">Send broadcast out</string>
-
-    <string name="wps_pin">Enrollee(Requester)</string>
-    <string name="wps_credential">Registrar(Selector)</string>
-    <string name="wps_get_ap_pin">Get AP PIN</string>
-
-    <string name="wps_get_pin">Get Pin</string>
-    <string name="wps_get_credential">Get Credential</string>
-
-    <string name="wps_share_pin">Share Pin</string>
-    <string name="wps_share_credential">Share Credential</string>
-
-    <string name="wps_write_tag">Nego. Handover</string>
-    <string name="wps_write_pin">Write Pin</string>
-    <string name="wps_write_credential">Write Credential</string>
-
-    <string name="wps_use_different_key">Use different Public Key</string>
-    <string name="wps_nfc_wfa_enable">Enable NFC Wfa Certification mode</string>
-    <string name="wps_dialog_init">Progress</string>
-    <string name="wps_dialog_init_message">Please wait for querying state...</string>
-    <string name="wps_dialog_warn">Warning</string>
-    <string name="wps_dialog_warn_message">Please plug out battery and reboot</string>
-    <string name="wps_dialog_ok">OK</string>
-    <!-- wps nfc end -->
-    <!-- Low power debug -->
-    <string name="low_power_debug">Low Power Protection Debug</string>
-    <string name="low_power_stop_txt">low_battery_protect_stop</string>
-    <string name="low_power_ut_txt">low_battery_protect_ut</string>
-    <!-- Low power debug END -->
-
-    <!-- voice settings start -->
-    <string name="voice_settings_title">Voice Application Settings</string>
-    <string name="voice_settings_unlock">Voice Unlock</string>
-    <string name="voice_settings_wakeup">Voice Wake-up</string>
-    <string name="voice_wakeup_function_switch">Function Switch</string>
-    <string name="voice_wakeup_switch_1">Keyword Recognition</string>
-    <string name="voice_wakeup_switch_2">Keyword + Speaker Recognition</string>
-    <string name="voice_wakeup_recognition">Wake-up Recognition</string>
-    <string name="voice_wakeup_detector">Wake-up Detector</string>
-    <string name="voice_settings_convenient">Convenient</string>
-    <string name="voice_settings_detection_sensitivity">Sensitivity of Detection</string>
-    <string name="voice_settings_clean">Clean</string>
-    <string name="voice_settings_noisy">Noisy</string>
-    <string name="voice_settings_training">Training</string>
-    <string name="voice_settings_testing">Testing</string>
-    <string name="voice_settings_set">Set</string>
-    <string name="voice_settings_detector_par01">Par_01</string>
-    <string name="voice_settings_detector_par02">Par_02</string>
-    <string name="voice_settings_detector_par03">Par_03</string>
-    <string name="voice_settings_detector_par04">Par_04</string>
-    <string name="voice_settings_detector_par05">Par_05</string>
-    <string name="voice_settings_detector_par06">Par_06</string>
-    <string name="voice_settings_detector_par07">Par_07</string>
-    <string name="voice_settings_detector_par08">Par_08</string>
-    <string name="voice_settings_detector_par09">Par_09</string>
-    <string name="voice_settings_detector_par10">Par_10</string>
-    <string name="voice_set_success_msg">Set operation success</string>
-    <string name="voice_set_fail_msg">Fail to do set operation</string>
-    <string name="voice_recorder">Voice Recorder</string>
-    <string name="voice_recorder_start">Start</string>
-    <string name="voice_recorder_stop">Stop</string>
-    <string name="voice_recorder_state_stopped">Stopped</string>
-    <string name="voice_recorder_state_recording">Recording</string>
-    <string name="voice_recorder_male">Male</string>
-    <string name="voice_recorder_female">Female</string>
-    <string name="voice_recorder_directory">. . .</string>
-    <!-- voice setting end -->
-
-    <!-- PTP START -->
-    <string name="ptp_title">Tech</string>
-    <string name="ptp_ptp1">Tech1</string>
-    <string name="ptp_ptp2">Tech2</string>
-    <string name="ptp1_enable_big_core">Enable Tech1 B</string>
-    <string name="ptp1_enable_ptp">Enable Tech</string>
-    <string name="ptp1_enable_little_core">Enable Tech1 L</string>
-    <string name="ptp1_enable_gpu">Enable Tech1 G</string>
-    <string name="ptp1_enable_vcore_ao">Enable Tech1 A</string>
-    <string name="ptp1_enable_vcore_pdn">Enable Tech1 P</string>
-    <string name="ptp2_enable_spark">Enable Tech2 S</string>
-    <string name="ptp2_enable_fbb">Enable Tech2 F</string>
-    <string name="ptp2_status">Tech2 Status:</string>
-    <string name="ptp2_status_unknown">UNKNOWN</string>
-    <!-- PTP END -->
-
-    <!-- IMS start -->
-    <string name="ims_title">IMS</string>
-    <string name="ims_status">IMS registration status:  </string>
-    <string name="ims_pdn_apn_hint">Emergency PDN APN:</string>
-    <string name="ims_pdn_type_hint">Emergency PDN IP Type:</string>
-    <string name="ims_pdn_type_ip">IP</string>
-    <string name="ims_pdn_type_ipv6">IPV6</string>
-    <string name="ims_pdn_type_ipv4v6">IPV4V6</string>
-    <string name="ims_ss_mode_hint">SS Configuration and Query Mode:</string>
-    <string name="ims_ss_mode_xcap">Prefer XCAP</string>
-    <string name="ims_ss_mode_cs">Prefer CS</string>
-    <string name="ims_ss_disable_hint">SS Configuration Disable Mode:</string>
-    <string name="ims_ss_disable_tag">Disable via rule deactivated</string>
-    <string name="ims_ss_disable_del">Disable via delete rule</string>
-    <string name="ims_ss_cf_num_config_hint">Input SS Call Forwarding Number:</string>
-    <string name="ims_pdn_set">Set</string>
-    <string name="ims_category_common">Common</string>
-    <string name="ims_category_registration">Registration</string>
-    <string name="ims_category_call">Call</string>
-    <string name="ims_category_sms">SMS</string>
-    <string name="ims_category_bearer">Bearer</string>
-    <string name="ims_category_ussd">USSD</string>
-    <string name="volte_set_hint">VOLTE Setting</string>
-    <string name="volte_set_off_string">Default setting</string>
-    <string name="volte_set_on_string">CMW500 setting</string>
-    <string name="volte_set_string">Set</string>
-    <string name="volte_set_ims_apn">volte_set_ims_apn</string>
-    <string name="volte_set_check">volte_set_check</string>
-    <string name="ims_category_pcscf">PCSCF</string>
-    <!-- IMS end -->
-
-    <!-- ATCI start -->
-    <string name="ATCI_title">ATCI</string>
-    <string name="ATCI_enable">Enable ATCI Once</string>
-    <string name="ATCI_enable_always">Always enable ATCI</string>
-    <string name="ATCI_disable">Disable ATCI</string>
-    <!-- ATCI end -->
-
-    <!-- Misc start -->
-    <string name="misc_config">Misc Feature Config</string>
-    <!-- Misc end -->
-
-    <!-- AAL Start -->
-    <string name="aal_title">AAL</string>
-    <string name="aal_on">ON</string>
-    <string name="aal_off">OFF</string>
-    <string name="aal_switch_tip">Please reboot the device to make it take effect</string>
-    <!-- AAL End -->
-
-    <!-- Video start -->
-    <string name="video_title">Video</string>
-    <string name="video_clearmotion_customize">ClearMotion Customize</string>
-    <string name="video_clearmotion_demo">ClearMotion Demo</string>
-    <!-- Video end -->
-
-    <!-- Security Status Start -->
-    <string name="security_status">2G/3G/4G Security Status</string>
-    <string name="security_status_2g">2G</string>
-    <string name="security_status_3g">3G</string>
-    <string name="security_status_4g">4G</string>
-    <string name="security_status_2g_cipher">Ciphering Algorithm (CS):</string>
-    <string name="security_status_2g_gprs">GPRS Encryption Algorithm (PS):</string>
-    <string name="security_status_3g_cipher">Ciphering Algorithm:</string>
-    <string name="security_status_3g_integrity">Integrity Algorithm:</string>
-    <string name="security_status_4g_enas_cipher">ENAS Ciphering Algorithm:</string>
-    <string name="security_status_4g_enas_integrity">ENAS Integrity Algorithm:</string>
-    <string name="security_status_4g_errc_cipher">ERRC Ciphering Algorithm:</string>
-    <string name="security_status_4g_errc_integrity">ERRC Integrity Algorithm:</string>
-    <!-- Security Status End -->
-
-    <!-- Antenna Diversity Start -->
-    <string name="antenna_diversity">3G/4G Antenna Diversity</string>
-    <string name="antenna_diversity_3g">3G Serving Cell</string>
-    <string name="antenna_diversity_4g">4G Serving Cell</string>
-    <string name="antenna_diversity_prx">PRX On</string>
-    <string name="antenna_diversity_drx">DRX On</string>
-    <string name="antenna_diversity_prx_drx">PRX/DRX On</string>
-    <string name="antenna_diversity_ant0">ANT0</string>
-    <string name="antenna_diversity_ant1">ANT1</string>
-    <string name="antenna_diversity_combined">Combined</string>
-    <string name="antenna_diversity_rscp">RSCP</string>
-    <string name="antenna_diversity_pssi">RSSI</string>
-    <string name="antenna_diversity_rsrp">RSRP</string>
-    <string name="antenna_diversity_rsrq">RSRQ</string>
-    <string name="antenna_diversity_rssi">RSSI</string>
-    <string name="antenna_diversity_sinr">SINR</string>
-    <string name="antenna_diversity_default">---</string>
-    <!-- Antenna Diversity End -->
-
-    <!-- AMR Start -->
-    <string name="amr_wb">AMR-WB on/off</string>
-    <string name="amr_wb_gsm">Enable GSM AMR-WB</string>
-    <string name="amr_wb_umts">Enable UMTS AMR-WB</string>
-    <!-- AMR End -->
-    <string name="notice_wo_emsvr">The gmo user/userdebug load do not support the item, 
-                     please use eng load or non-gmo user/userdebug load.</string>
-    <string name="sensor_hub_test">Sensor Hub Test</string>
-    <string name="smart_motion">Smart Motion</string>
-    <!-- C2K-IR setting -->
-    <string name="c2k_ir_setting">C2K IR Settings</string>
-    <string name="c2k_ir_setting_mode">C2K IR network mode</string>
-    <string name="c2k_ir_done">Done</string>
-    <string name="c2k_ir_dialog">Notice</string>
-    <string name="c2k_ir_notice">The new selection will take effect after you reboot the device.</string>
-    <string name="c2k_ir_integrity_off">WCDMA Integrity Check Off</string>
-
-    <!-- ViLTE start -->
-    <string name="vilte_title">ViLTE</string>
-    <string name="vilte_ut_support_title">Enable loopback mode</string>
-    <string name="vilte_ut_support_enable">Enable</string>
-    <string name="vilte_ut_support_disable">Disable</string>
-    <string name="vilte_video_fps_title">Set FPS</string>
-    <string name="vilte_video_fps_set">OK</string>
-    <string name="vilte_dump_data_title">Dump data</string>
-    <string name="vilte_source_bitstream_title">Source bitstream</string>
-    <string name="vilte_sink_bitstream_title">Sink bitstream</string>
-    <!-- ViLTE end -->
-    <string name="modem_img_switch">Rainer modem img swich</string>
-    <string name="modem_img_selected">Select modem img</string>
-
-    <!-- SBP start -->
-    <string name="sbp_title">SBP</string>
-    <string name="sbp_id">SBP ID</string>
-    <string name="sbp_feature">SBP feature</string>
-    <string name="sbp_data">SBP feature data</string>
-    <!-- SBP end -->
-
-    <!-- CT Test SIM card start -->
-    <string name="test_card_title">CT Test SIM card for 4G data only</string>
-    <!-- CT Test SIM card end -->
-
-    <!-- U3 PHY Switch start -->
-    <string name="u3_phy_switch_title">U3 PHY Switch</string>
-    <string name="u3_phy_switch_hint">Please unplug USB cable before setting</string>
-    <string name="u3_phy_switch_ap">AP controls U3 PHY to PC</string>
-    <string name="u3_phy_switch_md">MD controls U3 PHY to SIB</string>
-    <string name="u3_phy_switch_set">Set</string>
-    <!-- U3 PHY Switch end -->
-
-    <!-- SMS over SGs start -->
-    <string name="misc_config_sgs">Sms Over Sgs support</string>
-    <!-- SMS over SGs end -->
-
-    <!-- Bypass start -->
-    <string name="success">success</string>
-    <string name="failed">failed</string>
-    <string name="bypass_settings_title">C2K modem setting</string>
-    <string name="usb_mode_bypass_modem">data</string>
-    <string name="usb_mode_bypass_ets">ets</string>
-    <string name="usb_mode_bypass_at">atc</string>
-    <string name="usb_mode_bypass_pcv">pcv</string>
-    <string name="usb_mode_bypass_gps">gps</string>
-    <string name="usb_mode_bypass_all">all</string>
-    <string name="usb_mode_bypass_ets_rndis">ets+rndis</string>
-    <!-- Bypass end -->
-    <!-- SIM WHITELIST -->
-    <string name="mnc_mcc_check_text">mncmcc check</string>
-    <string name="white_list">whitelist:</string>
-    <string name="enable_default">default</string>
-    <string name="enable_text">enable</string>
-    <string name="disable_text">disable</string>
-
-    <!-- Sim Switch start -->
-    <string name="sim_switch">SIM switch</string>
-    <string name="sim_switch_off">off</string>
-    <string name="sim_switch_on">on</string>
-    <!-- Sim Switch end -->
-
-    <!-- MoMs -->
-    <string name="disable_moms_for_cts">Disable MoMs for CTS Test</string>
-    <string name="reenable_moms">Reenable MoMs</string>
-    <string name="moms_title">MoMs</string>
-    <!-- MoMs -->
-    
-    <!-- MD EM Filter Start -->
-    <string name="md_em_filter">MD EM Filter</string>
-    <string name="md_filter_string">Enable All MD EM</string>
-    <string name="enable_md_filter">enable_md_filter</string>
-    <!-- MD EM Filter End -->
-
-    <!-- eHRPD Background Data -->
-    <string name="ehrpd_bg_data">Background Data Select</string>
-    <string name="disable_ehrpd_bg_data">Disable Background Data Select</string>
-    <string name="ehrpd_bg_data_enable">Enable</string>
-    <string name="ehrpd_bg_data_disable">Disable</string>
-    <string name="ehrpd_bg_data_disable_hint">This will close background data, please confirm it!</string>
-    <!-- eHRPD Background Data -->
-</resources>
diff --git a/EngineerMode/res/values/styles.xml b/EngineerMode/res/values/styles.xml
deleted file mode 100644
index f15983e..0000000
--- a/EngineerMode/res/values/styles.xml
+++ /dev/null
@@ -1,73 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-/* //device/apps/Preferences/assets/res/any/styles.xml
-**
-** Copyright 2006, The Android Open Source Project
-**
-** Licensed under the Apache License, Version 2.0 (the "License"); 
-** you may not use this file except in compliance with the License. 
-** You may obtain a copy of the License at 
-**
-**     http://www.apache.org/licenses/LICENSE-2.0 
-**
-** Unless required by applicable law or agreed to in writing, software 
-** distributed under the License is distributed on an "AS IS" BASIS, 
-** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
-** See the License for the specific language governing permissions and 
-** limitations under the License.
-*/
--->
-<resources>
-
-    <style name="info_label">
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:textAppearance">@style/TextAppearance.info_label</item>
-        <item name="android:paddingRight">4dip</item>
-    </style>
-
-    <style name="info_value">
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:textAppearance">@style/TextAppearance.info_value</item>
-    </style>
-
-    <style name="info_layout">
-        <item name="android:orientation">vertical</item>
-        <item name="android:paddingLeft">10dip</item>
-        <item name="android:paddingTop">10dip</item>
-        <item name="android:paddingRight">10dip</item>
-        <item name="android:paddingBottom">10dip</item>
-        <item name="android:layout_width">fill_parent</item>
-        <item name="android:layout_height">fill_parent</item>
-    </style>
-
-    <style name="form_value">
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_width">wrap_content</item>
-    </style>
-
-    <style name="entry_layout">
-        <item name="android:orientation">horizontal</item>
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-    </style>
-
-    <style name="TextAppearance" parent="android:TextAppearance"></style>
-
-    <style name="TextAppearance.info_label">
-        <item name="android:textSize">14sp</item>
-        <item name="android:textStyle">bold</item>
-    </style>
-
-    <style name="TextAppearance.info_small">
-        <item name="android:textSize">12sp</item>
-        <item name="android:textStyle">normal</item>
-    </style>
-
-    <style name="TextAppearance.info_value">
-        <item name="android:textSize">14sp</item>
-        <item name="android:textStyle">normal</item>
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/EngineerMode/res/xml/connectivity.xml b/EngineerMode/res/xml/connectivity.xml
deleted file mode 100644
index 12e2588..0000000
--- a/EngineerMode/res/xml/connectivity.xml
+++ /dev/null
@@ -1,76 +0,0 @@
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-	<Preference android:key="bluetooth" android:title="@string/Bluetooth"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.bluetooth.BtList" />
-	</Preference>
-    <Preference android:key="cds_information" android:title="@string/cds_information"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.connectivity"
-			android:targetClass="com.mediatek.connectivity.CdsInfoActivity" />
-	</Preference>
-	<Preference android:key="fm_receiver" android:title="@string/fm_receiver"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.android.fmradio" android:targetClass="com.android.fmradio.FmEmActivity" />
-	</Preference>
-	<Preference android:key="fm_transmitter" android:title="@string/fm_transmitter"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.FMTransmitter"
-			android:targetClass="com.mediatek.FMTransmitter.FMTxEMActivity" />
-	</Preference>
-
-	<Preference android:key="hqanfc" android:title="@string/nfc_6605"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-                        android:targetClass="com.mediatek.engineermode.hqanfc.NfcMainPage" />
-	</Preference>
-	<Preference android:key="nfc" android:title="@string/nfc_3110"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode" 
-                        android:targetClass="com.mediatek.engineermode.nfc.NfcEntry" />
-	</Preference>
-    <Preference android:key="nfc_dta" android:title="@string/nfc_dta"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.nfc.dta"
-                       android:targetClass="com.mediatek.nfc.dta.DeviceTestApp" />
-    </Preference>
-	<!-- <Preference android:key="wifi" android:title="@string/wifi"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.wifi.WiFi" />
-	</Preference>
-
-	<Preference android:key="wifi_ctia" android:title="@string/wifi_ctia"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.wifi.WifiTestSetting" />
-	</Preference> -->
-	<Preference android:key="wfd_settings" android:title="@string/wfd_settings"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.wfdsettings.WfdList" />
-	</Preference>
-   <Preference android:key="wps_nfc_list" android:title="@string/wps_nfc_list"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.wps.WpsNfcList" />
-    </Preference>
-    <Preference android:key="bt_profile" android:title="@string/BT_profile"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.gattdemo"
-            android:targetClass="com.mediatek.gattdemo.MainActivity" />
-    </Preference>
-</PreferenceScreen>
diff --git a/EngineerMode/res/xml/gsm_umts_options.xml b/EngineerMode/res/xml/gsm_umts_options.xml
deleted file mode 100644
index 302feb1..0000000
--- a/EngineerMode/res/xml/gsm_umts_options.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen
-  xmlns:android="http://schemas.android.com/apk/res/android">
-
-      <CheckBoxPreference
-        android:key="data_prefer_key"
-        android:title="@string/pch_data_prefer_title"
-        android:summary="@string/pch_data_prefer_summary"
-        android:persistent="false"/>
-</PreferenceScreen>
diff --git a/EngineerMode/res/xml/hardware_testing.xml b/EngineerMode/res/xml/hardware_testing.xml
deleted file mode 100644
index e3b2097..0000000
--- a/EngineerMode/res/xml/hardware_testing.xml
+++ /dev/null
@@ -1,211 +0,0 @@
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-
-	<Preference android:key="audio" android:title="@string/audio"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.audio.Audio" />
-	</Preference>
-
-	<!-- <Preference android:key="camera" android:title="@string/camera"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.camera.Camera" />
-	</Preference>
-
-	<Preference android:key="camera89" android:title="@string/camera"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.cameranew.AutoCalibration" />
-	</Preference>
-        <Preference android:key="camera_desence" android:title="@string/desense_camera_name"
-               android:persistent="false">
-               <intent android:action="android.intent.action.MAIN"
-                       android:targetPackage="com.mediatek.engineermode"
-                       android:targetClass="com.mediatek.engineermode.drivingcurrent.CameraMclk" />
-        </Preference>	
-	
-	<Preference android:key="cpu_stress_test" android:title="@string/cpu_stress_test"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.cpustress.CpuStressTest" />
-	</Preference>
-		
-	<Preference android:key="dcm" android:title="@string/dcm_label"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.dcm.DcmList" />
-	</Preference> -->
-
-	<Preference android:key="deep_idle" android:title="@string/deep_idle_label"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.deepidle.DeepIdleSettingActivity" />
-	</Preference>
-	
-	<Preference android:key="cpu_dvfs" android:title="@string/dvfs_entry_title"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.dvfs.CpuDvfs" />
-	</Preference>
-	
-	<Preference android:key="mcdi_setting" android:title="@string/mcdi_entry_title"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.mcdi.McdiSetting" />
-	</Preference>
-
-	<Preference android:key="pll_cg" android:title="@string/pllcg_title"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.pllcg.PllCgActivity" />
-	</Preference>
-	
-	<Preference android:key="sleep_mode" android:title="@string/sleep_mode_6572"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.sleepmode.SleepModeActivity" />
-	</Preference>
-	
-	<Preference android:key="device_manager" android:title="@string/device_manager"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.devicemgr.DeviceMgr" />
-	</Preference>
-
-	<Preference android:key="device_register" android:title="@string/device_register"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.DeviceRegister" />
-	</Preference>
-
-	<Preference android:key="esn_track" android:title="@string/esn_track_title"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.EsnTrack" />
-	</Preference>
-
-	<Preference android:key="de_sense" android:title="@string/de_sense"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.desense.DesenseActivity" />
-	</Preference>
-
-    <Preference android:key="non_sleep_mode" android:title="@string/non_sleep_mode"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.nonsleep.NonSleepMode" />
-    </Preference>
-	<Preference android:key="io" android:title="@string/io"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.io.IoList" />
-	</Preference>
-	
-	<Preference android:key="matv" android:title="@string/matv"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.matv"
-			android:targetClass="com.mediatek.matv.Matv" />
-	</Preference>	
-
-	<Preference android:key="memory" android:title="@string/memory"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.memory.Memory" />
-	</Preference>
-	
-	<Preference android:key="power" android:title="@string/power"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.power.Power" />
-	</Preference>
-
-	<Preference android:key="sd_card_test" android:title="@string/sd_card_test"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.sdtest.SDLogActivity" />
-	</Preference>
-
-
-	<Preference android:key="touchscreen" android:title="@string/touchscreen"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.touchscreen.TouchScreenList" />
-	</Preference>
-	
-	
-	<Preference android:key="usb" android:title="@string/usb"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.usb.UsbList" />
-	</Preference>
-
-	<Preference android:key="usbmode_switch" android:title="@string/uart_usb_switch"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.UartUsbSwitch" />
-	</Preference>
-
-	<Preference android:key="sensor" android:title="@string/sensor"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.sensor.Sensor" />
-	</Preference>
-	<Preference android:key="sensor_hub_test" android:title="@string/sensor_hub_test"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.sensorhub.settings"
-			android:targetClass="com.mediatek.sensorhub.settings.SensorHubSettings" />
-	</Preference>
-    <Preference android:key="smart_motion" android:title="@string/smart_motion"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.smartmotion"
-			android:targetClass="com.mediatek.smartmotion.MainActivity" />
-	</Preference>
-	<Preference android:key="ptp_tech" android:title="@string/ptp_title"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.ptp.PtpList" />
-	</Preference>
-
-    <Preference android:key="aal" android:title="@string/aal_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.AalSetting" />
-    </Preference>
-    
-    <Preference android:key="video" android:title="@string/video_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.video.VideoActivity" />
-    </Preference>
-
-</PreferenceScreen>
diff --git a/EngineerMode/res/xml/hqa_nfc_main.xml b/EngineerMode/res/xml/hqa_nfc_main.xml
deleted file mode 100644
index 831be5f..0000000
--- a/EngineerMode/res/xml/hqa_nfc_main.xml
+++ /dev/null
@@ -1,82 +0,0 @@
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <!-- always_reader_mode ui ok -->
-	<Preference android:key="always_reader_mode" android:title="@string/hqa_nfc_always_reader_mode"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.ReaderMode" />
-	</Preference>
-	<!-- always_p2p_mode ui ok -->
-	<Preference android:key="always_p2p_mode" android:title="@string/hqa_nfc_always_p2p_mode"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.PeerToPeerMode" />
-	</Preference>
-	<!-- always_card_emulation_mode ui ok -->
-	<Preference android:key="always_card_emulation_mode"
-		android:title="@string/hqa_nfc_always_card_emulation_mode"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.CardEmulationMode" />
-	</Preference>
-	<!-- polling_loop_mode ui not dev -->
-	<Preference android:key="polling_loop_mode" android:title="@string/hqa_nfc_polling_loop_mode"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.PollingLoopMode" />
-	</Preference>
-	<!-- tx_carrier_signal ui ok -->
-	<Preference android:key="tx_carrier_signal" android:title="@string/hqa_nfc_tx_carrier_signal"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.TxCarrierSignal" />
-	</Preference>
-	<!-- virtual_card_function ui ok -->
-	<Preference android:key="virtual_card_function"
-		android:title="@string/hqa_nfc_virtual_card_function"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.VirtualCardFunction" />
-	</Preference>
-	<!-- pnfc_command ui ok -->
-	<Preference android:key="pnfc_command" android:title="@string/hqa_nfc_pnfc_command"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.PnfcCommand" />
-	</Preference>
-	<!-- version_query ui ok -->
-	<Preference android:key="version_query" android:title="@string/hqa_nfc_version_query"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.VersionQuery" />
-	</Preference>
-	<!-- option ui ok -->
-	<Preference android:key="option" android:title="@string/hqa_nfc_option"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.Option" />
-	</Preference>
-	<!-- loopback_test ui ok -->
-	<Preference android:key="loopback_test" android:title="@string/hqa_nfc_loopback_test"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.LoopBackTest" />
-	</Preference>
-	<!-- swp_test ui ok -->
-	<Preference android:key="swp_test" android:title="@string/hqa_nfc_swp_test"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.hqanfc.SwpTest" />
-	</Preference>
-</PreferenceScreen>
\ No newline at end of file
diff --git a/EngineerMode/res/xml/ims_config.xml b/EngineerMode/res/xml/ims_config.xml
deleted file mode 100644
index 2125a87..0000000
--- a/EngineerMode/res/xml/ims_config.xml
+++ /dev/null
@@ -1,1464 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<settings>
-    <setting>
-        <label>local_port</label>
-        <category>Registration</category>
-        <default>5060</default>
-    </setting>
-    <setting>
-        <label>ipsec_local_port_start</label>
-        <category>Registration</category>
-        <default>50000</default>
-    </setting>
-    <setting>
-        <label>ipsec_local_port_range</label>
-        <category>Registration</category>
-        <default>50</default>
-    </setting>
-    <setting>
-        <label>rtp_rtcp_local_port_start</label>
-        <category>Call</category>
-        <default>40000</default>
-    </setting>
-    <setting>
-        <label>rtp_rtcp_local_port_range</label>
-        <category>Call</category>
-        <default>5000</default>
-    </setting>
-    <setting>
-        <label>rtcp_interval</label>
-        <category>Call</category>
-        <default>5000</default>
-    </setting>
-    <setting>
-        <label>register_expiry</label>
-        <category>Registration</category>
-        <default>600000</default>
-    </setting>
-    <setting>
-        <label>UA_reg_t1_timer</label>
-        <category>Registration</category>
-        <default>500</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>UA_reg_t2_timer</label>
-        <category>Registration</category>
-        <default>4000</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>UA_reg_t4_timer</label>
-        <category>Registration</category>
-        <default>5000</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>UA_reg_f_timer</label>
-        <category>Registration</category>
-        <default>100</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>UA_call_conf_subtimer</label>
-        <category>Call</category>
-        <default>3600</default>
-        <suffix>sec</suffix>
-    </setting>
-    <setting>
-        <label>UA_call_session_timer</label>
-        <category>Call</category>
-        <default>60000</default>
-        <suffix>sec</suffix>
-    </setting>
-    <setting>
-        <label>UA_call_amr_fmt_variant</label>
-        <category>Call</category>
-        <type>3</type>
-        <default>4112</default>
-        <options>
-            <option name="VOLTE_CALL_AMR_NB_FMT_VARIANT_OCTET" value="1" />
-            <option name="VOLTE_CALL_AMR_NB_FMT_VARIANT_EFFEC" value="16" />
-            <option name="VOLTE_CALL_AMR_WB_FMT_VARIANT_OCTET" value="256" />
-            <option name="VOLTE_CALL_AMR_WB_FMT_VARIANT_EFFEC" value="4096" />
-        </options>
-    </setting>
-    <setting>
-        <label>VoLTE_Setting_SIP_Force_Use_UDP</label>
-        <category>Registration</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>VoLTE_Setting_SIP_TCP_On_Demand</label>
-        <category>Registration</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>VoLTE_Setting_SIP_TCP_MTU_Size</label>
-        <category>Registration</category>
-        <default>1300</default>
-    </setting>
-    <setting>
-        <label>UA_call_session_min_se</label>
-        <category>Call</category>
-        <default>1800</default>
-        <suffix>sec</suffix>
-    </setting>
-    <setting>
-        <label>UA_call_rej_code</label>
-        <category>Call</category>
-        <default>486</default>
-    </setting>
-    <setting>
-        <label>UA_call_no_resource_code</label>
-        <category>Call</category>
-        <default>480</default>
-    </setting>
-    <setting>
-        <label>UA_call_rej_media_code</label>
-        <category>Call</category>
-        <default>488</default>
-    </setting>
-    <setting>
-        <label>UA_call_rej_by_user_code</label>
-        <category>Call</category>
-        <default>486</default>
-    </setting>
-    <setting>
-        <label>operator_code</label>
-        <category>Common</category>
-        <type>2</type>
-        <default>0</default>
-        <options>
-            <option name="VoLTE_Operator_Default" value="0" />
-            <option name="VoLTE_Operator_CMCC" value="1" />
-            <option name="VoLTE_Operator_CU" value="2" />
-            <option name="VoLTE_Operator_Orange" value="3" />
-            <option name="VoLTE_Operator_TMOEU" value="5" />
-            <option name="VoLTE_Operator_VDF" value="6" />
-            <option name="VoLTE_Operator_ATT" value="7" />
-            <option name="VoLTE_Operator_TMOUS" value="8" />
-            <option name="VoLTE_Operator_CT" value="9" />
-            <option name="VoLTE_Operator_Tier2" value="10" />
-            <option name="VoLTE_Operator_H3G" value="11" />
-            <option name="VoLTE_Operator_Vzw" value="12" />
-            <option name="VoLTE_Operator_Telefonica" value="15" />
-            <option name="VoLTE_Operator_EE" value="16" />
-            <option name="VoLTE_Operator_Docomo" value="17" />
-            <option name="VoLTE_Operator_RJIL" value="18" />
-            <option name="VoLTE_Operator_TelStra" value="19" />
-            <option name="VoLTE_Operator_Sprint" value="20" />
-            <option name="VoLTE_Operator_SoftBank" value="50" />
-            <option name="VoLTE_Operator_CSL" value="100" />
-            <option name="VoLTE_Operator_PCCW" value="101" />
-            <option name="VoLTE_Operator_SMT" value="102" />
-            <option name="VoLTE_Operator_SingTel" value="103" />
-            <option name="VoLTE_Operator_Starhub" value="104" />
-            <option name="VoLTE_Operator_AMX" value="105" />
-            <option name="VoLTE_Operator_3HK" value="106" />
-            <option name="VoLTE_Operator_SFR" value="107" />
-            <option name="VoLTE_Operator_TWN" value="108" />
-            <option name="VoLTE_Operator_CHT" value="109" />
-            <option name="VoLTE_Operator_FET" value="110" />
-            <option name="VoLTE_Operator_Telcel" value="112" />
-            <option name="VoLTE_Operator_BeeLine" value="113" />
-            <option name="VoLTE_Operator_KT" value="114" />
-            <option name="VoLTE_Operator_SKT" value="115" />
-            <option name="VoLTE_Operator_Uplus" value="116" />
-            <option name="VoLTE_Operator_Smartfren" value="117" />
-            <option name="VoLTE_Operator_YTL" value="118" />
-            <option name="VoLTE_Operator_Natcom" value="119" />
-            <option name="VoLTE_Operator_Claro" value="120" />
-            <option name="VoLTE_Operator_Bell" value="121" />
-            <option name="VoLTE_Operator_Ais" value="122" />
-            <option name="VoLTE_Operator_CMCC_2" value="123" />
-            <option name="VoLTE_Operator_APTG" value="124" />
-            <option name="VoLTE_Operator_Dtac" value="125" />
-            <option name="VoLTE_Operator_Turkey_Avea" value="126" />
-            <option name="VoLTE_Operator_Megafon" value="127" />
-            <option name="VoLTE_Operator_DNA" value="128" />
-            <option name="VoLTE_Operator_KDDI" value="129" />
-            <option name="VoLTE_Operator_ERICSSON_IMS_IWLAN" value="1001" />
-            <option name="VoLTE_Operator_Nokia" value="1002" />
-            <option name="VoLTE_Operator_8475" value="16384" />
-            <option name="VoLTE_Operator_Ericsson" value="16385" />
-            <option name="VoLTE_Operator_CMW500" value="16386" />
-            <option name="VoLTE_Operator_PCT" value="16387" />
-            <option name="VoLTE_Operator_NSN" value="20480" />
-            <option name="VoLTE_Operator_FREE_TEST" value="65248" />
-        </options>
-    </setting>
-    <setting>
-        <label>sms_rspcode</label>
-        <category>SMS</category>
-        <default>200</default>
-    </setting>
-    <setting>
-        <label>UA_g711_ptime</label>
-        <category>Call</category>
-        <default>20</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>UA_g726_ptime</label>
-        <category>Call</category>
-        <default>20</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>UA_call_codec_order1</label>
-        <category>Call</category>
-        <default>2</default>
-    </setting>
-    <setting>
-        <label>UA_call_codec_order2</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>UA_call_codec_order3</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>UA_call_def_max_ptime</label>
-        <category>Call</category>
-        <default>80</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>UA_call_def_ptime</label>
-        <category>Call</category>
-        <default>20</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>UA_call_amr_pt</label>
-        <category>Call</category>
-        <default>97</default>
-    </setting>
-    <setting>
-        <label>UA_call_amr_wb_pt</label>
-        <category>Call</category>
-        <default>98</default>
-    </setting>
-    <setting>
-        <label>UA_call_h264_pt</label>
-        <category>Call</category>
-        <default>99</default>
-    </setting>
-    <setting>
-        <label>UA_call_g729_annexb</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>UA_call_g729_ptime</label>
-        <category>Call</category>
-        <default>20</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>UA_call_priority</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>UA_call_privacy</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>UA_call_session_flag</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>UA_call_tel_evt</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>UA_call_tel_evt_pt</label>
-        <category>Call</category>
-        <default>101</default>
-    </setting>
-    <setting>
-        <label>UA_call_precondition</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>early_media</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>mwi_license</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>UA_reg_keep_alive</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>Security</label>
-        <category>Registration</category>
-        <type>2</type>
-        <default>1</default>
-        <options>
-            <option name="None" value="0"/>
-            <option name="IPSec" value="1"/>
-        </options>
-    </setting>
-    <setting>
-        <label>Authentication</label>
-        <category>Registration</category>
-        <type>2</type>
-        <default>1</default>
-        <options>
-            <option name="MD5" value="1"/>
-            <option name="AKAv1_MD5" value="0"/>
-            <option name="AKAv2_MD5" value="2"/>
-        </options>
-    </setting>
-    <setting>
-        <label>UA_reg_uri_with_port</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>UA_reg_ipsec_algo</label>
-        <category>Registration</category>
-        <type>3</type>
-        <default>3</default>
-        <options>
-            <option name="NULL+MD5" value="1" />
-            <option name="NULL+SHA1" value="2" />
-            <option name="3DES+MD5" value="4" />
-            <option name="3DES+SHA1" value="8" />
-            <option name="AES+MD5" value="16" />
-            <option name="AES+SHA1" value="32" />
-        </options>
-    </setting>
-    <setting>
-        <label>UA_reg_specific_ipsec_algo</label>
-        <category>Registration</category>
-        <type>3</type>
-        <default>3</default>
-        <options>
-            <option name="NULL+MD5" value="1" />
-            <option name="NULL+SHA1" value="2" />
-            <option name="3DES+MD5" value="4" />
-            <option name="3DES+SHA1" value="8" />
-            <option name="AES+MD5" value="16" />
-            <option name="AES+SHA1" value="32" />
-        </options>
-    </setting>
-    <setting>
-        <label>user_agent</label>
-        <category>Common</category>
-        <type>1</type>
-        <default>VoLTE UA</default>
-    </setting>
-    <setting>
-        <label>UA_call_amr_mode_set</label>
-        <category>Call</category>
-        <type>1</type>
-        <default>0,1,2,3,4,5,6,7</default>
-    </setting>
-    <setting>
-        <label>UA_call_amr_wb_mode_set</label>
-        <category>Call</category>
-        <type>1</type>
-        <default>0,1,2,3,4,5,6,7,8</default>
-    </setting>
-    <setting>
-        <label>UA_reg_auth_name</label>
-        <category>Registration</category>
-        <type>1</type>
-        <default>+18860000042@srnims3.srnnam.nsn-rdnet.net</default>
-    </setting>
-    <setting>
-        <label>UA_reg_auth_password</label>
-        <category>Registration</category>
-        <type>1</type>
-        <default>ims123456</default>
-    </setting>
-    <setting>
-        <label>UA_conf_factory_uri</label>
-        <category>Call</category>
-        <type>1</type>
-        <default></default>
-    </setting>
-    <setting>
-        <label>resource_retain_timer</label>
-        <category>Bearer</category>
-        <default>3000</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>emergency_pdn_retain_timer</label>
-        <category>Bearer</category>
-        <default>10000</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>auto_re_reg_timer</label>
-        <category>Registration</category>
-        <default>5000</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>poweroff_ims_dereg_timer</label>
-        <category>Registration</category>
-        <default>5</default>
-        <suffix>sec</suffix>
-    </setting>
-    <setting>
-        <label>emergency_reg_retain_timer</label>
-        <category>Registration</category>
-        <default>10000</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>set_pcscf_discovery_via_nas</label>
-        <category>Bearer</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>force_user_account_by_manual</label>
-        <category>Registration</category>
-        <type>2</type>
-        <default>0</default>
-        <options>
-            <option name="From SIM Card" value="0" />
-            <option name="Manual" value="1" />
-        </options>
-    </setting>
-    <setting>
-        <label>set_ue_im_cn_signaling_flag</label>
-        <category>Bearer</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>ims_signaling_qci</label>
-        <category>Bearer</category>
-        <default>5</default>
-    </setting>
-    <setting>
-        <label>ims_voice_qci</label>
-        <category>Bearer</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>ims_video_qci</label>
-        <category>Bearer</category>
-        <default>2</default>
-    </setting>
-    <setting>
-        <label>ims_v4v6_preference</label>
-        <category>Bearer</category>
-        <type>2</type>
-        <default>3</default>
-        <options>
-            <option name="v4_only" value="0" />
-            <option name="v6_only" value="1" />
-            <option name="v4_prefer" value="2" />
-            <option name="v6_prefer" value="3" />
-        </options>
-    </setting>
-    <setting>
-        <label>sms_support</label>
-        <category>Common</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>voice_support</label>
-        <category>Common</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>video_over_ps_support</label>
-        <category>Common</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>resource_allocation_mode</label>
-        <category>Bearer</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>default_psismsc</label>
-        <category>SMS</category>
-        <type>1</type>
-        <default>sip:smsc@ims.mnc001.mcc001.3gppnetwork.org</default>
-    </setting>
-    <setting>
-        <label>manual_impi</label>
-        <category>Registration</category>
-        <type>1</type>
-        <default>310886000000042@ims.mnc688.mcc310.3gppnetwork.org</default>
-    </setting>
-    <setting>
-        <label>manual_impu</label>
-        <category>Registration</category>
-        <type>1</type>
-        <default>sip:+18860000042@srnims3.srnnam.nsn-rdnet.net</default>
-    </setting>
-    <setting>
-        <label>manual_domain_name</label>
-        <category>Registration</category>
-        <type>1</type>
-        <default>srnims3.srnnam.nsn-rdnet.net</default>
-    </setting>
-    <setting>
-        <label>dtx_enable</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>silence_dropcall_threshold</label>
-        <category>Call</category>
-        <default>30000</default>
-        <suffix>ms</suffix>
-    </setting>
-    <setting>
-        <label>jbm_load_params_enable</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>jbm_prebuf_len</label>
-        <category>Call</category>
-        <default>3</default>
-    </setting>
-    <setting>
-        <label>jbm_jitter_max_depth</label>
-        <category>Call</category>
-        <default>10</default>
-    </setting>
-    <setting>
-        <label>jbm_jitter_full_offset</label>
-        <category>Call</category>
-        <default>4</default>
-    </setting>
-    <setting>
-        <label>ltecsr_common_para0</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>ltecsr_common_para1</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>ltecsr_common_para2</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>ltecsr_common_para3</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>ltecsr_common_para4</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>ims_roaming_mode</label>
-        <category>Registration</category>
-        <type>2</type>
-        <default>1</default>
-        <options>
-            <option name="Disable" value="0" />
-            <option name="Enable" value="1" />
-            <option name="Auto" value="2" />
-        </options>
-    </setting>
-    <setting>
-        <label>ipv6_zero_compression</label>
-        <category>Common</category>
-        <type>2</type>
-        <default>0</default>
-        <options>
-            <option name="Off" value="0" />
-            <option name="On" value="1" />
-        </options>
-    </setting>
-    <setting>
-        <label>USSD Support</label>
-        <category>USSD</category>
-        <type>2</type>
-        <default>1</default>
-        <options>
-            <option name="On" value="1" />
-            <option name="Off" value="0" />
-        </options>
-    </setting>
-    <setting>
-        <label>USSD NW Timeout</label>
-        <category>USSD</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>USSD Setup Timeout</label>
-        <category>USSD</category>
-        <default>0</default>
-    </setting>
-
-    <setting>
-        <label>mncmcc check</label>
-        <category>Common</category>
-        <type>2</type>
-        <default>0</default>
-        <options>
-            <option name="Off" value="0" />
-            <option name="On" value="1" />
-        </options>
-    </setting>
-    <setting>
-        <label>white list</label>
-        <category>Common</category>
-    </setting>
-    <setting>
-        <label>Setting Rule:&lt;digit of list num&gt;&lt;list num&gt;&lt;mnc_len&gt;&lt;MNC&gt;&lt;mcc_len&gt;&lt;MCC&gt;...</label>
-        <category>Common</category>
-        <type>0</type>
-    </setting>
-    <setting>
-        <label>authorization_with_algo</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>auto_re_reg_base_timer</label>
-        <category>Registration</category>
-        <default>30000</default>
-    </setting>
-    <setting>
-        <label>auto_re_reg_max_timer</label>
-        <category>Registration</category>
-        <default>180000</default>
-    </setting>
-    <setting>
-        <label>call_id_with_host_inReg</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>check_msisdn</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>contact_with_accesstype</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>contact_with_expires</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>contact_with_mobility</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>contact_with_regid</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>contact_with_transport</label>
-        <category>Registration</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>contact_with_username</label>
-        <category>Registration</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>contact_with_video_feature_tag_in_subscribe</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>de_subscribe</label>
-        <category>Registration</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>dereg_clear_ipsec</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>dereg_reset_tcp_client</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>emergency_use_imsi</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>ems_mode_ind</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>ims_reg_allowed_at_23g</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>initial_reg_without_pani</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>ipsec_fail_allowed</label>
-        <category>Registration</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>keep_alive_mode</label>
-        <category>Registration</category>
-        <type>2</type>
-        <default>0</default>
-        <options>
-            <option name="Keep_Alive_Transsaction" value="0"/>
-            <option name="Keep_Alive_Connection" value="1"/>
-            <option name="Keep_Alive_Connection_Call_Control" value="2"/>
-        </options>
-    </setting>
-    <setting>
-        <label>local_sip_protocol_type</label>
-        <category>Registration</category>
-        <type>2</type>
-        <default>0</default>
-        <options>
-            <option name="UDP" value="0"/>
-            <option name="TCP" value="1"/>
-        </options>
-    </setting>
-    <setting>
-        <label>not_auto_reg_403</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>notify_sms_notify_done</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>poweroff_detach_timer</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>reg_after_nw_dereg_60s</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>reg_gruu_support</label>
-        <category>Registration</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>reg_route_hdr</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>rereg_23g4</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>rereg_in_oos_end</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>rereg_in_rat_change</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>resub_23g4</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>retry_interval_after_403</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>stop_reg_md_lower_layer_err</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>sub_contact_with_sip_instance</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>support_throttling_algo</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>tcp_connect_max_time_invite</label>
-        <category>Registration</category>
-        <default>10</default>
-    </setting>
-    <setting>
-        <label>treg</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>try_next_pcscf</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>UA_reg_retry_base_time</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>UA_reg_retry_max_time</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>use_specific_ipsec_algo</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>use_udp_on_tcp_fail</label>
-        <category>Registration</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>via_uri_with_default_port</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>via_without_rport</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>VoLTE_Setting_SIP_TCP_MSS</label>
-        <category>Registration</category>
-        <default>1200</default>
-    </setting>
-    <setting>
-        <label>wfc_with_plani</label>
-        <category>Registration</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>add_3gpp_ims_in_Accept</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>add_no_fork</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>add_precondition_in_hold_unhold_sdp</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>add_rtcp_port_into_sdp</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>add_sdp_in_180_for_non_precond</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>always_use_sip_uri_for_mo_call</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>always_use_UPDATE_for_prcd</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>attempt_reg_when_receive403</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>audio_dscp</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>audio_priority</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>bcsfb_feature_enable</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>call_callend_timer_timeout</label>
-        <category>Call</category>
-        <default>10</default>
-    </setting>
-    <setting>
-        <label>call_id_with_host_inCall</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>call_refreshcall_timer_expire</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>call_ringback_timer_timeout</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>call_ringing_timer_timeout</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>call_tcall_timer_timeout</label>
-        <category>Call</category>
-        <default>10</default>
-    </setting>
-    <setting>
-        <label>check_conference_subscribe</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>check_contact_380</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>check_reason_phrase</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>conf_participant_not_subscribe</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>conf_sub_timer_timeout</label>
-        <category>Call</category>
-        <default>3600</default>
-    </setting>
-    <setting>
-        <label>conference_subscribe_timing</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>contact_with_username_inCall</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>disable_conf_call_prcd</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>ecc_session_timer_enable</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>emergency_call_learning_support</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>follow_nw_ims_vops_support</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>general_amr_nb_wb</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>home_detect_emergency_call_support</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>join_send_bye</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>merge_need_swap</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>merge_send_bye</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>mo_invite_to_bw_cnf_timer_timeout</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>no_auto_retry_for_dcm_mo_call</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>no_auto_retry_for_mo_call</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>not_add_SDP_in_OPTIONS</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>oir_privacy_to_header</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>pcscf_error_when663</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>refer_dialog_to_server</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>register_cap_whenever</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>reject_1w_if_1A1H</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>reject_code_in23G</label>
-        <category>Call</category>
-        <default>503</default>
-    </setting>
-    <setting>
-        <label>reject_mtcall_by_vops</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>reject_mtcall_when_vilte</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>rel_conf_if_no_participant</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>send_183_when_prcd_none</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>send_refer_to_peer</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>sendrecv_before_prcd</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>set_rtcp_0</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>set_strength_mandatory</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>set_zero_cell_id_in_wifi</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>sip_dscp</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>sip_priority</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>subscribe_dialog_to_server</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>terminal_based_cw</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>TMO_specific_SDP</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>UA_call_amr_oct_pt</label>
-        <category>Call</category>
-        <default>108</default>
-    </setting>
-    <setting>
-        <label>UA_call_amr_open_pt</label>
-        <category>Call</category>
-        <default>106</default>
-    </setting>
-    <setting>
-        <label>UA_call_amr_wb_oct_pt</label>
-        <category>Call</category>
-        <default>110</default>
-    </setting>
-    <setting>
-        <label>UA_call_h264_pt2</label>
-        <category>Call</category>
-        <default>100</default>
-    </setting>
-    <setting>
-        <label>UA_call_h265_pt</label>
-        <category>Call</category>
-        <default>101</default>
-    </setting>
-    <setting>
-        <label>UA_call_h265_pt2</label>
-        <category>Call</category>
-        <default>102</default>
-    </setting>
-    <setting>
-        <label>UA_call_mo_invite_to_bw_cnf_time</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>UA_call_tel_evt_wb_pt</label>
-        <category>Call</category>
-        <default>105</default>
-    </setting>
-    <setting>
-        <label>UA_icsi_1</label>
-        <category>Call</category>
-        <type>1</type>
-        <default>urn:urn-7:3gpp-service.ims.icsi.mmtel</default>
-    </setting>
-    <setting>
-        <label>UA_icsi_2</label>
-        <category>Call</category>
-        <type>1</type>
-        <default>urn:urn-7:3gpp-service.ims.icsi.mmtel</default>
-    </setting>
-    <setting>
-        <label>UA_icsi_3</label>
-        <category>Call</category>
-        <type>1</type>
-        <default>urn:urn-7:3gpp-service.ims.icsi.mmtel</default>
-    </setting>
-    <setting>
-        <label>UA_icsi_4</label>
-        <category>Call</category>
-        <type>1</type>
-        <default>urn:urn-7:3gpp-service.ims.icsi.mmtel</default>
-    </setting>
-    <setting>
-        <label>UA_phone_context</label>
-        <category>Call</category>
-        <type>1</type>
-        <default></default>
-    </setting>
-    <setting>
-        <label>UA_phone_context_associated_impu</label>
-        <category>Call</category>
-        <type>1</type>
-        <default></default>
-    </setting>
-    <setting>
-        <label>uri_type</label>
-        <category>Call</category>
-        <default>3</default>
-    </setting>
-    <setting>
-        <label>use_eps_prefix_in_phone_context</label>
-        <category>Call</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>use_org_sdp_for_invite_without_sdp</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>video_dscp</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>video_priority</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>wait_cancel_in_srvcc_end</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>waiting_487_for_cancel_timer_timeout</label>
-        <category>Call</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>waiting_mt_cnf_timer_timeout</label>
-        <category>Call</category>
-        <default>30</default>
-    </setting>
-    <setting>
-        <label>when_stop_tcall</label>
-        <category>Call</category>
-        <default>101</default>
-    </setting>
-    <setting>
-        <label>add_no_fork_in_SMS</label>
-        <category>SMS</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>add_user_phone</label>
-        <category>SMS</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>force_psi_scheme_to_tel</label>
-        <category>SMS</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>imsi_reged_disable_sms</label>
-        <category>SMS</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>mo_retry_after_504</label>
-        <category>SMS</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>nsn_specific</label>
-        <category>SMS</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>psismsc_from_user</label>
-        <category>SMS</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>send_timerF_expiry</label>
-        <category>SMS</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>update_call_id_with_host</label>
-        <category>SMS</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>check_nw_im_cn_signaling_flag</label>
-        <category>Bearer</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>dedicated_fallback_support</label>
-        <category>Bearer</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>default_fallback_support</label>
-        <category>Bearer</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>icsi_resource_allocation_mode_1</label>
-        <category>Bearer</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>icsi_resource_allocation_mode_2</label>
-        <category>Bearer</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>icsi_resource_allocation_mode_3</label>
-        <category>Bearer</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>icsi_resource_allocation_mode_4</label>
-        <category>Bearer</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>ignore_media_qos_check</label>
-        <category>Bearer</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>ignore_sgn_qci_check</label>
-        <category>Bearer</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>imcb_setting_string</label>
-        <category>Bearer</category>
-        <type>1</type>
-        <default>""</default>
-    </setting>
-    <setting>
-        <label>not_acquire_audio_rtcp</label>
-        <category>Bearer</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>not_acquire_video_rtcp</label>
-        <category>Bearer</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>voice_bearer_ctrl</label>
-        <category>Bearer</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>default_pcscf_address_is_v4</label>
-        <category>PCSCF</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>pcscf_home_policy_list</label>
-        <category>PCSCF</category>
-        <type>1</type>
-        <default>0,2,1,4,5,3,6,0</default>
-    </setting>
-    <setting>
-        <label>pcscf_manual_list</label>
-        <category>PCSCF</category>
-        <type>1</type>
-        <default>192.168.0.1</default>
-    </setting>
-    <setting>
-        <label>pcscf_manual_support</label>
-        <category>PCSCF</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>pcscf_mo_support</label>
-        <category>PCSCF</category>
-        <default>0</default>
-    </setting>
-    <setting>
-        <label>pcscf_pco_renew_support</label>
-        <category>PCSCF</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>pcscf_port_number</label>
-        <category>PCSCF</category>
-        <default>5060</default>
-    </setting>
-    <setting>
-        <label>pcscf_priority_list</label>
-        <category>PCSCF</category>
-        <type>2</type>
-        <default>1</default>
-        <options>
-            <option name="NONE" value="0" />
-            <option name="DHCP" value="1" />
-            <option name="PCO" value="2" />
-            <option name="SIM" value="3" />
-            <option name="MO" value="4" />
-            <option name="MANUAL" value="5" />
-        </options>
-    </setting>
-    <setting>
-        <label>pcscf_sim_support</label>
-        <category>PCSCF</category>
-        <default>1</default>
-    </setting>
-    <setting>
-        <label>pcscf_visit_policy_list</label>
-        <category>PCSCF</category>
-        <type>1</type>
-        <default>0,2,1,4,5,3,6,0</default>
-    </setting>
-    <setting>
-        <label>restore_pcscf</label>
-        <category>PCSCF</category>
-        <default>0</default>
-    </setting>
-</settings>
diff --git a/EngineerMode/res/xml/location.xml b/EngineerMode/res/xml/location.xml
deleted file mode 100644
index 8f0e686..0000000
--- a/EngineerMode/res/xml/location.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-
-	<Preference android:key="location_basedservice" android:title="@string/location_basedservice"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.lbs.em2.ui"
-			android:targetClass="com.mediatek.lbs.em2.ui.MyTabActivity" />
-	</Preference>
-
-	<Preference android:key="fused_location_provider"
-		android:title="@string/fused_location_provider" android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.flp.em"
-			android:targetClass="com.mediatek.flp.em.FlpTabActivity" />
-	</Preference>
-	<Preference android:key="auto_dialer" android:title="@string/auto_dialer"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.example"
-			android:targetClass="com.example.AutoDialerActivity" />
-	</Preference>
-
-	<Preference android:key="ygps" android:title="@string/YGPS"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.ygps"
-			android:targetClass="com.mediatek.ygps.YgpsActivity" />
-	</Preference>
-
-	<Preference android:key="cw_test" android:title="@string/cw_test"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.cwtest.CWTest" />
-	</Preference>
-</PreferenceScreen>
diff --git a/EngineerMode/res/xml/log_and_debugging.xml b/EngineerMode/res/xml/log_and_debugging.xml
deleted file mode 100644
index d835aa7..0000000
--- a/EngineerMode/res/xml/log_and_debugging.xml
+++ /dev/null
@@ -1,58 +0,0 @@
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-	<Preference android:key="battery_log" android:title="@string/BatteryLog"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.BatteryLog" />
-	</Preference>
-
-	<Preference android:key="debug_utils" android:title="@string/debug_utils"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.mtklogger"
-			android:targetClass="com.mediatek.mtklogger.debugtool.DebugToolboxActivity" />
-	</Preference>
-
-<!--	<Preference android:key="modem_warning" android:title="@string/modem_warning_title"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.modemwarning.ModemWarning" />
-	</Preference>
-
-
-	<Preference android:key="log2server" android:title="@string/log2server"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.log2server.DialogSwitch" />
-	</Preference>
--->
-	<Preference android:key="mtk_logger" android:title="@string/mtk_logger"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.mtklogger"
-			android:targetClass="com.mediatek.mtklogger.MainActivity" />
-	</Preference>
-
-	<Preference android:key="ext_md_logger" android:title="@string/ext_md_logger"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.extmdlogger"
-			android:targetClass="com.mediatek.extmdlogger.ExtMDLoggerTest" />
-	</Preference>
-
-    <!-- <Preference android:key="atci" android:title="@string/ATCI_title"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.atci.atciActivity" />
-	</Preference>	
-	<Preference android:key="modem_debug" android:title="@string/modem_reset_debug"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.modemdebug.ModemDebug" />
-	</Preference> -->
-</PreferenceScreen>
diff --git a/EngineerMode/res/xml/misc.xml b/EngineerMode/res/xml/misc.xml
deleted file mode 100644
index 532b9f7..0000000
--- a/EngineerMode/res/xml/misc.xml
+++ /dev/null
@@ -1,3 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-</PreferenceScreen>
diff --git a/EngineerMode/res/xml/modem_warning.xml b/EngineerMode/res/xml/modem_warning.xml
deleted file mode 100644
index 497d05f..0000000
--- a/EngineerMode/res/xml/modem_warning.xml
+++ /dev/null
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-      <CheckBoxPreference
-        android:key="modem_warning_key"
-        android:summary="@string/modem_warning"
-        android:persistent="false"/>
-
-</PreferenceScreen>
-
diff --git a/EngineerMode/res/xml/network_mode_settings.xml b/EngineerMode/res/xml/network_mode_settings.xml
deleted file mode 100644
index 98788cf..0000000
--- a/EngineerMode/res/xml/network_mode_settings.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-     Copyright (C) 2008 The Android Open Source Project
-
-     Licensed under the Apache License, Version 2.0 (the "License");
-     you may not use this file except in compliance with the License.
-     You may obtain a copy of the License at
-
-          http://www.apache.org/licenses/LICENSE-2.0
-
-     Unless required by applicable law or agreed to in writing, software
-     distributed under the License is distributed on an "AS IS" BASIS,
-     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-     See the License for the specific language governing permissions and
-     limitations under the License.
--->
-
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:settings="http://schemas.android.com/apk/res/com.android.settings"
-    android:title="@string/gemini_gsm_umts_network_preferences_title" >
-
-    <com.mediatek.engineermode.digitalstandard.NetworkModePreference
-        android:dialogTitle="@string/gemini_gsm_umts_network_preferences_dialogtitle"
-        android:entries="@array/gsm_umts_network_preferences_choices"
-        android:entryValues="@array/gsm_umts_network_preferences_values"
-        android:key="gsm_umts_preferred_network_mode_key"
-        android:summary="@string/gemini_gsm_umts_network_preferneces_summary"
-        android:title="@string/gemini_gsm_umts_network_preferences_title" />
-
-</PreferenceScreen>
\ No newline at end of file
diff --git a/EngineerMode/res/xml/others.xml b/EngineerMode/res/xml/others.xml
deleted file mode 100644
index 0727e9f..0000000
--- a/EngineerMode/res/xml/others.xml
+++ /dev/null
@@ -1,103 +0,0 @@
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-	<!-- <Preference android:key="swla" android:title="@string/swla"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.swla.SwlaActivity" />
-	</Preference> -->
-
-
-	<Preference android:key="thermal" android:title="@string/thermal"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.thermalmanager"
-			android:targetClass="com.mediatek.thermalmanager.MTKThermalManagerActivity" />
-	</Preference>
-	
-<!-- 	<Preference android:key="ConfigureCheck" android:title="@string/configure_check" -->
-<!-- 		android:persistent="false"> -->
-<!-- 		<intent android:action="android.intent.action.MAIN" -->
-<!-- 		        android:targetPackage="com.mediatek.configurecheck" -->
-<!-- 		        android:targetClass="com.mediatek.configurecheck.MainActivity" /> -->
-<!-- 	</Preference> -->
-	<Preference android:key="ConfigureCheck2_Send_Test" android:title="@string/configure_check2_send_test"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-		        android:targetPackage="com.mediatek.configurecheck2"
-		        android:targetClass="com.mediatek.configurecheck2.CMCCSendTestActivity" />
-	</Preference>
-
-	<Preference android:key="ConfigureCheck2_Self_Test" android:title="@string/configure_check2_self_test"
-		android:persistent="false">
-		<intent
-		        android:targetPackage="com.mediatek.configurecheck2"
-		        android:targetClass="com.mediatek.configurecheck2.ManSelfTestActivity" />
-	</Preference>
-
-	<Preference android:key="CT_ConfigureCheck" android:title="@string/CT_configure_check"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-                android:targetPackage="com.mediatek.configurecheck"
-                android:targetClass="com.mediatek.configurecheck.ManSelfTestActivity" />
-    </Preference>
-
-	<Preference android:key="cmcc_ftprecheck" android:title="@string/cmcc_ftprecheck"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-                android:targetPackage="com.mediatek.ftprecheck"
-                android:targetClass="com.mediatek.ftprecheck.FTPreCheckActivity" />
-    </Preference>
-
-    <Preference android:key="mdml_sample" android:title="@string/mdml_sample"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-                android:targetPackage="com.mediatek.mdmlsample"
-                android:targetClass="com.mediatek.mdmlsample.MainActivity" />
-    </Preference>
-	<Preference android:key="system_update" android:title="@string/system_update"
-	    android:persistent="false">
-	    <intent android:action="com.mediatek.systemupdate.UPDATE_TYPE_OPTION"
-			android:targetPackage="com.mediatek.systemupdate"
-			android:targetClass="com.mediatek.systemupdate.UpdateOption" />
-	</Preference>
-
-	<!-- <Preference android:key="usbacm" android:title="@string/usbacm"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.usbacm.UsbAcm" />
-	</Preference> -->
-
-	<Preference android:key="saber" android:title="@string/saber"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.viatelecom.saber"
-			android:targetClass="com.viatelecom.saber.VIASaberActivity" />
-	</Preference>
-
-    <Preference android:key="cip" android:title="@string/cip_title"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.cip.CipPropContentActivity" />
-	</Preference>
-   <!--  <Preference android:key="voice_settings" android:title="@string/voice_settings_title"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.voicesettings.VoiceList" />
-	</Preference> -->
-	<Preference android:key="usb_checker_enabler" android:title="@string/usb_checker_enabler"
-		android:persistent="false">
-		<intent android:targetPackage="com.mediatek.usbchecker"
-		        android:targetClass="com.mediatek.usbchecker.EnablerActivity" />
-	</Preference>
-
-    <Preference android:key="moms" android:title="@string/moms_title"
-		android:persistent="false">
-		<intent android:action="android.intent.action.MAIN"
-			android:targetPackage="com.mediatek.engineermode"
-			android:targetClass="com.mediatek.engineermode.moms.MoMs" />
-	</Preference>
-
-</PreferenceScreen>
diff --git a/EngineerMode/res/xml/sim_management.xml b/EngineerMode/res/xml/sim_management.xml
deleted file mode 100644
index 0317986..0000000
--- a/EngineerMode/res/xml/sim_management.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:settings="http://schemas.android.com/apk/res/com.mediatek.engineermode" >
-
-    <PreferenceCategory
-        android:key="general_settings"
-        android:title="@string/gemini_general_settings_title" >
-        <com.mediatek.engineermode.digitalstandard.NetworkModePreference
-            android:dialogTitle="@string/gemini_gsm_umts_network_preferences_dialogtitle"
-            android:entries="@array/gsm_umts_network_preferences_choices"
-            android:entryValues="@array/gsm_umts_network_preferences_values"
-            android:key="gsm_umts_preferred_network_mode_key"
-            android:summary="@string/gemini_gsm_umts_network_preferneces_summary"
-            android:title="@string/gemini_gsm_umts_network_preferences_title" />
-
-        <PreferenceScreen
-            android:key="gsm_umts_preferred_network_mode_gemini_key"
-            android:summary="@string/gemini_gsm_umts_network_preferneces_summary"
-            android:title="@string/gemini_gsm_umts_network_preferences_title" >
-            <intent
-                android:action="android.intent.action.MAIN"
-                android:targetClass="com.mediatek.engineermode.digitalstandard.NetworkModeSettings"
-                android:targetPackage="com.mediatek.engineermode" />
-        </PreferenceScreen>
-    </PreferenceCategory>
-
-</PreferenceScreen>
\ No newline at end of file
diff --git a/EngineerMode/res/xml/telephony.xml b/EngineerMode/res/xml/telephony.xml
deleted file mode 100644
index 82f5127..0000000
--- a/EngineerMode/res/xml/telephony.xml
+++ /dev/null
@@ -1,288 +0,0 @@
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <Preference android:key="security_status" android:title="@string/security_status"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.networkinfo.SecurityStatus" />
-    </Preference>
-
-    <Preference android:key="antenna_diversity" android:title="@string/antenna_diversity"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.networkinfo.AntennaDiversity" />
-    </Preference>
-
-    <Preference android:key="auto_answer" android:title="@string/auto_answer"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.AutoAnswer" />
-    </Preference>
-
-    <Preference android:key="antenna" android:title="@string/antenna_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.antenna.AntennaActivity" />
-    </Preference>
-
-    <!-- <Preference android:key="amr_wb" android:title="@string/amr_wb"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.amrwb.AmrWbActivity" />
-    </Preference> -->
-
-    <Preference android:key="bandmode" android:title="@string/bandmode"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.bandselect.BandModeSimSelect" />
-    </Preference>
-
-    <Preference android:key="bypass" android:title="@string/bypass_settings_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.bypass.BypassSettings" />
-    </Preference>
-
-    <Preference android:key="te_dev_tool" android:title="@string/te_devtool_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mtk.telephony"
-            android:targetClass="com.mtk.telephony.BSPTelephonyDevToolActivity" />
-    </Preference>
-
-    <!-- <Preference android:key="cfu" android:title="@string/cfu"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.cfu.CfuActivity" />
-    </Preference> -->
-
-    <Preference android:key="cmas" android:title="@string/cmas"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermodecmas"
-            android:targetClass="com.mediatek.engineermodecmas.CmasSettings" />
-    </Preference>
-
-    <Preference android:key="test_card" android:title="@string/test_card_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.testcard.TestCardActivity" />
-    </Preference>
-
-    <Preference android:key="ims" android:title="@string/ims_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.ims.ImsActivity" />
-    </Preference>
-
-    <Preference android:key="lte_config" android:title="@string/lte_config"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.lte.LteConfiguration" />
-    </Preference>
-
-    <Preference android:key="lte_network_mode" android:title="@string/lte_network_mode"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.lte.LteNetworkMode" />
-    </Preference>
-
-    <!-- <Preference android:key="lte_network_info" android:title="@string/lte_network_info"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.lte.LteNetworkInfo" />
-    </Preference>
-
-    <Preference android:key="lte_tool" android:title="@string/lte_tool"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.lte.CommandTool" />
-    </Preference>
-
-    <Preference android:key="dualtalk_network_info" android:title="@string/dualtalk_network_info"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.dualtalknetworkinfo.NetworkInfoSimType" />
-    </Preference> -->
-
-    <!--
-    <Preference android:key="repeat_call_test" android:title="@string/repeat_call_test"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.phone.PhoneAutoTestTool" />
-    </Preference>
-    -->
-
-    <Preference android:key="misc_config" android:title="@string/misc_config"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.misc.MiscConfig" />
-    </Preference>
-
-    <!-- <Preference android:key="modem_test" android:title="@string/modem_test"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.modemtest.ModemTestActivity" />
-    </Preference> -->
-
-    <Preference android:key="network_selection" android:title="@string/network_selection"
-         android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-              android:targetPackage="com.mediatek.engineermode"
-              android:targetClass="com.mediatek.engineermode.networkselection.SimSelect"/>
-    </Preference>
-
-    <Preference android:key="cdma_network_select" android:title="@string/cdma_network_select"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.cdmanetworkselect.NetworkSelectActivity" />
-    </Preference>
-
-    <Preference android:key="network_select" android:title="@string/network_select"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.networkselect.NetworkSelectActivity" />
-    </Preference>
-
-    <Preference android:key="dualtalk_network_select" android:title="@string/network_select"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.networkselect.NetworkSelectSimType" />
-    </Preference>
-
-    <!-- <Preference android:key="network_info" android:title="@string/network_info"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.networkinfo.NetworkInfoSimType" />
-    </Preference> -->
-
-    <Preference android:key="gprs" android:title="@string/GPRS"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.GPRS" />
-    </Preference>
-
-    <!-- <Preference android:key="hspa_info" android:title="@string/hspa_info_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.hspainfo.HspaInfo" />
-    </Preference> -->
-
-    <Preference android:key="mobile_data_prefer" android:title="@string/pch_data_prefer_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.MobileDataPreferred" />
-    </Preference>
-    <Preference android:key="fast_dormancy" android:title="@string/fast_dormancy"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.fastdormancy.FastDormancy" />
-    </Preference>
-
-    <!-- <Preference android:key="rf_desense_test" android:title="@string/rf_desense_test"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.rfdesense.RfDesenseTest" />
-    </Preference> -->
-
-    <Preference android:key="sbp" android:title="@string/sbp_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.sbp.SbpActivity" />
-    </Preference>
-
-    <Preference android:key="simme_lock1" android:title="@string/simme_lock"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.android.simmelock"
-            android:targetClass="com.android.simmelock.LockList" />
-    </Preference>
-
-    <Preference android:key="simme_lock2" android:title="@string/simme_lock"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.android.simmelock"
-            android:targetClass="com.android.simmelock.TabLockList" />
-    </Preference>
-
-    <Preference android:key="u3_phy" android:title="@string/u3_phy_switch_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.u3phy.U3PhySwitch" />
-    </Preference>
-
-    <Preference android:key="vilte" android:title="@string/vilte_title"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.vilte.VilteActivity" />
-    </Preference>
-
-    <!-- <Preference android:key="modem_switch" android:title="@string/world_phone"
-	android:persistent="false">
-	<intent android:action="android.intent.action.MAIN"
-		android:targetPackage="com.mediatek.engineermode"
-		android:targetClass="com.mediatek.engineermode.worldphone.ModemSwitch" />
-    </Preference> -->
-    <Preference android:key="c2k_ir_settings" android:title="@string/c2k_ir_setting"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.irsettings.IRSettings" />
-    </Preference>
-    
-    <Preference android:key="sim_switch" android:title="@string/sim_switch"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.simswitch.SimSwitch" />
-    </Preference>
-
-    <!-- <Preference android:key="ehrpd_bg_data" android:title="@string/ehrpd_bg_data"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.ehrpdbgdata.EhrpdBgData" />
-    </Preference>
-
-    <Preference android:key="md_em_filter" android:title="@string/md_em_filter"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.modemfilter.ModemFilterActivity" />
-    </Preference>
-    <Preference android:key="ehrpd_bg_data" android:title="@string/ehrpd_bg_data"
-        android:persistent="false">
-        <intent android:action="android.intent.action.MAIN"
-            android:targetPackage="com.mediatek.engineermode"
-            android:targetClass="com.mediatek.engineermode.ehrpdbgdata.EhrpdBgData" />
-    </Preference> -->
-</PreferenceScreen>
diff --git a/EngineerMode/res/xml/test_card.xml b/EngineerMode/res/xml/test_card.xml
deleted file mode 100644
index 2ce1118..0000000
--- a/EngineerMode/res/xml/test_card.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
-    <CheckBoxPreference
-        android:key="key_test_card"
-        android:summary="@string/test_card_title"
-        android:persistent="false"/>
-</PreferenceScreen>
diff --git a/EngineerMode/res/xml/wifi_test_setting.xml b/EngineerMode/res/xml/wifi_test_setting.xml
deleted file mode 100644
index e64697f..0000000
--- a/EngineerMode/res/xml/wifi_test_setting.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android" >
-
-    <Preference
-        android:key="mtk_wifi_ctia_test"
-        android:persistent="false"
-        android:summary="@string/wifi_ctia_test_summary"
-        android:title="@string/wifi_ctia_test" >
-    </Preference>
-
-</PreferenceScreen>
\ No newline at end of file
diff --git a/EngineerMode/src/com/mediatek/engineermode/AalSetting.java b/EngineerMode/src/com/mediatek/engineermode/AalSetting.java
deleted file mode 100644
index 68dd6fa..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/AalSetting.java
+++ /dev/null
@@ -1,69 +0,0 @@
-package com.mediatek.engineermode;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.os.SystemProperties;
-import android.view.View;
-import android.widget.Toast;
-import android.widget.ToggleButton;
-
-/**
- * AAL Switch main activity.
- * @author mtk
- */
-public class AalSetting extends Activity
-        implements android.view.View.OnClickListener {
-    private static final String TAG = "AalSettingTAG";
-    private static final String SP_KEY_AAL_STATE = "persist.sys.aal.function";
-    private static final String AAL_STATE_DISABLED = "0";
-    private static final String AAL_STATE_ENABLED = "6";
-    private static final String AAL_STATE_NOEXIST = "NOEXIST";
-
-    private ToggleButton mTbtnSwitch = null;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.aal_setting);
-        mTbtnSwitch = (ToggleButton) findViewById(R.id.aal_state_tbtn);
-        String state = getAalState();
-        if (AAL_STATE_ENABLED.equals(state)
-                || AAL_STATE_NOEXIST.equals(state)) {
-            mTbtnSwitch.setText(getString(R.string.aal_on));
-            mTbtnSwitch.setChecked(true);
-        }
-        mTbtnSwitch.setOnClickListener(this);
-    }
-
-    private String getAalState() {
-        String value = SystemProperties.get(SP_KEY_AAL_STATE);
-        String state = value;
-        if (value == null || value.length() == 0) {
-            return AAL_STATE_NOEXIST;
-        }
-        state = state.trim();
-        return state;
-    }
-
-    private int switchAal(boolean enabled) {
-        Elog.d(TAG, "switchAal:" + enabled);
-        String value = AAL_STATE_DISABLED;
-        if (enabled) {
-            value = AAL_STATE_ENABLED;
-        }
-        SystemProperties.set(SP_KEY_AAL_STATE, value);
-        if (value.equals(getAalState())) {
-            return 0;
-        }
-        Elog.d(TAG, "fail to set aal system properties");
-        return -1;
-    }
-
-    @Override
-    public void onClick(View view) {
-        if (view == mTbtnSwitch) {
-            switchAal(mTbtnSwitch.isChecked());
-            Toast.makeText(this, R.string.aal_switch_tip, Toast.LENGTH_SHORT).show();
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/AutoAnswer.java b/EngineerMode/src/com/mediatek/engineermode/AutoAnswer.java
deleted file mode 100644
index d7476b9..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/AutoAnswer.java
+++ /dev/null
@@ -1,106 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-import android.app.Activity;
-import android.content.SharedPreferences;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.os.SystemProperties;
-
-
-public class AutoAnswer extends Activity implements OnClickListener {
-
-    private static final String TAG = "EM-AutoAnswer";
-    private static final String SHREDPRE_NAME = "AutoAnswer";
-    private static final String BUTTON_FLAG = "flag";
-    private static final String AUTO_ANSWER_PROPERTY = "persist.auto_answer";
-    private Button mSetButton;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.auto_answer);
-        mSetButton = (Button) findViewById(R.id.autoanswer_switch);
-
-        mSetButton.setOnClickListener(this);
-
-        final SharedPreferences autoAnswerSh = getSharedPreferences(SHREDPRE_NAME,
-                MODE_PRIVATE);
-        final boolean buttonFlag = autoAnswerSh.getBoolean(BUTTON_FLAG, false);
-        final String sFlag = SystemProperties.get(AUTO_ANSWER_PROPERTY, "0");
-        Log.v("@M_" + TAG, "onCreate flag is :" + buttonFlag + "sFlag is:" + sFlag);
-
-        if (buttonFlag) {
-            mSetButton.setText(R.string.autoanswer_disable);
-        } else {
-            mSetButton.setText(R.string.autoanswer_enable);
-        }
-    }
-
-    @Override
-    public void onClick(final View arg0) {
-        if (arg0 == mSetButton) {
-            if ((getString(R.string.autoanswer_enable))
-                    .equals(mSetButton.getText())) {
-                mSetButton.setText(R.string.autoanswer_disable);
-                writeSharedPreferences(true);
-                SystemProperties.set(AUTO_ANSWER_PROPERTY, "1");
-            } else {
-                mSetButton.setText(R.string.autoanswer_enable);
-                writeSharedPreferences(false);
-                SystemProperties.set(AUTO_ANSWER_PROPERTY, "0");
-            }
-        }
-    }
-
-    /**
-     * Set flag value when on click button.
-     *
-     * @param flag
-     *            the final boolean of the button status to set
-     * */
-    private void writeSharedPreferences(final boolean flag) {
-        final SharedPreferences autoAnswerSh = getSharedPreferences(SHREDPRE_NAME,
-                MODE_PRIVATE);
-        final SharedPreferences.Editor editor = autoAnswerSh.edit();
-        editor.putBoolean(BUTTON_FLAG, flag);
-        editor.commit();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/BatteryLog.java b/EngineerMode/src/com/mediatek/engineermode/BatteryLog.java
deleted file mode 100644
index fef5956..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/BatteryLog.java
+++ /dev/null
@@ -1,523 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.BatteryManager;
-import android.os.Bundle;
-import android.os.Environment;
-import android.os.Handler;
-import android.os.Message;
-import android.os.SystemClock;
-import android.text.format.DateUtils;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import java.io.File;
-import java.io.FileWriter;
-import java.io.IOException;
-import java.text.SimpleDateFormat;
-import java.util.Calendar;
-
-/**
- *
- * <p>
- * Description: Show current battery's information and record battery log.
- *
- */
-public class BatteryLog extends Activity implements OnClickListener {
-
-    private static final int EVENT_TICK = 1;
-    private static final int EVENT_LOG_RECORD = 2;
-
-    private static final int DELAY_TIME = 1000;
-    private static final int MAX_NUMBER = 100;
-    private static final int MAX_NUMBER_LENGTH = 3;
-    private static final int FORMART_UPTIME = 1000;
-    private static final int DEFAULT_INTERVAL = 10000;
-
-    private static final int MAGIC_NUMBER_TEN = 10;
-
-    // battery attr
-    private static final String PLUGGED = "plugged";
-    private static final String LEVEL = "level";
-    private static final String SCALE = "scale";
-    private static final String VOLTAGE = "voltage";
-    private static final String TEMPERATURE = "temperature";
-    private static final String STATUS = "status";
-    private static final String HEALTH = "health";
-
-    private static final String TAG = "EM-BatteryLog";
-
-    private static final String CMD_CURRENT = "echo %1$d 0 > /proc/mtk_battery_cmd/current_cmd";
-    private static final String CMD_CHARGING = "echo 0 %1$d > /proc/mtk_battery_cmd/current_cmd";
-    private static final String CMD_SET_TEMPERATURE
-            = "echo 1 1 %1$d > /proc/mtk_battery_cmd/battery_cmd";
-
-    private int mLogRecordInterval;
-    private boolean mIsRecording;
-
-    private File mLogFile;
-    private File mBatteryLogFile;
-
-    private TextView mStatus;
-    private TextView mLevel;
-    private TextView mScale;
-    private TextView mHealth;
-    private TextView mVoltage;
-    private TextView mTemperature;
-    private TextView mTechnology;
-    private TextView mUptime;
-    private EditText mIntervalEdit;
-    private Button mLogRecord;
-
-    private Button mBtnChargeStop;
-    private Button mBtnChargeRestart;
-    private Button mBtnCurrentRise;
-    private Button mBtnCurrentReduce;
-    private Button mBtnTemperatureSet;
-    private EditText mEditTemperature;
-    private OnClickListener mSettingClickListener = new OnClickListener() {
-        @Override
-        public void onClick(View view) {
-            if (mBtnChargeStop == view) {
-                enableBatteryCharging(false);
-            } else if (mBtnChargeRestart == view) {
-                enableBatteryCharging(true);
-            } else if (mBtnCurrentRise == view) {
-                adjustBatteryCurrent(true);
-            } else if (mBtnCurrentReduce == view) {
-                adjustBatteryCurrent(false);
-            } else if (mBtnTemperatureSet == view) {
-                setBatteryTemperature(mEditTemperature);
-            } else {
-                Log.d(TAG, "Unhandle view:" + view.toString());
-            }
-        }
-    };
-
-    private void initBatterySettingUi() {
-        mBtnChargeStop = (Button) findViewById(R.id.battery_charging_stop_btn);
-        mBtnChargeStop.setOnClickListener(mSettingClickListener);
-        mBtnChargeRestart = (Button) findViewById(R.id.battery_charging_restart_btn);
-        mBtnChargeRestart.setOnClickListener(mSettingClickListener);
-        mBtnCurrentRise = (Button) findViewById(R.id.battery_current_rise_btn);
-        mBtnCurrentRise.setOnClickListener(mSettingClickListener);
-        mBtnCurrentReduce = (Button) findViewById(R.id.battery_current_reduce_btn);
-        mBtnCurrentReduce.setOnClickListener(mSettingClickListener);
-        mBtnTemperatureSet = (Button) findViewById(R.id.battery_temperature_set_btn);
-        mBtnTemperatureSet.setOnClickListener(mSettingClickListener);
-
-        mEditTemperature = (EditText) findViewById(R.id.battery_temperature_edit);
-    }
-
-    private void enableBatteryCharging(boolean charging) {
-        int val = 1;
-        if (charging) {
-            val = 0;
-        }
-        String cmd = String.format(CMD_CHARGING, val);
-        executeCmd(cmd, true);
-    }
-
-    private void adjustBatteryCurrent(boolean rise) {
-        int val = 0;
-        if (rise) {
-            val = 1;
-        }
-        String cmd = String.format(CMD_CURRENT, val);
-        executeCmd(cmd, true);
-    }
-
-    private void setBatteryTemperature(EditText input) {
-        int val = 0;
-        boolean valid = true;
-        String inputStr = input.getText().toString();
-        try {
-            val = Integer.parseInt(inputStr);
-        } catch (NumberFormatException e) {
-            valid = false;
-        }
-        if (val < -20 || val > 80) {
-            valid = false;
-        }
-        if (!valid) {
-            Toast.makeText(this, "please input a valid number -20~80", Toast.LENGTH_SHORT).show();
-            return;
-        }
-        String cmd = String.format(CMD_SET_TEMPERATURE, val);
-        executeCmd(cmd, true);
-    }
-
-    private boolean executeCmd(String cmd, boolean toastResult) {
-        boolean result = true;
-        try {
-            int ret = ShellExe.execCommand(cmd);
-            if (ret != ShellExe.RESULT_SUCCESS) {
-                result = false;
-            }
-        } catch (IOException e) {
-            Log.d(TAG, "IOException: " + e.getMessage());
-            result = false;
-        }
-        if (toastResult) {
-            if (result) {
-                Toast.makeText(this, "Execute success", Toast.LENGTH_SHORT).show();
-            } else {
-                Toast.makeText(this, "Execute fail", Toast.LENGTH_SHORT).show();
-            }
-        }
-        return result;
-    }
-
-    private final Handler mHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-            if (msg.what == EVENT_TICK) {
-                updateBatteryStats();
-                sendEmptyMessageDelayed(EVENT_TICK, DELAY_TIME);
-            }
-        }
-
-        private void updateBatteryStats() {
-            final long uptime = SystemClock.elapsedRealtime();
-            mUptime.setText(DateUtils.formatElapsedTime(uptime / FORMART_UPTIME));
-        }
-    };
-
-    /**
-     * Format a number of tenths-units as a decimal string without using a conversion to float. E.g. 347 -> "34.7"
-     *
-     * @return float
-     */
-    private String tenthsToFixedString(int x) {
-        int tens = x / MAGIC_NUMBER_TEN;
-        return new String("" + tens + "." + (x - MAGIC_NUMBER_TEN * tens));
-    }
-
-    /**
-     *Listens for intent broadcasts
-     */
-    private IntentFilter mIntentFilter;
-    private IntentFilter mIntentFilterSDCard;
-
-    private BroadcastReceiver mIntentReceiver = new BroadcastReceiver() {
-
-        @Override
-        public void onReceive(Context arg0, Intent arg1) {
-            String action = arg1.getAction();
-            if (action.equals(Intent.ACTION_BATTERY_CHANGED)) {
-                int plugType = arg1.getIntExtra(PLUGGED, 0);
-
-                mLevel.setText("" + arg1.getIntExtra(LEVEL, 0));
-                mScale.setText("" + arg1.getIntExtra(SCALE, 0));
-                mVoltage.setText("" + arg1.getIntExtra(VOLTAGE, 0) + " " + getString(R.string.battery_info_voltage_units));
-                mTemperature.setText("" + tenthsToFixedString(arg1.getIntExtra(TEMPERATURE, 0))
-                        + getString(R.string.battery_info_temperature_units));
-                mTechnology.setText("" + arg1.getStringExtra("technology"));
-
-                int status = arg1.getIntExtra(STATUS, BatteryManager.BATTERY_STATUS_UNKNOWN);
-                String statusString = null;
-                if (status == BatteryManager.BATTERY_STATUS_CHARGING) {
-                    statusString = getString(R.string.battery_info_status_charging);
-                    if (plugType > 0) {
-                        statusString = statusString
-                                + " "
-                                + getString((plugType == BatteryManager.BATTERY_PLUGGED_AC)
-                                        ? R.string.battery_info_status_charging_ac
-                                        : R.string.battery_info_status_charging_usb);
-                    }
-                } else if (status == BatteryManager.BATTERY_STATUS_DISCHARGING) {
-                    statusString = getString(R.string.battery_info_status_discharging);
-                } else if (status == BatteryManager.BATTERY_STATUS_NOT_CHARGING) {
-                    statusString = getString(R.string.battery_info_status_not_charging);
-                } else if (status == BatteryManager.BATTERY_STATUS_FULL) {
-                    statusString = getString(R.string.battery_info_status_full);
-                } else {
-                    statusString = getString(R.string.battery_info_status_unknown);
-                }
-                mStatus.setText(statusString);
-
-                int health = arg1.getIntExtra(HEALTH, BatteryManager.BATTERY_HEALTH_UNKNOWN);
-                String healthString;
-                if (health == BatteryManager.BATTERY_HEALTH_GOOD) {
-                    healthString = getString(R.string.battery_info_health_good);
-                } else if (health == BatteryManager.BATTERY_HEALTH_OVERHEAT) {
-                    healthString = getString(R.string.battery_info_health_overheat);
-                } else if (health == BatteryManager.BATTERY_HEALTH_DEAD) {
-                    healthString = getString(R.string.battery_info_health_dead);
-                } else if (health == BatteryManager.BATTERY_HEALTH_OVER_VOLTAGE) {
-                    healthString = getString(R.string.battery_info_health_over_voltage);
-                } else if (health == BatteryManager.BATTERY_HEALTH_UNSPECIFIED_FAILURE) {
-                    healthString = getString(R.string.battery_info_health_unspecified_failure);
-                } else {
-                    healthString = getString(R.string.battery_info_health_unknown);
-                }
-                mHealth.setText(healthString);
-            }
-        }
-    };
-    private BroadcastReceiver mIntentReceiverSDCard = new BroadcastReceiver() {
-
-        @Override
-        public void onReceive(Context arg0, Intent arg1) {
-            String action = arg1.getAction();
-            if (action.equals(Intent.ACTION_MEDIA_BAD_REMOVAL) || action.equals(Intent.ACTION_MEDIA_REMOVED)
-                    || action.equals(Intent.ACTION_MEDIA_EJECT)) {
-                if (!mIsRecording) {
-                    return;
-                }
-                mIsRecording = false;
-                mLogHandler.removeMessages(EVENT_LOG_RECORD);
-                mLogRecord.setText(R.string.battery_info_Log_Start);
-                AlertDialog.Builder builder = new AlertDialog.Builder(BatteryLog.this);
-                builder.setTitle("SD card error");
-                builder.setMessage("SD card has been removed.");
-                builder.setPositiveButton("OK", null);
-                builder.create().show();
-            }
-        }
-    };
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.battery_info);
-
-        mLogRecord = (Button) findViewById(R.id.Log_Record);
-        if (mLogRecord == null) {
-            Log.e(TAG, "clocwork worked...");
-            // not return and let exception happened.
-        }
-        mLogRecord.setOnClickListener(this);
-
-        // create the IntentFilter that will be used to listen
-        // to battery status broadcasts
-        mIntentFilter = new IntentFilter();
-        mIntentFilter.addAction(Intent.ACTION_BATTERY_CHANGED);
-
-        mIntentFilterSDCard = new IntentFilter();
-        mIntentFilterSDCard.addAction(Intent.ACTION_MEDIA_BAD_REMOVAL);
-        mIntentFilterSDCard.addAction(Intent.ACTION_MEDIA_REMOVED);
-        mIntentFilterSDCard.addAction(Intent.ACTION_MEDIA_EJECT);
-        mIntentFilterSDCard.addAction(Intent.ACTION_MEDIA_UNMOUNTED);
-        mIntentFilterSDCard.addDataScheme("file");
-
-        // check whether the sdcard exists, if yes, set up batterylog directory,
-        // and if not, notify user to plug in it
-        mLogRecordInterval = DEFAULT_INTERVAL;
-        File sdcard = null;
-        if (!Environment.getExternalStorageState().equals(Environment.MEDIA_REMOVED)) {
-            sdcard = Environment.getExternalStorageDirectory();
-            mBatteryLogFile = new File(sdcard.getParent() + "/" + sdcard.getName() + "/batterylog/");
-            Log.e(TAG, sdcard.getParent() + "/" + sdcard.getName() + "/batterylog/");
-            if (!mBatteryLogFile.isDirectory()) {
-                mBatteryLogFile.mkdirs();
-            }
-        }
-
-        initBatterySettingUi();
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-
-        mStatus = (TextView) findViewById(R.id.status);
-        mLevel = (TextView) findViewById(R.id.level);
-        mScale = (TextView) findViewById(R.id.scale);
-        mHealth = (TextView) findViewById(R.id.health);
-        mTechnology = (TextView) findViewById(R.id.technology);
-        mVoltage = (TextView) findViewById(R.id.voltage);
-        mTemperature = (TextView) findViewById(R.id.temperature);
-        mUptime = (TextView) findViewById(R.id.uptime);
-        mIntervalEdit = (EditText) findViewById(R.id.Log_Record_Interval);
-        if (mIntervalEdit == null) {
-            Log.e(TAG, "clocwork worked...");
-            // not return and let exception happened.
-        }
-
-        mHandler.sendEmptyMessageDelayed(EVENT_TICK, DELAY_TIME);
-
-        registerReceiver(mIntentReceiver, mIntentFilter);
-        registerReceiver(mIntentReceiverSDCard, mIntentFilterSDCard);
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-        mHandler.removeMessages(EVENT_TICK);
-
-        // we are no longer on the screen stop the observers
-        unregisterReceiver(mIntentReceiver);
-        unregisterReceiver(mIntentReceiverSDCard);
-    }
-
-    /**
-     * @param arg0
-     *            view
-     */
-    public void onClick(View arg0) {
-        if (arg0.getId() == mLogRecord.getId()) {
-            if (!mIsRecording) {
-                if (Environment.getExternalStorageState().equals(Environment.MEDIA_REMOVED)
-                        || Environment.getExternalStorageState().equals(Environment.MEDIA_BAD_REMOVAL)
-                        || Environment.getExternalStorageState().equals(Environment.MEDIA_UNMOUNTED)) {
-                    AlertDialog.Builder builder = new AlertDialog.Builder(this);
-                    builder.setTitle("SD Card not available");
-                    builder.setMessage("Please insert an SD Card.");
-                    builder.setPositiveButton("OK", null);
-                    builder.create().show();
-                    return;
-                }
-
-                String state = Environment.getExternalStorageState();
-                Log.i(TAG, "Environment.getExternalStorageState() is : " + state);
-
-                if (Environment.getExternalStorageState().equals(Environment.MEDIA_SHARED)) {
-                    AlertDialog.Builder builder = new AlertDialog.Builder(this);
-                    builder.setTitle("sdcard is busy");
-                    builder.setMessage("Sorry, your SD card is busy.");
-                    builder.setPositiveButton("OK", null);
-                    builder.create().show();
-                    return;
-                }
-                // check if the EditText control has no content, if not, check
-                // the content whether is right
-
-                if (MAX_NUMBER_LENGTH < mIntervalEdit.getText().toString().length()
-                        || 0 == mIntervalEdit.getText().toString().length()) {
-                    Toast.makeText(this, "The input is not correct. Please input the number between 1 and 100.",
-                            Toast.LENGTH_LONG).show();
-                    return;
-                }
-                if (Integer.valueOf(mIntervalEdit.getText().toString()) > MAX_NUMBER
-                        || Integer.valueOf(mIntervalEdit.getText().toString()) < 1) {
-                    Toast.makeText(this, "The input is not correct. Please input the number between 1 and 100.",
-                            Toast.LENGTH_LONG).show();
-                    return;
-                }
-                mLogRecordInterval = Integer.valueOf(mIntervalEdit.getText().toString()) * FORMART_UPTIME;
-                Log.i(TAG, String.valueOf(mLogRecordInterval));
-
-                mLogRecord.setText(R.string.battery_info_Log_End);
-
-                // Create a new file under the "/sdcard/batterylog" path
-                Calendar rightNow = Calendar.getInstance();
-                SimpleDateFormat fmt = new SimpleDateFormat("yyyyMMddhhmmss");
-                String sysDateTime = fmt.format(rightNow.getTime());
-                String fileName = "";
-                fileName = fileName + sysDateTime;
-                fileName = fileName + ".txt";
-                Log.i(TAG, fileName);
-
-                // mLogFile = new File("/sdcard/batterylog/" + fileName);
-                mLogFile = new File(Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator
-                        + "batterylog" + File.separator + fileName);
-                try {
-                    mLogFile.createNewFile();
-                    String batteryInfoLable = "Battery status, level, scale, health, voltage, "
-                            + "temperature, technology, time since boot:\n";
-                    FileWriter fileWriter = new FileWriter(mLogFile);
-                    fileWriter.write(batteryInfoLable);
-                    fileWriter.flush();
-                    fileWriter.close();
-                } catch (IOException e1) {
-                    e1.printStackTrace();
-                }
-
-                mLogHandler.sendEmptyMessageDelayed(EVENT_LOG_RECORD, DELAY_TIME);
-
-                mIsRecording = true;
-            } else {
-                mLogRecord.setText(R.string.battery_info_Log_Start);
-                mLogHandler.removeMessages(EVENT_LOG_RECORD);
-                mIsRecording = false;
-                AlertDialog.Builder builder = new AlertDialog.Builder(this);
-                builder.setTitle("BatteryLog Saved");
-                builder.setMessage("BatteryLog has been saved under" + " /sdcard/batterylog.");
-                builder.setPositiveButton("OK", null);
-                builder.create().show();
-            }
-        }
-    }
-
-    public Handler mLogHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-            if (msg.what == EVENT_LOG_RECORD) {
-                Log.i(TAG, "Record one time");
-                writeCurrentBatteryInfo();
-                sendEmptyMessageDelayed(EVENT_LOG_RECORD, mLogRecordInterval);
-            }
-        }
-
-        private void writeCurrentBatteryInfo() {
-            String logContent = "";
-            logContent = logContent + mStatus.getText() + ", " + mLevel.getText() + ", " + mScale.getText() + ", "
-                    + mHealth.getText() + ", " + mVoltage.getText() + ", " + mTemperature.getText() + ", "
-                    + mTechnology.getText() + ", " + mUptime.getText() + "\n";
-            FileWriter fileWriter = null;
-            try {
-                fileWriter = new FileWriter(mLogFile, true);
-                fileWriter.write(logContent);
-                fileWriter.flush();
-            } catch (IOException e) {
-                e.printStackTrace();
-            } finally {
-                if (null != fileWriter) {
-                    try {
-                        fileWriter.close();
-                    } catch (IOException e) {
-                        e.printStackTrace();
-                    }
-                }
-            }
-        }
-    };
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/ChipSupport.java b/EngineerMode/src/com/mediatek/engineermode/ChipSupport.java
deleted file mode 100644
index dc2cfa8..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/ChipSupport.java
+++ /dev/null
@@ -1,169 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-public class ChipSupport {
-
-    /**
-     * Chip support.
-     */
-    public static final int MTK_UNKNOWN_SUPPORT = 0;
-    public static final int MTK_6573_SUPPORT = 1;
-    public static final int MTK_6516_SUPPORT = 2;
-    public static final int MTK_6575_SUPPORT = 4;
-    public static final int MTK_6577_SUPPORT = 8;
-    public static final int MTK_6589_SUPPORT = 16;
-    public static final int MTK_6582_SUPPORT = 18;
-    public static final int MTK_6572_SUPPORT = 32;
-    public static final int MTK_8135_SUPPORT = 20;
-    public static final int MTK_8127_SUPPORT = 22;
-    public static final int MTK_6571_SUPPORT = 33;
-    public static final int MTK_6592_SUPPORT = 40;
-    public static final int MTK_6595_SUPPORT = 42;
-    public static final int MTK_6752_SUPPORT = 64;
-    public static final int MTK_6795_SUPPORT = 65;
-    public static final int MTK_6735_SUPPORT = 66;
-    public static final int MTK_8163_SUPPORT = 67;
-    public static final int MTK_6580_SUPPORT = 68;
-    public static final int MTK_6755_SUPPORT = 69;
-    public static final int MTK_6797_SUPPORT = 70;
-
-    /**
-     * Feature support.
-     */
-    public static final int MTK_FM_SUPPORT = 0;
-    public static final int MTK_FM_TX_SUPPORT = 1;
-    public static final int MTK_RADIO_SUPPORT = 2;
-    public static final int MTK_AGPS_APP = 3;
-    public static final int MTK_GPS_SUPPORT = 4;
-    public static final int HAVE_MATV_FEATURE = 5;
-    public static final int MTK_BT_SUPPORT = 6;
-    public static final int MTK_WLAN_SUPPORT = 7;
-    public static final int MTK_TTY_SUPPORT = 8;
-    public static final int MTK_NFC_SUPPORT = 9;
-    public static final int MTK_AUDIO_TUNING_TOOL_V2_1 = 10;
-
-    public static final int[] CHIP_657X_SERIES_NEW = {MTK_6571_SUPPORT, MTK_6572_SUPPORT};
-    public static final int[] CHIP_64BIT_SUPPORT = {MTK_6752_SUPPORT, MTK_6795_SUPPORT,
-                                                    MTK_6735_SUPPORT, MTK_8163_SUPPORT};
-
-    public static boolean isCurrentChipHigher(int comparedChip, boolean allowEquel) {
-        int curChip = getChip();
-
-        if (allowEquel) {
-            return curChip >= comparedChip;
-        } else {
-            return curChip > comparedChip;
-        }
-    }
-
-    public static boolean isCurrentChipEquals(int targetChip) {
-        int chip = getChip();
-
-        return chip == targetChip;
-    }
-
-    public static boolean isChipInSet(int[] chips) {
-        if (chips == null) {
-            return false;
-        }
-        int chip = getChip();
-        for (int c : chips) {
-            if (c == chip) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    private ChipSupport() {
-        /* do nothing - hiding constructor */
-    }
-    /**
-     * Get Chip ID from native.
-     *
-     * @return Chip ID.
-     */
-    public static native int getChip();
-
-    /**
-     * Check feature supported.
-     *
-     * @param featureId
-     *            The feature ID
-     * @return True if feature is supported
-     */
-    public static native boolean isFeatureSupported(int featureId);
-
-    static {
-        System.loadLibrary("em_support_jni");
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/Elog.java b/EngineerMode/src/com/mediatek/engineermode/Elog.java
deleted file mode 100644
index d1cff17..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/Elog.java
+++ /dev/null
@@ -1,105 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-import android.util.Log;
-
-/**
- * Description: a help class for printing log.
- *
- * @author mtk54043
- *
- */
-
-public class Elog {
-
-    /**
-     *
-     * @param tag
-     *            Log's tag
-     * @param content
-     *            Log' content
-     */
-    public static final void v(String tag, String content) {
-        Log.v("@M_" + tag, content);
-    }
-
-    /**
-     *
-     * @param tag
-     *            Log's tag
-     * @param content
-     *            Log' content
-     */
-    public static final void i(String tag, String content) {
-        Log.i("@M_" + tag, content);
-    }
-
-    /**
-     *
-     * @param tag
-     *            Log's tag
-     * @param content
-     *            Log' content
-     */
-    public static final void w(String tag, String content) {
-        Log.w("@M_" + tag, content);
-    }
-
-    /**
-     *
-     * @param tag
-     *            Log's tag
-     * @param content
-     *            Log' content
-     */
-    public static final void e(String tag, String content) {
-        Log.e("@M_" + tag, content);
-    }
-
-    /**
-     *
-     * @param tag
-     *            Log's tag
-     * @param content
-     *            Log' content
-     */
-    public static final void d(String tag, String content) {
-        Log.d("@M_" + tag, content);
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/EngineerMode.java b/EngineerMode/src/com/mediatek/engineermode/EngineerMode.java
deleted file mode 100644
index cf60333..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/EngineerMode.java
+++ /dev/null
@@ -1,228 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-import android.app.Activity;
-import android.app.Fragment;
-import android.app.FragmentManager;
-import android.app.FragmentTransaction;
-import android.os.Bundle;
-import android.support.v4.view.PagerAdapter;
-import android.support.v4.view.PagerTabStrip;
-import android.support.v4.view.ViewPager;
-import android.util.Log;
-import android.view.View;
-import android.content.Context;
-import android.net.ConnectivityManager;
-
-
-
-
-/**
- * This is main UI of EngineerMode. It uses viewPager to show each classified
- * modules. There are six viewPager, each viewPager is in one category:
- * 1.telephony;
- * 2.connectivity;
- * 3.hardware testing;
- * 4.location;
- * 5.log&debugging;
- * 6.others.
- * RDs can add each module in HomeViewData.java file.
- *
- * @author mtk54034
- *
- */
-public class EngineerMode extends Activity {
-
-    private static final String TAG = "EM/MainView";
-    private static int TAB_COUNT = 6; // Total count of PagerView
-    private static int TAB_COUNT_WIFIONLY = 5; // Total count of PagerView
-    // Define each tabs which will attach to PagerView
-    private PrefsFragment mTabs[] = new PrefsFragment[TAB_COUNT];
-
-    // Record each viewPager title string IDs in array:
-    private static int[] TAB_TITLE_IDS = { R.string.tab_telephony,
-            R.string.tab_connectivity, R.string.tab_hardware_testing,
-            R.string.tab_location, R.string.tab_log_and_debugging,
-            R.string.tab_others, };
-
-    private static int[] TAB_TITLE_IDS_WIFIONLY = {
-            R.string.tab_connectivity, R.string.tab_hardware_testing,
-            R.string.tab_location, R.string.tab_log_and_debugging,
-            R.string.tab_others, };
-
-    private MyPagerAdapter mPagerAdapter;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.main);
-
-        final FragmentManager fragmentManager = getFragmentManager();
-        final FragmentTransaction transaction = fragmentManager
-                .beginTransaction();
-
-        if(isWifiOnly()){
-            TAB_TITLE_IDS = TAB_TITLE_IDS_WIFIONLY;
-            TAB_COUNT = TAB_COUNT_WIFIONLY;
-        }
-
-        Log.v("@M_" + TAG, "new fregments");
-        for (int i = 0; i < TAB_COUNT; i++) {
-            mTabs[i] = new PrefsFragment();
-            mTabs[i].setResource(i);
-            transaction.add(R.id.viewpager, mTabs[i], String.valueOf(i));
-            transaction.hide(mTabs[i]);
-        }
-
-        ViewPager viewPager;
-        PagerTabStrip pagerTabStrip;
-
-        viewPager = (ViewPager) findViewById(R.id.viewpager);
-        pagerTabStrip = (PagerTabStrip) findViewById(R.id.pagertitle);
-        pagerTabStrip
-                .setTabIndicatorColorResource(android.R.color.holo_blue_light);
-
-        transaction.commitAllowingStateLoss();
-//        fragmentManager.executePendingTransactions();
-
-        mPagerAdapter = new MyPagerAdapter();
-        viewPager.setAdapter(mPagerAdapter);
-        viewPager.setCurrentItem(0);
-    }
-
-   private boolean isWifiOnly() {
-        ConnectivityManager connManager = (ConnectivityManager) EngineerMode.this
-                .getSystemService(Context.CONNECTIVITY_SERVICE);
-        boolean bWifiOnly = false;
-        if (null != connManager) {
-            bWifiOnly = !connManager
-                    .isNetworkSupported(ConnectivityManager.TYPE_MOBILE);
-            Log.i("@M_" + TAG, "bWifiOnly: " + bWifiOnly);
-        }
-        return bWifiOnly;
-    }
-
-    @Override
-    protected void onResume() {
-        // TODO Auto-generated method stub
-        super.onResume();
-        mPagerAdapter.updateCurrentFragment();
-    }
-
-
-    class MyPagerAdapter extends PagerAdapter {
-        private final FragmentManager mFragmentManager;
-        private FragmentTransaction mCurTransaction = null;
-        private Fragment mCurPrimaryItem;
-
-        MyPagerAdapter() {
-            mFragmentManager = getFragmentManager();
-        }
-
-        @Override
-        public int getCount() {
-            return TAB_COUNT;
-        }
-
-        @Override
-        public void destroyItem(View container, int position, Object object) {
-            if (mCurTransaction == null) {
-                mCurTransaction = mFragmentManager.beginTransaction();
-            }
-            mCurTransaction.hide((Fragment) object);
-        }
-
-        @Override
-        public CharSequence getPageTitle(int position) {
-            return getString(TAB_TITLE_IDS[position]).toString();
-        }
-
-        @Override
-        public Object instantiateItem(View container, int position) {
-            if (mCurTransaction == null) {
-                mCurTransaction = mFragmentManager.beginTransaction();
-            }
-            Fragment fragment = getFragment(position);
-            mCurTransaction.show(fragment);
-
-            // Non primary pages are not visible.
-            fragment.setUserVisibleHint(fragment.equals(mCurPrimaryItem));
-            return fragment;
-        }
-
-        @Override
-        public void finishUpdate(View container) {
-            if (mCurTransaction != null) {
-                mCurTransaction.commitAllowingStateLoss();
-                mCurTransaction = null;
-                mFragmentManager.executePendingTransactions();
-            }
-        }
-
-        @Override
-        public boolean isViewFromObject(View view, Object object) {
-            return ((Fragment) object).getView() == view;
-        }
-
-        @Override
-        public void setPrimaryItem(View container, int position, Object object) {
-            Fragment fragment = (Fragment) object;
-            if (!fragment.equals(mCurPrimaryItem)) {
-                if (mCurPrimaryItem != null) {
-                    mCurPrimaryItem.setUserVisibleHint(false);
-                }
-                mCurPrimaryItem = fragment;
-                mCurPrimaryItem.setUserVisibleHint(true);
-            }
-        }
-
-        private Fragment getFragment(int position) {
-            if (position < TAB_COUNT) {
-                return mTabs[position];
-            }
-            throw new IllegalArgumentException("position: " + position);
-        }
-
-        public void updateCurrentFragment() {
-            if (mCurPrimaryItem != null) {
-                mCurPrimaryItem.setUserVisibleHint(true);
-            }
-
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/EngineerModeReceiver.java b/EngineerMode/src/com/mediatek/engineermode/EngineerModeReceiver.java
deleted file mode 100644
index fc484d8..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/EngineerModeReceiver.java
+++ /dev/null
@@ -1,73 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-import android.util.Log;
-
-
-public final class EngineerModeReceiver extends BroadcastReceiver {
-
-    private static final String TAG = "EM/SECRET_CODE";
-    private static final String SECRET_CODE_ACTION = "android.provider.Telephony.SECRET_CODE";
-    // process *#*#3646633#*#*
-    private final Uri mEmUri = Uri.parse("android_secret_code://3646633");
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-        if (intent.getAction() == null) {
-            Log.i("@M_" + TAG, "Null action");
-            return;
-        }
-        if (intent.getAction().equals(SECRET_CODE_ACTION)) {
-            Uri uri = intent.getData();
-            Log.i("@M_" + TAG, "getIntent success in if");
-            if (uri.equals(mEmUri)) {
-                Intent intentEm = new Intent(context, EngineerMode.class);
-                intentEm.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                Log.i("@M_" + TAG, "Before start EM activity");
-                context.startActivity(intentEm);
-            } else {
-                Log.i("@M_" + TAG, "No matched URI!");
-            }
-        } else {
-            Log.i("@M_" + TAG, "Not SECRET_CODE_ACTION!");
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/EsnTrack.java b/EngineerMode/src/com/mediatek/engineermode/EsnTrack.java
deleted file mode 100644
index 320ec2f..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/EsnTrack.java
+++ /dev/null
@@ -1,124 +0,0 @@
-package com.mediatek.engineermode;
-
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.os.Bundle;
-import android.os.SystemProperties;
-//L1.MP3 Patchback only
-import android.preference.EditTextPreference;
-//L1.MP3 Patchback only
-
-import android.preference.ListPreference;
-import android.preference.Preference;
-import android.preference.PreferenceActivity;
-import android.util.Log;
-
-public class EsnTrack extends PreferenceActivity implements
-        Preference.OnPreferenceChangeListener {
-
-    private static final String TAG = "EM/EsnTrack";
-
-    private static final String ESN_TRACK_SYS_PROP = "persist.sys.esn_track_switch";
-    private static final String KEY_ESN_TRACK_SWITCH = "esn_track_switch";
-    // L1.MP3 Patchback only
-    private static final String KEY_ESN_TRACK_ADDRESS = "EsnServerAdderess";
-    public static final String MY_ESN_ADDRESS = "MyEsnAddrFile";
-    public static final String KEY_ADDRESS_ESN = "address";
-    private EditTextPreference mEditTextPref;
-    private static final String cdmaAddressIntent =
-                        "com.mediatek.engineermode.EsnTrack.ADDRESS_CHANGE";
-    // L1.MP3 Patchback only
-
-    private static final String TURN_ON = "On";
-    private static final String TURN_OFF = "Off";
-    private ListPreference mListPreference;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        addPreferencesFromResource(R.layout.esn_track);
-        mListPreference = (ListPreference) findPreference(KEY_ESN_TRACK_SWITCH);
-        mListPreference.setOnPreferenceChangeListener(this);
-        // L1.MP3 Patchback only
-        mEditTextPref = (EditTextPreference) findPreference(KEY_ESN_TRACK_ADDRESS);
-        mEditTextPref.setOnPreferenceChangeListener(this);
-        // L1.MP3 Patchback only
-
-        final String savedEsnValue = getEsnTrackProperty();
-        final String summary = savedEsnValue.equals("1") ? TURN_ON : TURN_OFF;
-        mListPreference.setSummary(summary);
-        mListPreference.setValue(savedEsnValue.equals("1") ? "1" : "0");
-
-        // L1.MP3 Patchback only
-        SharedPreferences sharedpreferences = this.getSharedPreferences(
-                MY_ESN_ADDRESS, this.MODE_PRIVATE);
-        String sendAddress = sharedpreferences.getString(KEY_ADDRESS_ESN, "");
-        Log.d(TAG, "onCreate sendAddress: " + sendAddress);
-        if (sendAddress != null && sendAddress.length() > 0) {
-            mEditTextPref.setSummary(sendAddress);
-        } else {
-            mEditTextPref.setSummary("Enter address");
-        }
-        mEditTextPref.setText(sendAddress);
-        // L1.MP3 Patchback only
-
-    }
-
-    @Override
-    public boolean onPreferenceChange(Preference preference, Object newValue) {
-        Log.d(TAG, "onPreferenceChange newValue " + (String) newValue);
-        if (preference.getKey().equals(KEY_ESN_TRACK_SWITCH)) {
-            Log.d(TAG, "onPreferenceChange newValue " + (String) newValue);
-            setEsnTrackProperty((String) newValue);
-            String property = getEsnTrackProperty();
-            final boolean isEnabled = property.equals("1");
-            mListPreference.setValue(isEnabled ? "1" : "0");
-            final String summary = isEnabled ? TURN_ON : TURN_OFF;
-            mListPreference.setSummary(summary);
-        }
-
-        // L1.MP3 Patchback only
-        if (preference.getKey().equals(KEY_ESN_TRACK_ADDRESS)) {
-            Log.d(TAG, "onPreferenceChange address newValue :"
-                    + (String) newValue.toString());
-            SharedPreferences sharedpreferences = this.getSharedPreferences(
-                    MY_ESN_ADDRESS, this.MODE_PRIVATE);
-            SharedPreferences.Editor editor = sharedpreferences.edit();
-            editor.putString(KEY_ADDRESS_ESN, (String) newValue.toString());
-            editor.commit();
-            String writtenaddress = sharedpreferences.getString(
-                    KEY_ADDRESS_ESN, "");
-            if (writtenaddress != null && writtenaddress.length() > 0) {
-                mEditTextPref.setSummary(writtenaddress);
-            } else {
-                mEditTextPref.setSummary("Enter address");
-            }
-            mEditTextPref.setText(writtenaddress);
-            this.sendBroadcast(new Intent(cdmaAddressIntent).putExtra(
-                    "Address", writtenaddress));
-        }
-        // L1.MP3 Patchback only
-        return false;
-    }
-
-    private String getEsnTrackProperty() {
-        String value = "0";
-        value = SystemProperties.get("persist.sys.esn_track_switch");
-        Log.d(TAG, "getEsnTrackProperty esn :" + value);
-        return value;
-    }
-
-    private void setEsnTrackProperty(String esn) {
-        Log.d(TAG, "setEsnTrackProperty esn :" + esn);
-        if (esn.equals("1")) {
-            SystemProperties.set("persist.sys.esn_track_switch", "1");
-            String value = SystemProperties.get("persist.sys.esn_track_switch");
-            Log.d(TAG, "setEsnTrackProperty set on esn :" + value);
-        } else {
-            SystemProperties.set("persist.sys.esn_track_switch", "0");
-            String value = SystemProperties.get("persist.sys.esn_track_switch");
-            Log.d(TAG, "setEsnTrackProperty set off esn :" + value);
-        }
-
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/FeatureHelpPage.java b/EngineerMode/src/com/mediatek/engineermode/FeatureHelpPage.java
deleted file mode 100644
index 41c2c74..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/FeatureHelpPage.java
+++ /dev/null
@@ -1,76 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.content.res.Resources;
-import android.os.Bundle;
-import android.text.method.ScrollingMovementMethod;
-import android.widget.TextView;
-
-public class FeatureHelpPage extends Activity {
-
-    public static final String HELP_TITLE_KEY = "helpTitle";
-    public static final String HELP_MESSAGE_KEY = "helpMessage";
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.help_page);
-        Intent intent = getIntent();
-        Resources resources = getResources();
-        String helpTitle = "";
-        String helpMsg = "";
-        if (intent != null) {
-            helpTitle =
-                resources.getString(intent.getIntExtra(HELP_TITLE_KEY,
-                    R.string.help));
-            helpMsg =
-                resources.getString(intent.getIntExtra(HELP_MESSAGE_KEY,
-                    R.string.help));
-        }
-        TextView mTitleView = (TextView) findViewById(R.id.textview_title);
-        mTitleView.setText(helpTitle);
-        TextView mMessageView = (TextView) findViewById(R.id.textview_help);
-        mMessageView.setText(helpMsg);
-        mMessageView.setHorizontallyScrolling(false);
-        // Make text view can vertical scrolling.
-        mMessageView.setMovementMethod(ScrollingMovementMethod.getInstance());
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/FeatureSupport.java b/EngineerMode/src/com/mediatek/engineermode/FeatureSupport.java
deleted file mode 100644
index 44d721d..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/FeatureSupport.java
+++ /dev/null
@@ -1,79 +0,0 @@
-package com.mediatek.engineermode;
-
-import java.util.List;
-
-import android.content.Context;
-import android.content.pm.ApplicationInfo;
-import android.content.pm.PackageManager;
-import android.os.SystemProperties;
-
-public class FeatureSupport {
-
-    private static final String SUPPORTED = "1";
-
-    public static final String FK_MATV_FEATURE = "ro.have_matv_feature";
-    public static final String FK_FD_SUPPORT = "ro.mtk_fd_support";
-    public static final String FK_LOG2SERVER_APP = "ro.mtk_log2server_app";
-    public static final String FK_SMSREG_APP = "ro.mtk_smsreg_app";
-    public static final String FK_BSP_PACKAGE = "ro.mtk_bsp_package";
-    public static final String FK_DT_SUPPORT = "ro.mtk_dt_support";
-    public static final String FK_EVDO_DT_SUPPORT = "ro.evdo_dt_support";
-    public static final String FK_MTK_C2K_SUPPORT = "ro.mtk_c2k_support";
-    public static final String FK_MTK_SVLTE_SUPPORT = "ro.mtk_svlte_support";
-    public static final String FK_WFD_SUPPORT = "ro.mtk_wfd_support";
-    public static final String FK_DEVREG_APP = "ro.mtk_devreg_app";
-    public static final String FK_LTE_DC_SUPPORT = "ro.mtk_lte_dc_support";
-    public static final String FK_LTE_SUPPORT = "ro.mtk_lte_support";
-    public static final String FK_VOLTE_SUPPORT = "ro.mtk_volte_support";
-    public static final String FK_TC1_FEATURE = "ro.mtk_tc1_feature";
-    public static final String FK_WORLD_PHONE = "ro.mtk_world_phone";
-    public static final String FK_WCDMA_PREFERRED = "ro.mtk_rat_wcdma_preferred";
-    public static final String FK_VOW_SUPPORT = "ro.mtk_vow_support";
-    public static final String FK_VOICE_UNLOCK_SUPPORT = "ro.mtk_voice_unlock_support";
-    public static final String FK_AAL_SUPPORT = "ro.mtk_aal_support";
-    public static final String FK_CT4GREG_APP = "ro.mtk_ct4greg_app";
-    public static final String FK_C2K_SUPPORT = "ro.mtk_c2k_support";
-    public static final String FK_SVLTE_SUPPORT = "ro.mtk_svlte_support";
-    public static final String FK_SRLTE_SUPPORT = "ro.mtk_srlte_support";
-    public static final String FK_C2K_IRAT_SUPPORT = "ro.c2k.irat.support";
-    public static final String FK_C2K_MD_IRAT_SUPPORT = "ro.c2k.md.irat.support";
-    public static final String FK_VILTE_SUPPORT = "ro.mtk_vilte_support";
-    public static final String FK_MTK_WEARABLE_PLATFORM = "ro.mtk_wearable_platform";
-
-    public static final String PK_CDS_EM = "com.mediatek.connectivity";
-    public static final String ENG_LOAD = "eng";
-    public static final String USER_LOAD = "user";
-
-    public static boolean isSupported(String featureKey) {
-        return SUPPORTED.equals(SystemProperties.get(featureKey));
-    }
-    /**
-     * Get em svr support or not.
-     *
-     * @return true or false.
-     */
-    public static boolean isSupportedEmSrv() {
-        boolean isSupported = true;
-        if (SUPPORTED.equals(SystemProperties.get("ro.mtk_gmo_ram_optimize"))) {
-            if (!(ENG_LOAD.equals(SystemProperties.get("ro.build.type")))) {
-                isSupported = false;
-            }
-        }
-        return isSupported;
-    }
-
-    public static boolean isPackageExisted(Context context, String packageName) {
-        PackageManager pm = context.getPackageManager();
-        List<ApplicationInfo> packages = pm.getInstalledApplications(0);
-        for (ApplicationInfo ai : packages) {
-            if (ai.packageName.equals(packageName)) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    public static boolean isUserLoad() {
-        return USER_LOAD.equals(SystemProperties.get("ro.build.type"));
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/GPRS.java b/EngineerMode/src/com/mediatek/engineermode/GPRS.java
deleted file mode 100644
index f6641f1..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/GPRS.java
+++ /dev/null
@@ -1,782 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.SharedPreferences;
-import android.os.AsyncResult;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.os.PowerManager;
-import android.os.RemoteException;
-import android.os.ServiceManager;
-import android.os.SystemProperties;
-import android.telephony.TelephonyManager;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.RadioButton;
-import android.widget.RadioGroup;
-import android.widget.Spinner;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.android.internal.telephony.ITelephony;
-import com.android.internal.telephony.Phone;
-import com.android.internal.telephony.PhoneConstants;
-import com.android.internal.telephony.PhoneFactory;
-
-import android.telephony.SubscriptionManager;
-
-public class GPRS extends Activity implements OnClickListener {
-
-    String mContextCmdStringArray[] = {
-            "3,128,128,0,0,1,1500,\"1e3\",\"4e3\",1,0,0",
-            "3,128,128,0,0,1,1500,\"1e4\",\"1e5\",0,0,0",
-            "3,128,128,0,0,1,1500,\"1e3\",\"4e3\",1,0,0",
-            "3,256,256,0,0,1,1500,\"1e4\",\"1e5\",0,0,0",
-            "3,128,128,0,0,1,1500,\"1e4\",\"1e5\",0,0,0",
-            "3,256,256,0,0,1,1500,\"1e3\",\"4e3\",1,0,0",
-            "3,256,256,0,0,1,1500,\"1e3\",\"4e3\",1,0,0",
-            "3,128,128,0,0,1,1500,\"1e4\",\"1e5\",0,0,0",
-            "3,128,128,0,0,1,1500,\"1e4\",\"1e5\",0,0,0",
-            "3,128,128,0,0,1,1500,\"1e3\",\"4e3\",1,0,0",
-            "3,128,128,0,0,1,1500,\"1e6\",\"1e5\",0,0,0",
-            "3,128,128,0,0,1,1500,\"1e6\",\"1e5\",0,0,0",
-            "3,128,128,0,0,1,1500,\"1e6\",\"1e5\",0,0,0",
-            "3,128,128,0,0,1,1500,\"1e4\",\"1e5\",0,0,0",
-            "3,256,256,0,0,1,1500,\"1e3\",\"4e3\",1,0,0",
-            "3,512,512,0,0,1,1500,\"1e4\",\"1e5\",0,0,0" };
-
-    private static final int EVENT_GPRS_ATTACHED = 1;
-    private static final int EVENT_GPRS_DETACHED = 2;
-    private static final int EVENT_PDP_ACTIVATE = 3;
-    private static final int EVENT_PDP_DEACTIVATE = 4;
-    private static final int EVENT_SEND_DATA = 5;
-    private static final int EVENT_GPRS_INTERNAL_AT = 6;
-    private static final int EVENT_WRITE_IMEI = 7;
-    private static final int EVENT_GPRS_FD = 8;
-    private static final int EVENT_GPRS_ATTACH_TYPE = 9;
-
-    private static final int SCRI_DEFAULT_TIMEOUT = 20;
-
-    private static final String PROPERTY_PDN_REUSE = "ril.pdn.reuse";
-
-    private static final boolean MTK_GEMINI_SUPPORT =
-            "1".equals(SystemProperties.get("ro.mtk_gemini_support"));
-    private static final boolean MTK_BSP_PACKAGE =
-            "1".equals(SystemProperties.get("ro.mtk_bsp_package"));
-
-
-    private boolean mFlag = true;
-
-    // private static final String[] ActivateAT = null;
-
-    private Phone mPhone = null;
-    private Context mContext;
-
-    static final String LOG_TAG = "GPRS_EN";
-
-    private Button mBtnSim1;
-    private Button mBtnSim2;
-    private Button mBtnImei;
-    private TextView mTextDefSIMSelect;
-    private RadioGroup mRaGpDefSIMSelect;
-    private RadioButton mRaBtnSIM1Enabled;
-    private RadioButton mRaBtnSIM2Enabled;
-    private Button mBtnAttached;
-    private Button mBtnDetached;
-    private Button mBtnAttachedContinue;
-    private Button mBtnDetachedContinue;
-    private Button mBtnNotSpecify;
-    private RadioGroup mRaGpPDPSelect;
-    private RadioGroup mRaGpUsageSelect;
-    private Spinner mSPinnerPDPContext;
-    private Button mBtnActivate;
-    private Button mBtnDeactivate;
-    private EditText mEditDataLen;
-    private Button mBtnSendData;
-    private RadioGroup mGprstAttachSelect;
-    private Button mBtnPdnReuseOn;
-    private Button mBtnPdnReuseOff;
-    private EditText mEditImeiValue;
-    private TextView mAttachApn;
-
-    private int mPDPSelect = 0;
-    private int mUsageSelect = 0;
-    private int mPDPContextIndex = 0;
-
-    private ArrayAdapter<String> mSpinnerAdapter;
-
-    private boolean mAlive = false;
-
-    private AlertDialog mAlertDialog;
-
-    public static final String PREFERENCE_GPRS = "com.mtk.GPRS";
-    public static final String PREF_ATTACH_MODE = "ATTACH_MODE";
-    public static final String PREF_ATTACH_MODE_SIM = "ATTACH_MODE_SIM";
-    public static final int ATTACH_MODE_ALWAYS = 1;
-    public static final int ATTACH_MODE_WHEN_NEEDED = 0;
-    public static final int ATTACH_MODE_NOT_SPECIFY = -1;
-
-    private static final int PDP_CONTEXT_MAX = 15;
-
-    @Override
-    public void onDestroy() {
-        mAlive = false;
-        super.onDestroy();
-        if (mAlertDialog != null && mAlertDialog.isShowing()) {
-            mAlertDialog.dismiss();
-        }
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.gprs);
-
-        Log.v(LOG_TAG, "onCreate");
-        mAlive = true;
-
-        mPhone = PhoneFactory.getDefaultPhone();
-        mContext = mPhone.getContext();
-        Log.v(LOG_TAG, "onCreate mPhone:" + mPhone + " mContext =" + mContext);
-
-        // create ArrayAdapter for Spinner
-        mSpinnerAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item);
-        mSpinnerAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        for (int i = 1; i < PDP_CONTEXT_MAX; i++) {
-            mSpinnerAdapter.add("PDP Context " + String.valueOf(i));
-        }
-        mSpinnerAdapter.add("PDP Context 30");
-        mSpinnerAdapter.add("PDP Context 31");
-
-        // get the object of the controls
-        mBtnSim1 = (Button) findViewById(R.id.Sim1);
-        mBtnSim2 = (Button) findViewById(R.id.Sim2);
-        mBtnSim1.setOnClickListener(this);
-        mBtnSim2.setOnClickListener(this);
-        if (!MTK_GEMINI_SUPPORT) {
-            mBtnSim1.setVisibility(View.GONE);
-            mBtnSim2.setVisibility(View.GONE);
-        }
-
-        String imei = TelephonyManager.getDefault().getDeviceId();
-        // TextUtils.empty
-        Log.v(LOG_TAG, "Default IMEI:" + imei);
-        mEditImeiValue = (EditText) findViewById(R.id.IMEI_VALUE);
-        mEditImeiValue.setText(imei);
-
-        mBtnImei = (Button) findViewById(R.id.IMEI);
-        mBtnImei.setOnClickListener(this);
-
-        // remove IMEI item
-        mEditImeiValue.setEnabled(false);
-        mBtnImei.setVisibility(View.INVISIBLE);
-
-        if (MTK_GEMINI_SUPPORT && MTK_BSP_PACKAGE) {
-            mRaGpDefSIMSelect = (RadioGroup) findViewById(R.id.DefSIM);
-            mTextDefSIMSelect = (TextView) findViewById(R.id.DefSIMText);
-            mRaBtnSIM1Enabled = (RadioButton) findViewById(R.id.SIM1Enabled);
-            mRaBtnSIM2Enabled = (RadioButton) findViewById(R.id.SIM2Enabled);
-
-            mTextDefSIMSelect.setVisibility(View.VISIBLE);
-            mRaGpDefSIMSelect.setVisibility(View.VISIBLE);
-            mRaBtnSIM1Enabled.setVisibility(View.VISIBLE);
-            mRaBtnSIM2Enabled.setVisibility(View.VISIBLE);
-
-            int defaultDataSub = SubscriptionManager.getDefaultDataSubId();
-            int defaultSim = SubscriptionManager.getSlotId(defaultDataSub);
-            if (defaultSim == SubscriptionManager.INVALID_SIM_SLOT_INDEX) {
-                defaultSim = PhoneConstants.SIM_ID_1;
-                mRaBtnSIM1Enabled.toggle();
-            } else if (defaultSim == PhoneConstants.SIM_ID_2) {
-                mRaBtnSIM2Enabled.toggle();
-            } else {
-                mRaBtnSIM1Enabled.toggle();
-            }
-
-            mRaGpDefSIMSelect.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
-                public void onCheckedChanged(RadioGroup arg0, int arg1) {
-                    if (arg0.getCheckedRadioButtonId() == R.id.SIM1Enabled) {
-                        SubscriptionManager.from(mContext).setDefaultDataSubId(SubscriptionManager
-                                .getSubId(PhoneConstants.SIM_ID_1)[0]);
-                    } else if (arg0.getCheckedRadioButtonId() == R.id.SIM2Enabled) {
-                        SubscriptionManager.from(mContext).setDefaultDataSubId(SubscriptionManager
-                                .getSubId(PhoneConstants.SIM_ID_2)[0]);
-                    }
-                    rebootAlert();
-                }
-            });
-        }
-
-        mBtnAttached = (Button) findViewById(R.id.Attached);
-        mBtnDetached = (Button) findViewById(R.id.Detached);
-        mBtnAttachedContinue = (Button) findViewById(R.id.always_mode_continue);
-        mBtnDetachedContinue = (Button) findViewById(R.id.when_needed_continue);
-        mBtnNotSpecify = (Button) findViewById(R.id.not_specify);
-
-        mRaGpPDPSelect = (RadioGroup) findViewById(R.id.PDPSelect);
-        mRaGpUsageSelect = (RadioGroup) findViewById(R.id.UsageSelect);
-        mSPinnerPDPContext = (Spinner) findViewById(R.id.ContextNumber);
-        mBtnActivate = (Button) findViewById(R.id.Activate);
-        mBtnDeactivate = (Button) findViewById(R.id.Deactivate);
-        mEditDataLen = (EditText) findViewById(R.id.DataLength);
-        mBtnSendData = (Button) findViewById(R.id.SendData);
-
-        mGprstAttachSelect = (RadioGroup) findViewById(R.id.GprsAttachType);
-
-        mBtnPdnReuseOn = (Button) findViewById(R.id.pdn_reuse_on);
-        mBtnPdnReuseOff = (Button) findViewById(R.id.pdn_reuse_off);
-
-        mAttachApn = (TextView)  findViewById(R.id.attachApn);
-
-        // setOnClickListener for the controls
-        mBtnAttached.setOnClickListener(this);
-        mBtnDetached.setOnClickListener(this);
-        mBtnAttachedContinue.setOnClickListener(this);
-        mBtnDetachedContinue.setOnClickListener(this);
-        mBtnNotSpecify.setOnClickListener(this);
-        mSPinnerPDPContext.setAdapter(mSpinnerAdapter);
-        mBtnActivate.setOnClickListener(this);
-        mBtnDeactivate.setOnClickListener(this);
-        mBtnSendData.setOnClickListener(this);
-        mBtnPdnReuseOn.setOnClickListener(this);
-        mBtnPdnReuseOff.setOnClickListener(this);
-
-        mSPinnerPDPContext
-                .setOnItemSelectedListener(new OnItemSelectedListener() {
-
-                    public void onItemSelected(AdapterView<?> arg0, View arg1,
-                            int arg2, long arg3) {
-                        // TODO Auto-generated method stub
-                        mPDPContextIndex = arg2;
-                    }
-
-                    public void onNothingSelected(AdapterView<?> arg0) {
-                        // TODO Auto-generated method stub
-
-                    }
-
-                });
-
-        mGprstAttachSelect
-                .setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
-                    public void onCheckedChanged(RadioGroup arg0, int arg1) {
-                        Log.v(LOG_TAG, "onCheckedChanged:GprsAlwaysAttach");
-                        // TODO Auto-generated method stub
-                        if (arg0.getCheckedRadioButtonId() == R.id.GprsAlwaysAttach) {
-
-                            SystemProperties.set("persist.radio.gprs.attach.type", "1");
-                            String cmdStr[] = { "AT+EGTYPE=1", "" };
-                            mPhone.invokeOemRilRequestStrings(cmdStr,
-                                mResponseHander.obtainMessage(EVENT_GPRS_ATTACH_TYPE));
-                        }
-                        if (arg0.getCheckedRadioButtonId() == R.id.GprsWhenNeeded) {
-                            Log.v(LOG_TAG, "onCheckedChanged:GprsWhenNeeded");
-                            SystemProperties.set("persist.radio.gprs.attach.type", "0");
-                            String cmdStr[] = { "AT+EGTYPE=0", "" };
-                            mPhone.invokeOemRilRequestStrings(cmdStr,
-                                mResponseHander.obtainMessage(EVENT_GPRS_ATTACH_TYPE));
-                        }
-                    }
-                });
-
-        mRaGpPDPSelect
-                .setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
-                    public void onCheckedChanged(RadioGroup arg0, int arg1) {
-                        if (arg0.getCheckedRadioButtonId() == R.id.FirstPDP) {
-                            mPDPSelect = 0;
-                            mRaGpUsageSelect.clearCheck();
-                            mRaGpUsageSelect.getChildAt(0).setEnabled(false);
-                            mRaGpUsageSelect.getChildAt(1).setEnabled(false);
-                        }
-                        if (arg0.getCheckedRadioButtonId() == R.id.SecondPDP) {
-                            mPDPSelect = 1;
-                            mRaGpUsageSelect.check(R.id.Primary);
-                            mRaGpUsageSelect.getChildAt(0).setEnabled(true);
-                            mRaGpUsageSelect.getChildAt(1).setEnabled(true);
-                        }
-                    }
-                });
-
-        mRaGpUsageSelect
-                .setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
-                    public void onCheckedChanged(RadioGroup arg0, int arg1) {
-                        if (arg0.getCheckedRadioButtonId() == R.id.Primary) {
-                            mUsageSelect = 0;
-                        }
-                        if (arg0.getCheckedRadioButtonId() == R.id.Secondary) {
-                            mUsageSelect = 1;
-                        }
-                    }
-                });
-
-        // set initial value for PDP select
-        mRaGpPDPSelect.check(R.id.FirstPDP);
-
-        int gprsAttachType = SystemProperties.getInt(
-                "persist.radio.gprs.attach.type", 1);
-
-        if (gprsAttachType == 1) {
-            mGprstAttachSelect.check(R.id.GprsAlwaysAttach);
-        } else {
-            mGprstAttachSelect.check(R.id.GprsWhenNeeded);
-        }
-
-        showDefaultSim();
-
-        AlertDialog.Builder builder = new AlertDialog.Builder(GPRS.this);
-        mAlertDialog = builder.create();
-        mAlertDialog.setButton(DialogInterface.BUTTON_POSITIVE, "OK" , (DialogInterface.OnClickListener)null);
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        updateAttachModeMMI();
-
-        if ("0".equals(SystemProperties.get(PROPERTY_PDN_REUSE, "1"))) {
-            mBtnPdnReuseOn.setEnabled(true);
-            mBtnPdnReuseOff.setEnabled(false);
-        } else {
-            mBtnPdnReuseOn.setEnabled(false);
-            mBtnPdnReuseOff.setEnabled(true);
-        }
-    }
-
-    @Override
-    public void onClick(View arg0) {
-        Log.v(LOG_TAG, "onClick:" + arg0.getId());
-        Log.v(LOG_TAG, "onClick: mPhone = " + mPhone + " mContext = " + mContext);
-
-        if (arg0.getId() == mBtnImei.getId()) {
-            String imeiString[] = { "AT+EGMR=1,", "" };
-            if (MTK_GEMINI_SUPPORT) {
-                int simId = getDefaultDataPhoneId();
-                if (simId == PhoneConstants.SIM_ID_1) {
-                    imeiString[0] = "AT+EGMR=1,7,\"" + mEditImeiValue.getText()
-                            + "\"";
-                } else if (simId == PhoneConstants.SIM_ID_2) {
-                    imeiString[0] = "AT+EGMR=1,10,\""
-                            + mEditImeiValue.getText() + "\"";
-                }
-            } else {
-                imeiString[0] = "AT+EGMR=1,7,\"" + mEditImeiValue.getText()
-                        + "\"";
-            }
-
-            Log.v(LOG_TAG, "IMEI String:" + imeiString[0]);
-            mPhone.invokeOemRilRequestStrings(imeiString, mResponseHander
-                    .obtainMessage(EVENT_WRITE_IMEI));
-        }
-
-        if (arg0 == mBtnSim1) {
-            if (MTK_GEMINI_SUPPORT) {
-                Log.v(LOG_TAG, "onClick:Phone1 subId = " + SubscriptionManager.getSubId(
-                    PhoneConstants.SIM_ID_1)[0]);
-                SubscriptionManager.from(mContext).setDefaultDataSubId(SubscriptionManager
-                                .getSubId(PhoneConstants.SIM_ID_1)[0]);
-            }
-
-            mPhone = PhoneFactory.getPhone(getDefaultDataPhoneId());
-            Log.v(LOG_TAG, "onClick:SIM 1");
-            showDefaultSim();
-            String imei = mPhone.getDeviceId();
-            mEditImeiValue.setText(imei);
-            Log.e(LOG_TAG, "IMEI 1: " + imei);
-        }
-
-        if (arg0 == mBtnSim2) {
-            Log.v(LOG_TAG, "onClick:Phone2 subId = " + SubscriptionManager.getSubId(
-                PhoneConstants.SIM_ID_2)[0]);
-            SubscriptionManager.from(mContext).setDefaultDataSubId(SubscriptionManager
-                                .getSubId(PhoneConstants.SIM_ID_2)[0]);
-            mPhone = PhoneFactory.getPhone(getDefaultDataPhoneId());
-            Log.v(LOG_TAG, "onClick:SIM 2");
-            showDefaultSim();
-            String imei = mPhone.getDeviceId();
-            mEditImeiValue.setText(imei);
-            Log.e(LOG_TAG, "IMEI 2: " + imei);
-        }
-
-        if (arg0.getId() == mBtnAttached.getId()) {
-            String attachedAT[] = { "AT+CGATT=1", "" };
-            mPhone.invokeOemRilRequestStrings(attachedAT, mResponseHander
-                    .obtainMessage(EVENT_GPRS_ATTACHED));
-        }
-
-        if (arg0.getId() == mBtnDetached.getId()) {
-            String detachedAT[] = { "AT+CGATT=0", "" };
-            mPhone.invokeOemRilRequestStrings(detachedAT, mResponseHander
-                    .obtainMessage(EVENT_GPRS_DETACHED));
-        }
-
-        SharedPreferences preference = getSharedPreferences(PREFERENCE_GPRS, 0);
-        SharedPreferences.Editor editor = preference.edit();
-
-        if (arg0 == mBtnAttachedContinue) {
-            Log.v(LOG_TAG, "onClick:mBtnAttachedContinue");
-            SystemProperties.set("persist.radio.gprs.attach.type", "1");
-            String cmdStr[] = { "AT+EGTYPE=1,1", "" };
-            mPhone.invokeOemRilRequestStrings(cmdStr, mResponseHander
-                    .obtainMessage(EVENT_GPRS_ATTACH_TYPE));
-
-            editor.putInt(PREF_ATTACH_MODE, ATTACH_MODE_ALWAYS);
-        } else if (arg0 == mBtnDetachedContinue) {
-            Log.v(LOG_TAG, "onClick:mBtnDetachedContinue");
-            SystemProperties.set("persist.radio.gprs.attach.type", "0");
-            String cmdStr[] = { "AT+EGTYPE=0,1", "" };
-            mPhone.invokeOemRilRequestStrings(cmdStr, mResponseHander
-                    .obtainMessage(EVENT_GPRS_ATTACH_TYPE));
-
-            editor.putInt(PREF_ATTACH_MODE, ATTACH_MODE_WHEN_NEEDED);
-        } else if (arg0 == mBtnNotSpecify) {
-            editor.putInt(PREF_ATTACH_MODE, ATTACH_MODE_NOT_SPECIFY);
-        }
-
-        editor.putInt(PREF_ATTACH_MODE_SIM, SubscriptionManager.getSlotId(mPhone.getSubId()));
-        editor.commit();
-        updateAttachModeMMI();
-
-        if (arg0.getId() == mBtnActivate.getId()) {
-            mFlag = true;
-
-            if (0 == mPDPSelect) {
-                String activateAT[] = { "AT+CGQMIN=1", "" };
-                mPhone.invokeOemRilRequestStrings(activateAT, mResponseHander
-                        .obtainMessage(EVENT_GPRS_INTERNAL_AT));
-                activateAT[0] = "AT+CGQREQ=1";
-                activateAT[1] = "";
-                mPhone.invokeOemRilRequestStrings(activateAT, mResponseHander
-                        .obtainMessage(EVENT_GPRS_INTERNAL_AT));
-                activateAT[0] = "AT+CGDCONT=1,\"IP\",\"internet\",\"192.168.1.1\",0,0";
-                activateAT[1] = "";
-                mPhone.invokeOemRilRequestStrings(activateAT, mResponseHander
-                        .obtainMessage(EVENT_GPRS_INTERNAL_AT));
-                activateAT[0] = "AT+CGEQREQ=1,"
-                        + mContextCmdStringArray[mPDPContextIndex];
-                activateAT[1] = "";
-                mPhone.invokeOemRilRequestStrings(activateAT, mResponseHander
-                        .obtainMessage(EVENT_GPRS_INTERNAL_AT));
-                activateAT[0] = "AT+ACTTEST=1,1";
-                activateAT[1] = "";
-                mPhone.invokeOemRilRequestStrings(activateAT, mResponseHander
-                        .obtainMessage(EVENT_PDP_ACTIVATE));
-            }
-            if (1 == mPDPSelect) {
-                String activateAT[] = { "AT+CGQMIN=2", "" };
-                mPhone.invokeOemRilRequestStrings(activateAT, mResponseHander
-                        .obtainMessage(EVENT_GPRS_INTERNAL_AT));
-                activateAT[0] = "AT+CGQREQ=2";
-                activateAT[1] = "";
-                mPhone.invokeOemRilRequestStrings(activateAT, mResponseHander
-                        .obtainMessage(EVENT_GPRS_INTERNAL_AT));
-                if (0 == mUsageSelect) {
-                    activateAT[0] = "AT+CGDCONT=2,\"IP\",\"internet\",\"192.168.1.1\",0,0";
-                }
-                if (1 == mUsageSelect) {
-                    activateAT[0] = "AT+CGDSCONT=2,1,0,0";
-                }
-                activateAT[1] = "";
-                mPhone.invokeOemRilRequestStrings(activateAT, mResponseHander
-                        .obtainMessage(EVENT_GPRS_INTERNAL_AT));
-                activateAT[0] = "AT+CGEQREQ=2,"
-                        + mContextCmdStringArray[mPDPContextIndex];
-                activateAT[1] = "";
-                mPhone.invokeOemRilRequestStrings(activateAT, mResponseHander
-                        .obtainMessage(EVENT_GPRS_INTERNAL_AT));
-                activateAT[0] = "AT+ACTTEST=1,2";
-                activateAT[1] = "";
-                mPhone.invokeOemRilRequestStrings(activateAT, mResponseHander
-                        .obtainMessage(EVENT_PDP_ACTIVATE));
-
-            }
-        }
-
-        if (arg0.getId() == mBtnDeactivate.getId()) {
-            mFlag = true;
-
-            String deactivateAT[] = new String[2];
-            if (0 == mPDPSelect) {
-                deactivateAT[0] = "AT+ACTTEST=0,1";
-            }
-            if (1 == mPDPSelect) {
-                deactivateAT[0] = "AT+ACTTEST=0,2";
-            }
-            deactivateAT[1] = "";
-            mPhone.invokeOemRilRequestStrings(deactivateAT, mResponseHander
-                    .obtainMessage(EVENT_PDP_DEACTIVATE));
-
-        }
-
-        if (arg0.getId() == mBtnSendData.getId()) {
-            String strDataLength = mEditDataLen.getText().toString();
-            String sendDataAT[] = new String[2];
-            if (0 == mPDPSelect) {
-                sendDataAT[0] = "AT+CGSDATA=" + strDataLength + ",1";
-            }
-            if (1 == mPDPSelect) {
-                sendDataAT[0] = "AT+CGSDATA=" + strDataLength + ",2";
-            }
-            sendDataAT[1] = "";
-            mPhone.invokeOemRilRequestStrings(sendDataAT, mResponseHander
-                    .obtainMessage(EVENT_SEND_DATA));
-        }
-
-        if (arg0.getId() == mBtnPdnReuseOn.getId()) {
-            SystemProperties.set(PROPERTY_PDN_REUSE, "1");
-            mBtnPdnReuseOn.setEnabled(false);
-            mBtnPdnReuseOff.setEnabled(true);
-        } else if (arg0.getId() == mBtnPdnReuseOff.getId()) {
-            SystemProperties.set(PROPERTY_PDN_REUSE, "0");
-            mBtnPdnReuseOn.setEnabled(true);
-            mBtnPdnReuseOff.setEnabled(false);
-        }
-    }
-
-    private Handler mResponseHander = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-
-            if (!mAlive) {
-                return;
-            }
-
-            if (mAlertDialog.isShowing()) {
-                mAlertDialog.dismiss();
-            }
-
-            AsyncResult ar;
-            switch (msg.what) {
-                case EVENT_GPRS_ATTACHED:
-                    ar = (AsyncResult) msg.obj;
-                    if (ar.exception == null) {
-                        mAlertDialog.setTitle("GPRS Attached");
-                        mAlertDialog.setMessage("GPRS Attached succeeded.");
-                        mAlertDialog.show();
-                    } else {
-                        mAlertDialog.setTitle("GPRS Attached");
-                        mAlertDialog.setMessage("GPRS Attache failed.");
-                        mAlertDialog.show();
-                    }
-                    break;
-                case EVENT_GPRS_DETACHED:
-                    ar = (AsyncResult) msg.obj;
-                    if (ar.exception == null) {
-                        mAlertDialog.setTitle("GPRS Detached");
-                        mAlertDialog.setMessage("GPRS Detached succeeded.");
-                        mAlertDialog.show();
-                    } else {
-                        mAlertDialog.setTitle("GPRS Detached");
-                        mAlertDialog.setMessage("GPRS Detached failed.");
-                        mAlertDialog.show();
-                    }
-                    break;
-                case EVENT_GPRS_FD:
-                    ar = (AsyncResult) msg.obj;
-                    if (ar.exception == null) {
-                        mAlertDialog.setTitle("GPRS Fast Dormancy");
-                        mAlertDialog.setMessage("GPRS Fast Dormancy command succeeded.");
-                        mAlertDialog.show();
-                    } else {
-                        mAlertDialog.setTitle("GPRS Fast Dormancy");
-                        mAlertDialog.setMessage("GPRS Fast Dormancy command failed.");
-                        mAlertDialog.show();
-                    }
-                    break;
-                case EVENT_PDP_ACTIVATE:
-                    ar = (AsyncResult) msg.obj;
-                    if (ar.exception == null && mFlag) {
-                        mAlertDialog.setTitle("PDP Activate");
-                        mAlertDialog.setMessage("PDP Activate succeeded.");
-                        mAlertDialog.show();
-                    } else {
-                        mAlertDialog.setTitle("PDP Activate");
-                        mAlertDialog.setMessage("PDP Activate failed.");
-                        mAlertDialog.show();
-                    }
-                    break;
-                case EVENT_PDP_DEACTIVATE:
-                    ar = (AsyncResult) msg.obj;
-                    if (ar.exception == null) {
-                        mAlertDialog.setTitle("PDP Deactivate");
-                        mAlertDialog.setMessage("PDP Deactivate succeeded.");
-                        mAlertDialog.show();
-                    } else {
-                        mAlertDialog.setTitle("PDP Deactivate");
-                        mAlertDialog.setMessage("PDP Deactivate failed.");
-                        mAlertDialog.show();
-                    }
-                    break;
-                case EVENT_SEND_DATA:
-                    ar = (AsyncResult) msg.obj;
-                    if (ar.exception == null) {
-                        mAlertDialog.setTitle("Send Data");
-                        mAlertDialog.setMessage("Send Data succeeded.");
-                        mAlertDialog.show();
-                    } else {
-                        mAlertDialog.setTitle("Send Data");
-                        mAlertDialog.setMessage("Send Data failed.");
-                        mAlertDialog.show();
-                    }
-                    break;
-                case EVENT_GPRS_INTERNAL_AT:
-                    ar = (AsyncResult) msg.obj;
-                    if (ar.exception != null) {
-                        mFlag = false;
-                    }
-                    break;
-                case EVENT_WRITE_IMEI:
-                    ar = (AsyncResult) msg.obj;
-                    if (ar.exception == null) {
-                        mAlertDialog.setTitle("IMEI WRITE");
-                        mAlertDialog.setMessage("The IMEI is writen successfully.");
-                        mAlertDialog.show();
-                    } else {
-                        mAlertDialog.setTitle("IMEI WRITE");
-                        mAlertDialog.setMessage("Fail to write IMEI due to radio unavailable or something else.");
-                        mAlertDialog.show();
-                    }
-                    break;
-                default:
-                    break;
-            }
-        }
-    };
-
-    private void showDefaultSim() {
-        int simId = getDefaultDataPhoneId();
-        Log.v(LOG_TAG, "showDefaultSim: simId = " + simId);
-
-        if (MTK_GEMINI_SUPPORT) {
-            if (simId == PhoneConstants.SIM_ID_1) {
-                mBtnSim1.setEnabled(false);
-                mBtnSim2.setEnabled(true);
-            } else if (simId == PhoneConstants.SIM_ID_2) {
-                mBtnSim1.setEnabled(true);
-                mBtnSim2.setEnabled(false);
-            }
-        }
-
-    }
-
-    private void rebootAlert() {
-        DialogInterface.OnClickListener dialogClickListener = new DialogInterface.OnClickListener() {
-            @Override
-            public void onClick(DialogInterface dialog, int which) {
-                switch (which) {
-                case DialogInterface.BUTTON_POSITIVE:
-                    PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);
-                    pm.reboot("");
-                    Toast.makeText(getApplicationContext(),
-                            "Restart Device...", Toast.LENGTH_LONG).show();
-                    break;
-                case DialogInterface.BUTTON_NEGATIVE:
-                    break;
-                default:
-                    break;
-                }
-            }
-        };
-        AlertDialog.Builder builder = new AlertDialog.Builder(this);
-        builder.setMessage("Reboot?").setPositiveButton("Yes",
-                dialogClickListener).setNegativeButton("No",
-                dialogClickListener).setTitle("Warning").show();
-    }
-
-    private void updateAttachModeMMI() {
-        SharedPreferences preference = getSharedPreferences(PREFERENCE_GPRS, 0);
-        int attachMode = preference.getInt(PREF_ATTACH_MODE,
-                ATTACH_MODE_NOT_SPECIFY);
-
-        switch (attachMode) {
-        case ATTACH_MODE_ALWAYS:
-            mBtnAttachedContinue.setEnabled(false);
-            mBtnDetachedContinue.setEnabled(true);
-            mBtnNotSpecify.setEnabled(true);
-            break;
-        case ATTACH_MODE_WHEN_NEEDED:
-            mBtnAttachedContinue.setEnabled(true);
-            mBtnDetachedContinue.setEnabled(false);
-            mBtnNotSpecify.setEnabled(true);
-            break;
-        case ATTACH_MODE_NOT_SPECIFY:
-            mBtnAttachedContinue.setEnabled(true);
-            mBtnDetachedContinue.setEnabled(true);
-            mBtnNotSpecify.setEnabled(false);
-            break;
-        default:
-            break;
-        }
-
-        //[ICCID],[Protocol],[Auth Type],[Username],[APN]
-        String attachApnCache = SystemProperties.get("persist.radio.ia");
-        String networkAssignedApn = SystemProperties.get("ril.ia.network");
-        if (attachApnCache == null || attachApnCache.length() == 0) {
-            mAttachApn.setText("Attach APN: no attach apn is set");
-        } else {
-            String[] splitedString = attachApnCache.split(",");
-            if (splitedString.length == 5) {
-                mAttachApn.setText("Attach APN: " + splitedString[4] + "\nProtocol: " + splitedString[1] +
-                    "\nAuth Type: " + splitedString[2] + "\nUsername: " + splitedString[3] +
-                    "\nNetwork assigned APN: " + networkAssignedApn);
-            } else {
-                mAttachApn.setText("Attach APN: invalid value (error)");
-            }
-        }
-    }
-
-    private int getDefaultDataPhoneId() {
-        int phoneId = SubscriptionManager.from(mContext).getDefaultDataPhoneId();
-        if (phoneId < PhoneConstants.SIM_ID_1 || phoneId > PhoneConstants.SIM_ID_2) {
-            Log.v(LOG_TAG, "invalid Phone id, set to sim 1");
-            phoneId = PhoneConstants.SIM_ID_1;
-        }
-        return phoneId;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/MobileDataPreferred.java b/EngineerMode/src/com/mediatek/engineermode/MobileDataPreferred.java
deleted file mode 100644
index 86b1603..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/MobileDataPreferred.java
+++ /dev/null
@@ -1,141 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.os.ServiceManager;
-import android.os.SystemProperties;
-import android.preference.CheckBoxPreference;
-import android.preference.Preference;
-import android.preference.PreferenceActivity;
-import android.preference.PreferenceScreen;
-import android.provider.Settings;
-import android.telephony.TelephonyManager;
-import android.util.Log;
-
-import com.android.internal.telephony.ITelephony;
-import com.android.internal.telephony.Phone;
-import com.android.internal.telephony.PhoneConstants;
-import com.android.internal.telephony.PhoneFactory;
-
-public class MobileDataPreferred extends PreferenceActivity {
-    private static final String TAG = "EM/CallDataPreferred";
-    private static final String DATA_PREFER_KEY = "data_prefer_key";
-    private static final int PCH_DATA_PREFER = 0;
-    private static final int PCH_CALL_PREFER = 1;
-    private static final int MOBILE_DATA_PREF_DIALOG = 10;
-
-    private CheckBoxPreference mMobileDataPref;
-    private ITelephony mTelephony = null;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        addPreferencesFromResource(R.xml.gsm_umts_options);
-
-        PreferenceScreen prefSet = getPreferenceScreen();
-        mMobileDataPref = (CheckBoxPreference) prefSet.findPreference(DATA_PREFER_KEY);
-
-        int pchFlag = SystemProperties.getInt("persist.radio.gprs.prefer", 0);
-        Log.v("@M_" + TAG, "Orgin value persist.radio.gprs.prefer = " + pchFlag);
-        mMobileDataPref.setChecked(pchFlag == 0 ? false : true);
-
-        if (mTelephony == null) {
-            mTelephony = ITelephony.Stub.asInterface(ServiceManager.getService("phone"));
-        }
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        if (id == MOBILE_DATA_PREF_DIALOG) {
-            return new AlertDialog.Builder(this)
-                    .setTitle(android.R.string.dialog_alert_title)
-                    .setCancelable(false)
-                    .setIcon(android.R.drawable.ic_dialog_alert)
-                    .setMessage(R.string.pch_data_prefer_message)
-                    .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            setGprsTransferType(PCH_DATA_PREFER);
-                        }
-                    })
-                    .setNegativeButton(android.R.string.no, new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            mMobileDataPref.setChecked(false);
-                        }
-                    })
-                    .create();
-        }
-        return super.onCreateDialog(id);
-    }
-
-    /**
-     * Invoked on each preference click in this hierarchy, overrides
-     * PreferenceActivity's implementation. Used to make sure we track the
-     * preference click events.
-     */
-    @Override
-    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen,
-            Preference preference) {
-
-        if (mMobileDataPref.equals(preference)) {
-            if (mMobileDataPref.isChecked()) {
-                showDialog(MOBILE_DATA_PREF_DIALOG);
-            } else {
-                setGprsTransferType(PCH_CALL_PREFER);
-            }
-            return true;
-        }
-
-        return super.onPreferenceTreeClick(preferenceScreen, preference);
-    }
-
-    private void setGprsTransferType(int type) {
-        String property = (type == PCH_DATA_PREFER ? "1" : "0");
-        Log.v("@M_" + TAG, "Change persist.radio.gprs.prefer to " + property);
-        SystemProperties.set("persist.radio.gprs.prefer", property);
-        for (int i = 0 ; i < TelephonyManager.getDefault().getPhoneCount(); i++) {
-            Phone phone = PhoneFactory.getPhone(i);
-
-
-
-            phone.invokeOemRilRequestStrings(new String[] {"AT+EGTP=" + type, ""}, null);
-            phone.invokeOemRilRequestStrings(new String[] {"AT+EMPPCH=" + type, ""}, null);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/PrefsFragment.java b/EngineerMode/src/com/mediatek/engineermode/PrefsFragment.java
deleted file mode 100644
index 5c3e2bd..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/PrefsFragment.java
+++ /dev/null
@@ -1,567 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-import android.content.Context;
-import android.content.Intent;
-import android.net.ConnectivityManager;
-import android.os.Bundle;
-import android.os.SystemProperties;
-import android.os.UserHandle;
-import android.os.UserManager;
-import android.preference.Preference;
-import android.preference.PreferenceFragment;
-import android.preference.PreferenceScreen;
-import android.telephony.TelephonyManager;
-import android.util.Log;
-import android.provider.Settings;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.cip.CipUtil;
-import com.mediatek.engineermode.ptp.PtpList;
-import java.io.File;
-
-public class PrefsFragment extends PreferenceFragment {
-    private static final String TAG = "EM/PrefsFragment";
-    private static int[] FRAGMENT_RES = {R.xml.telephony,
-            R.xml.connectivity, R.xml.hardware_testing, R.xml.location,
-            R.xml.log_and_debugging, R.xml.others};
-
-    private static int[] FRAGMENT_RES_WIFIONLY = {
-            R.xml.connectivity, R.xml.hardware_testing, R.xml.location,
-            R.xml.log_and_debugging, R.xml.others};
-    private static final String INNER_LOAD_INDICATOR_FILE =
-            "/system/etc/system_update/address.xml";
-    private static final int MTK_NFC_CHIP_TYPE_MSR3110 = 0x01;
-    private static final int MTK_NFC_CHIP_TYPE_6605 = 0x02;
-    private static final String FILE_DHRY_0 = "/sys/bus/platform/drivers/slt_cpu0_dhry/slt_cpu0_dhry";
-    private static final String[] KEY_REMOVE_ARRAY = {"dcm", "deep_idle", "cpu_dvfs", "pll_cg",
-                    "mcdi_setting", "sleep_mode", "de_sense", "display", "battery_log", "sensor",
-                    "io", "touchscreen", "memory"};
-    private int mXmlResId;
-    private boolean mIsInit = false;
-
-    /**
-     * Default empty constructor
-     */
-    public PrefsFragment() {
-
-    }
-
-    /**
-     * Set this fragment resource
-     *
-     * @param resIndex
-     *            Resource ID
-     */
-    public void setResource(int resIndex) {
-        mXmlResId = resIndex;
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        if(isWifiOnly()){
-            FRAGMENT_RES = FRAGMENT_RES_WIFIONLY;
-        }
-
-    }
-    @Override
-    public boolean onPreferenceTreeClick(PreferenceScreen screen, Preference pref) {
-        if (pref == null || FeatureSupport.isSupportedEmSrv()) {
-            return super.onPreferenceTreeClick(screen, pref);
-        }
-        String id = pref.getKey();
-        for (String c : KEY_REMOVE_ARRAY) {
-            if (id.equals(c)) {
-                Toast.makeText(getActivity(), R.string.notice_wo_emsvr,
-                    Toast.LENGTH_LONG).show();
-                return true;
-            }
-        }
-        return super.onPreferenceTreeClick(screen, pref);
-    }
-    @Override
-    public void onStart() {
-        super.onStart();
-    }
-
-    private void removePreference(PreferenceScreen prefScreen, String prefId) {
-        Preference pref = (Preference) findPreference(prefId);
-        if (pref != null) {
-            prefScreen.removePreference(pref);
-        }
-    }
-
-    private void removeUnsupportedItems() {
-        PreferenceScreen screen = getPreferenceScreen();
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_DT_SUPPORT)) {
-            removePreference(screen, "dualtalk_network_info");
-            removePreference(screen, "dualtalk_bandmode");
-        }
-
-        // Duplicate with Network Selecting, remove them
-        removePreference(screen, "digital_standard");
-
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_MTK_C2K_SUPPORT)) {
-            if (!FeatureSupport.isSupported(FeatureSupport.FK_DT_SUPPORT)) {
-                removePreference(screen, "dualtalk_network_select");
-            } else {
-                removePreference(screen, "network_select");
-            }
-        }
-
-        // if
-        // (NfcAdapter.getDefaultAdapter(getActivity().getApplicationContext())
-        // == null) {
-        // removePreference(screen, "nfc");
-        // }
-        // it's ok
-        int versionCode = Settings.Global.getInt(getActivity().
-                getContentResolver(), "nfc_controller_code", -1);
-        if (FRAGMENT_RES[mXmlResId] == R.xml.connectivity) {
-            switch (versionCode) {
-                case MTK_NFC_CHIP_TYPE_MSR3110 :
-                    Log.i("@M_" + TAG, "MSR3110 nfc chip, call nfc");
-                    removePreference(screen, "hqanfc");
-                    break;
-                case MTK_NFC_CHIP_TYPE_6605 :
-                    Log.i("@M_" + TAG, "6605 nfc chip, call hqanfc");
-                    removePreference(screen, "nfc");
-                    break;
-                default:
-                    Log.i("@M_" + TAG, "no nfc chip support");
-                    removePreference(screen, "hqanfc");
-                    removePreference(screen, "nfc");
-                    removePreference(screen, "nfc_dta");
-                    break;
-            }
-        }
-
-        if (SystemProperties.get("ro.mtk_wifiwpsp2p_nfc_support").equals("1") == false) {
-            removePreference(screen, "wps_nfc_list");
-        }
-        /*if (! .MTK_LOG2SERVER_APP) {
-            removePreference(screen, "log2server");
-        }*/
-
-        if (FeatureSupport.isSupported(FeatureSupport.FK_EVDO_DT_SUPPORT)
-                || !FeatureSupport.isSupported(FeatureSupport.FK_DT_SUPPORT)
-                || !FeatureSupport.isSupported(FeatureSupport.FK_MTK_C2K_SUPPORT)) {
-            removePreference(screen, "ext_md_logger");
-        }
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_SMSREG_APP)) {
-            removePreference(screen, "device_manager");
-        }
-
-        if (FeatureSupport.isSupported(FeatureSupport.FK_BSP_PACKAGE)) {
-            removePreference(screen, "auto_answer");
-        }
-
-        if (ChipSupport.isFeatureSupported(ChipSupport.MTK_FM_SUPPORT)) {
-            if (!ChipSupport.isFeatureSupported(ChipSupport.MTK_FM_TX_SUPPORT)) {
-                removePreference(screen, "fm_transmitter");
-            }
-        } else {
-            removePreference(screen, "fm_receiver");
-            removePreference(screen, "fm_transmitter");
-        }
-
-        // AGPS is not ready if MTK_AGPS_APP isn't defined
-        if (!ChipSupport.isFeatureSupported(ChipSupport.MTK_AGPS_APP)
-                || !ChipSupport.isFeatureSupported(ChipSupport.MTK_GPS_SUPPORT)) {
-            removePreference(screen, "location_basedservice");
-        }
-
-        removePreference(screen, "fused_location_provider");
-
-        if (!ChipSupport.isFeatureSupported(ChipSupport.MTK_AGPS_APP)
-                || !ChipSupport.isFeatureSupported(ChipSupport.MTK_GPS_SUPPORT)
-                || !isVoiceCapable() || isWifiOnly()) {
-            removePreference(screen, "auto_dialer");
-        }
-
-        if (!ChipSupport.isFeatureSupported(ChipSupport.MTK_GPS_SUPPORT)) {
-            removePreference(screen, "ygps");
-            removePreference(screen, "cw_test");
-        }
-
-        // MATV is not ready if HAVE_MATV_FEATURE isn't defined
-        if (!ChipSupport.isFeatureSupported(ChipSupport.HAVE_MATV_FEATURE)) {
-            removePreference(screen, "matv");
-        }
-
-        // BT is not ready if MTK_BT_SUPPORT isn't defined
-        if (!ChipSupport.isFeatureSupported(ChipSupport.MTK_BT_SUPPORT)) {
-            removePreference(screen, "bluetooth");
-        }
-
-        removePreference(screen, "audio");
-
-        // wifi is not ready if MTK_WLAN_SUPPORT isn't defined
-        if (!ChipSupport.isFeatureSupported(ChipSupport.MTK_WLAN_SUPPORT)) {
-            removePreference(screen, "wifi");
-        }
-
-        if (!isVoiceCapable() || isWifiOnly()) {
-            removePreference(screen, "auto_answer");
-            removePreference(screen, "repeat_call_test");
-        }
-
-        if (isWifiOnly()) {
-            removePreference(screen, "amr_wb");
-            removePreference(screen, "antenna");
-            removePreference(screen, "bandmode");
-            removePreference(screen, "cfu");
-            removePreference(screen, "fast_dormancy");
-            removePreference(screen, "gprs");
-            removePreference(screen, "hspa_info");
-            removePreference(screen, "mobile_data_prefer");
-            removePreference(screen, "modem_test");
-            removePreference(screen, "modem_warning");
-            removePreference(screen, "network_info");
-            removePreference(screen, "dualtalk_network_info");
-            removePreference(screen, "network_select");
-            removePreference(screen, "cdma_network_select");
-            removePreference(screen, "dualtalk_network_select");
-            removePreference(screen, "rat_mode");
-            removePreference(screen, "rf_desense_test");
-            removePreference(screen, "sbp");
-            removePreference(screen, "swla");
-            removePreference(screen, "simme_lock1");
-            removePreference(screen, "simme_lock2");
-            removePreference(screen, "modem_switch");
-            removePreference(screen, "lte_config");
-            removePreference(screen, "lte_network_mode");
-            removePreference(screen, "lte_network_info");
-            removePreference(screen, "lte_tool");
-            removePreference(screen, "md_em_filter");
-            removePreference(screen, "ehrpd_bg_data");
-            removePreference(screen, "sim_switch");
-        }
-
-        // if it single sim, then the flow is the same as before
-        if (TelephonyManager.getDefault().getSimCount() > 1) {
-            /**
-             * if it is Gemini, then the flow is : it start a TabActivity, then
-             * the TabActivity will start sim1 or sim2 simLock activity Intent
-             * to launch SIM lock TabActivity
-             */
-            // intent.setComponent(new
-            // ComponentName("com.android.simmelock","com.android.simmelock.TabLockList"));
-            removePreference(screen, "simme_lock1");
-        } else {
-            // Intent to launch SIM lock settings
-            // intent.setComponent(new
-            // ComponentName("com.android.simmelock","com.android.simmelock.LockList"));
-            removePreference(screen, "simme_lock2");
-        }
-        Log.i("@M_" + TAG, "ChipSupport.getChip(): " + ChipSupport.getChip());
-        if (ChipSupport.MTK_6589_SUPPORT > ChipSupport.getChip()) {
-            removePreference(screen, "de_sense");
-            removePreference(screen, "camera89");
-        } else {
-            removePreference(screen, "camera");
-        }
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_FD_SUPPORT)) {
-            removePreference(screen, "fast_dormancy");
-        }
-
-        File innerLoadIndicator = new File(INNER_LOAD_INDICATOR_FILE);
-        if (!innerLoadIndicator.exists()) {
-            removePreference(screen, "system_update");
-        }
-        if (!ChipSupport.isChipInSet(ChipSupport.CHIP_657X_SERIES_NEW)) {
-            removePreference(screen, "deep_idle");
-            removePreference(screen, "sleep_mode");
-            removePreference(screen, "dcm");
-            removePreference(screen, "pll_cg");
-            removePreference(screen, "cpu_dvfs");
-            removePreference(screen, "mcdi_setting");
-        }
-
-        if (!FeatureSupport.isPackageExisted(this.getActivity(), FeatureSupport.PK_CDS_EM)) {
-            removePreference(screen, "cds_information");
-        }
-
-        Preference pref = (Preference) findPreference("cmas");
-        if (pref != null && !isActivityAvailable(pref.getIntent())) {
-            removePreference(screen, "cmas");
-        }
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_EVDO_DT_SUPPORT)) {
-            removePreference(screen, "saber");
-        }
-
-        String mOptr = SystemProperties.get("ro.operator.optr");
-        String mOpSeg = SystemProperties.get("ro.operator.seg");
-        if (!"OP01".equals(mOptr)) {
-            removePreference(screen, "ConfigureCheck2_Send_Test");
-            removePreference(screen, "ConfigureCheck2_Self_Test");
-        }
-
-        if (!"OP09".equals(mOptr) &&
-            SystemProperties.get("ro.ct6m_support").equals("1") == false) {
-            removePreference(screen, "CT_ConfigureCheck");
-        }
-
-        String usbCheckerState = SystemProperties.get("ro.mtk_usb_cba_support", "0");
-        Log.i("@M_" + TAG, "ro.mtk_usb_cba_support is " + usbCheckerState);
-
-        if (!usbCheckerState.equals("1")) {
-            removePreference(screen, "usb_checker_enabler");
-        }
-
-        if (!SystemProperties.get("ro.mtk_cmcc_ft_precheck_support").equals("1")) {
-            removePreference(screen, "cmcc_ftprecheck");
-        }
-
-        if (!SystemProperties.get("ro.mtk_modem_monitor_support").equals("1")) {
-            removePreference(screen, "mdml_sample");
-        }
-
-        if (FeatureSupport.isSupported(FeatureSupport.FK_MTK_C2K_SUPPORT)) { // For C2K
-            // keep all network menu: network_select, cdma_network_select, network_selection
-            //removePreference(screen, "swla");
-            removePreference(screen, "dualtalk_network_select");
-            // hide IR menu temporarily. API not ready yet.
-            removePreference(screen, "network_selection");
-        } else if (("OP09".equals(mOptr)) && ("SEGDEFAULT".equals(mOpSeg))) { // For CT
-            //removePreference(screen, "swla");
-            removePreference(screen, "network_select");
-            removePreference(screen, "dualtalk_network_select");
-        } else {
-            removePreference(screen, "cdma_network_select");
-            removePreference(screen, "network_selection");
-        }
-
-        if (!(("OP09".equals(mOptr)) && ("SEGDEFAULT".equals(mOpSeg)))) {
-            removePreference(screen, "test_card");
-        }
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_DEVREG_APP)) {
-            removePreference(screen, "device_register");
-            Log.i("@M_" + TAG, "Not show entry for DEVREG.");
-        }
-
-         removePreference(screen, "wfd_settings");
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_LTE_DC_SUPPORT)) {
-            removePreference(screen, "lte_config");
-        }
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_LTE_SUPPORT)) {
-            removePreference(screen, "lte_network_info");
-        }
-
-        if (FeatureSupport.isSupported(FeatureSupport.FK_LTE_DC_SUPPORT)) {
-            removePreference(screen, "network_select");
-        } else {
-            removePreference(screen, "lte_network_mode");
-        }
-
-        if (!CipUtil.isCipSupported()) {
-            removePreference(screen, "cip");
-        }
-
-        if (UserHandle.MU_ENABLED && UserManager.supportsMultipleUsers()
-                && UserManager.get(getActivity()).getUserHandle() != UserHandle.USER_OWNER) {
-            // Remove all items used phone instance
-            removePreference(screen, "amr_wb");
-            removePreference(screen, "antenna");
-            removePreference(screen, "bandmode");
-            removePreference(screen, "te_dev_tool");
-            removePreference(screen, "cds_information");
-            removePreference(screen, "cfu");
-            removePreference(screen, "fast_dormancy");
-            removePreference(screen, "gprs");
-            removePreference(screen, "hspa_info");
-            removePreference(screen, "mobile_data_prefer");
-            removePreference(screen, "modem_test");
-            removePreference(screen, "modem_warning");
-            removePreference(screen, "network_info");
-            removePreference(screen, "dualtalk_network_info");
-            removePreference(screen, "network_select");
-            removePreference(screen, "cdma_network_select");
-            removePreference(screen, "dualtalk_network_select");
-            removePreference(screen, "rat_mode");
-            removePreference(screen, "rf_desense_test");
-            removePreference(screen, "sbp");
-            removePreference(screen, "swla");
-            removePreference(screen, "simme_lock1");
-            removePreference(screen, "simme_lock2");
-            removePreference(screen, "modem_switch");
-            removePreference(screen, "lte_config");
-            removePreference(screen, "lte_network_mode");
-            removePreference(screen, "lte_network_info");
-            removePreference(screen, "lte_tool");
-            removePreference(screen, "world_mode");
-            removePreference(screen, "md_em_filter");
-            removePreference(screen, "ehrpd_bg_data");
-            removePreference(screen, "misc_config");
-        }
-
-
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_LTE_SUPPORT)
-                && ChipSupport.getChip() <= ChipSupport.MTK_6595_SUPPORT) {
-            removePreference(screen, "antenna");
-        }
-
-        if (!PtpList.isPtpSupported()) {
-            removePreference(screen, "ptp_tech");
-        }
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_VOLTE_SUPPORT)) {
-            removePreference(screen, "ims");
-        }
-
-        if (!SystemProperties.get("ro.sim_me_lock_mode", "0").equals("0")) {
-           removePreference(screen, "simme_lock1");
-           removePreference(screen, "simme_lock2");
-        }
-        if (!new File(FILE_DHRY_0).exists()) {
-            removePreference(screen, "cpu_stress_test");
-        }
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_AAL_SUPPORT)) {
-            removePreference(screen, "aal");
-        }
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_TC1_FEATURE)) {
-            removePreference(screen, "security_status");
-            removePreference(screen, "antenna_diversity");
-        } else {
-            removePreference(screen, "antenna");
-        }
-        if (SystemProperties.get("ro.mtk_sensorhub_support").equals("1") == false) {
-            removePreference(screen, "sensor_hub_test");
-            removePreference(screen, "smart_motion");
-        }
-
-        if (ChipSupport.getChip() < ChipSupport.MTK_6735_SUPPORT) {
-            removePreference(screen, "amr_wb");
-        }
-        if (!((FeatureSupport.isSupported(FeatureSupport.FK_SVLTE_SUPPORT)
-               || FeatureSupport.isSupported(FeatureSupport.FK_SRLTE_SUPPORT))
-            && FeatureSupport.isSupported(FeatureSupport.FK_C2K_IRAT_SUPPORT))) {
-            removePreference(screen, "c2k_ir_settings");
-        }
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_VILTE_SUPPORT)) {
-            removePreference(screen, "vilte");
-        }
-        if (FeatureSupport.isSupported(FeatureSupport.FK_MTK_WEARABLE_PLATFORM)) {
-            removePreference(screen, "camera89");
-            removePreference(screen, "camera_desence");
-            removePreference(screen, "usb");
-            removePreference(screen, "dcm");
-            removePreference(screen, "deep_idle");
-            removePreference(screen, "mcdi_setting");
-            removePreference(screen, "fm_receiver");
-            removePreference(screen, "settings_font");
-            removePreference(screen, "device_manager");
-            removePreference(screen, "debug_utils");
-            removePreference(screen, "sd_card_test");
-            removePreference(screen, "user2root");
-            removePreference(screen, "sleep_mode");
-//            removePreference(screen, "lcm");
-            removePreference(screen, "modem_debug");
-        }
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_MTK_C2K_SUPPORT)) {
-            removePreference(screen, "bypass");
-        }
-        if (FeatureSupport.isUserLoad()) {
-            removePreference(screen, "lte_tool");
-        }
-    }
-
-    private boolean isVoiceCapable() {
-        TelephonyManager telephony = (TelephonyManager) getActivity()
-                .getSystemService(Context.TELEPHONY_SERVICE);
-        boolean bVoiceCapable = telephony != null && telephony.isVoiceCapable();
-        Log.i("@M_" + TAG, "sIsVoiceCapable : " + bVoiceCapable);
-        return bVoiceCapable;
-    }
-
-    private boolean isWifiOnly() {
-        ConnectivityManager connManager = (ConnectivityManager) getActivity()
-                .getSystemService(Context.CONNECTIVITY_SERVICE);
-        boolean bWifiOnly = false;
-        if (null != connManager) {
-            bWifiOnly = !connManager
-                    .isNetworkSupported(ConnectivityManager.TYPE_MOBILE);
-            Log.i("@M_" + TAG, "bWifiOnly: " + bWifiOnly);
-        }
-        return bWifiOnly;
-    }
-
-    private boolean isActivityAvailable(Intent intent) {
-        return null != getActivity().getPackageManager().resolveActivity(intent, 0);
-    }
-
-    @Override
-    public void setUserVisibleHint(boolean isVisibleToUser) {
-        // TODO Auto-generated method stub
-        super.setUserVisibleHint(isVisibleToUser);
-        Log.i("@M_" + TAG, "setUserVisibleHint : " + isVisibleToUser + " index of " + mXmlResId);
-        if (isVisibleToUser) {
-            if (!mIsInit) {
-                // Load preferences from xml.
-                addPreferencesFromResource(FRAGMENT_RES[mXmlResId]);
-                removeUnsupportedItems();
-                mIsInit = true;
-            }
-            PreferenceScreen screen = getPreferenceScreen();
-
-            int count = screen.getPreferenceCount();
-            for (int i = 0; i < count; i++) {
-                Preference pre = screen.getPreference(i);
-                if (null != pre) {
-                    Intent intent = pre.getIntent();
-                    pre.setEnabled(isActivityAvailable(intent));
-                }
-            }
-        }
-    }
-
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/ShellExe.java b/EngineerMode/src/com/mediatek/engineermode/ShellExe.java
deleted file mode 100644
index 90cf394..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/ShellExe.java
+++ /dev/null
@@ -1,204 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode;
-
-import com.mediatek.engineermode.emsvr.AFMFunctionCallEx;
-import com.mediatek.engineermode.emsvr.FunctionReturn;
-import android.util.Log;
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStreamReader;
-import java.nio.charset.Charset;
-
-public class ShellExe {
-
-    private static final String TAG = "EM/shellexe";
-    public static final String ERROR = "ERROR";
-    public static final int RESULT_SUCCESS = 0;
-    public static final int RESULT_FAIL = -1;
-    public static final int RESULT_EXCEPTION = -2;
-    private static final String OPERATION_ERROR_PREFIX = "#$ERROR^&";
-    private static StringBuilder sResultBuilder = new StringBuilder("");
-
-    /**
-     * Get shell command output
-     *
-     * @return Shell command output
-     */
-    public static String getOutput() {
-        return sResultBuilder.toString();
-    }
-
-    /**
-     * Execute shell command
-     * @param command Command string need to execute
-     * @return Result
-     * @throws IOException Throws when occurs #IOException
-     */
-    public static int execCommand(String command) throws IOException {
-        return execCommand(new String[] { "sh", "-c", command });
-    }
-
-    public static int execCommand(String[] command) throws IOException {
-        return execCommandOnServer(command);
-    }
-
-    public static int execCommand(String command, boolean execOnLocal) throws IOException {
-        return execCommand(new String[] {"sh", "-c", command}, execOnLocal);
-    }
-
-    public static int execCommand(String[] command, boolean execOnLocal) throws IOException {
-        if (execOnLocal) {
-            return execCommandLocal(command);
-        } else {
-            return execCommandOnServer(command);
-        }
-    }
-
-    /**
-     * Execute shell command
-     * @param command Shell command array
-     * @return Result
-     * @throws IOException Throws when occurs #IOException
-     */
-    public static int execCommandLocal(String[] command) throws IOException {
-        int result = RESULT_FAIL;
-        Runtime runtime = Runtime.getRuntime();
-        Process proc = runtime.exec(command);
-        BufferedReader bufferedReader = null;
-        sResultBuilder.delete(0, sResultBuilder.length());
-        try {
-            bufferedReader = new BufferedReader(new InputStreamReader(proc
-                    .getInputStream(), Charset.defaultCharset()));
-            if (proc.waitFor() == 0) {
-                String line = bufferedReader.readLine();
-                if (line != null) {
-                    sResultBuilder.append(line);
-                    while (true) {
-                        line = bufferedReader.readLine();
-                        if (line == null) {
-                            break;
-                        } else {
-                            sResultBuilder.append('\n');
-                            sResultBuilder.append(line);
-                        }
-                    }
-                }
-                result = RESULT_SUCCESS;
-            } else {
-                Log.i("@M_" + TAG, "exit value = " + proc.exitValue());
-                sResultBuilder.append(ERROR);
-                result = RESULT_FAIL;
-            }
-        } catch (InterruptedException e) {
-            Log.i("@M_" + TAG, "exe shell command InterruptedException: "
-                    + e.getMessage());
-            sResultBuilder.append(ERROR);
-            result = RESULT_EXCEPTION;
-        } finally {
-            if (null != bufferedReader) {
-                try {
-                    bufferedReader.close();
-                } catch (IOException e) {
-                    Log.w("@M_" + TAG, "close reader in finally block exception: " + e.getMessage());
-                }
-            }
-        }
-        return result;
-    }
-
-    public static int execCommandOnServer(String[] command) throws IOException {
-        if (command == null || command.length == 0) {
-            throw new IllegalArgumentException("Invalid shell command to execute");
-        }
-        StringBuilder cmdBuilder = new StringBuilder();
-        int i = 0;
-        // ignore specified sh, use the server default sh
-        if ("sh".equals(command[0]) || command[0].endsWith("/sh")) {
-            if (command.length < 3) {
-                throw new IllegalArgumentException("invalid or unknown cmd to execute");
-            }
-            i = 2;
-        }
-        for (; i < command.length; i++) {
-            cmdBuilder.append(command[i]);
-            if (i < command.length - 1) {
-                cmdBuilder.append(" ");
-            }
-        }
-        String cmd = cmdBuilder.toString();
-        cmd = cmd.trim();
-        sResultBuilder.delete(0, sResultBuilder.length());
-        boolean ret = true;
-        AFMFunctionCallEx functionCall = new AFMFunctionCallEx();
-        ret = functionCall.startCallFunctionStringReturn(AFMFunctionCallEx.FUNCTION_EM_SHELL_CMD_EXECUTION);
-        if (ret) {
-            functionCall.writeParamNo(1);
-            functionCall.writeParamString(cmd);
-            FunctionReturn funcRet = null;
-            do {
-                funcRet = functionCall.getNextResult();
-                if (funcRet.mReturnString != null && funcRet.mReturnString.length() > 0) {
-                    sResultBuilder.append(funcRet.mReturnString);
-                }
-            } while (funcRet.mReturnCode == AFMFunctionCallEx.RESULT_CONTINUE);
-            // trim the tail newline character
-            while (true) {
-                int len = sResultBuilder.length();
-                if (len <= 0) {
-                    break;
-                }
-                char c = sResultBuilder.charAt(len - 1);
-                if (c == '\n') {
-                    sResultBuilder.delete(len - 1, len);
-                } else {
-                    break;
-                }
-            }
-            String output = sResultBuilder.toString();
-            if (output != null && output.startsWith(OPERATION_ERROR_PREFIX)) {
-                Log.d("@M_" + TAG, "error operation:" + output);
-                sResultBuilder.delete(0, OPERATION_ERROR_PREFIX.length() + 1);
-                return RESULT_FAIL;
-            }
-            return RESULT_SUCCESS;
-        }
-        Log.d("@M_" + TAG, "Function call start fail");
-        sResultBuilder.append(ERROR);
-        return RESULT_FAIL;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/UartUsbSwitch.java b/EngineerMode/src/com/mediatek/engineermode/UartUsbSwitch.java
deleted file mode 100644
index ae135c8..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/UartUsbSwitch.java
+++ /dev/null
@@ -1,285 +0,0 @@
-package com.mediatek.engineermode;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Looper;
-import android.os.Message;
-import android.os.SystemClock;
-import android.widget.RadioButton;
-import android.widget.RadioGroup;
-import android.widget.TextView;
-import android.widget.Toast;
-import android.os.SystemProperties;
-import android.util.Log;
-
-
-import java.io.File;
-import java.io.IOException;
-
-public class UartUsbSwitch extends Activity {
-
-    private static final String TAG = "EM/UartUsbSwitch";
-    private static final String FILE_PORT_MODE = "/sys/devices/platform/mt_usb/portmode";
-    private static final String FILE_PORT_MODE_NEW = "/sys/devices/platform/musb-mtu3d/musb-hdrc/portmode";
-    private static final String FILE_PORT_MODE_2 = "/sys/bus/platform/devices/musb-hdrc/portmode";
-    private static final String USB_CONNECT_STATE = "/sys/class/android_usb/android0/state";
-    private static final String USB_CONNECT = "CONNECT";
-    private static final String USB_CONFIGURED = "CONFIGURED";
-    private static final String SUCCESS = " success";
-    private static final String FAIL = " fail";
-    private static final String MODE_USB = "0";
-    private static final String MODE_UART = "1";
-    private static final String KEY_USB_PORT = "mediatek.usb.port.mode";
-    private static final String VAL_USB = "usb";
-    private static final String VAL_UART = "uart";
-    private static final int MSG_CHECK_RESULT = 11;
-    private static final int DIALOG_USB_WARNING = 0;
-    private static final int DIALOG_USB_CONNECT_WARNING = 1;
-    private TextView mTvCurrent;
-    private RadioGroup mRgMode;
-    private WorkerHandler mWorkerHandler = null;
-    private HandlerThread mWorkerThread = null;
-    private String mModeVal;
-    private RadioButton mRbUsb;
-    private RadioButton mRbUart;
-    private String mPortFile = FILE_PORT_MODE;
-    private final RadioGroup.OnCheckedChangeListener mCheckListener = new RadioGroup.OnCheckedChangeListener() {
-
-        public void onCheckedChanged(RadioGroup group, int checkedId) {
-            Boolean bModeUsb = null;
-            switch (checkedId) {
-            case R.id.uart_usb_switch_mode_usb:
-                bModeUsb = true;
-                break;
-            case R.id.uart_usb_switch_mode_uart:
-                bModeUsb = false;
-                break;
-            case -1:
-            default:
-                break;
-            }
-            doSwitch(bModeUsb);
-            Log.d("@M_" + TAG, "OnCheckedChangeListener.onCheckedChanged() checkId:" + checkedId + " bModeUsb:" + bModeUsb);
-        }
-
-    };
-
-    private void showDialog(String title, String msg) {
-        AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                true).setTitle(title).setMessage(msg).
-                setPositiveButton(android.R.string.ok, null).create();
-        dialog.show();
-    }
-
-    private class WorkerHandler extends Handler {
-        WorkerHandler(Looper looper) {
-            super(looper);
-        }
-
-        @Override
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case MSG_CHECK_RESULT:
-                final boolean result = waitForState(mModeVal, 2000);
-                runOnUiThread(new Runnable() {
-                    @Override
-                    public void run() {
-                        updateStatus(VAL_USB.equals(mModeVal));
-                        enableUsbUartSwitch(true);
-                        showDialog(null, getString(R.string.uart_usb_switch_set)
-                              + (result ? SUCCESS : FAIL));
-
-                    }
-                });
-
-                break;
-            default:
-                Log.w("@M_" + TAG, "mWorkerHandler Unknown msg: " + msg.what);
-                break;
-            }
-            super.handleMessage(msg);
-        }
-    }
-    private void enableUsbUartSwitch(boolean enabled) {
-        mRbUsb.setEnabled(enabled);
-        mRbUart.setEnabled(enabled);
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (ChipSupport.MTK_6595_SUPPORT == ChipSupport.getChip() ||
-                ChipSupport.MTK_6795_SUPPORT == ChipSupport.getChip()) {
-            mPortFile = FILE_PORT_MODE_2;
-        }
-        if (!new File(mPortFile).exists()) {
-            Toast.makeText(this, R.string.uart_usb_switch_notsupport,
-                    Toast.LENGTH_SHORT).show();
-            Log.w("@M_" + TAG, "Port mode file not exist");
-            finish();
-            return;
-        }
-        setContentView(R.layout.uart_usb_switch);
-        mTvCurrent = (TextView) findViewById(R.id.uart_usb_switch_current_mode);
-        mRgMode = (RadioGroup) findViewById(R.id.uart_usb_switch_mode);
-        mRbUsb = (RadioButton) findViewById(R.id.uart_usb_switch_mode_usb);
-        mRbUart = (RadioButton) findViewById(R.id.uart_usb_switch_mode_uart);
-        mWorkerThread = new HandlerThread(TAG);
-        mWorkerThread.start();
-        mWorkerHandler = new WorkerHandler(mWorkerThread.getLooper());
-        showDialog(DIALOG_USB_WARNING);
-    }
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Dialog dialog = null;
-        AlertDialog.Builder builder = null;
-        if (id == DIALOG_USB_WARNING) {
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.uart_usb_switch_dialog_title);
-            builder.setCancelable(false);
-            builder.setMessage(getString(R.string.uart_usb_switch_warning));
-            builder.setPositiveButton(R.string.ok, null);
-            dialog = builder.create();
-        } else if (id == DIALOG_USB_CONNECT_WARNING) {
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.uart_usb_switch_dialog_title_error);
-            builder.setCancelable(false);
-            builder.setMessage(getString(R.string.uart_usb_switch_dialog_usb_error));
-            builder.setPositiveButton(R.string.ok,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            finish();
-                        }
-                    });
-            dialog = builder.create();
-        }
-        return dialog;
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        String current = getUsbMode();
-        Log.v("@M_" + TAG, "Current: " + current);
-        if (null == current) {
-            Toast.makeText(this, R.string.uart_usb_switch_geterror,
-                    Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        Boolean mode = null;
-        if (current.contains(MODE_USB)) {
-            mode = true;
-        } else if (current.contains(MODE_UART)) {
-            mode = false;
-        }
-        updateStatus(mode);
-        mRgMode.setOnCheckedChangeListener(mCheckListener);
-    }
-
-    @Override
-    protected void onPause() {
-        super.onPause();
-    };
-
-    @Override
-    protected void onDestroy() {
-        if (mWorkerHandler != null) {
-            mWorkerHandler.removeMessages(MSG_CHECK_RESULT);
-        }
-        if (mWorkerThread != null) {
-            mWorkerThread.quit();
-        }
-        super.onDestroy();
-    };
-
-    private void doSwitch(Boolean bModeUsb) {
-        if (null != bModeUsb) {
-            if (bModeUsb.booleanValue()) {
-                mModeVal = VAL_USB;
-            } else {
-                mModeVal = VAL_UART;
-
-                if (isUsbConnected()) {
-                    showDialog(DIALOG_USB_CONNECT_WARNING);
-                    return;
-                }
-            }
-            enableUsbUartSwitch(false);
-            setUsbMode(mModeVal);
-            mWorkerHandler.sendEmptyMessage(MSG_CHECK_RESULT);
-        }
-    }
-
-    private void updateStatus(Boolean bModeUsb) {
-        if (null == bModeUsb) {
-            mTvCurrent.setText(R.string.uart_usb_switch_unknown);
-            mRgMode.check(-1);
-        } else if (bModeUsb.booleanValue()) {
-            mTvCurrent.setText(R.string.uart_usb_switch_usb);
-            mRgMode.check(R.id.uart_usb_switch_mode_usb);
-        } else {
-            mTvCurrent.setText(R.string.uart_usb_switch_uart);
-            mRgMode.check(R.id.uart_usb_switch_mode_uart);
-        }
-    }
-    private boolean isUsbConnected() {
-        String result = null;
-        boolean isConnected = false;
-        StringBuilder strBuilder = new StringBuilder();
-        strBuilder.append("cat ");
-        strBuilder.append(USB_CONNECT_STATE);
-        Log.v("@M_" + TAG, "isUsbConnected cmd: " + strBuilder.toString());
-        try {
-            if (ShellExe.RESULT_SUCCESS == ShellExe.execCommand(strBuilder
-                    .toString(), true)) {
-                result = ShellExe.getOutput();
-                if (result.equals(USB_CONFIGURED) || result.equals(USB_CONNECT)) {
-                    isConnected = true;
-                }
-            }
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "get current dramc IOException: " + e.getMessage());
-        }
-        return isConnected;
-    }
-    private String getUsbMode() {
-        String result = null;
-        StringBuilder strBuilder = new StringBuilder();
-        strBuilder.append("cat ");
-        strBuilder.append(mPortFile);
-        Log.v("@M_" + TAG, "get current dramc cmd: " + strBuilder.toString());
-        try {
-            if (ShellExe.RESULT_SUCCESS == ShellExe.execCommand(strBuilder
-                    .toString(), true)) {
-                result = ShellExe.getOutput();
-            }
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "get current dramc IOException: " + e.getMessage());
-        }
-        return result;
-    }
-
-    private void setUsbMode(String value) {
-        Log.v("@M_" + TAG, "setUsbMode(), value: " + value);
-        SystemProperties.set(KEY_USB_PORT, value);
-    }
-
-    private boolean waitForState(String modeVal, int milliSec) {
-        int count = milliSec / 50;
-        for (int i = 0; i < count; i++) {
-            String relValue = SystemProperties.get(KEY_USB_PORT);
-            Log.d("@M_" + TAG, "Check value of usb port mode:" + relValue);
-            if (modeVal.equals(relValue)) {
-                return true;
-            }
-            SystemClock.sleep(50);
-        }
-        return false;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/antenna/AntennaActivity.java b/EngineerMode/src/com/mediatek/engineermode/antenna/AntennaActivity.java
deleted file mode 100644
index 25e5105..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/antenna/AntennaActivity.java
+++ /dev/null
@@ -1,250 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.antenna;
-
-import android.app.Activity;
-import android.os.AsyncResult;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.telephony.TelephonyManager;
-import android.util.Log;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Spinner;
-import android.widget.Toast;
-
-import com.android.internal.telephony.Phone;
-import com.android.internal.telephony.PhoneConstants;
-import com.android.internal.telephony.PhoneFactory;
-import com.mediatek.engineermode.ChipSupport;
-import com.mediatek.engineermode.FeatureSupport;
-import com.mediatek.engineermode.R;
-
-import java.util.HashSet;
-
-public class AntennaActivity extends Activity {
-    private static final String TAG = "AntennaTest";
-    private static final int MSG_QUERY_SUPPORT_ANTENNA_MODE = 0;
-    private static final int MSG_QUERY_ANTENNA_MODE = 1;
-    private static final int MSG_SET_ANTENNA_MODE = 2;
-    private static final int MODE_INDEX_BASE_3G = 10;
-
-    private HashSet<Integer> mSupportModes = new HashSet<Integer>();
-    private Phone mPhone = null;
-    private Spinner mSpinner4G = null;
-    private Spinner mSpinner3G = null;
-    private Toast mToast = null;
-    private int mCurrentPos = 0;
-
-    private final OnItemSelectedListener mItemSelectedListener = new OnItemSelectedListener() {
-        @Override
-        public void onItemSelected(AdapterView<?> arg0, View arg1, int pos, long arg3) {
-            if (arg0 == mSpinner4G) {
-                if (mCurrentPos == arg0.getSelectedItemPosition()) {
-                    return;
-                }
-                mCurrentPos = arg0.getSelectedItemPosition();
-
-                if (mSupportModes.contains(pos)) {
-                    setMode(pos);
-                } else {
-                    showToast("Not supported.");
-                    queryCurrentMode();
-                }
-            } else if (arg0 == mSpinner3G) {
-                if (pos > 0) {
-                    setMode(MODE_INDEX_BASE_3G + pos - 1);
-                }
-            }
-        }
-
-        @Override
-        public void onNothingSelected(AdapterView<?> arg0) {
-            // Do nothing
-        }
-    };
-
-    private final Handler mCommandHander = new Handler() {
-        @Override
-        public void handleMessage(final Message msg) {
-            AsyncResult asyncResult;
-            switch (msg.what) {
-            case MSG_QUERY_SUPPORT_ANTENNA_MODE:
-                asyncResult = (AsyncResult) msg.obj;
-                if (asyncResult != null && asyncResult.exception == null
-                        && asyncResult.result != null) {
-                    final String[] result = (String[]) asyncResult.result;
-                    Log.i("@M_" + TAG, "Get support mode " + result[0]);
-                    parseSupportMode(result[0]);
-                    queryCurrentMode();
-                } else {
-                    showToast("Query antenna mode failed.");
-                }
-                break;
-            case MSG_QUERY_ANTENNA_MODE:
-                asyncResult = (AsyncResult) msg.obj;
-                if (asyncResult != null && asyncResult.exception == null
-                        && asyncResult.result != null) {
-                    final String[] result = (String[]) asyncResult.result;
-                    Log.i("@M_" + TAG, "Get mode " + result[0]);
-                    parseCurrentMode(result[0]);
-                } else {
-                    showToast("Query antenna mode failed.");
-                }
-                break;
-            case MSG_SET_ANTENNA_MODE:
-                asyncResult = (AsyncResult) msg.obj;
-                if (asyncResult.exception == null) {
-                    showToast("Set successful.");
-                } else {
-                    showToast("Set failed.");
-                }
-                break;
-            default:
-                break;
-            }
-        }
-    };
-
-    private void parseSupportMode(String data) {
-        // query result is like: "+ERXPATH: (0-2)" (support mode 0, 1 and 2)
-        // or like "+ERXPATH: (0,2)" (support mode 0 and 2)
-        int start = data.indexOf('(', 0);
-        int end = data.indexOf(')', 0);
-        if (start >= 0 && start + 1 < end) {
-            String[] modes = data.substring(start + 1, end).split(",");
-            for (int i = 0; i < modes.length; i++) {
-                String[] range = modes[i].split("-");
-                try {
-                    int min = Integer.parseInt(range[0].trim());
-                    int max = Integer.parseInt(range[range.length - 1].trim());
-                    for (int mode = min; mode <= max; mode++) {
-                        mSupportModes.add(mode);
-                    }
-                } catch (NumberFormatException e) {
-                    Log.e("@M_" + TAG, "Wrong supported mode format: " + data);
-                }
-            }
-        }
-    }
-
-    private void parseCurrentMode(String data) {
-        // query result is like: +ERXPATH: 1
-        int mode = -1;
-        try {
-            mode = Integer.valueOf(data.substring("+ERXPATH:".length()).trim());
-        } catch (NumberFormatException e) {
-            Log.e("@M_" + TAG, "Wrong current mode format: " + data);
-        }
-
-        if (mode < 0 || mode >= mSpinner4G.getCount()) {
-            showToast("Modem returned invalid mode: " + data);
-            return;
-        }
-
-        mCurrentPos = mode;
-        mSpinner4G.setSelection(mode);
-        mSpinner4G.setEnabled(true);
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.antena_test);
-
-        mSpinner4G = (Spinner) findViewById(R.id.spinner_antenna_4g);
-        mSpinner4G.setOnItemSelectedListener(mItemSelectedListener);
-        mSpinner4G.setEnabled(false);
-
-        mSpinner3G = (Spinner) findViewById(R.id.spinner_antenna_3g);
-        mSpinner3G.setOnItemSelectedListener(mItemSelectedListener);
-
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_LTE_SUPPORT)) {
-            findViewById(R.id.antenna_title_4g).setVisibility(View.GONE);
-            findViewById(R.id.antenna_hint).setVisibility(View.GONE);
-            mSpinner4G.setVisibility(View.GONE);
-        }
-
-
-        if (TelephonyManager.getDefault().getPhoneCount() > 1) {
-            mPhone = PhoneFactory.getPhone(PhoneConstants.SIM_ID_1);
-        } else {
-            mPhone = PhoneFactory.getDefaultPhone();
-        }
-
-
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        if (FeatureSupport.isSupported(FeatureSupport.FK_LTE_SUPPORT)) {
-            querySupportMode();
-        }
-    }
-
-    private void queryCurrentMode() {
-        sendCommand(new String[] {"AT+ERXPATH?", "+ERXPATH:"}, MSG_QUERY_ANTENNA_MODE);
-    }
-
-    private void querySupportMode() {
-        sendCommand(new String[] {"AT+ERXPATH=?", "+ERXPATH:"}, MSG_QUERY_SUPPORT_ANTENNA_MODE);
-    }
-
-    private void setMode(int mode) {
-        Log.i("@M_" + TAG, "Set mode " + mode);
-        sendCommand(new String[] {"AT+ERXPATH=" + mode, ""}, MSG_SET_ANTENNA_MODE);
-    }
-
-    private void sendCommand(String[] command, int msg) {
-        if (mPhone != null) {
-            mPhone.invokeOemRilRequestStrings(command, mCommandHander.obtainMessage(msg));
-        }
-    }
-
-    private void showToast(String msg) {
-        if (mToast != null) {
-            mToast.cancel();
-        }
-        mToast = Toast.makeText(this, msg, Toast.LENGTH_SHORT);
-        mToast.show();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bandselect/BandModeContent.java b/EngineerMode/src/com/mediatek/engineermode/bandselect/BandModeContent.java
deleted file mode 100644
index dda4d33..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bandselect/BandModeContent.java
+++ /dev/null
@@ -1,84 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bandselect;
-
-public class BandModeContent {
-    /** GSM mode bit. */
-    public static final int GSM_EGSM900_BIT = 1;
-    public static final int GSM_DCS1800_BIT = 3;
-    public static final int GSM_PCS1900_BIT = 4;
-    public static final int GSM_GSM850_BIT = 7;
-
-    /** UMTS mode bit. */
-    public static final int UMTS_BAND_I_BIT = 0;
-    public static final int UMTS_BAND_II_BIT = 1;
-    public static final int UMTS_BAND_III_BIT = 2;
-    public static final int UMTS_BAND_IV_BIT = 3;
-    public static final int UMTS_BAND_V_BIT = 4;
-    public static final int UMTS_BAND_VI_BIT = 5;
-    public static final int UMTS_BAND_VII_BIT = 6;
-    public static final int UMTS_BAND_VIII_BIT = 7;
-    public static final int UMTS_BAND_IX_BIT = 8;
-    public static final int UMTS_BAND_X_BIT = 9;
-
-    /** Event or message id. */
-    public static final int EVENT_QUERY_SUPPORTED = 100;
-    public static final int EVENT_QUERY_CURRENT = 101;
-    public static final int EVENT_SET = 110;
-    public static final int EVENT_SET_OK = 0;
-    public static final int EVENT_SET_FAIL = 1;
-    public static final int EVENT_RESET = 2;
-
-    public static final long GSM_MAX_VALUE = 0xFFL;
-    public static final long UMTS_MAX_VALUE = 0xFFFFL;
-    public static final long LTE_MAX_VALUE = 0xFFFFFFFFL;
-
-    /** AT Command. */
-    public static final String QUERY_SUPPORT_COMMAND = "AT+EPBSE=?";
-    public static final String QUERY_CURRENT_COMMAND = "AT+EPBSE?";
-    public static final String SET_COMMAND = "AT+EPBSE=";
-    public static final String SAME_COMMAND = "+EPBSE:";
-
-    public static final int EVENT_QUERY_SUPPORTED_CDMA = 102;
-    public static final int EVENT_QUERY_CURRENT_CDMA = 103;
-    public static final int EVENT_SET_CDMA = 111;
-    public static final String QUERY_SUPPORT_COMMAND_CDMA = "AT+ECBAND=?";
-    public static final String QUERY_CURRENT_COMMAND_CDMA = "AT+ECBAND?";
-    public static final String SET_COMMAND_CDMA = "AT+ECBAND=";
-    public static final String SAME_COMMAND_CDMA = "+ECBAND:";
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bandselect/BandModeSimSelect.java b/EngineerMode/src/com/mediatek/engineermode/bandselect/BandModeSimSelect.java
deleted file mode 100644
index 0f27cfe..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bandselect/BandModeSimSelect.java
+++ /dev/null
@@ -1,126 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bandselect;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.telephony.TelephonyManager;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.android.internal.telephony.PhoneConstants;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-/**
- * The class for select phone1 or phone2.
- */
-public class BandModeSimSelect extends Activity implements OnItemClickListener {
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.bandmodesimselect);
-        ListView simTypeListView = (ListView) findViewById(R.id.listview_bandmode_sim_select);
-        ArrayAdapter<String> adapter;
-        if (TelephonyManager.getDefault().getSimCount() > 1) {
-            ArrayList<String> array = new ArrayList<String>();
-            array.add(getString(R.string.bandmode_sim1));
-            array.add(getString(R.string.bandmode_sim2));
-            if (TelephonyManager.getDefault().getSimCount() >= 3) {
-                array.add(getString(R.string.bandmode_sim3));
-            }
-            if (TelephonyManager.getDefault().getSimCount() == 4) {
-                array.add(getString(R.string.bandmode_sim4));
-            }
-            adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, array);
-        } else {
-            ArrayList<String> array = new ArrayList<String>();
-            array.add(getString(R.string.bandmode_sim1));
-            adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, array);
-        }
-
-        simTypeListView.setAdapter(adapter);
-        simTypeListView.setOnItemClickListener(this);
-    }
-
-    /**
-     * @see android.widget.AdapterView.OnItemClickListener#onItemClick(android.widget.AdapterView,
-     *      android.view.View, int, long)
-     * @param parent the Adapter for  parent
-     * @param view the View to display
-     * @param position the integer of item position
-     * @param id the long of ignore
-     */
-    public void onItemClick(AdapterView<?> parent, View view, int position,
-            long id) {
-        Intent intent = new Intent();
-        int simType;
-        switch (position) {
-        case 0:
-            intent.setClass(this, BandSelect.class);
-            simType = PhoneConstants.SIM_ID_1;
-            intent.putExtra("mSimType", simType);
-            break;
-        case 1:
-            intent.setClass(this, BandSelect.class);
-            simType = PhoneConstants.SIM_ID_2;
-            intent.putExtra("mSimType", simType);
-            break;
-        case 2:
-            intent.setClass(this, BandSelect.class);
-            simType = PhoneConstants.SIM_ID_3;
-            intent.putExtra("mSimType", simType);
-            break;
-        case 3:
-            intent.setClass(this, BandSelect.class);
-            simType = PhoneConstants.SIM_ID_4;
-            intent.putExtra("mSimType", simType);
-            break;
-        default:
-            break;
-        }
-        this.startActivity(intent);
-
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bandselect/BandSelect.java b/EngineerMode/src/com/mediatek/engineermode/bandselect/BandSelect.java
deleted file mode 100644
index 854b8bf..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bandselect/BandSelect.java
+++ /dev/null
@@ -1,677 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bandselect;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.os.AsyncResult;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.os.RemoteException;
-import android.os.ServiceManager;
-import android.os.SystemProperties;
-import android.telephony.RadioAccessFamily;
-import android.telephony.TelephonyManager;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.TableLayout;
-import android.widget.TableRow;
-
-import com.android.internal.telephony.ITelephony;
-import com.android.internal.telephony.Phone;
-import com.android.internal.telephony.PhoneConstants;
-import com.android.internal.telephony.PhoneFactory;
-import com.mediatek.engineermode.FeatureSupport;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-/**
- * @author mtk54044 //add declartion
- *
- */
-public class BandSelect extends Activity implements OnClickListener {
-    private static final String LOG_TAG = "BandModeSim1";
-    private static final int WCDMA = 0x04;
-    private static final int TDSCDMA = 0x08;
-    private static final String GSM_BASEBAND = "gsm.baseband.capability";
-    private static final String PREF_FILE = "band_select_";
-    private static final String PREF_KEYS[] = {"gsm", "umts", "lte_fdd", "lte_tdd", "cdma"};
-
-    private static final int INDEX_GSM_BAND = 0;
-    private static final int INDEX_UMTS_BAND = 1;
-    private static final int INDEX_LTE_FDD_BAND = 2;
-    private static final int INDEX_LTE_TDD_BAND = 3;
-    private static final int INDEX_CDMA_BAND = 4;
-    private static final int INDEX_BAND_MAX = 5;
-
-    private Phone mPhone = null;
-    private Phone mCdmaPhone = null;
-
-    private final ArrayList<BandModeMap> mModeArray = new ArrayList<BandModeMap>();
-    private final ArrayList<BandModeMap> mCdmaModeArray = new ArrayList<BandModeMap>();
-
-    private Button mBtnSet;
-    private Button mBtnReset;
-
-    private boolean mIsThisAlive = false;
-    private int mSimType;
-    private boolean mSettingCdma = false;
-    private boolean mSettingLte = false;
-
-    private final Handler mResponseHander = new Handler() {
-
-        public void handleMessage(final Message msg) {
-            if (!mIsThisAlive) {
-                return;
-            }
-            AsyncResult asyncResult;
-            switch (msg.what) {
-            case BandModeContent.EVENT_QUERY_SUPPORTED:
-                asyncResult = (AsyncResult) msg.obj;
-                if (asyncResult.exception == null) {
-                    setMode(asyncResult, BandModeContent.EVENT_QUERY_SUPPORTED);
-                } else {
-                    showDialog(BandModeContent.EVENT_QUERY_SUPPORTED);
-                    setSupportedMode(new long[INDEX_BAND_MAX]);
-                }
-                break;
-            case BandModeContent.EVENT_QUERY_CURRENT:
-                asyncResult = (AsyncResult) msg.obj;
-                if (asyncResult.exception == null) {
-                    setMode(asyncResult, BandModeContent.EVENT_QUERY_CURRENT);
-                } else {
-                    removeDialog(BandModeContent.EVENT_QUERY_SUPPORTED);
-                    showDialog(BandModeContent.EVENT_QUERY_CURRENT);
-                    setCurrentMode(new long[INDEX_BAND_MAX]);
-                }
-                break;
-            case BandModeContent.EVENT_SET:
-                asyncResult = (AsyncResult) msg.obj;
-                mSettingLte = false;
-                if (asyncResult.exception == null) {
-                    if (!mSettingCdma && !mSettingLte) {
-                        showDialog(BandModeContent.EVENT_SET_OK);
-                    }
-                } else {
-                    showDialog(BandModeContent.EVENT_SET_FAIL);
-                }
-                break;
-            case BandModeContent.EVENT_QUERY_CURRENT_CDMA:
-                asyncResult = (AsyncResult) msg.obj;
-                if (asyncResult.exception == null) {
-                    setModeCdma(asyncResult, BandModeContent.EVENT_QUERY_CURRENT_CDMA);
-                } else {
-                    removeDialog(BandModeContent.EVENT_QUERY_SUPPORTED);
-                    showDialog(BandModeContent.EVENT_QUERY_CURRENT);
-                    setCurrentModeCdma(0);
-                }
-                break;
-            case BandModeContent.EVENT_SET_CDMA:
-                asyncResult = (AsyncResult) msg.obj;
-                mSettingCdma = false;
-                if (asyncResult.exception == null) {
-                    if (!mSettingCdma && !mSettingLte) {
-                        showDialog(BandModeContent.EVENT_SET_OK);
-                    }
-                } else {
-                    showDialog(BandModeContent.EVENT_SET_FAIL);
-                }
-                break;
-            default:
-                break;
-            }
-        }
-    };
-
-    private static int getModemType(int simType) {
-        int mode;
-        final int mask = 1;
-        if (1 == mask) {
-            mode = WCDMA;
-        } else if (2 == mask) {
-            mode = TDSCDMA;
-        } else {
-            mode = 0;
-        }
-        return mode;
-    }
-
-    private static class BandModeMap {
-        public CheckBox mChkBox;
-        public int mIndex;
-        public int mBit;
-
-        /**
-         * @param chkbox
-         *            the CheckBox from the layout
-         * @param index
-         *            the integer of the modem value (index)
-         * @param bit
-         *            the integer of the modem value (bit offset)
-         */
-        BandModeMap(final CheckBox chkbox, final int index, final int bit) {
-            mChkBox = chkbox;
-            mIndex = index;
-            mBit = bit;
-        }
-    }
-
-    private ArrayList<CheckBox> addCheckboxToTable(int tableResId, int arrayResId) {
-        TableLayout table = (TableLayout) findViewById(tableResId);
-        String[] labels = getResources().getStringArray(arrayResId);
-        ArrayList<CheckBox> ret = new ArrayList<CheckBox>(labels.length);
-
-        for (int i = 0; i < labels.length; i++) {
-            TableRow row = new TableRow(this);
-            CheckBox checkBox = new CheckBox(this);
-            checkBox.setText(labels[i]);
-            row.addView(checkBox);
-            table.addView(row);
-            ret.add(checkBox);
-        }
-
-        return ret;
-    }
-
-    private void initLteArray() {
-        findViewById(R.id.TableLayout02).setVisibility(View.VISIBLE);
-        ArrayList<CheckBox> checkBox =
-                addCheckboxToTable(R.id.TableLayout02, R.array.band_mode_lte_fdd);
-        for (int i = 0; i < checkBox.size(); i++) {
-            mModeArray.add(new BandModeMap(checkBox.get(i), INDEX_LTE_FDD_BAND, i));
-        }
-        checkBox = addCheckboxToTable(R.id.TableLayout02, R.array.band_mode_lte_tdd);
-        for (int i = 0; i < checkBox.size(); i++) {
-            mModeArray.add(new BandModeMap(checkBox.get(i), INDEX_LTE_TDD_BAND, i));
-        }
-    }
-
-    @Override
-    public void onCreate(final Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        Intent intent = getIntent();
-        mSimType = intent.getIntExtra("mSimType", PhoneConstants.SIM_ID_1);
-        int modemType = getModemType(mSimType);
-        ITelephony iTelephony =
-                ITelephony.Stub.asInterface(ServiceManager.getService("phone"));
-        // For L version, use gsm.baseband.capability to detect TD/FD, use SIM switch API to
-        // detect 2G/3G
-        if (mSimType == PhoneConstants.SIM_ID_1) {
-
-            setContentView(R.layout.bandselect);
-            mBtnSet = (Button) findViewById(R.id.BandSel_Btn_Set);
-            mBtnReset = (Button) findViewById(R.id.BandSel_Btn_Reset);
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_GSM_EGSM900),
-                    INDEX_GSM_BAND, BandModeContent.GSM_EGSM900_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_GSM_DCS1800),
-                    INDEX_GSM_BAND, BandModeContent.GSM_DCS1800_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_GSM_PCS1900),
-                    INDEX_GSM_BAND, BandModeContent.GSM_PCS1900_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_GSM_GSM850),
-                    INDEX_GSM_BAND, BandModeContent.GSM_GSM850_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_UMTS_BAND_I),
-                    INDEX_UMTS_BAND, BandModeContent.UMTS_BAND_I_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_UMTS_BAND_II),
-                    INDEX_UMTS_BAND, BandModeContent.UMTS_BAND_II_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_UMTS_BAND_III),
-                    INDEX_UMTS_BAND, BandModeContent.UMTS_BAND_III_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_UMTS_BAND_IV),
-                    INDEX_UMTS_BAND, BandModeContent.UMTS_BAND_IV_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_UMTS_BAND_V),
-                    INDEX_UMTS_BAND, BandModeContent.UMTS_BAND_V_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_UMTS_BAND_VI),
-                    INDEX_UMTS_BAND, BandModeContent.UMTS_BAND_VI_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_UMTS_BAND_VII),
-                    INDEX_UMTS_BAND, BandModeContent.UMTS_BAND_VII_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_UMTS_BAND_VIII),
-                    INDEX_UMTS_BAND, BandModeContent.UMTS_BAND_VIII_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_UMTS_BAND_IX),
-                    INDEX_UMTS_BAND, BandModeContent.UMTS_BAND_IX_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.BandSel_UMTS_BAND_X),
-                    INDEX_UMTS_BAND, BandModeContent.UMTS_BAND_X_BIT));
-            if (FeatureSupport.isSupported(FeatureSupport.FK_LTE_SUPPORT)) {
-                initLteArray();
-            }
-        } else {
-            setContentView(R.layout.bandmodesim2);
-            mBtnSet = (Button) findViewById(R.id.bandmodesim2_Btn_Set);
-            mBtnReset = (Button) findViewById(R.id.bandmodesim2_Btn_Reset);
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.bandmodesim2_GSM_EGSM900),
-                    INDEX_GSM_BAND, BandModeContent.GSM_EGSM900_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.bandmodesim2_GSM_DCS1800),
-                    INDEX_GSM_BAND, BandModeContent.GSM_DCS1800_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.bandmodesim2_GSM_PCS1900),
-                    INDEX_GSM_BAND, BandModeContent.GSM_PCS1900_BIT));
-            mModeArray.add(new BandModeMap(
-                    (CheckBox) findViewById(R.id.bandmodesim2_GSM_GSM850),
-                    INDEX_GSM_BAND, BandModeContent.GSM_GSM850_BIT));
-        }
-
-
-        mIsThisAlive = true;
-
-        mBtnSet.setOnClickListener(this);
-        mBtnReset.setOnClickListener(this);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        if (TelephonyManager.getDefault().getPhoneCount() > 1) {
-            Log.v("@M_" + LOG_TAG, "Gemini");
-            mPhone = PhoneFactory.getPhone(mSimType);
-        } else {
-            Log.v("@M_" + LOG_TAG, "Single");
-            mPhone = PhoneFactory.getDefaultPhone();
-        }
-
-            querySupportMode();
-            queryCurrentMode();
-        
-    }
-
-    private void setMode(AsyncResult aSyncResult, int msg) {
-        final String[] result = (String[]) aSyncResult.result;
-
-        for (final String value : result) {
-            Log.v("@M_" + LOG_TAG, "--.>" + value);
-            final String splitString = value.substring(BandModeContent.SAME_COMMAND
-                    .length());
-            final String[] getDigitalVal = splitString.split(",");
-
-            if (getDigitalVal != null && getDigitalVal.length > 1) {
-                long[] values = new long[INDEX_BAND_MAX];
-                for (int i = 0; i < values.length; i++) {
-                    if (getDigitalVal.length <= i || getDigitalVal[i] == null) {
-                        values[i] = 0;
-                        continue;
-                    }
-                    try {
-                        values[i] = Long.valueOf(getDigitalVal[i].trim());
-                    } catch (NumberFormatException e) {
-                        values[i] = 0;
-                    }
-                }
-                if (msg == BandModeContent.EVENT_QUERY_SUPPORTED) {
-                    setSupportedMode(values);
-                } else {
-                    setCurrentMode(values);
-                    saveDefaultValueIfNeed(values);
-                }
-            }
-        }
-    }
-
-    /**
-     * Query Modem supported band modes.
-     */
-    private void querySupportMode() {
-        final String[] modeString = {BandModeContent.QUERY_SUPPORT_COMMAND,
-                BandModeContent.SAME_COMMAND};
-        Log.v("@M_" + LOG_TAG, "AT String:" + modeString[0]);
-        sendATCommand(modeString, BandModeContent.EVENT_QUERY_SUPPORTED);
-    }
-
-    /**
-     * Query Modem is being used band modes.
-     */
-    private void queryCurrentMode() {
-        final String[] modeString = {BandModeContent.QUERY_CURRENT_COMMAND,
-                BandModeContent.SAME_COMMAND};
-        Log.v("@M_" + LOG_TAG, "AT String:" + modeString[0]);
-        sendATCommand(modeString, BandModeContent.EVENT_QUERY_CURRENT);
-    }
-
-    /**
-     * Query Modem is being used band modes.
-     */
-    private void sendATCommand(String[] atCommand, int msg) {
-        if (mPhone != null) {
-            mPhone.invokeOemRilRequestStrings(atCommand, mResponseHander.obtainMessage(msg));
-        }
-    }
-
-    /**
-     * Set the selected modes.
-     *
-     * @param values
-     *            the integers of mode values
-     * @return false means set failed or success
-     */
-    private void setBandMode(final long[] values) {
-        if (values[0] > BandModeContent.GSM_MAX_VALUE
-                || values[1] > BandModeContent.UMTS_MAX_VALUE
-                || values[2] > BandModeContent.LTE_MAX_VALUE
-                || values[3] > BandModeContent.LTE_MAX_VALUE) {
-            return;
-        }
-        // null select is not allowed.
-        if (values[0] == 0) {
-            values[0] = BandModeContent.GSM_MAX_VALUE;
-        }
-        if (values[1] == 0) {
-            values[1] = BandModeContent.UMTS_MAX_VALUE;
-        }
-        if (values[2] == 0 && values[3] == 0) {
-            values[2] = BandModeContent.LTE_MAX_VALUE;
-            values[3] = BandModeContent.LTE_MAX_VALUE;
-        }
-
-        String[] modeString = {
-                BandModeContent.SET_COMMAND + values[0] + "," + values[1], "" };
-        if (FeatureSupport.isSupported(FeatureSupport.FK_LTE_SUPPORT)) {
-            modeString[0] += "," + values[2] + "," + values[3];
-        }
-        Log.v("@M_" + LOG_TAG, "AT String:" + modeString[0]);
-        sendATCommand(modeString, BandModeContent.EVENT_SET);
-        setCurrentMode(values);
-        mSettingLte = true;
-    }
-
-    /**
-     * Get the selected mode values.
-     *
-     * @return values from the selected boxes
-     */
-    private long[] getValFromBox() {
-        long[] values = new long[INDEX_BAND_MAX];
-        for (final BandModeMap m : mModeArray) {
-            if (m.mChkBox.isChecked()) {
-                values[m.mIndex] |= 1L << m.mBit;
-            }
-        }
-        return values;
-    }
-
-    /**
-     * @param values
-     *            the integer values from the modem
-     */
-    private void setCurrentMode(final long[] values) {
-        for (final BandModeMap m : mModeArray) {
-            if ((values[m.mIndex] & (1L << m.mBit)) == 0) {
-                m.mChkBox.setChecked(false);
-            } else {
-                if (m.mChkBox.isEnabled()) {
-                    m.mChkBox.setChecked(true);
-                }
-            }
-        }
-    }
-
-    /**
-     * @param values
-     *            the integer values from the modem
-     */
-    private void setSupportedMode(final long[] values) {
-        for (final BandModeMap m : mModeArray) {
-            if ((values[m.mIndex] & (1L << m.mBit)) == 0) {
-                m.mChkBox.setEnabled(false);
-            } else {
-                m.mChkBox.setEnabled(true);
-            }
-        }
-    }
-
-    /**
-     * Get default mode values.
-     *
-     * @return saved default values
-     */
-    private long[] getDefaultValue() {
-        SharedPreferences pref = getSharedPreferences(PREF_FILE + mSimType, MODE_PRIVATE);
-        long[] values = new long[INDEX_BAND_MAX];
-        for (int i = 0; i < INDEX_BAND_MAX; i++) {
-            values[i] = pref.getLong(PREF_KEYS[i], 0);
-        }
-        return values;
-    }
-
-    /**
-     * Save default mode values to preference if not exist.
-     *
-     * @param values
-     *            the integer values from the modem
-     */
-    private void saveDefaultValueIfNeed(long[] values) {
-        SharedPreferences pref = getSharedPreferences(PREF_FILE + mSimType, MODE_PRIVATE);
-        SharedPreferences.Editor editor = pref.edit();
-        for (int i = 0; i < INDEX_BAND_MAX; i++) {
-            if (!pref.contains(PREF_KEYS[i])) {
-                editor.putLong(PREF_KEYS[i], values[i]);
-            }
-        }
-        editor.commit();
-    }
-
-    /**
-     * Button on click listener.
-     *
-     * @param arg0
-     *            the view of the button event
-     */
-    public void onClick(final View arg0) {
-        if (arg0.getId() == mBtnSet.getId()) {
-
-                setBandMode(getValFromBox());
-            
-        } else if (arg0.getId() == mBtnReset.getId()) {
-            showDialog(BandModeContent.EVENT_RESET);
-        }
-    }
-
-    @Override
-    protected Dialog onCreateDialog(final int dialogId) {
-        if (BandModeContent.EVENT_QUERY_SUPPORTED == dialogId) {
-            final AlertDialog.Builder builder = new AlertDialog.Builder(
-                    BandSelect.this);
-            builder.setTitle(R.string.query_result);
-            builder.setMessage(R.string.query_support_message);
-            builder.setPositiveButton(R.string.query_btn_text, null);
-            builder.create().show();
-        } else if (BandModeContent.EVENT_QUERY_CURRENT == dialogId) {
-            final AlertDialog.Builder builder = new AlertDialog.Builder(
-                    BandSelect.this);
-            builder.setTitle(R.string.query_result);
-            builder.setMessage(R.string.query_current_message);
-            builder.setPositiveButton(R.string.query_btn_text, null);
-            builder.create().show();
-        } else if (BandModeContent.EVENT_RESET == dialogId) {
-            final AlertDialog.Builder builder = new AlertDialog.Builder(
-                    BandSelect.this);
-            builder.setTitle(R.string.reset_title);
-            builder.setMessage(R.string.reset_message);
-            builder.setPositiveButton(android.R.string.ok,
-                new DialogInterface.OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-  
-                            setBandMode(getDefaultValue());
-                       
-                        dialog.dismiss();
-                    }
-                }
-            );
-            builder.setNegativeButton(android.R.string.cancel, null);
-            builder.create().show();
-        } else if (BandModeContent.EVENT_SET_OK == dialogId) {
-            final AlertDialog.Builder builder = new AlertDialog.Builder(
-                    BandSelect.this);
-            builder.setTitle(R.string.set_success_title);
-            builder.setMessage(R.string.set_success_message);
-            builder.setPositiveButton(R.string.set_ok_text, null);
-            builder.create().show();
-        } else {
-            final AlertDialog.Builder builder = new AlertDialog.Builder(
-                    BandSelect.this);
-            builder.setTitle(R.string.set_fail_title);
-            builder.setMessage(R.string.set_fail_message);
-            builder.setPositiveButton(R.string.set_fail_text, null);
-            builder.create().show();
-        }
-        return super.onCreateDialog(dialogId);
-    }
-
-    @Override
-    public void onDestroy() {
-        mIsThisAlive = false;
-        super.onDestroy();
-    }
-
-    private void initCdmaArray() {
-        findViewById(R.id.TableLayout03).setVisibility(View.VISIBLE);
-        ArrayList<CheckBox> checkBox = addCheckboxToTable(R.id.TableLayout03,
-                R.array.band_mode_cdma);
-        for (int i = 0; i < checkBox.size(); i++) {
-            mCdmaModeArray.add(new BandModeMap(checkBox.get(i), INDEX_CDMA_BAND, i));
-        }
-    }
-
-    private void queryCurrentCdmaMode() {
-        final String[] modeString = {BandModeContent.QUERY_CURRENT_COMMAND_CDMA,
-                BandModeContent.SAME_COMMAND_CDMA};
-        Log.v("@M_" + LOG_TAG, "AT String:" + modeString[0]);
-        sendATCommandCdma(modeString, BandModeContent.EVENT_QUERY_CURRENT_CDMA);
-    }
-
-    private void setModeCdma(AsyncResult aSyncResult, int msg) {
-        final String[] result = (String[]) aSyncResult.result;
-        for (final String string : result) {
-            Log.v("@M_" + LOG_TAG, "--.>" + string);
-            String splitString = string.substring(BandModeContent.SAME_COMMAND_CDMA.length());
-            if (msg == BandModeContent.EVENT_QUERY_CURRENT_CDMA) {
-                long value = 0;
-                try {
-                    value = Long.valueOf(splitString.trim());
-                } catch (NumberFormatException e) {
-                    value = 0;
-                }
-                if (msg == BandModeContent.EVENT_QUERY_SUPPORTED) {
-                    setSupportedModeCdma(value);
-                } else {
-                    setCurrentModeCdma(value);
-                    saveDefaultValueIfNeedCdma(value);
-                }
-            }
-        }
-    }
-
-    private void sendATCommandCdma(String[] atCommand, int msg) {
-        mCdmaPhone.invokeOemRilRequestStrings(atCommand, mResponseHander.obtainMessage(msg));
-    }
-
-    private void setBandModeCdma(final long value) {
-        String[] modeString = {BandModeContent.SET_COMMAND_CDMA + value, "" };
-        Log.v("@M_" + LOG_TAG, "AT String:" + modeString[0]);
-        sendATCommandCdma(modeString, BandModeContent.EVENT_SET_CDMA);
-        setCurrentModeCdma(value);
-        mSettingCdma = true;
-    }
-
-    private long getValFromBoxCdma() {
-        long value = 0;
-        for (final BandModeMap m : mCdmaModeArray) {
-            if (m.mChkBox.isChecked()) {
-                value |= 1L << m.mBit;
-            }
-        }
-        return value;
-    }
-
-    private void setCurrentModeCdma(final long value) {
-        for (final BandModeMap m : mCdmaModeArray) {
-            if ((value & (1L << m.mBit)) == 0) {
-                m.mChkBox.setChecked(false);
-            } else {
-                if (m.mChkBox.isEnabled()) {
-                    m.mChkBox.setChecked(true);
-                }
-            }
-        }
-    }
-
-    private void setSupportedModeCdma(final long value) {
-        for (final BandModeMap m : mCdmaModeArray) {
-            Log.v("@M_" + LOG_TAG, "a " + value + m.mBit);
-            if ((value & (1L << m.mBit)) == 0) {
-                m.mChkBox.setEnabled(false);
-            } else {
-                m.mChkBox.setEnabled(true);
-            }
-        }
-    }
-
-    private long getDefaultValueCdma() {
-        SharedPreferences pref = getSharedPreferences(PREF_FILE + mSimType, MODE_PRIVATE);
-        return pref.getLong(PREF_KEYS[INDEX_CDMA_BAND], 0);
-    }
-
-    private void saveDefaultValueIfNeedCdma(long value) {
-        SharedPreferences pref = getSharedPreferences(PREF_FILE + mSimType, MODE_PRIVATE);
-        SharedPreferences.Editor editor = pref.edit();
-        if (!pref.contains(PREF_KEYS[INDEX_CDMA_BAND])) {
-            editor.putLong(PREF_KEYS[INDEX_CDMA_BAND], value);
-        }
-        editor.commit();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/baseband/Baseband.java b/EngineerMode/src/com/mediatek/engineermode/baseband/Baseband.java
deleted file mode 100644
index a13633e..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/baseband/Baseband.java
+++ /dev/null
@@ -1,209 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.baseband;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.emsvr.AFMFunctionCallEx;
-import com.mediatek.engineermode.emsvr.FunctionReturn;
-
-public class Baseband extends Activity implements OnClickListener {
-
-    private static final String TAG = "EM-Baseband";
-    private static final int RADIX_LENGTH_SIXTEEN = 16;
-    private static final int RADIX_LENGTH_TEN = 10;
-    private static final int MAX_VALUE = 1024;
-    private static final int PARA_NUM = 4;
-    private static final int READ = 0;
-    private static final int WRITE = 1;
-    private Button mBtnRead;
-    private Button mBtnWrite;
-    private EditText mEditAddr;
-    private EditText mEditLen;
-    private EditText mEditVal;
-
-    private TextView mInfo;
-    private AFMFunctionCallEx mFmFunctionCallEx;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-
-    setContentView(R.layout.baseband);
-
-    mBtnRead = (Button) findViewById(R.id.Baseband_Read);
-    mBtnWrite = (Button) findViewById(R.id.Baseband_Write);
-    mEditAddr = (EditText) findViewById(R.id.Baseband_Addr);
-    mEditLen = (EditText) findViewById(R.id.Baseband_Len);
-    mEditVal = (EditText) findViewById(R.id.Baseband_Val);
-
-    mInfo = (TextView) findViewById(R.id.Baseband_Info);
-
-    mBtnRead.setOnClickListener(this);
-    mBtnWrite.setOnClickListener(this);
-
-    }
-
-    /**
-     * @see android.view.View.OnClickListener#onClick(android.view.View)
-     */
-
-    public void onClick(View arg0) {
-
-        String addrString = mEditAddr.getText().toString();
-        String lenString = mEditLen.getText().toString();
-        String valString = mEditVal.getText().toString();
-
-    if (arg0.getId() == mBtnRead.getId()) {
-
-        boolean result0 = checkValue(addrString, lenString, valString);
-        if (!result0) {
-            Toast.makeText(this, R.string.number_format_check,
-                    Toast.LENGTH_LONG).show();
-            return;
-        }
-        boolean result = functionCall(READ, addrString, lenString, valString);
-        if (!result) {
-            Toast.makeText(this, R.string.pipe_check, Toast.LENGTH_LONG).show();
-            return;
-        }
-        updateUI();
-    } else if (arg0.getId() == mBtnWrite.getId()) {
-        boolean result0 = checkValue(addrString, lenString, valString);
-        if (!result0) {
-            Toast.makeText(this, R.string.length_check, Toast.LENGTH_LONG)
-                    .show();
-            return;
-        }
-        boolean result = functionCall(WRITE, addrString, lenString, valString);
-
-        if (!result) {
-            Toast.makeText(this, R.string.pipe_check, Toast.LENGTH_LONG).show();
-
-            return;
-        }
-        updateUI();
-    }
-
-    }
-
-    /**
-     * @param flag
-     *            the integer of READ or WRITE
-     * @param address
-     *            the String of the start address
-     * @param len
-     *            the String of the address length
-     * @param value
-     *            the String of the value to address
-     * @return the boolean of true or false
-     */
-    public boolean functionCall(int flag, String address, String len,
-            String value) {
-    mFmFunctionCallEx = new AFMFunctionCallEx();
-    boolean result = mFmFunctionCallEx
-            .startCallFunctionStringReturn(AFMFunctionCallEx.FUNCTION_EM_BASEBAND);
-    mFmFunctionCallEx.writeParamNo(PARA_NUM);
-    if (flag == READ) {
-        mFmFunctionCallEx.writeParamString("r");
-    } else {
-        mFmFunctionCallEx.writeParamString("w");
-    }
-    mFmFunctionCallEx.writeParamString(address);
-    mFmFunctionCallEx.writeParamString(len);
-    if (flag == READ) {
-        mFmFunctionCallEx.writeParamString("0");
-    } else {
-        mFmFunctionCallEx.writeParamString(value);
-    }
-    return result;
-    }
-
-    /**
-     * @param addrString
-     *            the String of address
-     * @param lenString
-     *            the String of length
-     * @param valString
-     *            the String of Value
-     * @return the true or false if the value is null
-     */
-    public boolean checkValue(String addrString, String lenString, String valString) {
-        if (null == addrString || null == lenString) {
-            return false;
-        }
-
-        long lenValue = 0;
-        try {
-            Long.parseLong(addrString, RADIX_LENGTH_SIXTEEN);
-            lenValue = Long.parseLong(lenString, RADIX_LENGTH_TEN);
-            Long.parseLong(valString, RADIX_LENGTH_SIXTEEN);
-        } catch (NumberFormatException e) {
-            return false;
-        }
-        if (lenValue <= 0 || lenValue > MAX_VALUE) {
-            return false;
-        }
-        return true;
-    }
-
-    /**
-     * The Function is to make the result to show
-     */
-    private void updateUI() {
-    FunctionReturn r;
-    do {
-        r = mFmFunctionCallEx.getNextResult();
-        if ("".equals(r.mReturnString)) {
-            break;
-        }
-        mInfo.setText(r.mReturnString);
-
-    } while (r.mReturnCode == AFMFunctionCallEx.RESULT_CONTINUE);
-    if (r.mReturnCode == AFMFunctionCallEx.RESULT_IO_ERR) {
-
-        mInfo.setText(R.string.information);
-    }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BleTestMode.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/BleTestMode.java
deleted file mode 100644
index 2000923..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BleTestMode.java
+++ /dev/null
@@ -1,700 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.bluetooth.BluetoothAdapter;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Looper;
-import android.os.Message;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.RadioButton;
-import android.widget.Spinner;
-import android.widget.TextView;
-
-
-import com.mediatek.engineermode.R;
-
-/**
- * Do BT BLE test mode
- * 
- * @author mtk54040
- * 
- */
-
-public class BleTestMode extends Activity implements OnClickListener {
-
-    private BluetoothAdapter mBtAdapter = null;
-
-    private static final String TAG = "BLETestMode";
-
-    // views in this activity
-    // button
-    private Button mBtnStart = null;
-    private Button mBtnStop = null;
-
-    private TextView mResultText = null;
-    private String mResultStr = "R:";
-
-    // Radio Button
-    // BLE test mode Tx/Rx RadioGroup
-    private RadioButton mRBtnTx = null;
-    private RadioButton mRBtnRx = null;
-    // BLE test mode Hopping/Single RadioGroup
-    private RadioButton mRBtnHopping = null;
-    private RadioButton mRBtnSingle = null;
-    private static final int CHANNEL_NUM = 40;
-    // Checkbox
-    private CheckBox mContinune = null;
-
-    // Spinner
-    private Spinner mChannelSpn = null;
-    private Spinner mPatternSpn = null;
-
-    // spinner value
-    private byte mChannelValue = 0x00;
-    private byte mPatternValue = 0x00;
-
-    // btn values
-    private boolean mTxTest = true;
-  //  private boolean mHopping = false;
-
-    private static final int RENTURN_SUCCESS = 0;
-
-    // jni layer object
-    private BtTest mBtTest = null;
-
-    // BtTest object init and start test flag
-    private boolean mBtInited = false;
-    private boolean mTestStared = false;// this flag is not necessary in this
-    // module
-    private boolean mIniting = false;
-    // Dialog ID
-    private static final int CHECK_BT_STATE = 1;
-    private static final int CHECK_STOP = 2;
-    private static final int CHECK_BT_DEVEICE = 3;
-    // Message ID
-    private static final int TEST_START = 11;
-    private static final int TEST_STOP = 12;
-    // execuate result
-    private static final int TEST_SUCCESS = 13;
-    private static final int TEST_FAILED = 14;
-    private static final int STOP_FINISH = 15;
-    // activity exit message ID
-    private static final int ACTIVITY_EXIT = 20;
-
-//    private HandlerThread mWorkThread = null;
-    // private volatile Looper mWorkLooper = null;
-    private WorkHandler mWorkHandler = null;
-
-    @Override
-    protected void onCreate(Bundle onSavedInstanceState) {
-//        Log.v("@M_" + TAG, "-->onCreate");
-        super.onCreate(onSavedInstanceState);
-        setContentView(R.layout.ble_test_mode);
-        
-        // Initialize UI component
-        mBtnStart = (Button) findViewById(R.id.BLEStart);
-        mBtnStop = (Button) findViewById(R.id.BLEStop);
-        mResultText = (TextView) findViewById(R.id.BLEResult_Text);
-
-        mRBtnTx = (RadioButton) findViewById(R.id.BLETestModeTx);
-        mRBtnRx = (RadioButton) findViewById(R.id.BLETestModeRx);
-
-        mRBtnHopping = (RadioButton) findViewById(R.id.BLEHopping);
-        mRBtnSingle = (RadioButton) findViewById(R.id.BLESingle);
-
-        mContinune = (CheckBox) findViewById(R.id.BLEContiniousTx);
-
-        mChannelSpn = (Spinner) findViewById(R.id.BLEChannelSpinner);
-        mPatternSpn = (Spinner) findViewById(R.id.BLEPatternSpinner);
-
-        mBtnStart.setOnClickListener(this);
-        mBtnStop.setOnClickListener(this);
-
-        mRBtnTx.setChecked(true);
-        mTxTest = true;
-
-        mRBtnTx.setOnClickListener(this);
-        mRBtnRx.setOnClickListener(this);
-
-        mRBtnSingle.setChecked(true);
-//        mHopping = false;
-        mRBtnSingle.setOnClickListener(this);
-        mRBtnHopping.setOnClickListener(this);
-
-        // Fill "channel  spinner" content and action handler set
-        ArrayAdapter<String> mSpnChannelAdapter = new ArrayAdapter<String>(
-                this, android.R.layout.simple_spinner_item);
-        mSpnChannelAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-
-        for (int i = 0; i < CHANNEL_NUM; i++) {
-            // mSpnChannelAdapter.add("CH " + i);
-            mSpnChannelAdapter
-                    .add(getString(R.string.BT_ble_test_channnel) + i);
-        }
-
-        mChannelSpn.setAdapter(mSpnChannelAdapter);
-        mChannelSpn.setOnItemSelectedListener(new OnItemSelectedListener() {
-
-            public void onItemSelected(AdapterView<?> arg0, View arg1,
-                    int arg2, long arg3) {
-                Log.i("@M_" + TAG, "item id = " + arg2);
-                mChannelValue = (byte) arg2;
-            }
-
-            public void onNothingSelected(AdapterView<?> arg0) {
-                Log.i("@M_" + TAG, "DO Nothing ");
-            }
-        });
-
-        // Fill "pattern  " content and action handler set
-        ArrayAdapter<String[]> mSpnPatternAdapter = new ArrayAdapter<String[]>(
-                this, android.R.layout.simple_spinner_item);
-        mSpnPatternAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mSpnPatternAdapter.add(getResources().getStringArray(
-                R.array.bt_ble_test_pattern));
-
-        // mSpnPattern.setAdapter(mSpnPatternAdapter);
-        mPatternSpn.setOnItemSelectedListener(new OnItemSelectedListener() {
-            public void onItemSelected(AdapterView<?> arg0, View arg1,
-                    int arg2, long arg3) {
-                Log.i("@M_" + TAG, "item id = " + arg2);
-                mPatternValue = (byte) arg2;
-            }
-
-            public void onNothingSelected(AdapterView<?> arg0) {
-                Log.i("@M_" + TAG, "DO Nothing ");
-            }
-        });
-
-        setViewState(false);
-
-        HandlerThread workThread = new HandlerThread(TAG);
-        workThread.start();
-
-        Looper looper = workThread.getLooper();
-        mWorkHandler = new WorkHandler(looper);
-//        mWorkHandler = new WorkHandler(mWorkThread.getLooper());
-
-    }
-
-    // UI thread's handler
-    private Handler mUiHandler = new Handler() {
-        // @Override
-        public void handleMessage(Message msg) {
-            Log.i("@M_" + TAG, "-->main Handler - handleMessage");
-            mResultText.setText(mResultStr);
-            switch (msg.what) {
-            case TEST_SUCCESS:
-                mTestStared = true;
-                break;
-            case TEST_FAILED:
-                // here we can give some notification
-                mTestStared = false;
-                setViewState(false);
-                break;
-            case STOP_FINISH:
-                mTestStared = false;
-                setViewState(false);
-                removeDialog(CHECK_STOP);
-                break;
-            default:
-                break;
-            }
-        }
-    };
-    /**
-     * Check bt state when activity is in foreground
-     * 
-     */
-    @Override
-    protected void onResume() {
-//        Log.v("@M_" + TAG, "-->onResume");
-        super.onResume();
-        if (mBtAdapter == null) {
-            mBtAdapter = BluetoothAdapter.getDefaultAdapter();
-        }
-        if (mBtAdapter == null) {
-            showDialog(CHECK_BT_DEVEICE);
-        } else {
-            if (mBtAdapter.getState() != BluetoothAdapter.STATE_OFF) {
-                showDialog(CHECK_BT_STATE);
-            }
-        }
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Log.d("@M_" + TAG, "-->onCreateDialog");
-        if (id == CHECK_STOP) {
-            ProgressDialog dialog = new ProgressDialog(this);
-
-            dialog.setMessage(getString(R.string.BT_init_dev));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-
-            return dialog;
-        } else if (id == CHECK_BT_STATE) {
-            AlertDialog dialog = new AlertDialog.Builder(this)
-                .setCancelable(false)
-                .setTitle(R.string.Error)
-                .setMessage(getString(R.string.BT_turn_bt_off)) // put in strings.xml
-                .setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog,
-                                int which) {
-                            finish();
-                        }
-                    }).create();
-            return dialog;
-
-        } else if (id == CHECK_BT_DEVEICE) {
-            // "Error").setMessage("Can't find any bluetooth device") // put in
-            // strings.xml
-            AlertDialog dialog = new AlertDialog.Builder(this)
-                .setCancelable(false)
-                .setTitle(R.string.Error)
-                .setMessage(getString(R.string.BT_no_dev)) // put in strings.xml
-                .setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog,
-                                int which) {
-                            finish();
-                        }
-                    }).create();
-            return dialog;
-        }
-
-        return null;
-    }
-
-    @Override
-    protected void onDestroy() {
-        Log.v("@M_" + TAG, "-->onDestroy");
-        mWorkHandler.sendEmptyMessage(ACTIVITY_EXIT);
-        // mWorkThread = null;
-        super.onDestroy();
-
-    }
-
-    /**
-     * If pressing "Start" button Tx: 01 1E 20 03 XX 25 YY //HCI LE Transmitter
-     * Test CMD XX is based on Channel selection YY is based on Pattern
-     * selection Rx: 04 0E 04 01 1E 20 00 //HCI Command Complete Event
-     */
-    private boolean handleTxTestStart() {
-        Log.v("@M_" + TAG, "-->handleTxTestStart");
-
-        int cmdLen = 7;
-        char[] cmd = new char[cmdLen];
-        char[] response = null;
-        int i = 0;
-        cmd[0] = 0x01;
-        cmd[1] = 0x1E;
-        cmd[2] = 0x20;
-        cmd[3] = 0x03;
-        cmd[4] = (char) mChannelValue;
-        cmd[5] = 0x25;
-        cmd[6] = (char) mPatternValue;
-
-        response = mBtTest.hciCommandRun(cmd, cmdLen);
-        if (response != null) {
-            String s = null;
-            for (i = 0; i < response.length; i++) {
-                s = String.format("response[%d] = 0x%x", i, (long) response[i]);
-                Log.v("@M_" + TAG, s);
-            }
-        }
-//        else {
-//            Log.i("@M_" + TAG, "HCICommandRun failed");
-//            return false;
-//        }
-        // here we need to judge whether this operation is succeeded or not
-        response = null;
-        return true;
-    }
-
-    /**
-     * If pressing "Stop" button Tx: 01 1F 20 00 //HCI LE Test End CMD For Rx,
-     * we have two cases of HCI Command Complete Event Case A) Rx: 04 0E 0A 01
-     * 1F 20 00 00 00 00 00 00 00 Case B) Rx: 04 0E 06 01 1F 20 00 00 00
-     */
-    private void handleTxTestStop() {
-
-        Log.v("@M_" + TAG, "-->handleTxTestStop");
-        int cmdLen = 4;
-        char[] cmd = new char[cmdLen];
-        char[] response = null;
-        int i = 0;
-
-        cmd[0] = 0x01;
-        cmd[1] = 0x1F;
-        cmd[2] = 0x20;
-        cmd[3] = 0x00;
-
-        response = mBtTest.hciCommandRun(cmd, cmdLen);
-        if (response != null) {
-            String s = null;
-            for (i = 0; i < response.length; i++) {
-                s = String.format("response[%d] = 0x%x", i, (long) response[i]);
-                Log.v("@M_" + TAG, s);
-            }
-        }
-//        else {
-//            Log.i("@M_" + TAG, "HCICommandRun failed");
-//            return;
-//        }
-        response = null;
-    }
-
-    /* BLE test mode test */
-
-    /**
-     * If pressing "Start" button Tx: 01 1D 20 01 ZZ //HCI LE Receiver Test CMD
-     * ZZ is based on Channel selection Rx: 04 0E 04 01 1D 20 00 
-     * //HCI Command Complete Event
-     * 
-     */
-    private boolean handleRxTestStart() {
-        Log.v("@M_" + TAG, "-->handleRxTestStart");
-        char[] cmd = new char[5];
-        char[] response = null;
-        cmd[0] = 0x01;
-        cmd[1] = 0x1D;
-        cmd[2] = 0x20;
-        cmd[3] = 0x01;
-        cmd[4] = (char) mChannelValue;
-        response = mBtTest.hciCommandRun(cmd, cmd.length);
-        if (response != null) {
-            String s = null;
-            for (int i = 0; i < response.length; i++) {
-                s = String.format("response[%d] = 0x%x", i, (long) response[i]);
-                Log.v("@M_" + TAG, s);
-            }
-        }
-        return true;
-    }
-
-    /**
-     * If pressing "Stop" button Tx: 01 1F 20 00 //HCI LE Test End CMD For Rx,
-     * we have two cases of HCI Command Complete Event Case A) Rx: 04 0E 0A 01
-     * 1F 20 00 BB AA ?? ?? ?? ?? Case B) Rx: 04 0E 06 01 1F 20 00 BB AA ??
-     * means do not care Packet Count = 0xAABB
-     */
-    private void handleRxTestStop() {
-        Log.v("@M_" + TAG, "-->handleRxTestStop");
-        char[] cmd = {0x01, 0x1F, 0x20, 0x00};
-        char[] response = null;
-        response = mBtTest.hciCommandRun(cmd, cmd.length);
-        if (response != null) {
-            String s = null;
-            for (int i = 0; i < response.length; i++) {
-                s = String.format("response[%d] = 0x%x", i, (long) response[i]);
-                Log.v("@M_" + TAG, s);
-            }
-            // Response format: 04 0e 0a/06 01 1f 20 00 BB AA 00 00...
-            // packet count = 0xAABB
-            mResultStr = String.format("***Packet Count: %d",
-                    (long) response[8] * 256 + (long) response[7]);
-        } 
-    }
-
-    /**
-     * Do test after push "start" button
-     * 
-     * @return 0 success
-     */
-    private boolean handleStartBtnClick() {
-        Log.v("@M_" + TAG, "-->handleStartBtnClick");
-        // BLEResult_String = "Response:";
-        // judge if Rx or Tx test is selected
-        /*
-         * Each time before executing, HCI Reset CMD is needed to reset
-         * Bluetooth Controller Tx: 01 03 0C 00 //HCI Reset CMD Rx: 04 0E 04 01
-         * 03 0C 00 //HCI Command Complete Event
-         */
-        int cmdLen = 4;
-        char[] cmd = new char[cmdLen];
-        char[] response = null;
-        int i = 0;
-        cmd[0] = 0x01;
-        cmd[1] = 0x03;
-        cmd[2] = 0x0C;
-        cmd[3] = 0x00;
-        // HCI reset command
-        response = mBtTest.hciCommandRun(cmd, cmdLen);
-        if (response == null) {
-            Log.i("@M_" + TAG, "HCICommandRun failed");
-            return false;
-        } else {
-            String s = null;
-            for (i = 0; i < response.length; i++) {
-                s = String.format("response[%d] = 0x%x", i, (long) response[i]);
-                Log.v("@M_" + TAG, s);
-            }
-        }
-        response = null;
-
-        if (mTxTest) {
-            return handleTxTestStart();
-        } else {
-            return handleRxTestStart();
-        }
-    }
-
-    /**
-     * run "HCI Reset" command.
-     */
-    private void runHCIResetCmd() {
-        /*
-         * If pressing "HCI Reset" button Tx: 01 03 0C 00 Rx: 04 0E 04 01 03 0C
-         * 00 After pressing "HCI Reset" button, all state will also be reset
-         */
-        Log.i("@M_" + TAG, "-->runHCIResetCmd");
-        int cmdLen = 4;
-        char[] cmd = new char[cmdLen];
-        char[] response = null;
-        int i = 0;
-
-        cmd[0] = 0x01;
-        cmd[1] = 0x03;
-        cmd[2] = 0x0C;
-        cmd[3] = 0x00;
-        response = mBtTest.hciCommandRun(cmd, cmdLen);
-        if (response == null) {
-            Log.v("@M_" + TAG, "HCICommandRun failed");
-        } else {
-            String s = null;
-            for (i = 0; i < response.length; i++) {
-                s = String.format("response[%d] = 0x%x", i, (long) response[i]);
-                Log.v("@M_" + TAG, s);
-            }
-        }
-        // here we need to judge whether this operation is succeeded or not
-        response = null;
-    }
-
-    /**
-     * stop test.
-     */
-    private void handleStopBtnClick() {
-        Log.v("@M_" + TAG, "-->handleStopBtnClick");
-        if (mTxTest) {
-            handleTxTestStop();
-        } else {
-            handleRxTestStop();
-        }
-        mTestStared = false;
-    }
-
-    /*
-     * (non-Javadoc)
-     * 
-     * @see android.view.View.OnClickListener#onClick(android.view.View)
-     */
-    public void onClick(View v) {
-
-        Log.v("@M_" + TAG, "-->onClick");
-        if (v.equals(mBtnStart)) {
-            setViewState(true);
-            mWorkHandler.sendEmptyMessage(TEST_START);
-            /*
-             * if(!handleStartBtnClick()) { setViewState(false); }
-             */
-        } else if (v.equals(mBtnStop)) {
-            // Rx test button is clicked
-            mBtnStop.setEnabled(false);
-            showDialog(CHECK_STOP);
-            mWorkHandler.sendEmptyMessage(TEST_STOP);
-            /*
-             * handleStopBtnClick(); setViewState(false);
-             */
-
-        } else if (v.equals(mRBtnRx)) {
-            // Rx test button is clicked
-            mTxTest = false;
-
-        } else if (v.equals(mRBtnTx)) {
-            // Rx test button is clicked
-            mTxTest = true;
-
-        } 
- /*       else if (v.equals(mRBtnHopping)) {
-            // Hopping test button is clicked
-          //  mHopping = true;
-
-        } else if (v.equals(mRBtnSingle)) {
-            // Single test button is clicked
-           // mHopping = false;
-        } else {
-            Log.i("@M_" + TAG, "no view matches current view");
-        }
-        */
-    }
-
-    /**
-     * set view to state (true/false --> enable(stop btn pressed) /
-     * disable(start btn pressed))
-     * 
-     * @param state
-     */
-    private void setViewState(boolean state) {
-
-        mRBtnTx.setEnabled(!state);
-        mRBtnRx.setEnabled(!state);
-        mRBtnHopping.setEnabled(false);
-        mRBtnSingle.setEnabled(!state);
-        mContinune.setEnabled(!state);
-        mChannelSpn.setEnabled(!state);
-        mPatternSpn.setEnabled(!state);
-
-        mBtnStart.setEnabled(!state);
-        mBtnStop.setEnabled(state);
-    }
-
-    /**
-     * Init BtTest -call init function of BtTest.
-     * 
-     * @return true if success.
-     */
-    private boolean initBtTestOjbect() {
-        Log.v("@M_" + TAG, "-->initBtTestOjbect");
-        if (mIniting) {
-            return false;
-        }
-        if (mBtInited) {
-            return mBtInited;
-        }
-        if (mBtTest == null) {
-            mBtTest = new BtTest();
-        }
-        if (mBtTest != null && !mBtInited) {
-            mIniting = true;
-            if (mBtTest.init() == RENTURN_SUCCESS) {
-                runHCIResetCmd();
-                mBtInited = true;                
-            } else {
-                mBtInited = false;
-                Log.i("@M_" + TAG, "mBT initialization failed");
-            }
-        }
-        mIniting = false;
-        return mBtInited;
-    }
-
-    /**
-     * Clear BtTest object -call deInit function of BtTest.
-     * 
-     * @return true if success.
-     */
-    private boolean uninitBtTestOjbect() {
-        Log.v("@M_" + TAG, "-->uninitBtTestOjbect");
-        if (mBtTest != null && mBtInited) {
-            if (mTestStared) {
-                // handleStopBtnClick();
-                runHCIResetCmd();
-            }
-            if (mBtTest.unInit() != RENTURN_SUCCESS) {
-                Log.i("@M_" + TAG, "mBT un-initialization failed");
-            }
-        }
-        mBtTest = null;
-        mBtInited = false;
-        mTestStared = false;
-        return true;
-    }
-
-    /**
-     * Deal with function request.
-     * 
-     * @author mtk54040
-     * 
-     */
-    private final class WorkHandler extends Handler {
-
-        /**
-         * @param looper
-         */
-        private WorkHandler(Looper looper) {
-            super(looper);
-        }
-
-        @Override
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case TEST_START:
-                if (initBtTestOjbect() && handleStartBtnClick()) {
-                    // if (handleStartBtnClick()) {
-                    mUiHandler.sendEmptyMessage(TEST_SUCCESS);
-                    // }
-                }
-                if (!mBtInited) {
-                    mUiHandler.sendEmptyMessage(TEST_FAILED);
-                }
-                break;
-            case TEST_STOP:
-                if (mBtInited) {
-                    handleStopBtnClick();
-                }
-                mUiHandler.sendEmptyMessage(STOP_FINISH);
-                break;
-            case ACTIVITY_EXIT:
-                uninitBtTestOjbect();
-                break;
-            default:
-                break;
-            }
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtChipInfoActivity.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtChipInfoActivity.java
deleted file mode 100644
index 84f5725..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtChipInfoActivity.java
+++ /dev/null
@@ -1,214 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.bluetooth.BluetoothAdapter;
-import android.content.DialogInterface;
-import android.os.AsyncTask;
-import android.os.Bundle;
-import android.util.Log;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.R;
-
-/**
- * Show bluetooth chip infomation.
- * 
- * @author mtk54040
- * 
- */
-public class BtChipInfoActivity extends Activity {
-    private static final String TAG = "EM/BT/ChipInfo";
-
-    // flags
-    // private boolean mbIsDialogShowed = false; // flag style
-    // private boolean mbIsBLEFeatureDetected = false;
-    // dialog ID and MSG ID
-    private static final int CHECK_BT_STATE = 1;
-    private static final int GET_INFO = 2;
-    // private static final int CHECK_BLE_FINISHED = 3;
-
-    private static final int RESULT_SUCCESS = 0;
-
-    private BluetoothAdapter mBtAdapter = null;
-    // private Handler mUiHandler = null;
-
-    private BtTest mBtTest = null;
-
-    // string
-    private String mChipId = "";
-    private String mChipEco = "";
-    private String mChipPatchId = "";
-    private String mChipPatchLen = "";
-    // TextView
-    private TextView mChipIdTextView = null;
-    private TextView mEcoVerTextView = null;
-    private TextView mPatchSizeView = null;
-    private TextView mPatchDateView = null;
-
-    @Override
-    public void onCreate(Bundle onSavedInstanceState) {
-//        Log.v("@M_" + TAG, "onCreate"); // event log
-        super.onCreate(onSavedInstanceState);
-        setContentView(R.layout.bt_chip_info);
-        
-        // Initialize UI component
-        mChipIdTextView = (TextView) findViewById(R.id.chipId);
-        mEcoVerTextView = (TextView) findViewById(R.id.ecoVersion);
-        mPatchSizeView = (TextView) findViewById(R.id.patchSize);
-        mPatchDateView = (TextView) findViewById(R.id.patchDate);
-
-        if (mBtAdapter == null) {
-            mBtAdapter = BluetoothAdapter.getDefaultAdapter();
-        }
-        // Get chip info when bt is close
-        if (mBtAdapter.getState() == BluetoothAdapter.STATE_OFF) {
-            showDialog(GET_INFO);
-            FunctionTask functionTask = new FunctionTask();
-            functionTask.execute();
-        } else {
-            showDialog(CHECK_BT_STATE);
-        }
-        
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        if (id == GET_INFO) {
-            ProgressDialog dialog = new ProgressDialog(BtChipInfoActivity.this);
-            dialog.setMessage(getString(R.string.BT_init_dev));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            // dialog.show();
-            Log.i("@M_" + TAG, "new ProgressDialog succeed");
-            return dialog;
-        } else if (id == CHECK_BT_STATE) {
-            AlertDialog dialog = new AlertDialog.Builder(this)
-                .setCancelable(false)
-                .setTitle(R.string.Error)
-                .setMessage(R.string.BT_turn_bt_off) // put in strings.xml
-                .setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog,
-                                int which) {
-                            finish();
-                        }
-                    }).create();
-            return dialog;
-        }
-
-        return null;
-    }
-
-    public class FunctionTask extends AsyncTask<Void, Void, Integer> {
-
-        @Override
-        protected Integer doInBackground(Void... params) {
-            mBtTest = new BtTest();
-            // Message msg = mUiHandler.obtainMessage(what);
-            // check if BLE is supported or not
-            if (mBtTest != null) {
-                if (mBtTest.init() == RESULT_SUCCESS) { // get infomation from
-                    // onCreate
-                    // try {
-                    mChipId = "";
-                    String[] chipList = getResources().getStringArray(
-                            R.array.bt_chip_id);
-                    // Log.v("@M_" + TAG, "chipList.length" + "___" + chipList.length);
-                    // Log.v("@M_" + TAG, "mBT.GetChipIdInt()" + "__" +
-                    // mBT.GetChipIdInt());
-                    int tmpId = mBtTest.getChipIdInt();
-                    if (tmpId <= chipList.length) {
-                        mChipId = chipList[tmpId];
-                    }
-                    Log.v("@M_" + TAG, "chipId@" + "___" + mChipId);
-
-                    mChipEco = "";
-                    String[] ecoList = getResources().getStringArray(
-                            R.array.bt_chip_eco);
-                    // Log.v("@M_" + TAG, "ecoList.length" + "___" + ecoList.length);
-                    // Log.v("@M_" + TAG, "mBT.GetChipEcoNum()" + "__" +
-                    // mBT.GetChipEcoNum());
-                    int ecoIndex = mBtTest.getChipEcoNum();
-                    if (ecoIndex <= ecoList.length) {
-                        mChipEco = ecoList[ecoIndex];
-                    }
-
-                    Log.v("@M_" + TAG, "chipEco = " + mChipEco);
-                    char[] patchIdArray = mBtTest.getPatchId();
-
-                    mChipPatchId = new String(patchIdArray);
-                    Log.v("@M_" + TAG, "chipPatchId@" + mChipPatchId.length() + "___"
-                            + mChipPatchId);
-                    mChipPatchLen = "" + mBtTest.getPatchLen(); // remove ""
-                    Log.v("@M_" + TAG, "GetPatchLen=" + mChipPatchLen);
-
-                    mBtTest.unInit();
-                } else {
-                    Log.i("@M_" + TAG, "new BtTest failed");
-                }
-                // mbIsBLEFeatureDetected = true;
-                // removeDialog(CHECK_BLE);
-            }
-
-            return RESULT_SUCCESS;
-        }
-        
-        /**
-         * Display the bt chip information
-         * 
-         */
-        @Override
-        protected void onPostExecute(Integer result) {
-            mChipIdTextView.setText(mChipId);
-            mEcoVerTextView.setText(mChipEco);
-            mPatchSizeView.setText(mChipPatchLen);
-            mPatchDateView.setText(mChipPatchId);
-
-            // mbIsBLEFeatureDetected = true;
-            removeDialog(GET_INFO);
-//            super.onPostExecute(result);
-        }
-
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtClockSelectionActivity.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtClockSelectionActivity.java
deleted file mode 100644
index 87d7049..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtClockSelectionActivity.java
+++ /dev/null
@@ -1,186 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.text.Html;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.TextView;
-import android.widget.Button;
-
-import com.mediatek.engineermode.R;
-
-/**
- * Do BT RX ADC Clock selection
- * @author mtk80137
- *
- */
-public class BtClockSelectionActivity extends Activity implements OnClickListener {
-
-    private static final String TAG = "BtClockSelectionFeature";
-
-    private BtTest mBtTest = null;
-    private boolean mStateOn = false;  // Default the feature is off.
-
-    // UI component
-    private Button mSetButton;
-
-    private boolean mHasInit = false;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-
-        setContentView(R.layout.bt_clock_selection);
-
-        TextView tv = (TextView) findViewById(R.id.ClockSelectionDesTxv);
-        tv.setText(Html.fromHtml(getString(R.string.ClockSelectionDes)));
-        mSetButton = (Button) findViewById(R.id.clock_select_btn);
-        if (mStateOn) {
-            mSetButton.setText(R.string.clock_select_turn_off);
-        } else {
-            mSetButton.setText(R.string.clock_select_turn_on);
-        }
-        mSetButton.setOnClickListener(this);
-    }
-
-    @Override
-    protected void onResume() {
-        Log.v("@M_" + TAG, "-->onResume");
-        super.onResume();
-
-       // showDialog(OPEN_BT);
-      //  mWorkHandler.sendEmptyMessage(OP_OPEN_BT);
-    }
-    @Override
-    protected void onStop() {
-        Log.v("@M_" + TAG, "-->onStop");
-        uninitBtTestOjbect();
-        super.onStop();
-    }
-
-    @Override
-    public void onClick(final View arg0) {
-
-        if (arg0 == mSetButton) {
-            if (mStateOn) {
-                mStateOn = false;
-                mSetButton.setText(R.string.clock_select_turn_on);
-            } else {
-                mStateOn = true;
-                mSetButton.setText(R.string.clock_select_turn_off);
-            }
-            runHCICommand(mStateOn);
-        }
-    }
-
-    private void runHCICommand(boolean state) {
-        initBtTestOjbect();
-        int cmdLen = 12;
-        char[] cmd = new char[cmdLen];
-        char[] response = null;
-
-        Log.i("@M_" + TAG, "-->runHCICommand");
-        cmd[0] = 0x01;
-        cmd[1] = 0x20;
-        cmd[2] = 0xFC;
-        cmd[3] = 0x08;
-        cmd[4] = 0x0;
-        cmd[5] = 0x0;
-        cmd[6] = 0x0;
-        cmd[7] = 0x0;
-        cmd[8] = 0x0;
-        cmd[9] = 0x0;
-        cmd[10] = 0x0;
-        cmd[11] = (char) (state ? 0x01 : 0x0);
-
-        if (mBtTest == null) {
-            mBtTest = new BtTest();
-        }
-        response = mBtTest.hciCommandRun(cmd, cmdLen);
-        if (response != null) {
-            String s = null;
-            for (int i = 0; i < response.length; i++) {
-                s = String.format("response[%d] = 0x%x", i, (long) response[i]);
-                Log.i("@M_" + TAG, s);
-            }
-        } else {
-            Log.i("@M_" + TAG, "HCICommandRun failed");
-        }
-        response = null;
-
-    }
-
-    // init BtTest -call init function of BtTest
-    private boolean initBtTestOjbect() {
-        Log.i("@M_" + TAG, "-->initBtTestOjbect");
-
-        if (mHasInit) {
-            return mHasInit;
-        }
-        if (mBtTest == null) {
-            mBtTest = new BtTest();
-        }
-        if (mBtTest != null) {
-            if (mBtTest.init() != 0) {
-                mHasInit = false;
-                Log.i("@M_" + TAG, "mBtTest initialization failed");
-            } else {
-                mHasInit = true;
-            }
-        }
-        return mHasInit;
-    }
-
-    private boolean uninitBtTestOjbect() {
-        Log.i("@M_" + TAG, "-->uninitBtTestOjbect");
-        if (mBtTest != null && mHasInit) {
-            //runHCIResetCmd();
-            if (mBtTest.unInit() != 0) {
-                Log.i("@M_" + TAG, "mBtTest un-initialization failed");
-            }
-        }
-        mBtTest = null;
-        mHasInit = false;
-        return true;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtDebugFeatureActivity.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtDebugFeatureActivity.java
deleted file mode 100644
index 1479df0..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtDebugFeatureActivity.java
+++ /dev/null
@@ -1,97 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.os.SystemProperties;
-
-import android.text.Html;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.CheckBox;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-
-/**
- * Do BT debug feature test.
- * @author mtk80137
- *
- */
-public class BtDebugFeatureActivity extends Activity implements OnClickListener {
-
-    private static final String TAG = "BtDebugFeature";
-    private static final String KEY_DEBUG_FEATURE = "persist.bt.fwdump";
-    private BtTest mBtTest = null;
-
-    // UI component
-    private CheckBox mChecked;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.bt_debug_feature);
-
-        TextView tv = (TextView) findViewById(R.id.BTDebugFeaturetxv);
-        tv.setText(Html.fromHtml(getString(R.string.BtDebugFeature)));
-
-        mChecked = (CheckBox) findViewById(R.id.BTDebugFeatureCb);
-        mChecked.setOnClickListener(this);
-        if (0xFFFFFFFFL == SystemProperties.getLong(KEY_DEBUG_FEATURE, 0)) {
-            mChecked.setChecked(true);
-        } else {
-            mChecked.setChecked(false);
-        }
-    }
-
-    public void onClick(View v) {
-        if (v.equals(mChecked)) {
-            long value = mChecked.isChecked() ? 0xFFFFFFFFL : 0;
-            mBtTest = new BtTest();
-            mBtTest.setFWDump(value);
-            //SystemProperties.set(KEY_DEBUG_FEATURE, Long.toString(value));
-            Toast.makeText(this, "The change will be valid after you restart phone",
-                    Toast.LENGTH_LONG).show();
-            Log.v("@M_" + TAG, "DebugFeature isChecked--" + mChecked.isChecked());
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtList.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtList.java
deleted file mode 100644
index 4c28413..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtList.java
+++ /dev/null
@@ -1,315 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ListActivity;
-import android.app.ProgressDialog;
-import android.bluetooth.BluetoothAdapter;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.os.AsyncTask;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-/**
- * Show Bluetooth test modules.
- *
- * @author mtk54040
- *
- */
-public class BtList extends ListActivity {
-    private static final String TAG = "EM/BTList";
-
-    // dialog ID and MSG ID
-    private static final int CHECK_BT_STATE = 1;
-    // private static final int CHECK_BLE_FINISHED = 4;
-    private static final int CHECK_BLE = 2;
-//    private static final int CHECK_BT_DEVEICE = 3;
-
-    private static final int NUM_RADIX = 16;
-    private static final int RENTURN_SUCCESS = 0;
-
-    private static final int SLEEP_TIME = 300;
-
-    private BluetoothAdapter mBtAdapter;
-
-    // flags
-    // private boolean mBtStateErr = false; // bt opened or not found
-    private boolean mBleSupport = false; // mHasBleSupport
-    private boolean mDoubleFlag = false; // for quick back CR
-    private boolean mComboSupport = false;
-
-    // private Handler mHandler = null;
-//    private int mChipId = 0x6620;
-    private int mChipId = 0;
-    private BtTest mBtTest = null;
-    private ArrayList<String> mModuleList = null;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.btlist);
-        // mThisActivity = this; // no sense
-
-        mModuleList = new ArrayList<String>();
-        // mModuleList.add("TX Only test"); // put items in array.xml
-
-        // for tingting's request remove this "bt chip info" item
-        // mModuleList.add(getString(R.string.BT_chipTitle));
-        mModuleList.add(getString(R.string.BT_tx_only_Title));
-
-        // comments
-        // add for ble test 2010-11.30
-        // before add the following 5 feature into the listview,
-        // we need to read
-        // the "BLE feature bit" to confirm chip support BLE feature
-        //
-        ArrayAdapter<String> moduleAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mModuleList);
-        setListAdapter(moduleAdapter);
-        mModuleList.clear();
-        if (mBtAdapter == null) {
-            mBtAdapter = BluetoothAdapter.getDefaultAdapter();
-        }
-//        if (mBtAdapter == null) {
-//            showDialog(CHECK_BT_DEVEICE);
-//        } else {
-        if (mBtAdapter.getState() == BluetoothAdapter.STATE_OFF) {
-            showDialog(CHECK_BLE);
-            FunctionTask functionTask = new FunctionTask();
-            functionTask.execute();
-        } else {
-            showDialog(CHECK_BT_STATE);
-        }
-//        }
-    }
-
-    @Override
-    protected void onStart() {
-        super.onStart();
-        mDoubleFlag = false;
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Log.d("@M_" + TAG, "-->onCreateDialog");
-        if (id == CHECK_BLE) {
-            ProgressDialog dialog = new ProgressDialog(this);
-
-            // dialog.setTitle("Progress");
-            // dialog.setMessage("Please wait for device to initialize ...");
-            dialog.setMessage(getString(R.string.BT_init_dev));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            // dialog.show();
-            return dialog;
-        } else if (id == CHECK_BT_STATE) {
-            AlertDialog dialog = new AlertDialog.Builder(this)
-                .setCancelable(false)
-                .setTitle(R.string.BluetoothTitle)
-                .setMessage(R.string.BT_turn_bt_off)
-                .setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog,
-                                int which) {
-                            finish();
-                        }
-                    }).create();
-            return dialog;
-
-//        } else if (id == CHECK_BT_DEVEICE) {
-//            // "Error").setMessage("Can't find any bluetooth device")
-//            AlertDialog dialog = new AlertDialog.Builder(this)
-//                .setCancelable(false)
-//                .setTitle(R.string.Error)
-//                .setMessage(R.string.BT_no_dev)
-//                .setPositiveButton(R.string.OK,
-//                    new DialogInterface.OnClickListener() {
-//                        public void onClick(DialogInterface dialog,
-//                                int which) {
-//                            finish();
-//                        }
-//                    }).create();
-//            return dialog;
-        }
-
-        return null;
-    }
-
-    @Override
-    protected void onListItemClick(ListView l, View v, int position, long id) {
-        if (!mDoubleFlag) {
-            if (mModuleList.get(position).equals(
-                    getString(R.string.BT_tx_only_Title))) {
-                startActivity(new Intent(BtList.this, TxOnlyTestActivity.class));
-            } else if (mModuleList.get(position).equals(
-                    getString(R.string.BTNSRXTitle))) {
-                startActivity(new Intent(BtList.this, NoSigRxTestActivity.class));
-            } else if (mModuleList.get(position).equals(
-                    getString(R.string.BTTMTitle))) {
-                startActivity(new Intent(BtList.this, TestModeActivity.class));
-            } else if (mModuleList.get(position).equals(
-                    getString(R.string.BTSSPDMTitle))) {
-                startActivity(new Intent(BtList.this,
-                        SspDebugModeActivity.class));
-            } else if (mModuleList.get(position).equals(
-                    getString(R.string.BT_chipTitle))) {
-                startActivity(new Intent(BtList.this, BtChipInfoActivity.class));
-            } else if (mModuleList.get(position).equals(
-                    getString(R.string.BT_RelayerModeTitle))) {
-                startActivity(new Intent(BtList.this,
-                        BtRelayerModeActivity.class));
-            } else if (mModuleList.get(position).equals(
-                    getString(R.string.BtDebugFeatureTitle))) {
-                startActivity(new Intent(BtList.this,
-                        BtDebugFeatureActivity.class));
-            } else if (mModuleList.get(position).equals(
-                    getString(R.string.ClockSelectionTitle))) {
-                startActivity(new Intent(BtList.this,
-                        BtClockSelectionActivity.class));
-            }
-
-            if (mBleSupport && mModuleList.get(position)
-                    .equals(getString(R.string.BT_ble_test_mode_Title))) {
-                Log.v("@M_" + TAG, "BLE_Test_Mode item is selected");
-                startActivity(new Intent(BtList.this, BleTestMode.class));
-            }
-            mDoubleFlag = true;
-        }
-    }
-
-    public class FunctionTask extends AsyncTask<Void, Void, Integer> {
-
-        @Override
-        protected Integer doInBackground(Void... params) {
-            mBtTest = new BtTest();
-            if (mBtAdapter == null) {
-                mBtAdapter = BluetoothAdapter.getDefaultAdapter();
-            }
-            if (mBtAdapter.getState() == BluetoothAdapter.STATE_OFF) {
-                // check if BLE is supported or not
-                if (mBtTest.isBLESupport() == 1) {
-                    mBleSupport = true;
-                } else {
-                    mBleSupport = false;
-                }
-
-                if (mBtTest.isComboSupport() == 1) {
-                    mComboSupport = true;
-                } else {
-                    mComboSupport = false;
-                }
-                Log.i("@M_" + TAG, "BLE supported ? " + mBleSupport);
-                mChipId = mBtTest.getChipId();
-            } else {
-                // if Bluetooth is in ON state, just sleep for 500
-                // ms and send the message to main thread
-                try {
-                    Thread.sleep(SLEEP_TIME);
-                } catch (InterruptedException e) {
-                    Log.d("@M_" + TAG, e.getMessage());
-                }
-            }
-
-            // mHandler.sendEmptyMessage(CHECK_BLE_FINISHED);
-            // mbIsDialogShowed = true;
-
-            return RENTURN_SUCCESS;
-        }
-
-        @Override
-        protected void onPostExecute(Integer result) {
-            // mHasBleFeatureDetected = true;
-            mModuleList = new ArrayList<String>();
-
-            // mModuleList.add("Chip Information");
-            // mModuleList.add("TX Only test");
-// hide chip info
-//            mModuleList.add(getString(R.string.BT_chipTitle));
-            mModuleList.add(getString(R.string.BT_tx_only_Title));
-
-//            int chipId = mBtTest.getChipId();
-            Log.v("@M_" + TAG, "chipId@" + mChipId);
-            Log.v("@M_" + TAG, "6620@" + getString(R.string.BT_0x6620));
-            Log.v("@M_" + TAG, "0x6620@"
-                    + Integer.parseInt(getString(R.string.BT_0x6620),
-                            NUM_RADIX));
-
-            if (Integer.parseInt(getString(R.string.BT_0x6622), NUM_RADIX) != mChipId) {
-                // if (0x6622 != chipId) {
-                // mModuleList.add("Non-signaling RX Test");
-                mModuleList.add(getString(R.string.BTNSRXTitle));
-            }
-
-            // mModuleList.add("Test Mode");
-            // mModuleList.add("SSP Debug Mode");
-            mModuleList.add(getString(R.string.BTTMTitle));
-            mModuleList.add(getString(R.string.BTSSPDMTitle));
-
-            if (mBleSupport) {
-                // mModuleList.add("BLE Test Mode");
-                mModuleList.add(getString(R.string.BT_ble_test_mode_Title));
-            }
-
-            if (mComboSupport) {
-                mModuleList.add(getString(R.string.BT_RelayerModeTitle));
-            }
-            mModuleList.add(getString(R.string.BtDebugFeatureTitle));
-            mModuleList.add(getString(R.string.ClockSelectionTitle));
-            ArrayAdapter<String> moduleAdapter = new ArrayAdapter<String>(
-                    BtList.this, android.R.layout.simple_list_item_1,
-                    mModuleList);
-            BtList.this.setListAdapter(moduleAdapter);
-
-
-            removeDialog(CHECK_BLE);
-
-            super.onPostExecute(result);
-        }
-
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtRelayerModeActivity.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtRelayerModeActivity.java
deleted file mode 100644
index 87a5c8e..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtRelayerModeActivity.java
+++ /dev/null
@@ -1,230 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.os.AsyncTask;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-//import android.widget.ArrayAdapter;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.Button;
-import android.widget.Spinner;
-
-import com.mediatek.engineermode.R;
-
-/**
- * Set uart info and test relayer mode.
- *
- * @author mtk54040
- *
- */
-public class BtRelayerModeActivity extends Activity implements OnClickListener {
-    private static final String TAG = "EM/BT/RelayerMode";
-    // dialog ID and MSG ID
-    private static final int START_TEST = 1;
-    private static final int END_TEST = 2;
-
-    private static final int RENTURN_SUCCESS = 0;
-//    private static final int RENTURN_FAIL = -1;
-
-    private static final int EXIT_SUCCESS = 10;
-    private static final int PARA_INDEX = 0;
-    // UI
-    private Spinner mBauSpinner;
-    private Spinner mUartSpinner;
-    private Button mStartBtn;
-
-//    private ArrayAdapter<String[]> mBaudrateAdpt;
-//    private ArrayAdapter<String[]> mUartAdapter;
-    private BtTest mBtTest = null; // null
-    private boolean mStartFlag = false;
-    private int mBaudrate = 9600;
-    private int mPortNumber = 3;
-
-
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-
-//        Log.v("@M_" + TAG, "-->onCreate");
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.bt_relayer_mode);
-        // Init UI component
-        mBauSpinner = (Spinner) findViewById(R.id.spinner1);
-        mUartSpinner = (Spinner) findViewById(R.id.spinner2);
-        mUartSpinner
-                .setOnItemSelectedListener(new OnItemSelectedListener() {
-                    public void onItemSelected(AdapterView<?> arg0, View arg1,
-                            int arg2, long arg3) {
-                        if (arg2 == 4) {  // select usb
-                            mBauSpinner.setEnabled(false);
-                        } else {
-                            mBauSpinner.setEnabled(true);
-                        }
-                    }
-                    public void onNothingSelected(AdapterView<?> arg0) {
-                        Log.v("@M_" + TAG, "onNothingSelected");
-                    }
-                });
-        mStartBtn = (Button) findViewById(R.id.button1);
-/*
-        // Fill baudrate content
-        ArrayAdapter<String[]> mBaudrateAdpt = new ArrayAdapter<String[]>(this,
-                android.R.layout.simple_spinner_item);
-        mBaudrateAdpt
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mBaudrateAdpt
-                .add(getResources().getStringArray(R.array.bt_baudrate));
-
-        // Fill uart content
-        ArrayAdapter<String[]> mUartAdapter = new ArrayAdapter<String[]>(this,
-                android.R.layout.simple_spinner_item);
-        mUartAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-
-        mUartAdapter.add(getResources().getStringArray(R.array.bt_uart));
-*/
-        mStartBtn.setOnClickListener(this);
-
-    }
-
-    public void onClick(View v) {
-        Log.v("@M_" + TAG, "-->onClick");
-        Log.v("@M_" + TAG, "mStartFlag--" + mStartFlag);
-        if (v.getId() == mStartBtn.getId()) {
-
-            Log.i("@M_" + TAG, "mBtRelayerModeSpinner.getSelectedItem()--"
-                    + mBauSpinner.getSelectedItem());
-            try {
-                mBaudrate = Integer.parseInt(mBauSpinner
-                        .getSelectedItem().toString().trim());
-                Log.v("@M_" + TAG, "mBaudrate--" + mBaudrate);
-
-            } catch (NumberFormatException e) { // detail info
-                Log.v("@M_" + TAG, e.getMessage());
-            }
-
-            // Log.i("@M_" + TAG, "mSerialPortSpinner()--"
-            // + mSerialPortSpinner.getSelectedItem());
-            // Log.i("@M_" + TAG, "id--" + mSerialPortSpinner.getSelectedItemId());
-            // mPortNumber = (int) mSerialPortSpinner.getSelectedItemId(); //
-            // use method to convert int
-            Long tmpLong = mUartSpinner.getSelectedItemId();
-            mPortNumber = tmpLong.intValue();
-            Log.i("@M_" + TAG, "mPortNumber--" + mPortNumber);
-            FunctionTask functionTask = new FunctionTask();
-
-            // Disable button to avoid multiple click
-            mStartBtn.setEnabled(false);
-            if (mStartFlag) {
-//                mStartFlag = false;
-                functionTask.execute(END_TEST);
-                mStartBtn.setText("Start");
-            } else {
-//                mStartFlag = true; // add violate
-                showDialog(START_TEST);
-                functionTask.execute(START_TEST);
-            }
-        }
-
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Log.v("@M_" + TAG, "-->onCreateDialog");
-        if (id == START_TEST) {
-            ProgressDialog dialog = new ProgressDialog(
-                    BtRelayerModeActivity.this);
-            dialog.setMessage(getString(R.string.BT_relayer_start));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-
-            return dialog;
-        }
-        return null;
-    }
-
-    /**
-     * Deal with function request.
-     *
-     * @author mtk54040
-     *
-     */
-    public class FunctionTask extends AsyncTask<Integer, Void, Integer> {
-
-        @Override
-        protected Integer doInBackground(Integer... params) {
-            int result = RENTURN_SUCCESS;
-            mBtTest = new BtTest();
-            int paraValue = params[PARA_INDEX];
-            if (paraValue == START_TEST) {
-                result = mBtTest.relayerStart(mPortNumber, mBaudrate);
-//                mStartFlag = true;
-                Log.v("@M_" + TAG, "-->relayerStart-" + mBaudrate + " uart "
-                        + mPortNumber + "result 0 success,-1 fail: result= "
-                        + result);
-            } else if (paraValue == END_TEST) {
-                mBtTest.relayerExit();
-                mStartFlag = false;
-                result = EXIT_SUCCESS;
-            }
-            return result;
-        }
-
-        @Override
-        protected void onPostExecute(Integer result) {
-            if (result == RENTURN_SUCCESS) {       // START TEST OK
-                mStartBtn.setText("END Test");
-                mStartFlag = true;
-            }
-            // remove dialog
-            removeDialog(START_TEST);
-
-            // Enable next click operation
-            mStartBtn.setEnabled(true);
-//            super.onPostExecute(result);
-        }
-
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtTest.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtTest.java
deleted file mode 100644
index 89fbbd8..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/BtTest.java
+++ /dev/null
@@ -1,172 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-/*
- * Copyright (C) 2006 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-/**
- * BT jni java part method.
- *
- * @author mtk54040
- *
- */
-public class BtTest {
-    private int mPatter;
-    private int mChannels;
-    private int mPocketType;
-    private int mPocketTypeLen;
-    private int mFreq;
-    private int mPower;
-
-    static {
-        System.loadLibrary("em_bt_jni");
-    }
-
-    // this function is only called in BLE feature test
-    public native int getChipId();
-
-    public native int init();
-
-    /*
-     * -1: error 0: BLE is not supported 1: BLE is supported
-     */
-    public native int isBLESupport();
-
-    public native int doBtTest(int kind);
-
-    public native boolean noSigRxTestStart(int nPatternIdx, int nPocketTypeIdx,
-            int nFreq, int nAddress);
-
-    public native int[] noSigRxTestResult();
-
-    public native int unInit(); // for uninitialize
-
-    public native char[] hciCommandRun(char[] hciCmd, int cmdLength);
-
-    public native char[] hciReadEvent();
-
-    public native int relayerStart(int portNumber, int serialSpeed);
-
-    public native int relayerExit();
-
-    public native int getChipIdInt();
-
-    public native int getChipEcoNum();
-
-    public native char[] getPatchId();
-
-    public native long getPatchLen();
-
-    public native int setFWDump(long value);
-    public native int isComboSupport();
-    public native int pollingStart();
-    public native int pollingStop();
-
-    public native boolean setSSPDebugMode(boolean value);
-
-    public BtTest() {
-        mPatter = -1;
-        mChannels = -1;
-        mPocketType = -1;
-        mPocketTypeLen = 0;
-        mFreq = 0;
-        mPower = 7;
-    }
-
-//    public int getPatter() {
-//        return mPatter;
-//    }
-
-//    public int getChannels() {
-//        return mChannels;
-//    }
-
-    public int getPocketType() {
-        return mPocketType;
-    }
-
-//    public int getPocketTypeLen() {
-//        return mPocketTypeLen;
-//    }
-
-    public int getFreq() {
-        return mFreq;
-    }
-
-//    public int getPower() {
-//        return mPower;
-//    }
-
-    public void setPatter(int val) {
-        mPatter = val;
-    }
-
-    public void setChannels(int val) {
-        mChannels = val;
-    }
-
-    public void setPocketType(int val) {
-        mPocketType = val;
-    }
-
-    public void setPocketTypeLen(int val) {
-        mPocketTypeLen = val;
-    }
-
-    public void setFreq(int val) {
-        mFreq = val;
-    }
-
-    public void setPower(int val) {
-        mPower = val;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/NoSigRxTestActivity.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/NoSigRxTestActivity.java
deleted file mode 100644
index 9224202..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/NoSigRxTestActivity.java
+++ /dev/null
@@ -1,491 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.bluetooth.BluetoothAdapter;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Looper;
-import android.os.Message;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Spinner;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.R;
-
-/**
- * Do bluetooth no singal rx test.
- *
- * @author mtk54040
- *
- */
-public class NoSigRxTestActivity extends Activity implements
-        DialogInterface.OnCancelListener, OnClickListener {
-    private static final String TAG = "NoSigRxLOG";
-
-    public static final int OP_BT_SEND = 0;
-    public static final int OP_BT_STOP = 1;
-
-    public static final int UI_BT_CLOSE = 5;
-    public static final int UI_BT_CLOSE_FINISHED = 6;
-
-    public static final int OP_IN_PROCESS = 8;
-    public static final int OP_FINISH = 9;
-    public static final int OP_RX_FAIL = 10;
-    public static final int OP_ADDR_DEFAULT = 11;
-    public static final int OP_TEST_OK_STEP1 = 12;
-    public static final int OP_TEST_OK_STEP2 = 13;
-
-    private static final int CHECK_BT_STATE = 20;
-    private static final int DIALOG_RX_FAIL = 21;
-    private static final int DIALOG_RX_TEST = 22;
-//    private static final int CHECK_BT_DEVEICE = 23;
-    private static final int DIALOG_BT_STOP = 23;
-
-    private static final int TEST_STATUS_BEGIN = 100;
-    private static final int TEST_STATUS_RESULT = 101;
-
-    private BluetoothAdapter mBtAdapter;
-
-    private Spinner mPattern;
-    private Spinner mPocketType;
-    private EditText mEdFreq;
-    private EditText mEdAddr;
-
-    private Button mBtnStartTest;
-
-    private TextView mPackCnt;
-    private TextView mPackErrRate;
-    private TextView mRxByteCnt;
-    private TextView mBitErrRate;
-
-    private int[] mResult = null; //
-    private int mTestStatus = TEST_STATUS_BEGIN;
-    private int mStateBt;
-
-    // used to record weather the button clicked action
-    private boolean mDoneFinished = true;
-    private boolean mDumpStart = false;
-    private Handler mWorkHandler = null; // used to handle the
-    private HandlerThread mWorkThread = null;
-
-//    private static Handler mUiHandler = null;
-    private BtTest mBtTest = null;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.rx_nosig_test);
-        setValuesSpinner();
-        mEdFreq = (EditText) findViewById(R.id.NSRX_editFrequency);
-        mEdAddr = (EditText) findViewById(R.id.NSRX_editTesterAddr);
-        mBtnStartTest = (Button) findViewById(R.id.NSRX_StartTest);
-        mPackCnt = (TextView) findViewById(R.id.NSRX_StrPackCnt);
-        mPackErrRate = (TextView) findViewById(R.id.NSRX_StrPackErrRate);
-        mRxByteCnt = (TextView) findViewById(R.id.NSRX_StrPackByteCnt);
-        mBitErrRate = (TextView) findViewById(R.id.NSRX_StrBitErrRate);
-
-        mBtnStartTest.setOnClickListener(this);
-
-        mWorkThread = new HandlerThread(TAG);
-        mWorkThread.start();
-
-        Looper looper = mWorkThread.getLooper();
-        mWorkHandler = new WorkHandler(looper);
-
-    }
-
-    private Handler mUiHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case OP_IN_PROCESS:
-                Log.w("@M_" + TAG, "OP_IN_PROCESS");
-                showDialog(DIALOG_RX_TEST);
-                break;
-            case OP_FINISH:
-                Log.w("@M_" + TAG, "OP_FINISH");
-                dismissDialog(DIALOG_RX_TEST);
-                break;
-            case OP_RX_FAIL:
-                Log.w("@M_" + TAG, "OP_RX_FAIL");
-                showDialog(DIALOG_RX_FAIL);
-                break;
-            case OP_ADDR_DEFAULT:
-                mEdAddr.setText("A5F0C3");
-                break;
-            case OP_TEST_OK_STEP1:
-                mTestStatus = TEST_STATUS_RESULT;
-                mBtnStartTest.setText("End Test");
-                break;
-            case OP_TEST_OK_STEP2:
-                mPackCnt.setText(String.valueOf(mResult[0]));
-                mPackErrRate.setText(String.format("%.2f",
-                        mResult[1] / 100.0)
-                        + "%");
-                mRxByteCnt.setText(String.valueOf(mResult[2]));
-                mBitErrRate.setText(String.format("%.2f",
-                        mResult[3] / 100.0)
-                        + "%");
-                mTestStatus = TEST_STATUS_BEGIN;
-                mBtnStartTest.setText("Start");
-                break;
-            case UI_BT_CLOSE:
-                Log.i("@M_" + TAG, "UI_BT_CLOSE");
-                showDialog(DIALOG_BT_STOP);
-                break;
-            case UI_BT_CLOSE_FINISHED:
-                Log.i("@M_" + TAG, "UI_BT_CLOSE_FINISHED");
-                removeDialog(DIALOG_BT_STOP);
-                finish();
-                break;
-            default:
-                break;
-            }
-        }
-    };
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        if (id == CHECK_BT_STATE) {
-            AlertDialog dialog = new AlertDialog.Builder(this)
-                .setCancelable(false)
-                .setTitle(R.string.Error)
-                .setMessage(R.string.BT_turn_bt_off) // put in strings.xml
-                .setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog,
-                                int which) {
-                            finish();
-                        }
-                    }).create();
-            return dialog;
-        } else if (id == DIALOG_RX_FAIL) {
-            // "Error").setMessage("Can't find any bluetooth device") // put in
-            // strings.xml
-            AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                    false).setTitle(R.string.Error)
-                    .setMessage(R.string.BT_no_sig_rx_fail) // put in strings.xml
-                    .setPositiveButton(R.string.OK,
-                            new DialogInterface.OnClickListener() {
-                                public void onClick(DialogInterface dialog,
-                                        int which) {
-                                    // finish();
-                                }
-                            }).create();
-            return dialog;
-        } else if (id == DIALOG_RX_TEST) {
-            ProgressDialog dialog = new ProgressDialog(NoSigRxTestActivity.this);
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-//                String text = getString(R.string.BT_tx_test);
-            dialog.setMessage(getString(R.string.BT_tx_test));
-            dialog.setTitle(R.string.BTRxTitle);
-            dialog.setCancelable(false);
-
-            return dialog;
-        } else if (id == DIALOG_BT_STOP) {
-            ProgressDialog dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.BT_deinit));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            return dialog;
-        }
-        return null;
-    }
-
-    @Override
-    public void onBackPressed() {
-        Log.v("@M_" + TAG, "-->onBackPressed ");
-        if (mBtTest != null) {
-            mWorkHandler.sendEmptyMessage(OP_BT_STOP);
-        } else {
-            super.onBackPressed();
-        }
-    }
-
-    @Override
-    public void onDestroy() {
-        Log.v("@M_" + TAG, "-->onDestroy");
-        if (mWorkThread != null) {
-            mWorkThread.quit();
-        }
-        super.onDestroy();
-    }
-
-    private final class WorkHandler extends Handler {
-        private WorkHandler(Looper looper) {
-            super(looper);
-        }
-
-        @Override
-        public void handleMessage(Message msg) {
-            if (msg.what == OP_BT_SEND) {
-                mUiHandler.sendEmptyMessage(OP_IN_PROCESS);
-                mDoneFinished = false;
-                doSendCommandAction();
-                mDoneFinished = true;
-                mUiHandler.sendEmptyMessage(OP_FINISH);
-            } else if (msg.what == OP_BT_STOP) {
-                mUiHandler.sendEmptyMessage(UI_BT_CLOSE);
-                // do stop
-                if (mDumpStart == true) {
-                    if (mBtTest != null) {
-                        Log.i("@M_" + TAG, "pollingStop");
-                        mDumpStart = false;
-                        mBtTest.pollingStop();
-                    }
-                }
-                mBtTest = null;
-                mUiHandler.sendEmptyMessage(UI_BT_CLOSE_FINISHED);
-            }
-        }
-    }
-
-    protected void setValuesSpinner() {
-        // for TX pattern
-        mPattern = (Spinner) findViewById(R.id.NSRX_PatternSpinner);
-        ArrayAdapter<CharSequence> adapterPattern = ArrayAdapter
-                .createFromResource(this, R.array.nsrx_pattern,
-                        android.R.layout.simple_spinner_item);
-        adapterPattern
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mPattern.setAdapter(adapterPattern);
-
-//        if (null != mPattern) {
-//            mPattern.setAdapter(adapterPattern);
-//        } else {
-//            Log.w("@M_" + TAG, "findViewById(R.id.PatternSpinner) failed");
-//        }
-
-        // for TX pocket type
-        mPocketType = (Spinner) findViewById(R.id.NSRX_PocketTypeSpinner);
-        ArrayAdapter<CharSequence> adapterPocketType = ArrayAdapter
-                .createFromResource(this, R.array.nsrx_Pocket_type,
-                        android.R.layout.simple_spinner_item);
-        adapterPocketType
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mPocketType.setAdapter(adapterPocketType);
-//        if (null != mPocketType) {
-//            mPocketType.setAdapter(adapterPocketType);
-//        } else {
-//            Log.w("@M_" + TAG, "findViewById(R.id.PocketTypeSpinner) failed");
-//        }
-    }
-
-    public void onClick(View arg0) {
-        if (mDoneFinished) {
-            // if the last click action has been handled, send another event
-            // request
-//            mPackCnt.setText(".");
-//            mPackErrRate.setText(".");
-//             mRxByteCnt.setText(".");
-//             mBitErrRate.setText(".");
-           // mWorkHandler.post(new WorkRunnable());
-           mWorkHandler.sendEmptyMessage(OP_BT_SEND);
-
-        } else {
-            Log.w("@M_" + TAG, "last click is not finished yet."); // log
-        }
-    }
-
-    /**
-     * Send command the user has made, and finish the activity.
-     */
-    private boolean doSendCommandAction() {
-        if (mDumpStart == true) {
-            if (mBtTest != null) {
-                Log.i("@M_" + TAG, "pollingStop");
-                mDumpStart = false;
-                mBtTest.pollingStop();
-            }
-        }
-        if (mTestStatus == TEST_STATUS_BEGIN) {
-            getBtState();
-            enableBluetooth(false);
-            getValuesAndSend();
-            if (mBtTest != null) {
-                Log.i("@M_" + TAG, "pollingStart");
-                mBtTest.pollingStart();
-                mDumpStart = true;
-            }
-        } else if (mTestStatus == TEST_STATUS_RESULT) {
-            getResult();
-        }
-
-        return true;
-    }
-
-    // implemented for DialogInterface.OnCancelListener
-    public void onCancel(DialogInterface dialog) {
-        // request that the service stop the query with this callback object.
-        Log.v("@M_" + TAG, "-->onCancel");
-        finish();
-    }
-
-    @Override
-    protected void onStart() {
-//        Log.v("@M_" + TAG, "-->onStart");
-        super.onStart();
-        if (mBtAdapter == null) {
-            mBtAdapter = BluetoothAdapter.getDefaultAdapter();
-        }
-        if (mBtAdapter.getState() != BluetoothAdapter.STATE_OFF) {
-            showDialog(CHECK_BT_STATE);
-        }
-    }
-
-    private void getBtState() {
-        Log.v("@M_" + TAG, "Enter GetBtState().");
-        BluetoothAdapter btAdapter = BluetoothAdapter.getDefaultAdapter();
-        if (null == btAdapter) {
-            Log.v("@M_" + TAG, "we can not find a bluetooth adapter.");
-            // Toast.makeText(getApplicationContext(),
-            // "We can not find a bluetooth adapter.", Toast.LENGTH_SHORT)
-            // .show();
-            mUiHandler.sendEmptyMessage(OP_RX_FAIL);
-            return;
-        }
-        mStateBt = btAdapter.getState();
-        Log.v("@M_" + TAG, "Leave GetBtState().");
-    }
-
-    private void enableBluetooth(boolean enable) {
-        Log.v("@M_" + TAG, "Enter EnableBluetooth().");
-        BluetoothAdapter btAdapter = BluetoothAdapter.getDefaultAdapter();
-        if (null == btAdapter) {
-            Log.v("@M_" + TAG, "we can not find a bluetooth adapter.");
-            return;
-        }
-        // need to enable
-        if (enable) {
-            Log.v("@M_" + TAG, "Bluetooth is enabled");
-            btAdapter.enable();
-        } else {
-            // need to disable
-            Log.v("@M_" + TAG, "Bluetooth is disabled");
-            btAdapter.disable();
-        }
-        Log.v("@M_" + TAG, "Leave EnableBluetooth().");
-    }
-
-    public void getValuesAndSend() {
-        Log.v("@M_" + TAG, "Enter GetValuesAndSend().");
-        mBtTest = null;
-//        if (mBtTest == null) {
-//            Log.v("@M_" + TAG, "We cannot find BtTest object.");
-//            return;
-//        }
-        int nPatternIdx = mPattern.getSelectedItemPosition();
-        int nPocketTypeIdx = mPocketType.getSelectedItemPosition();
-        int nFreq = 0;
-        int nAddress = 0;
-        try {
-            nFreq = Integer.valueOf(mEdFreq.getText().toString());
-            long longAdd = Long.valueOf(mEdAddr.getText().toString(), 16);
-            nAddress = (int) longAdd;
-            if (nFreq < 0 || nFreq > 78) {
-                // Toast.makeText(getApplicationContext(),
-                // "Error: Frequency error, must be 0-78.",
-                // Toast.LENGTH_SHORT).show();
-                mUiHandler.sendEmptyMessage(OP_RX_FAIL);
-                return;
-            }
-            if (nAddress == 0) {
-                nAddress = 0xA5F0C3;
-                mUiHandler.sendEmptyMessage(OP_ADDR_DEFAULT);
-            }
-        } catch (NumberFormatException e) {
-            Log.i("@M_" + TAG, "input number error!");
-            return;
-        }
-
-        mBtTest = new BtTest();
-        // send command to....
-        boolean rc = mBtTest.noSigRxTestStart(nPatternIdx, nPocketTypeIdx,
-                nFreq, nAddress);
-        if (rc) {
-            mUiHandler.sendEmptyMessage(OP_TEST_OK_STEP1);
-        } else {
-            Log.i("@M_" + TAG, "no signal rx test failed.");
-            if ((BluetoothAdapter.STATE_TURNING_ON == mStateBt)
-                    || (BluetoothAdapter.STATE_ON == mStateBt)) {
-                enableBluetooth(true);
-            }
-            mUiHandler.sendEmptyMessage(OP_RX_FAIL);
-        }
-
-        Log.i("@M_" + TAG, "Leave GetValuesAndSend().");
-    }
-
-    private void getResult() {
-        if (mBtTest == null) {
-            return;
-        }
-
-        mResult = mBtTest.noSigRxTestResult();
-        if (mResult == null) {
-            Log.i("@M_" + TAG, "no signal rx test failed.");
-            if ((BluetoothAdapter.STATE_TURNING_ON == mStateBt)
-                    || (BluetoothAdapter.STATE_ON == mStateBt)) {
-                enableBluetooth(true);
-            }
-            // Toast.makeText(getApplicationContext(),
-            // "no signal rx test failed.",
-            // Toast.LENGTH_SHORT).show();
-            // showDialog(DIALOG_RX_FAIL);
-            mUiHandler.sendEmptyMessage(OP_RX_FAIL);
-
-        } else {
-            mUiHandler.sendEmptyMessage(OP_TEST_OK_STEP2);
-
-        }
-
-        Log.i("@M_" + TAG, "Leave getresult().");
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/SspDebugModeActivity.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/SspDebugModeActivity.java
deleted file mode 100644
index d8ff679..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/SspDebugModeActivity.java
+++ /dev/null
@@ -1,308 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.bluetooth.BluetoothAdapter;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Looper;
-import android.os.Message;
-import android.os.SystemProperties;
-import android.text.Html;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.CheckBox;
-import android.widget.TextView;
-import android.widget.Toast;
-
-//import com.mediatek.bluetooth.BluetoothAdapterEx;
-import com.mediatek.engineermode.EngineerMode;
-import com.mediatek.engineermode.R;
-
-/**
- * Do BT SSP debug mode test.
- * Only click the checkbox when the bluetooth is on
- * @author mtk54040
- *
- */
-public class SspDebugModeActivity extends Activity implements OnClickListener {
-
-    private static final String TAG = "SSPDebugMode";
-    private static final String KEY_PROP_SSP = "mediatek.btem.ssp";
-//    private Handler mUiHandler = null;
-
-    // Message ID
-    private static final int OP_OPEN_BT = 1;
-    private static final int OP_CLOSE_BT = 2;
-    private static final int OPEN_BT_FINISHED = 3;
-    private static final int CLOSE_BT_FINISHED = 4;
-    private static final int SET_SSP = 5;
-    private static final int SET_SSP_FINISHED = 6;
-
-    // Dialog ID
-    private static final int OPEN_BT = 11;
-    private static final int CLOSE_BT = 12;
-    private static final int EXIT_EM_BT = 13;
-
-    private static final String VALUE_TRUE = "true";
-    private static final String VALUE_FALSE = "false";
-
-    private static final int SLEEP_TIME = 300;
-
-    // UI component
-    private CheckBox mChecked;
-    private BluetoothAdapter mBtAdapter = null;
-   // private BluetoothAdapterEx mBtAdapterEx = null;
-
-    private boolean mSspModeOn = false;
-    // private boolean mDialogShowed = false;
-
-//    private HandlerThread mWorkThread = null;
-    // private Looper mWorkLooper = null;
-    private WorkHandler mWorkHandler = null;
-    private BtTest mBtTest = null;
-    private Handler mUiHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-            if (msg.what == OPEN_BT_FINISHED) {
-//                if (mBtAdapter.getState() == BluetoothAdapter.STATE_ON) {
-                mChecked.setEnabled(true);
-                mChecked.setChecked(mSspModeOn);
-                removeDialog(OPEN_BT);
-            } else if (msg.what == CLOSE_BT_FINISHED) {
-                removeDialog(CLOSE_BT);
-            } else if (msg.what == SET_SSP_FINISHED) {
-                mChecked.setEnabled(true);
-            }
-        }
-    };
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.ssp_debug_mode);
-
-//        CharSequence str1 = getString(R.string.SSPDebugMode);
-        TextView tv = (TextView) findViewById(R.id.SSPDebugModetxv);
-
-         tv.setText(Html.fromHtml(getString(R.string.SSPDebugMode)));
-
-
-        mChecked = (CheckBox) findViewById(R.id.SSPDebugModeCb);
-        mChecked.setOnClickListener(this);
-//        if (null != mChecked) {
-//            mChecked.setOnCheckedChangeListener(mCheckedListener);
-//        } else {
-//            Log.w("@M_" + TAG, "findViewById(R.id.SSPDebugModeCb) failed");
-//        }
-
-        // Disable set Checkbox before open bluetooth
-        mChecked.setEnabled(false);
-
-//        mWorkThread = new HandlerThread(TAG);
-//        mWorkThread.start();
-//
-//        // mWorkLooper = mWorkThread.getLooper();
-//        mWorkHandler = new WorkHandler(mWorkThread.getLooper());
-//
-        mBtTest = new BtTest();
-        HandlerThread workThread = new HandlerThread(TAG);
-        workThread.start();
-
-        Looper looper = workThread.getLooper();
-        mWorkHandler = new WorkHandler(looper);
-
-    }
-    @Override
-    protected void onResume() {
-//        Log.v("@M_" + TAG, "-->onResume");
-        super.onResume();
-
-        showDialog(OPEN_BT);
-        // mDialogShowed = true;
-        mWorkHandler.sendEmptyMessage(OP_OPEN_BT);
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Log.v("@M_" + TAG, "-->onCreateDialog");
-        if (id == OPEN_BT) {
-            ProgressDialog dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.BT_open));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            // dialog.show();
-            Log.v("@M_" + TAG, "OPEN_BT ProgressDialog succeed");
-            return dialog;
-        } else if (id == EXIT_EM_BT) {
-            AlertDialog dialog = new AlertDialog.Builder(this)
-                .setCancelable(false)
-                .setTitle(R.string.Success)
-                .setMessage(R.string.BT_exit_em)
-                .setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            dialog.dismiss();
-                            backToEMEntry();
-                        }
-                    }).create();
-            return dialog;
-        } else if (id == CLOSE_BT) {
-            ProgressDialog dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.BT_close));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            // dialog.show();
-            return dialog;
-        }
-        return null;
-    }
-
-    private void backToEMEntry() {
-        Intent intent = new Intent(this, EngineerMode.class);
-        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
-        startActivity(intent);
-    }
-
-    @Override
-    public void onBackPressed() {
-        Log.v("@M_" + TAG, "-->onBackPressed mSspModeOn=" + mSspModeOn);
-        if (mSspModeOn) {
-            // showDialog(EXIT_EM_BT);
-            Toast.makeText(getApplicationContext(),
-                    R.string.BT_exit_em, Toast.LENGTH_SHORT).show();
-            backToEMEntry();
-        } else {
-            // Debug test not start, close bt
-            showDialog(CLOSE_BT);
-            mWorkHandler.sendEmptyMessage(OP_CLOSE_BT);
-        }
-        super.onBackPressed();
-    }
-
-    public void onClick(View v) {
-        if (v.equals(mChecked)) {
-            mSspModeOn = mChecked.isChecked();
-            // Disable click the checkbox
-            mChecked.setEnabled(false);
-            mWorkHandler.sendEmptyMessage(SET_SSP);
-            Log.v("@M_" + TAG, "SSPDebug isChecked--" + mChecked.isChecked());
-            if (mSspModeOn) {
-                Log.v("@M_" + TAG, " back EngineerMode");
-                showDialog(EXIT_EM_BT);
-            }
-        }
-
-    }
-
-    /**
-     * Deal with function request.
-     *
-     * @author mtk54040
-     *
-     */
-    private final class WorkHandler extends Handler {
-        private WorkHandler(Looper looper) {
-            super(looper);
-        }
-
-        @Override
-        public void handleMessage(Message msg) {
-            if (mBtAdapter == null) {
-                mBtAdapter = BluetoothAdapter.getDefaultAdapter();
-            }
-            //if (mBtAdapterEx == null) {
-            //    mBtAdapterEx = BluetoothAdapterEx.getDefaultAdapterEx();
-            //}
-            if (msg.what == OP_OPEN_BT) {
-                if (mBtAdapter.getState() != BluetoothAdapter.STATE_ON) {
-                    // Open Bluetooth through mAdapter
-                    mBtAdapter.enable();
-                    while (mBtAdapter.getState() == BluetoothAdapter.STATE_TURNING_ON) {
-
-                        Log.i("@M_" + TAG, "Bluetooth turning on ...");
-                        try {
-                            Thread.sleep(SLEEP_TIME);
-                        } catch (InterruptedException e) {
-                            Log.i("@M_" + TAG, e.getMessage());
-                        }
-                    }
-                }
-                // Get the Ssp debug mode state
-                //mSspModeOn = mBtAdapterEx.getSSPDebugMode();
-                mSspModeOn = VALUE_TRUE.equals(SystemProperties.get(
-                KEY_PROP_SSP, VALUE_FALSE));
-
-                Log.i("@M_" + TAG, "mSspModeOn =" + mSspModeOn);
-                mUiHandler.sendEmptyMessage(OPEN_BT_FINISHED);
-            } else if (msg.what == OP_CLOSE_BT) {
-                if (mBtAdapter.getState() != BluetoothAdapter.STATE_OFF) {
-                    // Cloese bluetooth
-                    mBtAdapter.disable();
-                    while (mBtAdapter.getState() == BluetoothAdapter.STATE_TURNING_OFF) {
-                         Log.v("@M_" + TAG, "Bluetooth turning off ...");
-                        try {
-                            Thread.sleep(SLEEP_TIME);
-                        } catch (InterruptedException e) {
-                            Log.i("@M_" + TAG, e.getMessage());
-                        }
-                    }
-                }
-
-                mUiHandler.sendEmptyMessage(CLOSE_BT_FINISHED);
-            } else if (msg.what == SET_SSP) {
-                // Start or stop ssp debug mode
-                //mBtAdapterEx.setSSPDebugMode(mSspModeOn);
-                mBtTest.setSSPDebugMode(mSspModeOn);
-               // SystemProperties.set(KEY_PROP_SSP, mSspModeOn ? VALUE_TRUE
-               //         : VALUE_FALSE);
-                mUiHandler.sendEmptyMessage(SET_SSP_FINISHED);
-            }
-        }
-    }
-
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/TestModeActivity.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/TestModeActivity.java
deleted file mode 100644
index 1dd9545..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/TestModeActivity.java
+++ /dev/null
@@ -1,328 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.bluetooth.BluetoothAdapter;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Looper;
-import android.os.Message;
-import android.text.Html;
-import android.util.Log;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-import android.widget.EditText;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-
-import java.io.IOException;
-
-/**
- * Do BT test mode.
- *
- * @author mtk54040
- *
- */
-public class TestModeActivity extends Activity implements
-        DialogInterface.OnCancelListener {
-
-
-    private static final String TAG = "TestMode";
-
-    private static final String RUN_SU = "su";
-    // private static final int HANDLER_TEST_FAILED = 0;
-
-    private static final int CHECK_BT_STATE = 1;
-    private static final int BLUETOOTH_INIT = 2;
-    private static final int DIALOG_BT_STOP = 3;
-//    private static final int CHECK_BT_DEVEICE = 3;
-    private static final int BT_TEST_1 = 1;
-    private static final int BT_TEST_2 = 2;
-    private static final int RETURN_FAIL = -1;
-    private static final int DEFAULT_INT = 7;
-    private static final String DEFAULT_STR = "7";
-
-    private static final int BT_TEST_SUCCESS = 5;
-    private static final int BT_TEST_FAIL = 6;
-    private static final int BT_TEST_STOP_SUCCESS = 7;
-
-    private static final int OP_BT_TEST_1 = 11;
-    private static final int OP_DO_TEST_2 = 12;
-    private static final int OP_DO_TEST_STOP = 13;
-
-    private BluetoothAdapter mAdapter;
-    private CheckBox mChecked;
-    private EditText mTestModeEdit;
-
-    private BtTest mBtTest;
-//    private HandlerThread mWorkThread = null;
-    private WorkHandler mWorkHandler = null;
-    private HandlerThread mWorkThread = null;
-
-    private final CheckBox.OnCheckedChangeListener mCheckedListener = new CheckBox.OnCheckedChangeListener() {
-        public void onCheckedChanged(CompoundButton buttonView, boolean checked) {
-            boolean ischecked = mChecked.isChecked();
-            // is checked
-            if (ischecked) {
-                showDialog(BLUETOOTH_INIT);
-                // String val = mTestModeEdit.getEditableText().toString();
-                String val = mTestModeEdit.getText().toString();
-                if (val == null || val.length() < 1) {
-                    // mTestModeEdit.setText("7");
-                    // val = "7";
-                    mTestModeEdit.setText(DEFAULT_STR);
-                    val = DEFAULT_STR;
-                }
-                // int v = 7;
-                int v = DEFAULT_INT;
-                try {
-                    v = Integer.valueOf(val);
-                } catch (NumberFormatException e) {
-                    Log.i("@M_" + TAG, e.getMessage());
-                }
-
-                if (v > DEFAULT_INT) {
-                    mTestModeEdit.setText(DEFAULT_STR);
-                }
-                mWorkHandler.sendEmptyMessage(OP_BT_TEST_1);
-
-            } else {
-                showDialog(BLUETOOTH_INIT);
-                mWorkHandler.sendEmptyMessage(OP_DO_TEST_2);
-            }
-        }
-    };
-
-    private final Handler mUiHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-//            if (msg.what == BT_TEST_SUCCESS) {
-//
-//            } else if (msg.what == BT_TEST_FAIL) {
-            if (msg.what == BT_TEST_FAIL) {
-                Toast.makeText(getApplicationContext(),
-                        R.string.BT_data_fail,
-                        Toast.LENGTH_SHORT).show();
-            }
-            if (msg.what == BT_TEST_STOP_SUCCESS) {
-                finish();
-            } else {
-                removeDialog(BLUETOOTH_INIT);
-                mChecked.setEnabled(true);
-            }
-        }
-    };
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.test_mode);
-
-        // CharSequence str1 = getString(R.string.strTestMode);
-        TextView tv = (TextView) findViewById(R.id.TestModetxv);
-        mTestModeEdit = (EditText) findViewById(R.id.BTTestMode_edit);
-
-        // tv.setText(Html.fromHtml(str1.toString()));
-        tv.setText(Html.fromHtml(getString(R.string.strTestMode)));
-
-        mChecked = (CheckBox) findViewById(R.id.TestModeCb);
-        mChecked.setOnCheckedChangeListener(mCheckedListener);
-
-        if (mAdapter == null) {
-            mAdapter = BluetoothAdapter.getDefaultAdapter();
-        }
-        if (mAdapter.getState() == BluetoothAdapter.STATE_OFF) {
-            mWorkThread = new HandlerThread(TAG);
-            mWorkThread.start();
-
-            Looper looper = mWorkThread.getLooper();
-            mWorkHandler = new WorkHandler(looper);
-//            mWorkHandler = new WorkHandler(mWorkThread.getLooper());
-        } else {
-            showDialog(CHECK_BT_STATE);
-        }
-    }
-
-    /**
-     *  implemented for DialogInterface.OnCancelListener.
-     *
-     *  @param dialog : dialog interface
-     */
-    public void onCancel(DialogInterface dialog) {
-        // request that the service stop the query with this callback object.
-        Log.v("@M_" + TAG, "onCancel");
-        finish();
-    }
-
-    @Override
-    public void onBackPressed() {
-        Log.v("@M_" + TAG, "-->onBackPressed ");
-
-        if (mWorkHandler != null && mBtTest != null) {
-            showDialog(DIALOG_BT_STOP);
-            mWorkHandler.sendEmptyMessage(OP_DO_TEST_STOP);
-        } else {
-            super.onBackPressed();
-        }
-    }
-
-    @Override
-    public void onDestroy() {
-        Log.v("@M_" + TAG, "-->onDestroy");
-        // super.onDestroy();
-        if (mWorkThread != null) {
-            mWorkThread.quit();
-        }
-        // mBtTest.UnInit();
-        super.onDestroy();
-    }
-
-
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Dialog returnDialog = null;
-        if (id == BLUETOOTH_INIT) {
-            ProgressDialog dialog = new ProgressDialog(TestModeActivity.this);
-            dialog.setMessage(getString(R.string.BT_init_dev));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            dialog.setOnCancelListener(this);
-            returnDialog = dialog;
-//            return dialog;
-        } else if (id == CHECK_BT_STATE) {
-            AlertDialog dialog = new AlertDialog.Builder(this)
-                .setCancelable(false)
-                .setTitle(R.string.Error)
-                .setMessage(R.string.BT_turn_bt_off)
-                .setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog,
-                                int which) {
-                            finish();
-                        }
-                    }).create();
-            returnDialog = dialog;
-        } else if (id == DIALOG_BT_STOP) {
-            ProgressDialog dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.BT_deinit));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            returnDialog = dialog;
-        }
-
-        return returnDialog;
-    }
-
-    private final class WorkHandler extends Handler {
-        private WorkHandler(Looper looper) {
-            super(looper);
-        }
-
-        @Override
-        public void handleMessage(Message msg) {
-
-            if (msg.what == OP_BT_TEST_1) {
-                final Runtime rt = Runtime.getRuntime();
-                try {
-                    rt.exec(RUN_SU);
-                    Log.v("@M_" + TAG, "excute su command.");
-                } catch (IOException e) {
-                    Log.v("@M_" + TAG, e.getMessage());
-                }
-
-                mBtTest = new BtTest();
-                // String val = mTestModeEdit.getEditableText().toString();
-                String val = mTestModeEdit.getText().toString();
-                int tmpValue = 0;
-                try {
-                    tmpValue = Integer.valueOf(val);
-                } catch (NumberFormatException e) {
-                    Log.i("@M_" + TAG, e.getMessage());
-                }
-
-                mBtTest.setPower(tmpValue);
-                Log.i("@M_" + TAG, "power set " + val);
-                if (RETURN_FAIL == mBtTest.doBtTest(BT_TEST_1)) {
-                    // if (-1 == mBtTest.doBtTest(1)) {
-                    Log.v("@M_" + TAG, "transmit data failed.");
-                    // removeDialog(DIALOG_BLUETOOTH_INIT);
-                    mUiHandler.sendEmptyMessage(BT_TEST_FAIL);
-                } else {
-                    mUiHandler.sendEmptyMessage(BT_TEST_SUCCESS);
-                }
-
-                Log.i("@M_" + TAG, "pollingStart");
-                mBtTest.pollingStart();
-
-            } else if (msg.what == OP_DO_TEST_2 || msg.what == OP_DO_TEST_STOP) {
-                final Runtime rt = Runtime.getRuntime();
-                try {
-                    rt.exec(RUN_SU);
-                    Log.i("@M_" + TAG, "excute su command.");
-                } catch (IOException e) {
-                    Log.v("@M_" + TAG, e.getMessage());
-                }
-
-                if (mBtTest != null) {
-                    Log.i("@M_" + TAG, "pollingStop");
-                    mBtTest.pollingStop();
-                    if (RETURN_FAIL == mBtTest.doBtTest(BT_TEST_2)) {
-                        // if (-1 == mBtTest.doBtTest(2)) {
-                        Log.i("@M_" + TAG, "transmit data failed 1.");
-                    }
-                    mBtTest = null;
-                }
-                if (msg.what == OP_DO_TEST_2) {
-                    mUiHandler.sendEmptyMessage(BT_TEST_SUCCESS);
-                } else if (msg.what == OP_DO_TEST_STOP) {
-                    mUiHandler.sendEmptyMessage(BT_TEST_STOP_SUCCESS);
-                }
-            }
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bluetooth/TxOnlyTestActivity.java b/EngineerMode/src/com/mediatek/engineermode/bluetooth/TxOnlyTestActivity.java
deleted file mode 100644
index 6067156..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bluetooth/TxOnlyTestActivity.java
+++ /dev/null
@@ -1,677 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bluetooth;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.bluetooth.BluetoothAdapter;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Looper;
-import android.os.Message;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.MenuItem;
-import android.widget.ArrayAdapter;
-import android.widget.Spinner;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.R;
-
-/**
- * Do BT tx mode test.
- *
- * @author mtk54040
- *
- */
-public class TxOnlyTestActivity extends Activity implements
-        DialogInterface.OnCancelListener {
-
-    private BluetoothAdapter mAdapter;
-
-    private Spinner mPattern = null;
-    private Spinner mChannels = null;
-    private Spinner mPktTypes = null;
-
-    private BtTest mBtTest = null;
-
-    private static final int BT_TEST_0 = 0;
-    private static final int BT_TEST_3 = 3;
-    private static final int RETURN_FAIL = -1;
-
-    // dialog ID and MSG ID
-    private static final int CHECK_BT_STATE = 1;
-//    private static final int CHECK_BT_DEVEICE = 2;
-    private static final int TEST_TX = 3;
-
-    private static final int DIALOG_BT_STOP = 4;
-
-
-    private boolean mHasInit = false;
-    private boolean mIniting = false;
-    private boolean mNonModulate = false;
-    private boolean mPocketType = false;
-
-    private static final int MAP_TO_PATTERN = 0;
-    private static final int MAP_TO_CHANNELS = 1;
-    private static final int MAP_TO_POCKET_TYPE = 2;
-    private static final int MAP_TO_FREQ = 3;
-    private static final int MAP_TO_POCKET_TYPE_LEN = 4;
-
-    private static final String TAG = "TxOnlyTestLOG";
-
-    private int mStateBt;
-    // added by chaozhong @2010-10-10
-    private Handler mWorkHandler = null; // used to handle the
-    private HandlerThread mWorkThread = null;
-    // "done"
-    // button clicked action
-    private boolean mDoneTest = true; // used to record weather the
-
-    private boolean mDumpStart = false;
-    // "done" button clicked
-    // event has been finished
-    // private HandlerThread mHandlerThread = null;
-    public static final int DLGID_OP_IN_PROCESS = 1;
-    public static final int OP_IN_PROCESS = 2;
-    public static final int OP_FINISH = 0;
-    public static final int OP_TX_FAIL = 4;
-
-    public static final int UI_BT_CLOSE = 5;
-    public static final int UI_BT_CLOSE_FINISHED = 6;
-
-    private static final int OP_BT_SEND = 11;
-    private static final int OP_BT_STOP = 12;
-
-    // private static Handler mUiHandler = null;
-    // ProgressDialog mDialogSearchProgress = null;
-
-    // end added
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-//        Log.v("@M_" + TAG, "-->onCreate");
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.tx_only_test);
-        // Initialize the UI component
-        setValuesSpinner();
-
-        mWorkThread = new HandlerThread(TAG);
-        mWorkThread.start();
-        Looper looper = mWorkThread.getLooper();
-        mWorkHandler = new WorkHandler(looper);
-
-    }
-
-    private Handler mUiHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case OP_IN_PROCESS:
-                // {
-                Log.w("@M_" + TAG, "OP_IN_PROCESS");
-                showDialog(TEST_TX);
-                break;
-            case OP_FINISH:
-                Log.i("@M_" + TAG, "OP_FINISH");
-                removeDialog(TEST_TX);
-                break;
-            case OP_TX_FAIL:
-                Log.i("@M_" + TAG, "OP_TX_FAIL");
-                // showDialog(DIALOG_CHECK_BT_DEVEICE);
-                removeDialog(TEST_TX);
-                break;
-            case UI_BT_CLOSE:
-                Log.i("@M_" + TAG, "UI_BT_CLOSE");
-                showDialog(DIALOG_BT_STOP);
-                break;
-            case UI_BT_CLOSE_FINISHED:
-                Log.i("@M_" + TAG, "UI_BT_CLOSE_FINISHED");
-                removeDialog(DIALOG_BT_STOP);
-                finish();
-                break;
-            default:
-                break;
-            }
-        }
-    };
-    private final class WorkHandler extends Handler {
-        private WorkHandler(Looper looper) {
-            super(looper);
-        }
-
-        @Override
-        public void handleMessage(Message msg) {
-            if (msg.what == OP_BT_SEND) {
-                mUiHandler.sendEmptyMessage(OP_IN_PROCESS);
-                mDoneTest = false;
-                // do stop
-                if (mDumpStart == true) {
-                    if (mBtTest != null) {
-                        Log.i("@M_" + TAG, "pollingStop");
-                        mBtTest.pollingStop();
-                        if (RETURN_FAIL == mBtTest.doBtTest(BT_TEST_3)) { // bt deinit
-                            Log.i("@M_" + TAG, "stop failed.");
-                        }
-                    }
-                }
-                doSendCommandAction();
-                // do start
-                if (mBtTest != null && mHasInit) {
-                    Log.i("@M_" + TAG, "pollingStart");
-                    mBtTest.pollingStart();
-                    mDumpStart = true;
-                }
-                mDoneTest = true;
-                mUiHandler.sendEmptyMessage(OP_FINISH);
-            } else if (msg.what == OP_BT_STOP) {
-                mUiHandler.sendEmptyMessage(UI_BT_CLOSE);
-                // do stop
-                if (mDumpStart == true) {
-                    if (mBtTest != null) {
-                        Log.i("@M_" + TAG, "pollingStop");
-                        mBtTest.pollingStop();
-                    }
-                }
-                if (RETURN_FAIL == mBtTest.doBtTest(BT_TEST_3)) {
-                    Log.i("@M_" + TAG, "stop failed.");
-                }
-                mBtTest = null;
-                mUiHandler.sendEmptyMessage(UI_BT_CLOSE_FINISHED);
-            }
-        }
-    }
-
-    public boolean onPrepareOptionsMenu(Menu menu) {
-        MenuItem doneItem = menu.getItem(Menu.FIRST - 1);
-        if (null != doneItem) {
-            if (!mDoneTest) {
-                doneItem.setEnabled(false);
-                menu.close();
-            } else {
-                doneItem.setEnabled(true);
-            }
-        } else {
-            Log.i("@M_" + TAG, "menu_done is not found.");
-        }
-        return true;
-    }
-
-    /**
-     * Initialize the UI component
-     *
-     *
-     */
-    protected void setValuesSpinner() {
-        // for TX pattern
-        mPattern = (Spinner) findViewById(R.id.PatternSpinner);
-        ArrayAdapter<CharSequence> adapterPattern = ArrayAdapter
-                .createFromResource(this, R.array.tx_pattern,
-                        android.R.layout.simple_spinner_item);
-        adapterPattern
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mPattern.setAdapter(adapterPattern);
-
-        // for TX channels
-        mChannels = (Spinner) findViewById(R.id.ChannelsSpinner);
-        ArrayAdapter<CharSequence> adapterChannels = ArrayAdapter
-                .createFromResource(this, R.array.tx_channels,
-                        android.R.layout.simple_spinner_item);
-        adapterChannels
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mChannels.setAdapter(adapterChannels);
-
-        // for TX pocket type
-        mPktTypes = (Spinner) findViewById(R.id.PocketTypeSpinner);
-        ArrayAdapter<CharSequence> adapterPocketType = ArrayAdapter
-                .createFromResource(this, R.array.tx_Pocket_type,
-                        android.R.layout.simple_spinner_item);
-        adapterPocketType
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mPktTypes.setAdapter(adapterPocketType);
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        super.onCreateOptionsMenu(menu);
-
-        MenuInflater inflater = getMenuInflater();
-        inflater.inflate(R.menu.menu_show, menu);
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-        case R.id.menu_done:
-            // edited by chaozhogn @ 2010-10-10
-            // return doSendCommandAction();
-            Log.i("@M_" + TAG, "menu_done is clicked.");
-            if (mDoneTest) {
-                // if the last click action has been handled, send another event
-                // request
-               // mWorkHandler.post(new WorkRunnable());
-                mWorkHandler.sendEmptyMessage(OP_BT_SEND);
-            } else {
-                Log.i("@M_" + TAG, "last click is not finished yet.");
-            }
-            Log.i("@M_" + TAG, "menu_done is handled.");
-            return true;
-            // edit end
-
-        case R.id.menu_discard:
-            return doRevertAction();
-        default:
-            break;
-        }
-        return false;
-    }
-
-    /**
-     * Send command the user has made, and finish the activity.
-     */
-    private boolean doSendCommandAction() {
-        getBtState();
-        enableBluetooth(false);
-        getValuesAndSend();
-        return true;
-    }
-
-    // implemented for DialogInterface.OnCancelListener
-    public void onCancel(DialogInterface dialog) {
-        // request that the service stop the query with this callback
-        // mBtTestect.
-        Log.v("@M_" + TAG, "-->onCancel");
-        finish();
-    }
-
-    @Override
-    protected void onStart() {
-        super.onStart();
-        Log.v("@M_" + TAG, "-->onStart");
-        if (mAdapter == null) {
-            mAdapter = BluetoothAdapter.getDefaultAdapter();
-        }
-        if (mAdapter.getState() != BluetoothAdapter.STATE_OFF) {
-            showDialog(CHECK_BT_STATE);
-        }
-//        if (mAdapter != null) {
-//            if (mAdapter.getState() != BluetoothAdapter.STATE_OFF) {
-//                showDialog(CHECK_BT_STATE);
-//            }
-//        } else {
-//            showDialog(CHECK_BT_DEVEICE);
-//        }
-    }
-
-
-    @Override
-    public void onBackPressed() {
-        Log.v("@M_" + TAG, "-->onBackPressed ");
-        removeDialog(TEST_TX);
-        if (mBtTest != null) {
-            mWorkHandler.sendEmptyMessage(OP_BT_STOP);
-        } else {
-            super.onBackPressed();
-        }
-    }
-    @Override
-    public void onDestroy() {
-        Log.v("@M_" + TAG, "-->onDestroy");
-        if (mWorkThread != null) {
-            mWorkThread.quit();
-        }
-        super.onDestroy();
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Log.i("@M_" + TAG, "-->onCreateDialog");
-        if (id == TEST_TX) {
-            ProgressDialog dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.BT_init_dev));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            Log.i("@M_" + TAG, "new ProgressDialog succeed");
-            return dialog;
-        } else if (id == CHECK_BT_STATE) {
-            AlertDialog dialog = null;
-            AlertDialog.Builder builder = new AlertDialog.Builder(this);
-            builder.setCancelable(false);
-            builder.setTitle(R.string.Error);
-            builder.setMessage(R.string.BT_turn_bt_off);
-            builder.setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            finish();
-                        }
-                    });
-            dialog = builder.create();
-            return dialog;
-        } else if (id == DIALOG_BT_STOP) {
-            ProgressDialog dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.BT_deinit));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            // dialog.show();
-            return dialog;
-        }
-        return null;
-    }
-
-    private void getBtState() {
-        Log.v("@M_" + TAG, "Enter GetBtState().");
-        BluetoothAdapter btAdapter = BluetoothAdapter.getDefaultAdapter();
-        if (null == btAdapter) {
-            Log.i("@M_" + TAG, "we can not find a bluetooth adapter.");
-            // Toast.makeText(getApplicationContext(),
-            // "We can not find a bluetooth adapter.", Toast.LENGTH_SHORT)
-            // .show();
-            mUiHandler.sendEmptyMessage(OP_TX_FAIL);
-            return;
-        }
-        mStateBt = btAdapter.getState();
-        Log.i("@M_" + TAG, "Leave GetBtState().");
-    }
-
-    private void enableBluetooth(boolean enable) {
-        Log.v("@M_" + TAG, "Enter EnableBluetooth().");
-        BluetoothAdapter btAdapter = BluetoothAdapter.getDefaultAdapter();
-        if (null == btAdapter) {
-            Log.i("@M_" + TAG, "we can not find a bluetooth adapter.");
-            return;
-        }
-        // need to enable
-        if (enable) {
-            Log.i("@M_" + TAG, "Bluetooth is enabled");
-            btAdapter.enable();
-        } else {
-            // need to disable
-            Log.i("@M_" + TAG, "Bluetooth is disabled");
-            btAdapter.disable();
-        }
-        Log.i("@M_" + TAG, "Leave EnableBluetooth().");
-    }
-
-    /**
-     * Revert any changes the user has made, and finish the activity.
-     */
-    private boolean doRevertAction() {
-        //finish();
-        Log.i("@M_" + TAG, "doRevertAction");
-        onBackPressed();
-        return true;
-    }
-
-    // private BtTest mBtTest = null;
-
-    public void getValuesAndSend() {
-        Log.i("@M_" + TAG, "Enter GetValuesAndSend().");
-        mBtTest = new BtTest();
-
-        getSpinnerValue(mPattern, MAP_TO_PATTERN);
-        getSpinnerValue(mChannels, MAP_TO_CHANNELS);
-        getSpinnerValue(mPktTypes, MAP_TO_POCKET_TYPE);
-
-        getEditBoxValue(R.id.edtFrequency, MAP_TO_FREQ);
-        getEditBoxValue(R.id.edtPocketLength, MAP_TO_POCKET_TYPE_LEN);
-
-        // send command to....
-        // new issue added by mtk54040 Shuaiqiang @2011-10-12
-        Log.i("@M_" + TAG, "PocketType().+" + mBtTest.getPocketType());
-        Log.i("@M_" + TAG, "edtFrequency+" + mBtTest.getFreq());
-        if (27 == mBtTest.getPocketType()) {
-            Log.i("@M_" + TAG, "enter handleNonModulated(mBtTest)");
-            Log.i("@M_" + TAG, "mbIsNonModulate--" + mNonModulate
-                    + "   mbIsPocketType--" + mPocketType);
-            if (mPocketType) { // mbIsPocketType for avoid mBtTest is null
-                runHCIResetCmd();
-            }
-            if (initBtTestOjbect()) {
-                mNonModulate = true;
-                mPocketType = false;
-//                    handleNonModulated(mBtTest);
-                handleNonModulated();
-            }
-
-        } else {
-            if (mNonModulate) {
-                runHCIResetCmd();
-                mNonModulate = false;
-            }
-            mPocketType = true;
-            if (RETURN_FAIL == mBtTest.doBtTest(BT_TEST_0)) {
-                Log.i("@M_" + TAG, "transmit data failed.");
-                if ((BluetoothAdapter.STATE_TURNING_ON == mStateBt)
-                        || (BluetoothAdapter.STATE_ON == mStateBt)) {
-                    enableBluetooth(true);
-                }
-                // Toast.makeText(getApplicationContext(),
-                // "transmit data failed.", Toast.LENGTH_SHORT).show();
-                mUiHandler.sendEmptyMessage(OP_TX_FAIL);
-                mHasInit = false;
-            } else {
-                mHasInit = true;
-            }
-        }
-        Log.i("@M_" + TAG, "Leave getValuesAndSend().");
-    }
-
-    private void handleNonModulated() {
-        Log.i("@M_" + TAG, "-->handleNonModulated TX first");
-        /*
-         * If pressing "Stop" button Tx: 01 0C 20 02 00 PP 0xPP = Filter
-         * Duplicate (00 = Disable Duplicate Filtering, 01 = Enable Duplicate
-         * Filtering) Rx: 04 0E 04 01 0C 20 00
-         */
-
-        /*
-         * TX: 01 15 FC 01 00 RX: 04 0E 04 01 15 FC 00 TX: 01 D5 FC 01 XX (XX =
-         * Channel) RX: 04 0E 04 01 D5 FC 00
-         */
-        int cmdLen = 5;
-        char[] cmd = new char[cmdLen];
-        char[] response = null;
-        int i = 0;
-        cmd[0] = 0x01;
-        cmd[1] = 0x15;
-        cmd[2] = 0xFC;
-        cmd[3] = 0x01;
-        cmd[4] = 0x00;
-        response = mBtTest.hciCommandRun(cmd, cmdLen);
-        if (response != null) {
-            String s = null;
-            for (i = 0; i < response.length; i++) {
-                s = String.format("response[%d] = 0x%x", i, (long) response[i]);
-                Log.i("@M_" + TAG, s);
-            }
-        } else {
-            Log.i("@M_" + TAG, "HCICommandRun failed");
-        }
-        response = null;
-
-        Log.i("@M_" + TAG, "-->handleNonModulated TX second");
-        cmdLen = 5;
-        cmd[0] = 0x01;
-        cmd[1] = 0xD5;
-        cmd[2] = 0xFC;
-        cmd[3] = 0x01;
-        cmd[4] = (char) mBtTest.getFreq();
-        response = mBtTest.hciCommandRun(cmd, cmdLen);
-        if (response != null) {
-            String s = null;
-            for (i = 0; i < response.length; i++) {
-                s = String.format("response[%d] = 0x%x", i, (long) response[i]);
-                Log.i("@M_" + TAG, s);
-            }
-        } else {
-            Log.i("@M_" + TAG, "HCICommandRun failed");
-        }
-        response = null;
-    }
-
-    // init BtTest -call init function of BtTest
-    private boolean initBtTestOjbect() {
-        Log.i("@M_" + TAG, "-->initBtTestOjbect");
-        if (mIniting) {
-            return false;
-        }
-        if (mHasInit) {
-            return mHasInit;
-        }
-        if (mBtTest == null) {
-            mBtTest = new BtTest();
-        }
-        if (mBtTest != null && !mHasInit) {
-            mIniting = true;
-            if (mBtTest.init() != 0) {
-                mHasInit = false;
-                Log.i("@M_" + TAG, "mBtTest initialization failed");
-            } else {
-                runHCIResetCmd();
-                mHasInit = true;
-            }
-        }
-        mIniting = false;
-        return mHasInit;
-    }
-
-    // clear BtTest mBtTestect -call deInit function of BtTest
-    // private boolean uninitBtTestOjbect() {
-    // Log.i("@M_" + TAG, "-->uninitBtTestOjbect");
-    // if (mBtTest != null && mbIsInit) {
-    // runHCIResetCmd();
-    // if (mBtTest.unInit() != 0) {
-    // Log.i("@M_" + TAG, "mBtTest un-initialization failed");
-    // }
-    // }
-    // mBtTest = null;
-    // mbIsInit = false;
-    // return true;
-    // }
-
-    // run "HCI Reset" command
-    private void runHCIResetCmd() {
-        /*
-         * If pressing "HCI Reset" button Tx: 01 03 0C 00 Rx: 04 0E 04 01 03 0C
-         * 00 After pressing "HCI Reset" button, all state will also be reset
-         */
-        int cmdLen = 4;
-        char[] cmd = new char[cmdLen];
-
-        char[] response = null;
-        int i = 0;
-        Log.i("@M_" + TAG, "-->runHCIResetCmd");
-        cmd[0] = 0x01;
-        cmd[1] = 0x03;
-        cmd[2] = 0x0C;
-        cmd[3] = 0x00;
-        if (mBtTest == null) {
-            mBtTest = new BtTest();
-        }
-        response = mBtTest.hciCommandRun(cmd, cmdLen);
-        if (response != null) {
-            String s = null;
-            for (i = 0; i < response.length; i++) {
-                s = String.format("response[%d] = 0x%x", i, (long) response[i]);
-                Log.i("@M_" + TAG, s);
-            }
-        } else {
-            Log.i("@M_" + TAG, "HCICommandRun failed");
-        }
-        response = null;
-    }
-
-    private boolean getSpinnerValue(Spinner sSpinner, int flag) {
-        boolean bSuccess = false;
-        int index = sSpinner.getSelectedItemPosition();
-        if (0 > index) {
-            return bSuccess;
-        }
-
-        switch (flag) {
-        case MAP_TO_PATTERN: // Pattern
-            mBtTest.setPatter(index);
-            break;
-        case MAP_TO_CHANNELS: // Channels
-            mBtTest.setChannels(index);
-            break;
-        case MAP_TO_POCKET_TYPE: // Pocket type
-            mBtTest.setPocketType(index);
-            break;
-        default:
-            bSuccess = false;
-            break;
-        }
-        bSuccess = true;
-        return bSuccess;
-    }
-
-    private boolean getEditBoxValue(int id, int flag) {
-        boolean bSuccess = false;
-
-        TextView text = (TextView) findViewById(id);
-        String str = null;
-        if (null != text) {
-            str = text.getText().toString();
-        }
-        if ((null == str) || str.equals("")) {
-            return bSuccess;
-        }
-        int iLen = 0;
-        try {
-            iLen = Integer.parseInt(str);
-        } catch (NumberFormatException e) {
-            Log.i("@M_" + TAG, "parseInt failed--invalid number!");
-            return bSuccess;
-        }
-        // frequency
-        if (MAP_TO_FREQ == flag) {
-            mBtTest.setFreq(iLen);
-            bSuccess = true;
-        } else if (MAP_TO_POCKET_TYPE_LEN == flag) {
-            // pocket type length
-            mBtTest.setPocketTypeLen(iLen);
-            bSuccess = true;
-        }
-        return bSuccess;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/boot/EmBootStartService.java b/EngineerMode/src/com/mediatek/engineermode/boot/EmBootStartService.java
deleted file mode 100644
index 3265178..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/boot/EmBootStartService.java
+++ /dev/null
@@ -1,116 +0,0 @@
-package com.mediatek.engineermode.boot;
-
-import java.util.HashMap;
-import java.util.Map;
-
-import android.app.Service;
-import android.content.Context;
-import android.content.Intent;
-
-import android.os.Handler;
-import android.os.IBinder;
-import android.os.Message;
-
-
-import com.mediatek.engineermode.Elog;
-
-/**
- * a start service of EM boot.
- * @author: mtk81238
- */
-public class EmBootStartService extends Service {
-    private static final String TAG = "EM/BootService";
-    private static final String KEY_REQ_START_SERV = "req_start_serv";
-    private static final int MSG_CHECK_STOP_SERVICE = 111;
-
-    public static Map<String, IBootServiceHandler> sStartReqHandlerMap
-            = new HashMap<String, IBootServiceHandler>();
-
-    private Handler mMainHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case MSG_CHECK_STOP_SERVICE:
-                Elog.d(TAG, "check stop service");
-                synchronized (EmBootStartService.class) {
-                    if (sStartReqHandlerMap.size() == 0) {
-                        Elog.d(TAG, "stop service");
-                        stopSelf();
-                    }
-                }
-                break;
-            default:
-                Elog.d(TAG, "unhandled msg:" + msg.what);
-                break;
-            }
-        }
-    };
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-    }
-
-    @Override
-    public void onDestroy() {
-        super.onDestroy();
-    }
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        return null;
-    }
-
-    /**
-     * request start service.
-     * @param context system context
-     * @param handler IBootServiceHandler
-     */
-    public static void requestStartService(Context context, IBootServiceHandler handler) {
-        if (handler == null || context == null) {
-            throw new IllegalArgumentException("invalid Context or invalid IBootServiceHandler");
-        }
-        Intent servIntent = new Intent(context, EmBootStartService.class);
-        String handlerName = handler.getClass().getCanonicalName();
-        servIntent.putExtra(KEY_REQ_START_SERV, handlerName);
-        synchronized (EmBootStartService.class) {
-            sStartReqHandlerMap.put(handlerName, handler);
-        }
-        context.startService(servIntent);
-    }
-
-    /**
-     * stop started service.
-     * @param handler IBootServiceHandler
-     */
-    public void stopStartedService(IBootServiceHandler handler) {
-        if (handler != null) {
-            String handlerName = handler.getClass().getCanonicalName();
-            synchronized (EmBootStartService.class) {
-                sStartReqHandlerMap.remove(handlerName);
-            }
-        }
-        mMainHandler.sendEmptyMessage(MSG_CHECK_STOP_SERVICE);
-    }
-
-    private int onHandleRequest(String handlerName) {
-        IBootServiceHandler handler = sStartReqHandlerMap.get(handlerName);
-        if (handler == null) {
-            return IBootServiceHandler.HANDLE_INVALID;
-        }
-        return handler.handleStartRequest(this);
-    }
-
-    @Override
-    public int onStartCommand(Intent intent, int flags, int startId) {
-        if (intent != null) {
-            String handlerName = intent.getStringExtra(KEY_REQ_START_SERV);
-            int ret = onHandleRequest(handlerName);
-            if (ret != IBootServiceHandler.HANDLE_ONGOING) {
-                stopStartedService(sStartReqHandlerMap.get(handlerName));
-            }
-        }
-        return START_NOT_STICKY;
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/boot/IBootServiceHandler.java b/EngineerMode/src/com/mediatek/engineermode/boot/IBootServiceHandler.java
deleted file mode 100644
index 060464e..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/boot/IBootServiceHandler.java
+++ /dev/null
@@ -1,21 +0,0 @@
-package com.mediatek.engineermode.boot;
-
-/**
- * handler interface to handle start request.
- * @author mtk81238
- *
- */
-public interface IBootServiceHandler {
-
-    public static final int HANDLE_DONE = 0;
-    public static final int HANDLE_ONGOING = 1;
-    public static final int HANDLE_INVALID = 100;
-    /**
-     * handle start request.
-     * @param service EmBootStartService
-     * @return HANDLE_DONE, HANDLE_ONGOING, HANDLE_INVALID;
-     *     if HANDLE_ONGOING was returned, must call EmBootStartService.stopStartService
-     *     to stop the start service.
-     */
-    public int handleStartRequest(EmBootStartService service);
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/boot/UsbTetheringBootHandler.java b/EngineerMode/src/com/mediatek/engineermode/boot/UsbTetheringBootHandler.java
deleted file mode 100644
index a15d23d..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/boot/UsbTetheringBootHandler.java
+++ /dev/null
@@ -1,94 +0,0 @@
-package com.mediatek.engineermode.boot;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.hardware.usb.UsbManager;
-import android.net.ConnectivityManager;
-import android.os.SystemClock;
-import android.os.SystemProperties;
-import android.telephony.TelephonyManager;
-
-import com.mediatek.engineermode.Elog;
-/**
- * the handler of USB tethering on boot.
- * @author mtk81238
- *
- */
-public class UsbTetheringBootHandler implements IBootServiceHandler {
-    private static final String TAG = "EM/BootUsbTethering";
-    private static final String SP_KEY_USB_TETHERING = "persist.service.usbtethering";
-    private static final String USB_TETHERING_ON = "1";
-    private static final String USB_TETHERING_OFF = "0";
-    private EmBootStartService mStartService = null;
-    private BroadcastReceiver mUsbReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            String action = intent.getAction();
-            if (UsbManager.ACTION_USB_STATE.equals(action)) {
-                context.unregisterReceiver(mUsbReceiver);
-                boolean usbConnected = intent.getBooleanExtra(UsbManager.USB_CONNECTED, false);
-                onGetUsbState(mStartService, usbConnected);
-            }
-        }
-    };
-
-    @Override
-    public int handleStartRequest(EmBootStartService service) {
-        mStartService = service;
-        registUsbReceiver(service);
-        return HANDLE_ONGOING;
-    }
-
-    private void registUsbReceiver(Context context) {
-        IntentFilter intentFilter = new IntentFilter();
-        intentFilter.addAction(UsbManager.ACTION_USB_STATE);
-        context.registerReceiver(mUsbReceiver, intentFilter);
-    }
-
-    private void onGetUsbState(Context context, boolean connected) {
-        if (connected) {
-            Thread task = new Thread() {
-                @Override
-                public void run() {
-                    super.run();
-                    setUsbTethering(mStartService);
-                    mStartService.stopStartedService(UsbTetheringBootHandler.this);
-                    mStartService = null;
-                }
-            };
-            task.setPriority(Thread.MAX_PRIORITY);
-            task.start();
-        }
-    }
-
-    private void setUsbTethering(Context context) {
-        ConnectivityManager connMgr
-                = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
-        TelephonyManager telMgr
-                = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
-        String value = SystemProperties.get(SP_KEY_USB_TETHERING);
-        if (value != null) {
-            value = value.trim();
-        }
-        if (USB_TETHERING_ON.equals(value)) {
-            telMgr.setDataEnabled(false);
-            connMgr.setUsbTethering(true);
-            SystemClock.sleep(12000);
-            telMgr.setDataEnabled(true);
-        } else if (USB_TETHERING_OFF.equals(value)) {
-            connMgr.setUsbTethering(false);
-        } else {
-            Elog.d(TAG, "Undesirable USB_TETHERING value:" + value);
-        }
-    }
-
-    static boolean isSupportBootUsbTethering() {
-        String value = SystemProperties.get(SP_KEY_USB_TETHERING);
-        if (USB_TETHERING_ON.equals(value) || USB_TETHERING_OFF.equals(value)) {
-            return true;
-        }
-        return false;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/bypass/BypassSettings.java b/EngineerMode/src/com/mediatek/engineermode/bypass/BypassSettings.java
deleted file mode 100644
index 13ba212..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/bypass/BypassSettings.java
+++ /dev/null
@@ -1,770 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.bypass;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.SystemProperties;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.BaseAdapter;
-import android.widget.CheckBox;
-import android.widget.CheckedTextView;
-import android.widget.CompoundButton;
-import android.widget.ListView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-
-import java.io.File;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.io.OutputStream;
-
-/**
- * List for Bypass settings.
- */
-public class BypassSettings extends Activity {
-    private static final boolean DBG = true;
-    private static final String TAG = "BypassSettings";
-    private static final String USBMANAGER_USB_CONNECTED = "connected";
-    public static final String USBMANAGER_ACTION_USB_STATE =
-            "android.hardware.usb.action.USB_STATE";
-    private static final String ACTION_USB_BYPASS_SETFUNCTION =
-            "com.via.bypass.action.setfunction";
-    private static final String ACTION_USB_BYPASS_SETTETHERFUNCTION =
-            "com.via.bypass.action.settetherfunction";
-    private static final String VALUE_ENABLE_BYPASS =
-            "com.via.bypass.enable_bypass";
-    private static final String ACTION_USB_BYPASS_SETBYPASS =
-            "com.via.bypass.action.setbypass";
-    private static final String ACTION_USB_BYPASS_SETBYPASS_RESULT =
-            "com.via.bypass.action.setbypass_result";
-    private static final String VALUE_ISSET_BYPASS =
-            "com.via.bypass.isset_bypass";
-    private static final String ACTION_USB_BYPASS_GETBYPASS =
-            "com.via.bypass.action.getbypass";
-    private static final String ACTION_USB_BYPASS_GETBYPASS_RESULT =
-            "com.via.bypass.action.getbypass_result";
-    private static final String VALUE_BYPASS_CODE =
-            "com.via.bypass.bypass_code";
-
-    private static final String ACTION_MTK_LOGGER =
-            "com.mediatek.mtklogger.bypass";
-    private static final String ACTION_MTK_LOGGER_RESULT =
-            "com.via.bypass.mtklogger";
-    private static final String CMD_NAME = "cmd_name";
-    private static final String CMD_NAME_C2K_STATUS = "get_c2klog_status";
-    private static final String CMD_RESULT = "cmd_result";
-
-    private static final String USB_FUNCTION_BYPASS = "via_bypass";
-    private static final String PROP_MD_LOGGER = "debug.mdlogger.Running";
-    // Options menu item id
-    private static final int OPT_MENU_ITEM_BYPASS_ALL = 1;
-    private static final int OPT_MENU_ITEM_CLOSS_BYPASS = 2;
-    private static final int DIALOG_WARNING = 1;
-    private static final int BYPASS_CODE_ETS = 8;
-
-    // Add for command line support
-    private static final String CMD_CODE = "cmd_code";
-    private static final String CMD_FILE = "cmd_file";
-    private static final String CMD_NAME_QUERY = "query";
-    private static final String CMD_NAME_ENABLE = "enable";
-    private static final String CMD_NAME_DISABLE = "disable";
-    private static final String CMD_CODE_ALL = "all";
-
-    private ListView mLvBypass;
-    private String[] mBypassNames;
-    private int[] mBypassCodes;
-    private BypassAdapter<String> mBypassAdapter;
-    // bypass mode enable flag
-    private boolean mBypassEnabled = false;
-    // bypass all code
-    private final int mBypassNone = 0;
-    private int mBypassAllCode = mBypassNone;
-    private int mBypassCode = 0;
-    private boolean mIsBypassMode = false;
-    private boolean mUsbConnected = false;
-    private boolean mIsSettingBypass = false;
-    private boolean mIsSettingUsb = false;
-    private boolean mIsQueryingBypass = false;
-    private Object mLock = new Object();
-    private Dialog mDialog = null;
-    private CheckBox mCbRndis;
-
-    private boolean mIsQueryingMtkLogger = false;
-    private int mPendingBypassCode = 0;
-    private boolean mIsPreparingForRndis = false;
-    private boolean mIsSettingRndis = false;
-
-    private String mCmdName;
-    private String mCmdCode;
-    private String mCmdFile;
-    private boolean mLaunchByCommand;
-
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            synchronized (mLock) {
-                if (DBG) {
-                    Log.i(TAG, "onReceive = " + intent.getAction());
-                }
-                if (intent.getAction().equals(USBMANAGER_ACTION_USB_STATE)) {
-                    mIsSettingUsb = false;
-                    mUsbConnected = intent.getExtras().getBoolean(USBMANAGER_USB_CONNECTED);
-                    mIsBypassMode = intent.getExtras().getBoolean(USB_FUNCTION_BYPASS);
-                    queryBypassMode();
-                    if (DBG) {
-                        Log.w(TAG, "UsbConnected = " + mUsbConnected
-                                + ", mIsBypassMode = " + mIsBypassMode);
-                    }
-                } else if (intent.getAction().equals(ACTION_USB_BYPASS_SETBYPASS_RESULT)) {
-                    boolean bypassMode = intent.getExtras().getBoolean(VALUE_ISSET_BYPASS);
-                    if (DBG) {
-                        Log.w(TAG, "Set bypass mode is " + bypassMode);
-                    }
-                    mIsSettingBypass = false;
-                    if (bypassMode) {
-                        Toast.makeText(BypassSettings.this, R.string.success, Toast.LENGTH_SHORT)
-                                .show();
-                    } else {
-                        Toast.makeText(BypassSettings.this, R.string.failed, Toast.LENGTH_SHORT)
-                                .show();
-                    }
-                    mBypassCode = intent.getIntExtra(VALUE_BYPASS_CODE, mBypassCode);
-                    updateBypassList(mBypassCode);
-
-                    if (mIsPreparingForRndis) {
-                        mIsPreparingForRndis = false;
-                        enableRndis(true);
-                    }
-                } else if (intent.getAction().equals(ACTION_USB_BYPASS_GETBYPASS_RESULT)) {
-                    mIsQueryingBypass = false;
-                    mBypassCode = intent.getIntExtra(VALUE_BYPASS_CODE, mBypassCode);
-                    updateBypassList(mBypassCode);
-                    if (mLaunchByCommand) {
-                        doCommand();
-                    }
-                } else if (intent.getAction().equals(ACTION_MTK_LOGGER_RESULT)) {
-                    if (DBG) {
-                        Log.w(TAG, "mIsQueryingMtkLogger is " + mIsQueryingMtkLogger);
-                    }
-                    if (!mIsQueryingMtkLogger) {
-                        return;
-                    }
-                    mIsQueryingMtkLogger = false;
-                    String name = intent.getStringExtra(CMD_NAME);
-                    int result = intent.getIntExtra(CMD_RESULT, 0);
-                    if (DBG) {
-                        Log.w(TAG, CMD_NAME + "is " + name + ", " + CMD_RESULT + " is " + result);
-                    }
-                    if (name != null && name.equals(CMD_NAME_C2K_STATUS)) {
-                        if (result == 1) {
-                            showDialog(DIALOG_WARNING);
-                        } else {
-                            if (!mIsBypassMode) {
-                                if (mIsSettingRndis) {
-                                    enableBypassTether(true);
-                                } else {
-                                    enableBypass(true);
-                                }
-                            }
-                            setBypassMode(mPendingBypassCode);
-                        }
-                    }
-                    updateBypassList(mBypassCode);
-                }
-            }
-        }
-    };
-
-    private AdapterView.OnItemClickListener mListener = new AdapterView.OnItemClickListener() {
-        public void onItemClick(AdapterView parent, View view, int position, long id) {
-            CheckedTextView ctview = (CheckedTextView) view;
-            int bypassSet = mBypassCode;
-            if ((mBypassCode & mBypassCodes[position]) != 0) {
-                bypassSet ^= mBypassCodes[position];
-                if (mIsBypassMode && bypassSet == 0) {
-                   enableBypass(false);
-                }
-                setBypassMode(bypassSet);
-            } else {
-                if (mBypassCodes[position] == BYPASS_CODE_ETS) {
-                    // Trying to enable ETS, should check MTK logger first
-                    mPendingBypassCode = (bypassSet | BYPASS_CODE_ETS);
-                    mIsSettingRndis = false;
-                    queryMtkLogger();
-                    updateBypassList(mBypassCode);
-                    return;
-                }
-                bypassSet |= mBypassCodes[position];
-                if (!mIsBypassMode) {
-                    enableBypass(true);
-                }
-                setBypassMode(bypassSet);
-            }
-        }
-    };
-
-    private CompoundButton.OnCheckedChangeListener mCheckedChangeListener
-            = new CompoundButton.OnCheckedChangeListener() {
-        @Override
-        public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-            int id = buttonView.getId();
-            if (id == R.id.cb_ets_rndis) {
-                mLvBypass.setEnabled(!isChecked); // Disable other options when rndis is checked
-                if (isChecked) {
-                    if (mBypassCode > 0) {
-                        // Clear other options when rndis is checked
-                        enableBypass(false);
-                        setBypassMode(mBypassNone);
-                        updateBypassList(mBypassNone);
-                        mIsPreparingForRndis = true;
-                    } else {
-                        enableRndis(true);
-                    }
-                } else {
-                    enableRndis(false);
-                }
-            }
-        }
-    };
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.bypass_settings);
-
-        mBypassNames = getResources().getStringArray(R.array.bypass_names);
-        mBypassCodes = getResources().getIntArray(R.array.bypass_codes);
-        for (int i = 0; i < mBypassCodes.length; i++) {
-            mBypassAllCode += mBypassCodes[i];
-        }
-
-        mLvBypass = (ListView) findViewById(R.id.lv_bypass);
-        mBypassAdapter = new BypassAdapter<String>(this);
-        mLvBypass.setAdapter(mBypassAdapter);
-
-        mLvBypass.setItemsCanFocus(false);
-        mLvBypass.setChoiceMode(ListView.CHOICE_MODE_MULTIPLE);
-        mLvBypass.setOnItemClickListener(mListener);
-
-        mCbRndis = (CheckBox) findViewById(R.id.cb_ets_rndis);
-        mCbRndis.setOnCheckedChangeListener(mCheckedChangeListener);
-
-        mCmdName = getIntent().getStringExtra(CMD_NAME);
-        mCmdCode = getIntent().getStringExtra(CMD_CODE);
-        mCmdFile = getIntent().getStringExtra(CMD_FILE);
-        mLaunchByCommand = mCmdName != null && mCmdName.length() > 0;
-    }
-
-    @Override
-    public Dialog onCreateDialog(int dialogId) {
-        switch (dialogId) {
-        case DIALOG_WARNING:
-            mDialog = new AlertDialog.Builder(this)
-                    .setTitle("Warning")
-                    .setMessage("MD logger is running, enable ETS may cause log lost. "
-                            + "Please stop MD logger first.\n\n"
-                            + "Enable ETS anyway? (Not recommended)")
-                    .setCancelable(false)
-                    .setPositiveButton("Yes",
-                        new DialogInterface.OnClickListener() {
-                            public void onClick(DialogInterface dialog, int which) {
-                                if (mIsSettingRndis) {
-                                    enableBypassTether(true);
-                                } else {
-                                    enableBypass(true);
-                                }
-                                setBypassMode(mPendingBypassCode);
-                            }
-                        }
-                    )
-                    .setNegativeButton("No", null)
-                    .create();
-            return mDialog;
-        default:
-            return super.onCreateDialog(dialogId);
-        }
-    }
-
-    /*
-     * Set bypass interface status on list view
-     */
-    private void setBypassStatus(int bypassmode) {
-        mLvBypass.setEnabled(mBypassEnabled && !mCbRndis.isChecked());
-        Log.i(TAG, "mCbRndis.isChecked() " + mCbRndis.isChecked());
-        Log.i(TAG, "setEnabled " + (mBypassEnabled && !mCbRndis.isChecked()));
-        mCbRndis.setEnabled(mBypassEnabled);
-        for (int i = 0; i < mLvBypass.getCount(); i++) {
-            mLvBypass.setItemChecked(i, (bypassmode & mBypassCodes[i]) != 0);
-        }
-    }
-
-    private void queryBypassMode() {
-        Log.i(TAG, "queryBypassMode()");
-        mIsQueryingBypass = true;
-        Intent intent = new Intent(ACTION_USB_BYPASS_GETBYPASS);
-        sendBroadcast(intent);
-    }
-
-    private void queryRndisSetting() {
-        Log.i(TAG, "queryRndisSetting()");
-        String config = SystemProperties.get("sys.usb.config");
-        Log.i(TAG, "sys.usb.config: " + config);
-        boolean value = config.contains("rndis") && config.contains("via_bypass");
-        mLvBypass.setEnabled(!value);
-        mCbRndis.setOnCheckedChangeListener(null);
-        mCbRndis.setChecked(value);
-        mCbRndis.setOnCheckedChangeListener(mCheckedChangeListener);
-    }
-
-    private void queryMtkLogger() {
-        Log.i(TAG, "queryBypassMode()");
-        mIsQueryingMtkLogger = true;
-        Intent intent = new Intent(ACTION_MTK_LOGGER);
-        intent.putExtra(CMD_NAME, CMD_NAME_C2K_STATUS);
-        sendBroadcast(intent);
-        Toast.makeText(this, "Checking MTK logger status...", Toast.LENGTH_SHORT) .show();
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        menu.add(0, OPT_MENU_ITEM_BYPASS_ALL, Menu.NONE, "Bypass all");
-        menu.add(0, OPT_MENU_ITEM_CLOSS_BYPASS, Menu.NONE, "Close bypass");
-        return super.onCreateOptionsMenu(menu);
-    }
-
-    @Override
-    public boolean onPrepareOptionsMenu(Menu menu) {
-        Log.i(TAG, "onPrepareOptionsMenu() Enable = " + mBypassEnabled);
-        menu.findItem(OPT_MENU_ITEM_BYPASS_ALL)
-                .setEnabled(mBypassEnabled && !mCbRndis.isChecked());
-        menu.findItem(OPT_MENU_ITEM_CLOSS_BYPASS)
-                .setEnabled(mBypassEnabled && !mCbRndis.isChecked());
-        return super.onPrepareOptionsMenu(menu);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem item) {
-        Log.i(TAG, "onOptionsItemSelected");
-        if (item.getItemId() == OPT_MENU_ITEM_BYPASS_ALL && mBypassCode != mBypassAllCode) {
-            if ((mBypassCode & BYPASS_CODE_ETS) == 0) {
-                // Trying to enable ETS, should check MTK logger first
-                mPendingBypassCode = mBypassAllCode;
-                mIsSettingRndis = false;
-                queryMtkLogger();
-                updateBypassList(mBypassCode);
-                return super.onOptionsItemSelected(item);
-            } else {
-                if (!mIsBypassMode) {
-                    enableBypass(true);
-                }
-                setBypassMode(mBypassAllCode);
-            }
-        } else if (item.getItemId() == OPT_MENU_ITEM_CLOSS_BYPASS && mIsBypassMode) {
-            enableBypass(false);
-            setBypassMode(mBypassNone);
-        }
-        return super.onOptionsItemSelected(item);
-    }
-
-    private void updateBypassList(int bypassmode) {
-        Log.i(TAG, "updateBypassList() mUsbConnected = " + mUsbConnected
-                + ", mIsSettingBypass = " + mIsSettingBypass
-                + ", mIsSettingUsb = " + mIsSettingUsb
-                + ", mIsQueryingBypass = " + mIsQueryingBypass
-                + ", mIsQueryingMtkLogger = " + mIsQueryingMtkLogger);
-        mBypassEnabled = mUsbConnected && !mIsSettingBypass && !mIsSettingUsb && !mIsQueryingBypass
-                && !mIsQueryingMtkLogger;
-        if (DBG) {
-            Log.i(TAG, "updateBypassList() bypassmode = " + bypassmode
-                    + ", mBypassEnabled = " + mBypassEnabled);
-        }
-        setBypassStatus(bypassmode);
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        if (DBG) {
-            Log.w(TAG, "onResume()");
-        }
-
-        queryBypassMode();
-        queryRndisSetting();
-        updateBypassList(mBypassCode);
-
-        //reister the mount service actions
-        IntentFilter intentFilter = new IntentFilter(USBMANAGER_ACTION_USB_STATE);
-        intentFilter.addAction(ACTION_USB_BYPASS_SETBYPASS_RESULT);
-        intentFilter.addAction(ACTION_USB_BYPASS_GETBYPASS_RESULT);
-        intentFilter.addAction(ACTION_MTK_LOGGER_RESULT);
-        registerReceiver(mReceiver, intentFilter);
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-        if (DBG) {
-            Log.i(TAG, "onPause()");
-        }
-        if (!mLaunchByCommand) {
-            unregisterReceiver(mReceiver);
-        }
-        if (mDialog != null) {
-            mDialog.dismiss();
-        }
-    }
-
-    @Override
-    protected void onDestroy() {
-        super.onDestroy();
-        if (mLaunchByCommand) {
-            unregisterReceiver(mReceiver);
-        }
-    }
-
-    private void enableBypass(Boolean enable) {
-        if (DBG) {
-            Log.i(TAG, "enableBypass(" + enable + ")");
-        }
-        mIsSettingUsb = true;
-        Intent intent = new Intent(ACTION_USB_BYPASS_SETFUNCTION);
-        intent.putExtra(VALUE_ENABLE_BYPASS, enable);
-        sendBroadcast(intent);
-    }
-
-    private void enableBypassTether(Boolean enable) {
-        if (DBG) {
-            Log.i(TAG, "enableBypassTether(" + enable + ")");
-        }
-        mIsSettingUsb = true;
-        Intent intent = new Intent(ACTION_USB_BYPASS_SETTETHERFUNCTION);
-        intent.putExtra(VALUE_ENABLE_BYPASS, enable);
-        sendBroadcast(intent);
-    }
-
-    private void enableRndis(Boolean enable) {
-        if (DBG) {
-            Log.i(TAG, "enableRndis(" + enable + ")");
-        }
-        if (enable) {
-            if (!mLaunchByCommand) {
-                // Trying to enable ETS, should check MTK logger first
-                mPendingBypassCode = BYPASS_CODE_ETS;
-                mIsSettingRndis = true;
-                queryMtkLogger();
-                updateBypassList(mBypassCode);
-            } else {
-                enableBypassTether(true);
-                setBypassMode(BYPASS_CODE_ETS);
-                updateBypassList(BYPASS_CODE_ETS);
-            }
-        } else {
-            enableBypassTether(false);
-            setBypassMode(mBypassNone);
-            updateBypassList(mBypassNone);
-        }
-    }
-
-    private void setBypassMode(int bypassmode) {
-        if (DBG) {
-            Log.i(TAG, "setBypassMode(" + bypassmode + ")");
-        }
-        mIsSettingBypass = true;
-        Intent intent = new Intent(ACTION_USB_BYPASS_SETBYPASS);
-        intent.putExtra(VALUE_BYPASS_CODE, bypassmode);
-        sendBroadcast(intent);
-    }
-
-    /**
-     * Adapter for bypass list view.
-     */
-    private class BypassAdapter<T> extends BaseAdapter {
-        public BypassAdapter(Context context) {
-            super();
-        }
-
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            LayoutInflater inflater;
-            inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-            CheckedTextView ctview = (CheckedTextView) inflater.inflate(
-                    android.R.layout.simple_list_item_multiple_choice, parent, false);
-            ctview.setText(mBypassNames[position]);
-            ctview.setEnabled(mBypassEnabled && !mCbRndis.isChecked());
-            return ctview;
-        }
-
-        @Override
-        public int getCount() {
-            return mBypassNames.length;
-        }
-
-        @Override
-        public Object getItem(int arg0) {
-            return mBypassNames[arg0];
-        }
-
-        @Override
-        public long getItemId(int arg0) {
-            return mBypassCodes[arg0];
-        }
-    }
-
-    /* For command line use only */
-    private void doCommand() {
-        if (mCmdName == null || mCmdCode == null || mCmdFile == null) {
-            return;
-        }
-        Log.w(TAG, "mCmdName is " + mCmdName);
-        Log.w(TAG, "mCmdCode is " + mCmdCode);
-        Log.w(TAG, "mCmdFile is " + mCmdFile);
-
-        int ret = -1;
-        String config = SystemProperties.get("sys.usb.config");
-        Log.i(TAG, "sys.usb.config: " + config);
-        boolean rndisEnable = config.contains("rndis") && config.contains("via_bypass");
-
-        if (mCmdCode.equals("rndis")) {
-            switch (mCmdName) {
-            case CMD_NAME_QUERY:
-                ret = rndisEnable ? 1 : 0;
-                break;
-            case CMD_NAME_ENABLE:
-                if (!rndisEnable) {
-                    mLvBypass.setEnabled(false); // Disable other options when rndis is checked
-                    if (mBypassCode > 0) {
-                        // Clear other options when rndis is checked
-                        enableBypass(false);
-                        setBypassMode(mBypassNone);
-                        updateBypassList(mBypassNone);
-                        mIsPreparingForRndis = true;
-                    } else {
-                        enableRndis(true);
-                    }
-                }
-                ret = 0;
-                break;
-            case CMD_NAME_DISABLE:
-                if (rndisEnable) {
-                    mLvBypass.setEnabled(true);
-                    enableRndis(false);
-                }
-                ret = 0;
-                break;
-            default:
-                break;
-            }
-        } else {
-            int code = -1;
-            if (mCmdCode.equals(CMD_CODE_ALL)) {
-                code = mBypassAllCode;
-            } else {
-                for (int i = 0; i < mBypassNames.length; i++) {
-                    if (mCmdCode.equals(mBypassNames[i])) {
-                        code = mBypassCodes[i];
-                    }
-                }
-            }
-            Log.w(TAG, "code is " + code);
-            Log.w(TAG, "mBypassCode is " + mBypassCode);
-            Log.w(TAG, "mBypassAllCode is " + mBypassAllCode);
-
-            if (code != -1) {
-                int bypassSet = mBypassCode;
-                switch (mCmdName) {
-                case CMD_NAME_QUERY:
-                    if (code == mBypassAllCode) {
-                        ret = mBypassCode;
-                    } else {
-                        ret = (mBypassCode & code) > 0 ? 1 : 0;
-                    }
-                    break;
-                case CMD_NAME_ENABLE:
-                    if (rndisEnable) {
-                        ret = -1;
-                        break;
-                    }
-                    if ((mBypassCode & code) != code) {
-                        bypassSet |= code;
-                        if (!mIsBypassMode) {
-                            enableBypass(true);
-                        }
-                        setBypassMode(bypassSet);
-                    }
-                    ret = 0;
-                    break;
-                case CMD_NAME_DISABLE:
-                    if (rndisEnable) {
-                        ret = -1;
-                        break;
-                    }
-                    if ((mBypassCode & code) != 0) {
-                        bypassSet &= ~code;
-                        if (mIsBypassMode && bypassSet == 0) {
-                           enableBypass(false);
-                        }
-                        setBypassMode(bypassSet);
-                    }
-                    ret = 0;
-                    break;
-                default:
-                    break;
-                }
-            }
-        }
-
-        File handle = new File(mCmdFile + ".tmp");
-        OutputStream bos = null;
-        try {
-            bos = new FileOutputStream(handle, true);
-            bos.write(String.valueOf(ret).getBytes());
-        } catch (IOException ex) {
-            ex.printStackTrace();
-            handle.delete();
-        } finally {
-            if (bos != null) {
-                try {
-                    bos.close();
-                } catch (IOException ex) {
-                    ex.printStackTrace();
-                }
-            }
-        }
-        handle.renameTo(new File(mCmdFile));
-
-        mCmdName = null;
-        mCmdCode = null;
-        mCmdFile = null;
-    }
-
-    /**
-     * For instrumentation only.
-     *
-     * @param mask
-     *            the mask of mode to enable
-     * @return 0 for success, -1 if fail
-     */
-    public int enableBypassModeWait(int mask) {
-        synchronized (mLock) {
-            queryBypassModeWait(mask);
-            int newMode = mBypassCode | mask;
-            if (!mIsBypassMode) {
-               enableBypass(true);
-            }
-            setBypassMode(newMode);
-            waitForFinished();
-            return ((mBypassCode & mask) != 0) ? 0 : -1;
-        }
-    }
-
-    /**
-     * For instrumentation only.
-     *
-     * @param mask
-     *            the mask of mode to disable
-     * @return 0 for success, -1 if fail
-     */
-    public int disableBypassModeWait(int mask) {
-        synchronized (mLock) {
-            queryBypassModeWait(mask);
-            int newMode = mBypassCode & ~mask;
-            if (newMode == 0) {
-               enableBypass(false);
-            }
-            setBypassMode(newMode);
-            waitForFinished();
-            return ((mBypassCode & mask) == 0) ? 0 : -1;
-        }
-    }
-
-    /**
-     * For instrumentation only.
-     *
-     * @param mask
-     *            the mask of mode to query
-     * @return current mode
-     */
-    public int queryBypassModeWait(int mask) {
-        synchronized (mLock) {
-            IntentFilter intentFilter = new IntentFilter(USBMANAGER_ACTION_USB_STATE);
-            intentFilter.addAction(ACTION_USB_BYPASS_SETBYPASS_RESULT);
-            intentFilter.addAction(ACTION_USB_BYPASS_GETBYPASS_RESULT);
-            registerReceiver(mReceiver, intentFilter);
-            Log.i(TAG, "registerReceiver");
-
-            queryBypassMode();
-            waitForFinished();
-            int ret = mBypassCode & mask;
-            if ((mask & 0xF) != 0xF) {
-                // query for a specific mode, return 1 or 0
-                return ret > 0 ? 1 : 0;
-            } else {
-                // query all
-                return ret;
-            }
-        }
-    }
-
-    /* For instrumentation only. */
-    private void waitForFinished() {
-        while (mIsSettingBypass || mIsSettingUsb || mIsQueryingBypass) {
-            Log.i(TAG, "wait... "
-                    + mIsSettingBypass + " " + mIsSettingUsb + " " + mIsQueryingBypass);
-            try {
-                mLock.wait(100);
-            } catch (InterruptedException e) {
-                continue;
-            }
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/cdmanetworkselect/NetworkSelectActivity.java b/EngineerMode/src/com/mediatek/engineermode/cdmanetworkselect/NetworkSelectActivity.java
deleted file mode 100644
index d79f712..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/cdmanetworkselect/NetworkSelectActivity.java
+++ /dev/null
@@ -1,222 +0,0 @@
-package com.mediatek.engineermode.cdmanetworkselect;
-
-import android.app.Activity;
-import android.os.AsyncResult;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.provider.Settings;
-import android.telephony.TelephonyManager;
-import android.util.Log;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Spinner;
-import android.widget.Toast;
-import android.widget.CompoundButton;
-import android.widget.CompoundButton.OnCheckedChangeListener;
-import android.widget.CheckBox;
-
-import com.android.internal.telephony.Phone;
-import com.android.internal.telephony.PhoneConstants;
-import com.android.internal.telephony.PhoneFactory;
-import com.mediatek.engineermode.FeatureSupport;
-
-import com.mediatek.engineermode.R;
-/**
- *
- * For setting network mode.
- * @author mtk54043
- *
- */
-public class NetworkSelectActivity extends Activity implements OnCheckedChangeListener {
-    private static final String TAG = "EM/NetworkMode";
-    private static final int EVENT_QUERY_NETWORKMODE_DONE = 101;
-    private static final int EVENT_SET_NETWORKMODE_DONE = 102;
-    private static final int EVENT_QUERY_EHRPD_ENABLE_DONE = 103;
-    private static final int EVENT_SET_EHRPD_ENABLE_DONE = 104;
-
-    private static final int HYBRID_INDEX = 0;
-    private static final int CDMA_1X_ONLY_INDEX = 1;
-    private static final int EVDO_ONLY_INDEX = 2;
-    private static final int HYBRID = 4;
-    private static final int CDMA_1X_ONLY  = 5;
-    private static final int EVDO_ONLY = 6;
-
-    private boolean mFirstEnter = true;
-    private int mCurrentSettingsNetworkMode;
-
-    private Phone mPhone = null;
-
-    private Spinner mPreferredNetworkSpinner = null;
-    private CheckBox mDisableeHRPDCheckBox = null;
-
-    private OnItemSelectedListener mPreferredNetworkHandler = new OnItemSelectedListener() {
-        public void onItemSelected(AdapterView parent, View v, int pos, long id) {
-            Message msg = mHandler.obtainMessage(EVENT_SET_NETWORKMODE_DONE);
-
-            int settingsNetworkMode = Settings.Global.getInt(getContentResolver(),
-                    Settings.Global.PREFERRED_NETWORK_MODE, Phone.PREFERRED_NT_MODE);
-            mCurrentSettingsNetworkMode = settingsNetworkMode;
-            int selectNetworkMode = Phone.PREFERRED_NT_MODE;
-            switch (pos) {
-            case HYBRID_INDEX: // 4
-                selectNetworkMode = HYBRID;
-                break;
-            case CDMA_1X_ONLY_INDEX: // 5
-                selectNetworkMode = CDMA_1X_ONLY;
-                break;
-            case EVDO_ONLY_INDEX: // 6
-                selectNetworkMode = EVDO_ONLY;
-                break;
-            default:
-                break;
-            }
-            if (mFirstEnter == true) {
-                mFirstEnter = false;
-            } else {
-                Log.d("@M_" + TAG, "selectNetworkMode " + selectNetworkMode);
-                if (mPhone != null) {
-                    mPhone.setPreferredNetworkType(selectNetworkMode, msg);
-                }
-            }
-        }
-
-        public void onNothingSelected(AdapterView parent) {
-
-        }
-    };
-
-    private Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            AsyncResult ar;
-            switch (msg.what) {
-            case EVENT_QUERY_NETWORKMODE_DONE:
-                Log.d("@M_" + TAG, "Get response EVENT_QUERY_NETWORKMODE_DONE");
-                ar = (AsyncResult) msg.obj;
-                if (ar.exception == null) {
-                    int type = ((int[]) ar.result)[0];
-                    Log.d("@M_" + TAG, "Get Preferred Type " + type);
-                    switch (type) {
-                    case HYBRID:
-                        mPreferredNetworkSpinner.setSelection(HYBRID_INDEX, true);
-                        break;
-                    case CDMA_1X_ONLY:
-                        mPreferredNetworkSpinner.setSelection(CDMA_1X_ONLY_INDEX, true);
-                        break;
-                    case EVDO_ONLY:
-                        mPreferredNetworkSpinner.setSelection(EVDO_ONLY_INDEX, true);
-                        break;
-                    default:
-                        break;
-                    }
-                } else {
-                    Toast.makeText(NetworkSelectActivity.this, R.string.query_preferred_fail,
-                            Toast.LENGTH_SHORT).show();
-                }
-                break;
-            case EVENT_SET_NETWORKMODE_DONE:
-                ar = (AsyncResult) msg.obj;
-                if ((ar.exception != null) && (mPhone != null)) {
-                    mPhone.getPreferredNetworkType(obtainMessage(EVENT_QUERY_NETWORKMODE_DONE));
-                }
-                break;
-            case EVENT_QUERY_EHRPD_ENABLE_DONE:
-                ar = (AsyncResult) msg.obj;
-                if (ar.exception == null) {
-                    String data[] = (String[]) ar.result;
-                    if ((data.length > 0) && (data[0] != null)) {
-                        Log.d("@M_" + TAG, "data[0]:" + data[0]);
-                        mDisableeHRPDCheckBox.setChecked(data[0].equals("+EHRPD:0"));
-                    }
-                } else {
-                    Toast.makeText(NetworkSelectActivity.this, R.string.query_eHRPD_state_fail,
-                        Toast.LENGTH_SHORT).show();
-                }
-                break;
-            case EVENT_SET_EHRPD_ENABLE_DONE:
-                ar = (AsyncResult) msg.obj;
-                if (ar.exception != null) {
-                    Toast.makeText(NetworkSelectActivity.this, R.string.set_eHRPD_state_fail,
-                        Toast.LENGTH_SHORT).show();
-                    queryeHRPDStatus();
-                }
-                break;
-            default:
-                break;
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.networkmode_switching);
-        if (TelephonyManager.getDefault().getPhoneCount() > 1) {
-            mPhone = PhoneFactory.getPhone(PhoneConstants.SIM_ID_1);
-        } else {
-            mPhone = PhoneFactory.getDefaultPhone();
-        }
-
-
-        mPreferredNetworkSpinner = (Spinner) findViewById(R.id.networkModeSwitching);
-        mDisableeHRPDCheckBox = (CheckBox) findViewById(R.id.disable_eHRPD);
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item,
-                getResources().getStringArray(R.array.mCdmaNetworkLabels));
-        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mPreferredNetworkSpinner.setAdapter(adapter);
-
-        mPreferredNetworkSpinner.setOnItemSelectedListener(mPreferredNetworkHandler);
-        mDisableeHRPDCheckBox.setOnCheckedChangeListener(this);
-        mFirstEnter = true;
-    }
-
-    @Override
-    protected void onResume() {
-        mCurrentSettingsNetworkMode = android.provider.Settings.Global.getInt(getContentResolver(),
-                android.provider.Settings.Global.PREFERRED_NETWORK_MODE, Phone.PREFERRED_NT_MODE);
-        if (mPhone != null) {
-            mPhone.getPreferredNetworkType(mHandler.obtainMessage(EVENT_QUERY_NETWORKMODE_DONE));
-        }
-        Log.d("@M_" + TAG, "Query EVENT_QUERY_NETWORKMODE_DONE");
-        queryeHRPDStatus();
-        super.onResume();
-    }
-
-    private void queryeHRPDStatus(){
-        String atCommand = "AT+eHRPD?";
-        sendAtCommand(new String[] {atCommand, "+EHRPD:"}, EVENT_QUERY_EHRPD_ENABLE_DONE);
-    }
-
-    private void seteHRPDStatus(int state){
-        String atCommand = null;
-
-        switch(state) {
-            case 0:
-                atCommand = "AT+eHRPD=0";
-            break;
-            case 1:
-                atCommand = "AT+eHRPD=1";
-            break;
-        }
-        sendAtCommand(new String[] {atCommand, ""}, EVENT_SET_EHRPD_ENABLE_DONE);
-    }
-
-    private void sendAtCommand(String[] command, int msg) {
-        Log.d("@M_" + TAG, "sendAtCommand() " + command[0]);
-        if (mPhone != null) {
-            mPhone.invokeOemRilRequestStrings(command, mHandler.obtainMessage(msg));
-        }
-    }
-
-    @Override
-    public void onCheckedChanged(CompoundButton view, boolean isChecked) {
-        Log.d("@M_" + TAG, "m4GDataOnlyCheckBox check is" + isChecked);
-        if (!mFirstEnter) {
-            mDisableeHRPDCheckBox.setChecked(isChecked);
-            seteHRPDStatus(isChecked ? 0 : 1);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/cip/CipPropContentActivity.java b/EngineerMode/src/com/mediatek/engineermode/cip/CipPropContentActivity.java
deleted file mode 100644
index 893bdbd..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/cip/CipPropContentActivity.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-package com.mediatek.engineermode.cip;
-
-import java.io.File;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.text.TextUtils;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.R;
-
-public class CipPropContentActivity extends Activity {
-    TextView mTvPropContent;
-    String mPropContent;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.cip_prop_content);
-
-        mTvPropContent = (TextView) findViewById(R.id.cip_prop_content_tv);
-        mTvPropContent.setText("Loading ...");
-        new Thread(new Runnable() {
-            @Override
-            public void run() {
-                mPropContent = CipUtil.getFileAllContent(new File(CipUtil.CIP_PROP_FILE));
-                if (TextUtils.isEmpty(mPropContent)) {
-                    mPropContent = "No content found";
-                }
-                CipPropContentActivity.this.runOnUiThread(new Runnable() {
-                    @Override
-                    public void run() {
-                        mTvPropContent.setText(mPropContent);
-                    }
-                });
-            }
-        }).start();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/cip/CipUtil.java b/EngineerMode/src/com/mediatek/engineermode/cip/CipUtil.java
deleted file mode 100644
index 8d8be98..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/cip/CipUtil.java
+++ /dev/null
@@ -1,83 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-package com.mediatek.engineermode.cip;
-
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileReader;
-import java.io.IOException;
-
-import com.mediatek.engineermode.Elog;
-
-public class CipUtil {
-    private static final String TAG = "CipUtil";
-    public static final String CIP_PROP_FILE = "/custom/cip-build.prop";
-    public static boolean isCipSupported() {
-        boolean result = false;
-        if (new File(CIP_PROP_FILE).exists()) {
-            result = true;
-        }
-        return result;
-    }
-
-    public static String getFileAllContent(File file) {
-        if (file == null) {
-            return null;
-        }
-        StringBuilder builder = new StringBuilder();
-        BufferedReader reader = null;
-        try {
-            reader = new BufferedReader(new FileReader(file));
-            char[] buffer = new char[500];
-            int ret = -1;
-            while ((ret = reader.read(buffer)) != -1) {
-                builder.append(buffer, 0, ret);
-            }
-        } catch (IOException e) {
-            Elog.e(TAG, "IOException:" + e.getMessage());
-        } finally {
-            if (reader != null) {
-                try {
-                    reader.close();
-                } catch (IOException e) {
-                    Elog.e(TAG, "IOException:" + e.getMessage());
-                }
-            }
-        }
-        return builder.toString();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/cwtest/CWTest.java b/EngineerMode/src/com/mediatek/engineermode/cwtest/CWTest.java
deleted file mode 100644
index 5d47507..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/cwtest/CWTest.java
+++ /dev/null
@@ -1,688 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.cwtest;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.content.DialogInterface;
-import android.location.GpsSatellite;
-import android.location.GpsStatus;
-import android.location.Location;
-import android.location.LocationListener;
-import android.location.LocationManager;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.os.PowerManager;
-import android.os.StrictMode;
-import android.os.SystemProperties;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-
-import android.widget.TextView;
-import android.widget.Toast;
-import com.mediatek.engineermode.R;
-
-public class CWTest extends Activity {
-
-    private static final String TAG = "CWTest/Activity";
-    private static final String TAG_BG = "CWTest/BG";
-    private static final String COMMAND_END = "*";
-    private static final String COMMAND_START = "$";
-    private static final int LOCATION_MAX_LENGTH = 12;
-    private static final String INTENT_ACTION_SCREEN_OFF = "android.intent.action.SCREEN_OFF";
-    private static final String FIRST_TIME = "first.time";
-
-    private static final int INPUT_VALUE_MAX = 999;
-    private static final int INPUT_VALUE_MIN = 0;
-    private static final int ONE_SECOND = 3000;
-
-    private static final int HANDLE_START_TEST = 1001;
-    private static final int HANDLE_STOP_TEST = 1002;
-    private static final int HANDLE_UPDATE_RESULT = 1003;
-
-    private static final int RESPONSE_ARRAY_LENGTH = 4;
-
-    private static final int DIALOG_GPS_ERROR = 0;
-
-    private static final String MNL_PROP_NAME = "persist.radio.mnl.prop";
-    private static final String DEFAULT_MNL_PROP = "0001100";
-
-
-    private boolean mShowLoc = false;
-    private boolean mStartNmeaRecord = false;
-
-    private ClientSocket mSocketClient = null;
-
-    private LocationManager mLocationManager = null;
-    private YgpsWakeLock mYgpsWakeLock = null;
-    private Location mLastLocation = null;
-    private Button mBtnStart = null;
-    private Button mBtnStop = null;
-
-    private TextView mCnrTv = null;
-    private TextView mDriftTv = null;
-
-    private EditText mEtTimes = null;
-    private EditText mEtInterval = null;
-
-    private TextView mCurrentTimesTv = null;
-
-    private TextView mMaxCnrTv = null;
-    private TextView mMinCnrTv = null;
-
-    private int mMaxCnr = 0;
-    private int mMinCnr = 0;
-
-    private String mProvider = "";
-    private String mStatus = "";
-
-    // added end
-    // added to receive PowerKey pressed
-    private IntentFilter mPowerKeyFilter = null;
-    private BroadcastReceiver mPowerKeyReceiver = null;
-    // added end
-
-    private int mTotalTimes = 0;
-    private int mInterval = 0;
-    private int mCurrentTimes = 0;
-
-    private boolean mDebugFile = false;
-
-    private final LocationListener mLocListener = new LocationListener() {
-
-        // @Override
-        public void onLocationChanged(Location location) {
-            Log.v("@M_" + TAG, "Enter onLocationChanged function");
-        }
-
-        // @Override
-        public void onProviderDisabled(String provider) {
-            Log.v("@M_" + TAG, "Enter onProviderDisabled function");
-        }
-
-        // @Override
-        public void onProviderEnabled(String provider) {
-            Log.v("@M_" + TAG, "Enter onProviderEnabled function");
-        }
-
-        // @Override
-        public void onStatusChanged(String provider, int status, Bundle extras) {
-            Log.v("@M_" + TAG, "Enter onStatusChanged function");
-        }
-    };
-
-    private final GpsStatus.Listener mGpsListener = new GpsStatus.Listener() {
-        private void onFirstFix(int ttff) {
-            Log.v("@M_" + TAG, "Enter onFirstFix function: ttff = " + ttff);
-        }
-
-        private void onPreFix(int ttff) {
-            Log.v("@M_" + TAG, "Enter onPreFix function: ttff = " + ttff);
-        }
-
-        private boolean isLocationFixed(Iterable<GpsSatellite> list) {
-            boolean fixed = false;
-            synchronized (this) {
-                for (GpsSatellite sate : list) {
-                    if (sate.usedInFix()) {
-                        fixed = true;
-                        break;
-                    }
-                }
-            }
-            return fixed;
-        }
-
-        public void onGpsStatusChanged(int event) {
-            Log.v("@M_" + TAG, "Enter onGpsStatusChanged function");
-            GpsStatus status = mLocationManager.getGpsStatus(null);
-            switch (event) {
-            case GpsStatus.GPS_EVENT_STARTED:
-                mBtnStart.setEnabled(true);
-                mStatus = "gps status started";
-                break;
-            case GpsStatus.GPS_EVENT_STOPPED:
-                mStatus = "gps status stopped";
-                break;
-            case GpsStatus.GPS_EVENT_FIRST_FIX:
-                onFirstFix(status.getTimeToFirstFix());
-                mStatus = "gps status first fix";
-                break;
-            case GpsStatus.GPS_EVENT_SATELLITE_STATUS:
-                if (!isLocationFixed(status.getSatellites())) {
-                    Log.v("@M_" + TAG, "gps status unavailable");
-                } else {
-                    Log.v("@M_" + TAG, "gps status available");
-                }
-                break;
-            default:
-                break;
-            }
-
-            Log.v("@M_" + TAG, "onGpsStatusChanged:" + event + " Status:" + mStatus);
-        }
-    };
-
-
-    private final OnClickListener mBtnClickListener = new OnClickListener() {
-
-        @Override
-        public void onClick(View v) {
-            Bundle extras = new Bundle();
-            if (v == (View) mBtnStart) {
-                Log.v("@M_" + TAG, "Start button is pressed");
-                startCWTest();
-            } else if (v == (View) mBtnStop) {
-                Log.v("@M_" + TAG, "Stop button is pressed");
-                stopCWTest();
-            } else {
-                return;
-            }
-        }
-    };
-    private Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case HANDLE_START_TEST:
-                mCurrentTimes++;
-                //mCurrentTimesTv.setText(Integer.toString(mCurrentTimes));
-                Log.v("@M_" + TAG, "[--CMD--]send start command, times = " + Integer.toString(mCurrentTimes));
-                sendCommand("$PMTK817,1");
-                if (mCurrentTimes >= mTotalTimes) {
-                    Log.v("@M_" + TAG, "Test done");
-                    break;
-                }
-                sendEmptyMessageDelayed(HANDLE_START_TEST, mInterval * 1000);
-                break;
-
-            case HANDLE_STOP_TEST:
-                sendCommand("$PMTK817,0");
-                mCurrentTimesTv.setText("0");
-                mCnrTv.setText("0");
-                mDriftTv.setText("0");
-                break;
-            case HANDLE_UPDATE_RESULT:  /* $PMTK817,2,0037,-5.614*23 */
-                String res = msg.obj.toString();
-                String[] strA = res.split(",");
-                mCurrentTimesTv.setText(Integer.toString(mCurrentTimes));
-                if (strA.length >= RESPONSE_ARRAY_LENGTH) {
-                    Log.v("@M_" + TAG, "[--CMD--]receive command, times = " + Integer.toString(mCurrentTimes));
-                    String strCNR = strA[RESPONSE_ARRAY_LENGTH - 2];
-                    int cnr = Integer.parseInt(strCNR);
-                    if (mCurrentTimes == 1) {
-                        mMaxCnr = cnr;
-                        mMinCnr = cnr;
-                    } else {
-                        if (mMaxCnr < cnr) {
-                            mMaxCnr = cnr;
-                        }
-                        if (mMinCnr > cnr) {
-                            mMinCnr = cnr;
-                        }
-                    }
-                    mMaxCnrTv.setText(Integer.toString(mMaxCnr));
-                    mMinCnrTv.setText(Integer.toString(mMinCnr));
-
-                    mCnrTv.setText(Integer.toString(cnr));
-                    char[] strB = strA[RESPONSE_ARRAY_LENGTH - 1].toCharArray();
-                    int index = 0;
-                    while (index < strB.length) {
-                        if (strB[index] == '*') {
-                            break;
-                        }
-                        index++;
-                    }
-
-                    String strDrift = new String(strB, 0, index);
-                    mDriftTv.setText(strDrift);
-
-                }
-                if (mCurrentTimes >= mTotalTimes) {
-                    Log.v("@M_" + TAG, "Test done, Reset button");
-                    mBtnStart.setEnabled(true);
-                    mBtnStop.setEnabled(false);
-                    break;
-                }
-                break;
-            default:
-                break;
-            }
-            super.handleMessage(msg);
-        }
-    };
-    /**
-     * Convert Integer array to string with specified length.
-     *
-     * @param array
-     *            Integer array
-     * @param count
-     *            Specified length
-     * @return Integer array numbers string
-     */
-    private String toString(int[] array, int count) {
-        StringBuilder strBuilder = new StringBuilder();
-        strBuilder.append("(");
-        for (int idx = 0; idx < count; idx++) {
-            strBuilder.append(Integer.toString(array[idx]));
-            strBuilder.append(",");
-        }
-        strBuilder.append(")");
-        return strBuilder.toString();
-    }
-
-    /**
-     * Convert Float array to string with specified length.
-     *
-     * @param array
-     *            Float array
-     * @param count
-     *            Specified length
-     * @return Float array numbers string
-     */
-    private String toString(float[] array, int count) {
-        StringBuilder strBuilder = new StringBuilder();
-        strBuilder.append("(");
-        for (int idx = 0; idx < count; idx++) {
-            strBuilder.append(Float.toString(array[idx]));
-            strBuilder.append(",");
-        }
-        strBuilder.append(")");
-        return strBuilder.toString();
-    }
-
-
-    private  String getDebug2FileProp(String defaultValue) {
-        String result = defaultValue;
-        String prop = SystemProperties.get(MNL_PROP_NAME);
-
-        int index = 2;
-        Log.v("@M_" + TAG, "getMnlProp: " + prop);
-        if (null == prop || prop.isEmpty()) {
-            result = defaultValue;
-        } else {
-            char c = prop.charAt(index);
-            result = String.valueOf(c);
-        }
-        Log.v("@M_" + TAG, "getMnlProp result: " + result);
-        return result;
-    }
-
-    private void setDebug2FileMnlProp(String value) {
-        Log.v("@M_" + TAG, "setMnlProp: " + value);
-        String prop = SystemProperties.get(MNL_PROP_NAME);
-
-        int index = 2;
-
-        if (null == prop || prop.isEmpty()) {
-            prop = DEFAULT_MNL_PROP;
-        }
-        if (prop.length() > index) {
-            char[] charArray = prop.toCharArray();
-            charArray[index] = value.charAt(0);
-            String newProp = String.valueOf(charArray);
-            SystemProperties.set(MNL_PROP_NAME, newProp);
-            Log.v("@M_" + TAG, "setMnlProp newProp: " + newProp);
-        }
-
-    }
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        Log.v("@M_" + TAG, "Enter onCreate  function of Main Activity");
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.cw_test);
-
-        mBtnStart = (Button) findViewById(R.id.cw_test_start_btn);
-        mBtnStop = (Button) findViewById(R.id.cw_test_stop_btn);
-        mCnrTv = (TextView) findViewById(R.id.cw_test_cnr_content);
-        mDriftTv = (TextView) findViewById(R.id.cw_test_clock_drift_content);
-        mCnrTv.setText("0");
-        mDriftTv.setText("0");
-
-        mEtTimes = (EditText) findViewById(R.id.cw_test_times_content);
-        mEtInterval = (EditText) findViewById(R.id.cw_test_interval_content);
-
-        mCurrentTimesTv = (TextView) findViewById(R.id.cw_test_current_times_content);
-        mCurrentTimesTv.setText("0");
-
-        mMaxCnrTv = (TextView) findViewById(R.id.cw_test_max_cnr_content);
-        mMinCnrTv = (TextView) findViewById(R.id.cw_test_min_cnr_content);
-
-        mMaxCnrTv.setText("0");
-        mMinCnrTv.setText("0");
-
-        mBtnStart.setOnClickListener(mBtnClickListener);
-        mBtnStop.setOnClickListener(mBtnClickListener);
-        mBtnStart.setEnabled(false);
-        mBtnStop.setEnabled(false);
-
-        // open debug file
-        String ss = getDebug2FileProp("0");
-
-        if (ss.equals("0")) {
-            mDebugFile = false;
-            setDebug2FileMnlProp("1");
-        } else {
-            mDebugFile = true;
-        }
-
-        StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()
-                .detectNetwork() // or .detectAll() for all detectable problems
-                .build());
-        mYgpsWakeLock = new YgpsWakeLock();
-        mYgpsWakeLock.acquireScreenWakeLock(this);
-
-        try {
-            mLocationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);
-            if (mLocationManager != null) {
-                mLocationManager.requestLocationUpdates(
-                        LocationManager.GPS_PROVIDER, 0, 0, mLocListener);
-                mLocationManager.addGpsStatusListener(mGpsListener);
-
-                if (mLocationManager
-                        .isProviderEnabled(LocationManager.GPS_PROVIDER)) {
-                   Log.w("@M_" + TAG, "provider enabled");
-
-                } else {
-                    Log.w("@M_" + TAG, "provider disabled");
-                    showDialog(DIALOG_GPS_ERROR);
-                }
-            } else {
-                Log.w("@M_" + TAG, "new mLocationManager failed");
-            }
-        } catch (SecurityException e) {
-            Toast.makeText(this, "security exception", Toast.LENGTH_LONG)
-                    .show();
-            Log.w("@M_" + TAG, "Exception: " + e.getMessage());
-        } catch (IllegalArgumentException e) {
-            Log.w("@M_" + TAG, "Exception: " + e.getMessage());
-        }
-
-        mPowerKeyFilter = new IntentFilter(INTENT_ACTION_SCREEN_OFF);
-        mPowerKeyReceiver = new BroadcastReceiver() {
-
-            @Override
-            public void onReceive(Context context, Intent intent) {
-                Log.v("@M_" + TAG, "onReceive, receive SCREEN_OFF event");
-                // finish();
-            }
-        };
-        registerReceiver(mPowerKeyReceiver, mPowerKeyFilter);
-        Log.v("@M_" + TAG, "registerReceiver powerKeyReceiver");
-        mSocketClient = new ClientSocket(this);
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-        Log.v("@M_" + TAG, "Enter onPause function");
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        Log.v("@M_" + TAG, "Enter onResume function");
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-        Log.v("@M_" + TAG, "Enter onStop function");
-
-        mYgpsWakeLock.release();
-
-    }
-
-    @Override
-    protected void onRestart() {
-        Log.v("@M_" + TAG, "Enter onRestart function");
-
-        if (null != mYgpsWakeLock) {
-            mYgpsWakeLock.acquireScreenWakeLock(this);
-        } else {
-            Log.d("@M_" + TAG, "mYGPSWakeLock is null");
-        }
-        super.onRestart();
-    }
-
-    @Override
-    protected void onDestroy() {
-        Log.v("@M_" + TAG, "enter onDestroy function");
-        mLocationManager.removeUpdates(mLocListener);
-        mLocationManager.removeGpsStatusListener(mGpsListener);
-
-       if (!mDebugFile) {
-            setDebug2FileMnlProp("0");
-        }
-        mHandler.removeMessages(HANDLE_START_TEST);
-        unregisterReceiver(mPowerKeyReceiver);
-        Log.v("@M_" + TAG, "unregisterReceiver powerKeyReceiver");
-        mSocketClient.endClient();
-        super.onDestroy();
-    }
-
-    private void startCWTest() {
-
-        try {
-                mTotalTimes = Integer.parseInt(mEtTimes.getText().toString());
-                mInterval = Integer.parseInt(mEtInterval.getText().toString());
-                mCurrentTimes = 0;
-                if (mTotalTimes <= 0 || mInterval < 3) {
-                    Toast.makeText(this, "please input right number, times > 0 and interval >=3s",
-                        Toast.LENGTH_SHORT).show();
-                    return;
-                }
-                mCurrentTimesTv.setText("0");
-                mCnrTv.setText("0");
-                mDriftTv.setText("0");
-                mMaxCnrTv.setText("0");
-                mMinCnrTv.setText("0");
-                mMaxCnr = 0;
-                mMinCnr = 0;
-                mBtnStart.setEnabled(false);
-                mBtnStop.setEnabled(true);
-        } catch (NumberFormatException e) {
-                Toast.makeText(this, "invalid input value",
-                        Toast.LENGTH_SHORT).show();
-                return;
-        }
-        mHandler.sendEmptyMessage(HANDLE_START_TEST);
-    }
-
-    private void stopCWTest() {
-        mBtnStart.setEnabled(true);
-        mBtnStop.setEnabled(false);
-        mHandler.removeMessages(HANDLE_START_TEST);
-        mHandler.sendEmptyMessage(HANDLE_STOP_TEST);
-    }
-
-    /**
-     * Send command to MNL server.
-     *
-     * @param command
-     *            PMTK command to be send
-     */
-    private void sendCommand(String command) {
-        Log.v("@M_" + TAG, "GPS Command is " + command);
-
-        int index1 = command.indexOf(COMMAND_START);
-        int index2 = command.indexOf(COMMAND_END);
-        String com = command;
-        if (index1 != -1 && index2 != -1) {
-
-            com = com.substring(index1 + 1, index2);
-        } else if (index1 != -1) {
-            com = com.substring(index1 + 1);
-        } else if (index2 != -1) {
-            com = com.substring(0, index2);
-        }
-        mSocketClient.sendCommand(com.trim());
-    }
-
-    /**
-     * Invoked when get GPS server respond.
-     *
-     * @param ss
-     *            Response message
-     */
-    public void onResponse(String ss) {
-
-        Log.v("@M_" + TAG, "Enter getResponse: " + ss);
-        if (null == ss || ss.isEmpty()) {
-            return;
-        }
-
-        if (!ss.contains("PMTK817")) {
-            return;
-        }
-        int startIndex = ss.indexOf("$PMTK817");
-
-        String response = ss.substring(startIndex);
-        Log.v("@M_" + TAG, "start string " + response);
-
-        int endIndex = response.indexOf("*");
-        endIndex = endIndex + 3;
-
-        String res = response.substring(0, endIndex);
-        Log.v("@M_" + TAG, "last string " + res);
-
-        if (res.startsWith("$PMTK817")) {
-
-            Message m = mHandler.obtainMessage(HANDLE_UPDATE_RESULT);
-            m.obj = res;
-            mHandler.sendMessage(m);
-        } else {
-            Log.v("@M_" + TAG, "result is not proper");
-        }
-
-
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Dialog dialog = null;
-        AlertDialog.Builder builder = null;
-        switch (id) {
-        case DIALOG_GPS_ERROR:
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.cw_test_dialog_error);
-            builder.setCancelable(false);
-            builder.setMessage(getString(R.string.cw_test_dialog_error_message));
-            builder.setPositiveButton(R.string.wifi_ok,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            finish();
-                        }
-                    });
-            dialog = builder.create();
-            break;
-        default:
-            Log.d("@M_" + TAG, "error dialog ID");
-            break;
-        }
-        return dialog;
-    }
-    class YgpsWakeLock {
-        private PowerManager.WakeLock mScreenWakeLock = null;
-        private PowerManager.WakeLock mCpuWakeLock = null;
-
-        /**
-         * Acquire CPU wake lock.
-         *
-         * @param context
-         *            Getting lock context
-         */
-        void acquireCpuWakeLock(Context context) {
-            Log.v("@M_" + TAG, "Acquiring cpu wake lock");
-            if (mCpuWakeLock != null) {
-                return;
-            }
-
-            PowerManager pm = (PowerManager) context
-                    .getSystemService(Context.POWER_SERVICE);
-
-            mCpuWakeLock = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK
-                    | PowerManager.ACQUIRE_CAUSES_WAKEUP, TAG);
-            // | PowerManager.ON_AFTER_RELEASE, TAG);
-            mCpuWakeLock.acquire();
-        }
-
-        /**
-         * Acquire screen wake lock.
-         *
-         * @param context
-         *            Getting lock context
-         */
-        void acquireScreenWakeLock(Context context) {
-            Log.v("@M_" + TAG, "Acquiring screen wake lock");
-            if (mScreenWakeLock != null) {
-                return;
-            }
-
-            PowerManager pm = (PowerManager) context
-                    .getSystemService(Context.POWER_SERVICE);
-
-            mScreenWakeLock = pm.newWakeLock(PowerManager.FULL_WAKE_LOCK
-                    | PowerManager.ACQUIRE_CAUSES_WAKEUP, TAG);
-            // | PowerManager.ON_AFTER_RELEASE, TAG);
-            mScreenWakeLock.acquire();
-        }
-
-        /**
-         * Release wake locks.
-         */
-        void release() {
-            Log.v("@M_" + TAG, "Releasing wake lock");
-            if (mCpuWakeLock != null) {
-                mCpuWakeLock.release();
-                mCpuWakeLock = null;
-            }
-            if (mScreenWakeLock != null) {
-                mScreenWakeLock.release();
-                mScreenWakeLock = null;
-            }
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/cwtest/ClientSocket.java b/EngineerMode/src/com/mediatek/engineermode/cwtest/ClientSocket.java
deleted file mode 100644
index 1124b5d..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/cwtest/ClientSocket.java
+++ /dev/null
@@ -1,246 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.cwtest;
-
-import android.util.Log;
-
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
-import java.io.IOException;
-import java.net.Socket;
-import java.net.UnknownHostException;
-import java.util.concurrent.BlockingQueue;
-import java.util.concurrent.LinkedBlockingQueue;
-
-/**
- * Client socket, used to connect with GPS server and communicate with PMTK command.
- *
- *
- * @author mtk54046
- * @version 1.0
- */
-public class ClientSocket {
-
-    private static final int MASK_8_BIT = 0xFF;
-    private static final int SOCKET_TIME_OUT_TIME = 3000;
-    private static final int LINE_OUT_SIZE = 1000;
-    private static final int BUFFER_SIZE = 2048;
-    private static final String TAG = "CWTEST/ClientSocket";
-    private static final int SERVER_PORT = 7000;
-    private Socket mClientSocket = null;
-    private DataInputStream mDataInput = null;
-    private DataOutputStream mDataOutput = null;
-    private String mCommand = null;
-    private String mResponse = null;
-    private BlockingQueue<String> mCommandQueue = null;
-    private CWTest mCallBack = null;
-    private Thread mSendThread = null;
-    private byte[] mDataBuffer = null;
-
-    /**
-     * Constructor, initial parameters and start thread to send/receive.
-     *
-     * @param callBack
-     *            Callback when message received
-     */
-    public ClientSocket(CWTest callBack) {
-        Log.v("@M_" + TAG, "ClientSocket constructor");
-        this.mCallBack = callBack;
-        mCommandQueue = new LinkedBlockingQueue<String>();
-        mDataBuffer = new byte[BUFFER_SIZE];
-
-
-        mSendThread = new Thread(new Runnable() {
-            public void run() {
-                while (true) {
-                    try {
-                        mCommand = mCommandQueue.take();
-                        Log.v("@M_" + TAG, "Queue take command:" + mCommand);
-                    } catch (InterruptedException ie) {
-                        Log.w("@M_" + TAG,
-                                "Take command interrupted:" + ie.getMessage());
-                        return;
-                    }
-                    openClient();
-                    if (null != mDataOutput && null != mDataInput) {
-                        try {
-                            // in = new
-                            // DataInputStream(localSocket.getInputStream());
-                            mDataOutput.writeBytes(mCommand);
-                            mDataOutput.write('\r');
-                            mDataOutput.write('\n');
-                            mDataOutput.flush();
-                            String result = null;
-                            int line = 0;
-                            int count = -1;
-                            while ((count = mDataInput.read(mDataBuffer)) != -1) {
-                                line++;
-                                result = new String(mDataBuffer, 0, count);
-                                Log.v("@M_" + TAG, "line: " + line + " sentence: "
-                                        + result);
-                                if (result.contains("PMTK817")) {
-                                    mResponse = result;
-                                    Log.v("@M_" + TAG, "Get response from MNL");
-                                    break;
-                                }
-                                if (line > LINE_OUT_SIZE) {
-                                    mResponse = "TIMEOUT";
-                                    break;
-                                }
-                            }
-                        } catch (IOException e) {
-                            Log.w("@M_" + TAG,
-                                    "sendCommand IOException: "
-                                            + e.getMessage());
-                            mResponse = "ERROR";
-                        }
-                    } else {
-                        Log.d("@M_" + TAG, "out is null");
-                        mResponse = "ERROR";
-                    }
-                    if (null != ClientSocket.this.mCallBack) {
-                        ClientSocket.this.mCallBack.onResponse(mResponse);
-                    }
-                    mCommand = null;
-                    closeClient();
-                }
-            }
-        });
-        mSendThread.start();
-    }
-
-    /**
-     * Start client socket and connect with server.
-     */
-    private void openClient() {
-        Log.v("@M_" + TAG, "enter startClient");
-        if (null != mClientSocket && mClientSocket.isConnected()) {
-            Log.d("@M_" + TAG, "localSocket has started, return");
-            return;
-        }
-        try {
-            mClientSocket = new Socket("127.0.0.1", SERVER_PORT);
-            mClientSocket.setSoTimeout(SOCKET_TIME_OUT_TIME);
-            mDataOutput = new DataOutputStream(mClientSocket.getOutputStream());
-            mDataInput = new DataInputStream(mClientSocket.getInputStream());
-        } catch (UnknownHostException e) {
-            Log.w("@M_" + TAG, e.getMessage());
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, e.getMessage());
-        }
-    }
-
-    /**
-     * Stop client socket and disconnect with server.
-     */
-    private void closeClient() {
-        Log.v("@M_" + TAG, "enter closeClient");
-        try {
-            if (null != mDataInput) {
-                mDataInput.close();
-            }
-            if (null != mDataOutput) {
-                mDataOutput.close();
-            }
-            if (null != mClientSocket) {
-                mClientSocket.close();
-            }
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "closeClient IOException: " + e.getMessage());
-        } finally {
-            mClientSocket = null;
-            mDataInput = null;
-            mDataOutput = null;
-        }
-    }
-
-    /**
-     * Finalise communicate with socket server.
-     */
-    public void endClient() {
-        Log.v("@M_" + TAG, "enter endClient");
-        mSendThread.interrupt();
-        Log.v("@M_" + TAG, "Queue remaining:" + mCommandQueue.size());
-        closeClient();
-        mCallBack = null;
-    }
-
-    /**
-     * Send command to socket server.
-     *
-     * @param command
-     *            Command need to send
-     */
-    public void sendCommand(String command) {
-        Log.v("@M_" + TAG, "enter sendCommand");
-        String sendComm = "$" + command + "*" + calcCS(command);
-        Log.v("@M_" + TAG, "Send command: " + sendComm);
-        if (!mSendThread.isAlive()) {
-            Log.v("@M_" + TAG, "sendThread is not alive");
-            mSendThread.start();
-        }
-        if (command.equals(sendComm) || mCommandQueue.contains(sendComm)) {
-            Log.v("@M_" + TAG, "send command return because of hasn't handle the same");
-            return;
-        }
-        try {
-            mCommandQueue.put(sendComm);
-        } catch (InterruptedException ie) {
-            Log.w("@M_" + TAG, "send command interrupted:" + ie.getMessage());
-        }
-    }
-
-    /**
-     * Calculate check sum for PMTK command.
-     *
-     * @param command
-     *            The command need to send
-     * @return The check sum string
-     */
-    private String calcCS(String command) {
-        if (null == command || "".equals(command)) {
-            return "";
-        }
-        byte[] ba = command.toUpperCase().getBytes();
-        int temp = 0;
-        for (byte b : ba) {
-            temp ^= b;
-        }
-        return String.format("%1$02x", temp & MASK_8_BIT).toUpperCase();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/dcm/ApdcmActivity.java b/EngineerMode/src/com/mediatek/engineermode/dcm/ApdcmActivity.java
deleted file mode 100644
index 3ed8f50..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/dcm/ApdcmActivity.java
+++ /dev/null
@@ -1,366 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.dcm;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.os.Bundle;
-import android.text.TextUtils;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.FeatureSupport;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.IOException;
-
-public class ApdcmActivity extends Activity implements OnClickListener {
-
-    private static final String TAG = "APDCM";
-    private static final int APDCM_NUM = 7;
-    private static final String FS_DBG = "/proc/dcm/dbg";
-    private static final String FS_DUMPREGS = "/proc/dcm/dumpregs";
-    private static final String FS_HELP = "/proc/dcm/help";
-    private static final String CAT = "cat ";
-    private static final String CMD_SET_DCM =
-            "echo 1 0 %1$d %2$s > " + FS_DBG;
-
-    private static final String FS_DBG_W = "/proc/dcm/dcm_proc_dbg";
-    private static final String FS_DUMPREGS_W = "/proc/dcm/dcm_proc_dumpregs";
-    private static final String FS_HELP_W = "/proc/dcm/dcm_proc_help";
-    private static final String CMD_SET_DCM_W =
-            "echo 1 0 %1$d %2$s > " + FS_DBG_W;
-    private EditText mEditArmDcm;
-    private EditText mEditEmiDcm;
-    private EditText mEditInfraDcm;
-    private EditText mEditPeriDcm;
-    private EditText mEditMiscDcm;
-    private EditText mEditMmDcm;
-    private EditText mEditMfgDcm;
-
-    private Button mBtnArmRead;
-    private Button mBtnArmSet;
-    private Button mBtnEmiRead;
-    private Button mBtnEmiSet;
-    private Button mBtnInfraRead;
-    private Button mBtnInfraSet;
-    private Button mBtnPeriRead;
-    private Button mBtnPeriSet;
-    private Button mBtnMiscRead;
-    private Button mBtnMiscSet;
-    private Button mBtnMmRead;
-    private Button mBtnMmSet;
-    private Button mBtnMfgRead;
-    private Button mBtnMfgSet;
-    private Button mBtnDumpRegs;
-    private Button mBtnHelp;
-    private EditText[] mApdcmEdits = new EditText[APDCM_NUM];
-    private String[] mApdcmTags = new String[APDCM_NUM];
-    private String mDcmStr;
-
-    private String mFsDebug;
-    private String mFsDump;
-    private String mFsHelp;
-    private String mCmdSet;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (FeatureSupport.isSupported(FeatureSupport.FK_MTK_WEARABLE_PLATFORM)) {
-            setContentView(R.layout.dcm_apdcm_w);
-            mFsDebug = FS_DBG_W;
-            mFsDump = FS_DUMPREGS_W;
-            mFsHelp = FS_HELP_W;
-            mCmdSet = CMD_SET_DCM_W;
-        } else {
-            setContentView(R.layout.dcm_apdcm);
-            mFsDebug = FS_DBG;
-            mFsDump = FS_DUMPREGS;
-            mFsHelp = FS_HELP;
-            mCmdSet = CMD_SET_DCM;
-        }
-        mEditArmDcm = (EditText) findViewById(R.id.dcm_apdcm_arm_edit);
-        mEditEmiDcm = (EditText) findViewById(R.id.dcm_apdcm_emi_edit);
-        mEditInfraDcm = (EditText) findViewById(R.id.dcm_apdcm_infra_edit);
-        mEditPeriDcm = (EditText) findViewById(R.id.dcm_apdcm_peri_edit);
-        mEditMiscDcm = (EditText) findViewById(R.id.dcm_apdcm_misc_edit);
-        mEditMmDcm = (EditText) findViewById(R.id.dcm_apdcm_mm_edit);
-        mEditMfgDcm = (EditText) findViewById(R.id.dcm_apdcm_mfg_edit);
-        mApdcmEdits[0] = mEditArmDcm;
-        mApdcmEdits[1] = mEditEmiDcm;
-        mApdcmEdits[2] = mEditInfraDcm;
-        mApdcmEdits[3] = mEditPeriDcm;
-        mApdcmEdits[4] = mEditMiscDcm;
-        mApdcmEdits[5] = mEditMmDcm;
-        mApdcmEdits[6] = mEditMfgDcm;
-
-        mBtnArmRead = (Button) findViewById(R.id.dcm_apdcm_arm_read_btn);
-        mBtnArmRead.setOnClickListener(this);
-        mBtnEmiRead = (Button) findViewById(R.id.dcm_apdcm_emi_read_btn);
-        mBtnEmiRead.setOnClickListener(this);
-        mBtnInfraRead = (Button) findViewById(R.id.dcm_apdcm_infra_read_btn);
-        mBtnInfraRead.setOnClickListener(this);
-        mBtnPeriRead = (Button) findViewById(R.id.dcm_apdcm_peri_read_btn);
-        mBtnPeriRead.setOnClickListener(this);
-        mBtnMiscRead = (Button) findViewById(R.id.dcm_apdcm_misc_read_btn);
-        mBtnMiscRead.setOnClickListener(this);
-        mBtnMmRead = (Button) findViewById(R.id.dcm_apdcm_mm_read_btn);
-        mBtnMmRead.setOnClickListener(this);
-        mBtnMfgRead = (Button) findViewById(R.id.dcm_apdcm_mfg_read_btn);
-        mBtnMfgRead.setOnClickListener(this);
-
-        mBtnArmSet = (Button) findViewById(R.id.dcm_apdcm_arm_set_btn);
-        mBtnArmSet.setOnClickListener(this);
-        mBtnEmiSet = (Button) findViewById(R.id.dcm_apdcm_emi_set_btn);
-        mBtnEmiSet.setOnClickListener(this);
-        mBtnInfraSet = (Button) findViewById(R.id.dcm_apdcm_infra_set_btn);
-        mBtnInfraSet.setOnClickListener(this);
-        mBtnPeriSet = (Button) findViewById(R.id.dcm_apdcm_peri_set_btn);
-        mBtnPeriSet.setOnClickListener(this);
-        mBtnMiscSet = (Button) findViewById(R.id.dcm_apdcm_misc_set_btn);
-        mBtnMiscSet.setOnClickListener(this);
-        mBtnMmSet = (Button) findViewById(R.id.dcm_apdcm_mm_set_btn);
-        mBtnMmSet.setOnClickListener(this);
-        mBtnMfgSet = (Button) findViewById(R.id.dcm_apdcm_mfg_set_btn);
-        mBtnMfgSet.setOnClickListener(this);
-
-        mBtnDumpRegs = (Button) findViewById(R.id.dcm_apdcm_dump_regs_btn);
-        mBtnDumpRegs.setOnClickListener(this);
-        mBtnHelp = (Button) findViewById(R.id.dcm_apdcm_help_btn);
-        mBtnHelp.setOnClickListener(this);
-
-        mApdcmTags[0] = getString(R.string.dcm_text_arm);
-        mApdcmTags[1] = getString(R.string.dcm_text_emi);
-        mApdcmTags[2] = getString(R.string.dcm_text_infra);
-        mApdcmTags[3] = getString(R.string.dcm_text_peri);
-        mApdcmTags[4] = getString(R.string.dcm_text_misc);
-        mApdcmTags[5] = getString(R.string.dcm_text_mm);
-        mApdcmTags[6] = getString(R.string.dcm_text_mfg);
-        // init edit hint info
-        mDcmStr = getString(R.string.dcm_label);
-        for (int i = 0; i < APDCM_NUM; i++) {
-            mApdcmEdits[i].setHint(mApdcmTags[i] + " " + mDcmStr);
-        }
-        setUiByData(APDCM_NUM, true);
-    }
-
-    private void setUiByData(int apdcmIdx, boolean showDlg) {
-        String cmd;
-        String output;
-        cmd = CAT + mFsDebug;
-        output = execCommand(cmd);
-        // temp test code
-        //output = "ARM_DCM=0x7410, \nEMI_DCM=0xdc71,\nINFRA_DCM=0xab43, \nPERI_DCM=0xef56,\nMISC_DCM=0x1569,\nMM_DCM=0x4321 , \nMFG_DCM=0x1234 , \n ";
-        if (output == null) {
-            Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        output = output.trim();
-        if (showDlg) {
-            showDialog(mDcmStr, output);
-        }
-        resolveFillData(output, apdcmIdx);
-    }
-
-    private boolean resolveFillData(String outStr, int fillIdx) {
-        String[] entries = outStr.split(" *, *\n *");
-        if (entries.length != APDCM_NUM) {
-            Log.e("@M_" + TAG, "resolveFillData() Resolve outStr fail, Invalid DCM Number");
-            return false;
-        }
-        String[] keyValPair;
-        String val;
-        for (int i = 0; i < APDCM_NUM; i++) {
-            if (fillIdx == APDCM_NUM || i == fillIdx) {
-                keyValPair = entries[i].split(" *= *");
-                val = keyValPair[1];
-                if (val.contains(",")) {
-                    val = val.substring(0, val.indexOf(","));
-                    val = val.trim();
-                }
-                if (val.indexOf("0x") == 0 || val.indexOf("0X") == 0) {
-                    val = val.substring(2);
-                }
-                mApdcmEdits[i].setText(val);
-            }
-        }
-        return true;
-    }
-
-    private void handleClickReadBtn(int apdcmIdx) {
-        String msg;
-        setUiByData(apdcmIdx, false);
-        msg = mApdcmTags[apdcmIdx] + " " +  getString(R.string.dcm_text_read) + " " +
-                getString(R.string.dcm_operate_success);
-        Toast.makeText(this, msg, Toast.LENGTH_LONG).show();
-    }
-
-    private long parseLongStr(String longStr, int radix) {
-        long longVal = -1;
-        try {
-            longVal = Long.parseLong(longStr, radix);
-        } catch (NumberFormatException e) {
-            return -1;
-        }
-        return longVal;
-    }
-
-    private void handleClickSetBtn(int apdcmIdx) {
-        String msg;
-        String dcmStr;
-        if (TextUtils.isEmpty(mApdcmEdits[apdcmIdx].getText())) {
-            msg = getString(R.string.dcm_invalid_dcm) ;
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return;
-        }
-
-        dcmStr = mApdcmEdits[apdcmIdx].getText().toString();
-        long dcmVal = parseLongStr(dcmStr, 16);
-        if (dcmVal < 0 || dcmVal > parseLongStr("ffffffff", 16)) {
-            msg = getString(R.string.dcm_invalid_dcm) + " " + mApdcmTags[apdcmIdx] + " DCM:" + dcmStr;
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return;
-        }
-        String cmd;
-        cmd = String.format(mCmdSet, apdcmIdx, dcmStr);
-        execCommand(cmd);
-        msg = mApdcmTags[apdcmIdx] + " " +  getString(R.string.dcm_text_set) + " " +
-                getString(R.string.dcm_operate_success);
-        Toast.makeText(this, msg, Toast.LENGTH_LONG).show();
-    }
-
-    @Override
-    public void onClick(View view) {
-        String cmd;
-        String output;
-        String title;
-        int idx = view.getId();
-        switch(idx) {
-        case R.id.dcm_apdcm_dump_regs_btn:
-            cmd = CAT + mFsDump;
-            output = execCommand(cmd);
-            title = getString(R.string.dcm_text_dump_regs);
-            showDialog(title, output);
-            break;
-        case R.id.dcm_apdcm_help_btn:
-            cmd = CAT + mFsHelp;
-            output = execCommand(cmd);
-            title = getString(R.string.dcm_text_help);
-            showDialog(title, output);
-            break;
-        // below handle read button
-        case R.id.dcm_apdcm_arm_read_btn:
-            handleClickReadBtn(0);
-            break;
-        case R.id.dcm_apdcm_emi_read_btn:
-            handleClickReadBtn(1);
-            break;
-        case R.id.dcm_apdcm_infra_read_btn:
-            handleClickReadBtn(2);
-            break;
-        case R.id.dcm_apdcm_peri_read_btn:
-            handleClickReadBtn(3);
-            break;
-        case R.id.dcm_apdcm_misc_read_btn:
-            handleClickReadBtn(4);
-            break;
-        case R.id.dcm_apdcm_mm_read_btn:
-            handleClickReadBtn(5);
-            break;
-        case R.id.dcm_apdcm_mfg_read_btn:
-            handleClickReadBtn(6);
-            break;
-        // below handle set button
-        case R.id.dcm_apdcm_arm_set_btn:
-            handleClickSetBtn(0);
-            break;
-        case R.id.dcm_apdcm_emi_set_btn:
-            handleClickSetBtn(1);
-            break;
-        case R.id.dcm_apdcm_infra_set_btn:
-            handleClickSetBtn(2);
-            break;
-        case R.id.dcm_apdcm_peri_set_btn:
-            handleClickSetBtn(3);
-            break;
-        case R.id.dcm_apdcm_misc_set_btn:
-            handleClickSetBtn(4);
-            break;
-        case R.id.dcm_apdcm_mm_set_btn:
-            handleClickSetBtn(5);
-            break;
-        case R.id.dcm_apdcm_mfg_set_btn:
-            handleClickSetBtn(6);
-            break;
-        default:
-            Log.w("@M_" + TAG, "onClick() Unknown view id: " + idx);
-            break;
-        }
-    }
-
-    private String execCommand(String cmd) {
-         int ret = -1;
-         Log.d("@M_" + TAG, "[cmd]:" + cmd);
-         //Toast.makeText(this, cmd, Toast.LENGTH_LONG).show();
-         try {
-             ret = ShellExe.execCommand(cmd);
-         } catch (IOException e) {
-             Log.e("@M_" + TAG, "IOException: " + e.getMessage());
-         }
-         if (ret == 0) {
-             String outStr = ShellExe.getOutput();
-             Log.d("@M_" + TAG, "[output]: " + outStr);
-             return outStr;
-         }
-         return null;
-     }
-
-    private void showDialog(String title, String msg) {
-        AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                false).setTitle(title).setMessage(msg).
-                setPositiveButton(android.R.string.ok, null).create();
-        dialog.show();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/dcm/DcmList.java b/EngineerMode/src/com/mediatek/engineermode/dcm/DcmList.java
deleted file mode 100644
index d48da56..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/dcm/DcmList.java
+++ /dev/null
@@ -1,88 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.dcm;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-import android.widget.AdapterView.OnItemClickListener;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class DcmList extends Activity implements OnItemClickListener {
-
-    private static final String TAG = "DcmList";
-    private ListView mListView;
-    private List<String> mDcmItems;
-    private List<Class<? extends Activity>> mDcmTargets;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.dcm_list);
-        mListView = (ListView) findViewById(R.id.dcm_listview);
-        mListView.setOnItemClickListener(this);
-        mDcmItems = new ArrayList<String>();
-        mDcmTargets = new ArrayList<Class<? extends Activity>>();
-        mDcmItems.add(getString(R.string.dcm_apdcm));
-        mDcmTargets.add(ApdcmActivity.class);
-        mDcmItems.add(getString(R.string.dcm_lpm));
-        mDcmTargets.add(LpmActivity.class);
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mDcmItems);
-        mListView.setAdapter(adapter);
-    }
-
-    public void onItemClick(AdapterView<?> parent, View view, int position,
-            long id) {
-        if (position < 0 || position >= mDcmTargets.size()) {
-            Log.w("@M_" + TAG, "onItemClick() Invalid postion:" + position);
-            return;
-        }
-        Intent intent = new Intent(this, mDcmTargets.get(position));
-        startActivity(intent);
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/dcm/LpmActivity.java b/EngineerMode/src/com/mediatek/engineermode/dcm/LpmActivity.java
deleted file mode 100644
index 6fb169c..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/dcm/LpmActivity.java
+++ /dev/null
@@ -1,317 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.dcm;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.SharedPreferences;
-import android.os.Bundle;
-import android.text.TextUtils;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Spinner;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.FeatureSupport;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.File;
-import java.io.IOException;
-
-public class LpmActivity extends Activity implements OnClickListener {
-
-    private static final String TAG = "LCM";
-    private static final int RESULT_NUM = 5;
-    private static final String LPM_PREF_NAME = "DCM_LPM";
-    private static final String PREF_KEY_REF_CLK = "REF_CLK";
-    private static final String PREF_KEY_SIGNAL = "SIGNAL";
-    private static final String PREF_KEY_STARTED = "STARTED";
-    private static final String PREF_KEY_GOOD_DUR_EDIT = "GOOD_DUR_EDIT";
-    private static final String PREF_KEY_TOTAL_TIME = "TOTAL_TIME";
-    private static final String PREF_KEY_LOW2HIGH = "LOW2HIGH";
-    private static final String PREF_KEY_HIGH_DUR = "HIGH_DUR";
-    private static final String PREF_KEY_LONGEST_HIGH = "LONGEST_HIGH";
-    private static final String PREF_KEY_GOOD_DUR = "GOOD_DUR";
-    private static final String FS_HELP = "/proc/lpm/help";
-    private static final String FS_DBG = "/proc/lpm/dbg";
-    private static final String FS_STA = "/proc/lpm/sta";
-    private static final String CAT = "cat ";
-    private static final String CMD_START =
-            "echo 1 1 %1$d %2$d %3$s > " + FS_DBG;
-    private static final String CMD_STOP =
-            "echo 1 0 0 0 0 > " + FS_DBG;
-
-    private Spinner mSpnClocks;
-    private Spinner mSpnSignals;
-
-    private Button mBtnStart;
-    private Button mBtnStop;
-    private Button mBtnHelp;
-
-    private EditText mEditGoodDurInput;
-    private EditText mEditTotalTime;
-    private EditText mEditLow2high;
-    private EditText mEditHighDur;
-    private EditText mEditLongestHigh;
-    private EditText mEditGoodDur;
-
-    private EditText[] mEditResults;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (FeatureSupport.isSupported(FeatureSupport.FK_MTK_WEARABLE_PLATFORM)) {
-            setContentView(R.layout.dcm_lpm_w);
-        } else {
-            setContentView(R.layout.dcm_lpm);
-        }
-
-        mSpnClocks = (Spinner) findViewById(R.id.dcm_lpm_ref_clk);
-        mSpnSignals = (Spinner) findViewById(R.id.dcm_lpm_signals);
-        mBtnStart = (Button) findViewById(R.id.dcm_lpm_start_btn);
-        mBtnStart.setOnClickListener(this);
-        mBtnStop = (Button) findViewById(R.id.dcm_lpm_stop_btn);
-        mBtnStop.setOnClickListener(this);
-        mBtnHelp = (Button) findViewById(R.id.dcm_lpm_help_btn);
-        mBtnHelp.setOnClickListener(this);
-
-        mEditGoodDurInput = (EditText) findViewById(R.id.dcm_lpm_good_dur_input);
-        mEditTotalTime = (EditText) findViewById(R.id.dcm_lpm_total_time_edit);
-        mEditLow2high = (EditText) findViewById(R.id.dcm_lpm_low2high_edit);
-        mEditHighDur = (EditText) findViewById(R.id.dcm_lpm_high_dur_edit);
-        mEditLongestHigh = (EditText) findViewById(R.id.dcm_lpm_longest_high_edit);
-        mEditGoodDur = (EditText) findViewById(R.id.dcm_lpm_good_dur_edit);
-
-        mEditResults = new EditText[RESULT_NUM];
-        mEditResults[0] = mEditTotalTime;
-        mEditResults[1] = mEditLow2high;
-        mEditResults[2] = mEditHighDur;
-        mEditResults[3] = mEditLongestHigh;
-        mEditResults[4] = mEditGoodDur;
-
-        if (!new File(FS_DBG).exists()) {
-            Toast.makeText(this, "Don't Support This Feature!", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        restoreUIState();
-    }
-
-    private void handleClickStartBtn() {
-        int refClk;
-        int signal;
-        String msg;
-        String goodDur;
-        long goodDurVal;
-        if (TextUtils.isEmpty(mEditGoodDurInput.getText())) {
-            msg = getString(R.string.dcm_lpm_invalid_good_dur);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return;
-        }
-        goodDur = mEditGoodDurInput.getText().toString();
-        goodDurVal = parseLongStr(goodDur, 16);
-        if (goodDurVal < 0 || goodDurVal > 0xffff) {
-            msg = getString(R.string.dcm_lpm_invalid_good_dur);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return;
-        }
-        refClk = mSpnClocks.getSelectedItemPosition();
-        signal = mSpnSignals.getSelectedItemPosition();
-        String cmd;
-        cmd = String.format(CMD_START, refClk, signal, goodDur);
-        execCommand(cmd);
-        checkStatus(true);
-    }
-
-    private void restoreUIState() {
-        SharedPreferences pref = getSharedPreferences(LPM_PREF_NAME, MODE_PRIVATE);
-        mSpnClocks.setSelection(pref.getInt(PREF_KEY_REF_CLK, 0));
-        mSpnSignals.setSelection(pref.getInt(PREF_KEY_SIGNAL, 0));
-        if (pref.getBoolean(PREF_KEY_STARTED, true)) {
-            mBtnStart.setEnabled(true);
-            mBtnStop.setEnabled(false);
-        } else {
-            mBtnStart.setEnabled(false);
-            mBtnStop.setEnabled(true);
-        }
-        mEditGoodDurInput.setText(pref.getString(PREF_KEY_GOOD_DUR_EDIT, ""));
-        mEditTotalTime.setText(pref.getString(PREF_KEY_TOTAL_TIME, ""));
-        mEditLow2high.setText(pref.getString(PREF_KEY_LOW2HIGH, ""));
-        mEditHighDur.setText(pref.getString(PREF_KEY_HIGH_DUR, ""));
-        mEditLongestHigh.setText(pref.getString(PREF_KEY_LONGEST_HIGH, ""));
-        mEditGoodDur.setText(pref.getString(PREF_KEY_GOOD_DUR, ""));
-    }
-
-    private void backupUIState() {
-        SharedPreferences pref = getSharedPreferences(LPM_PREF_NAME, MODE_PRIVATE);
-        SharedPreferences.Editor editor = pref.edit();
-        editor.putInt(PREF_KEY_REF_CLK, mSpnClocks.getSelectedItemPosition());
-        editor.putInt(PREF_KEY_SIGNAL, mSpnSignals.getSelectedItemPosition());
-        if (mBtnStart.isEnabled()) {
-            editor.putBoolean(PREF_KEY_STARTED, true);
-        } else {
-            editor.putBoolean(PREF_KEY_STARTED, false);
-        }
-        editor.putString(PREF_KEY_GOOD_DUR_EDIT, mEditGoodDurInput.getText().toString());
-        editor.putString(PREF_KEY_TOTAL_TIME, mEditTotalTime.getText().toString());
-        editor.putString(PREF_KEY_LOW2HIGH, mEditLow2high.getText().toString());
-        editor.putString(PREF_KEY_HIGH_DUR, mEditHighDur.getText().toString());
-        editor.putString(PREF_KEY_LONGEST_HIGH, mEditLongestHigh.getText().toString());
-        editor.putString(PREF_KEY_GOOD_DUR, mEditGoodDur.getText().toString());
-        editor.commit();
-    }
-
-    private boolean checkStatus(boolean isStart) {
-        String msg;
-        String cmd;
-        String output;
-        cmd = CAT + FS_STA;
-        output = execCommand(cmd);
-        // temp code
-        //output = "status =0 ";
-        output = output.trim();
-        String status;
-        status = output.split(" *= *")[1];
-        if ("0".equals(status)) {
-            if (isStart) {
-                mBtnStart.setEnabled(false);
-                mBtnStop.setEnabled(true);
-                msg = getString(R.string.dcm_lpm_start);
-            } else {
-                mBtnStart.setEnabled(true);
-                mBtnStop.setEnabled(false);
-                msg = getString(R.string.dcm_lpm_stop);
-            }
-            msg = msg + " " + getString(R.string.dcm_operate_success);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return true;
-        } else {
-            msg = getString(R.string.dcm_lpm_operate_error_code) + status;
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return false;
-        }
-    }
-
-    private long parseLongStr(String longStr, int radix) {
-        long longVal = -1;
-        try {
-            longVal = Long.parseLong(longStr, radix);
-        } catch (NumberFormatException e) {
-            return -1;
-        }
-        return longVal;
-    }
-
-    private void handleClickStopBtn() {
-        String cmd;
-        cmd = CMD_STOP;
-        execCommand(cmd);
-        if (checkStatus(false)) {
-            String output;
-            cmd = CAT + FS_DBG;
-            output = execCommand(cmd);
-            // temp code
-            //output = "0x123e , 0x12345678 , 0x66ac , Overflow , 0x12de,";
-            output = output.trim();
-            String[] results = output.split(" *, *");
-            for (int i = 0;  i < RESULT_NUM; i++) {
-                mEditResults[i].setText(results[i]);
-            }
-        }
-    }
-
-    @Override
-    public void onClick(View view) {
-        String cmd;
-        String output;
-
-        int idx = view.getId();
-        switch(idx) {
-        case R.id.dcm_lpm_start_btn:
-            handleClickStartBtn();
-            break;
-        case R.id.dcm_lpm_stop_btn:
-            handleClickStopBtn();
-            break;
-        case R.id.dcm_lpm_help_btn:
-            cmd = CAT + FS_HELP;
-            output = execCommand(cmd);
-            //Toast.makeText(this, R.string.dcm_text_help, Toast.LENGTH_LONG).show();
-            showDialog(getString(R.string.dcm_text_help), output);
-            break;
-        default:
-            Log.w("@M_" + TAG, "onClick() Unknown view id: " + idx);
-            break;
-        }
-    }
-
-    @Override
-    protected void onDestroy() {
-        backupUIState();
-        super.onDestroy();
-    }
-
-    private String execCommand(String cmd) {
-         int ret = -1;
-         Log.d("@M_" + TAG, "[cmd]:" + cmd);
-         //Toast.makeText(this, cmd, Toast.LENGTH_LONG).show();
-         try {
-             ret = ShellExe.execCommand(cmd);
-         } catch (IOException e) {
-             Log.e("@M_" + TAG, "IOException: " + e.getMessage());
-         }
-         if (ret == 0) {
-             String outStr = ShellExe.getOutput();
-             Log.d("@M_" + TAG, "[output]: " + outStr);
-             return outStr;
-         }
-         return null;
-     }
-
-    private void showDialog(String title, String msg) {
-        AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-               false).setTitle(title).setMessage(msg).
-               setPositiveButton(android.R.string.ok, null).create();
-        dialog.show();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/deepidle/DeepIdleSettingActivity.java b/EngineerMode/src/com/mediatek/engineermode/deepidle/DeepIdleSettingActivity.java
deleted file mode 100644
index 64745aa..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/deepidle/DeepIdleSettingActivity.java
+++ /dev/null
@@ -1,386 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.deepidle;
-
-import java.io.IOException;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.os.Bundle;
-import android.text.TextUtils;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.CompoundButton;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.RadioButton;
-import android.widget.Toast;
-import android.widget.CompoundButton.OnCheckedChangeListener;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-public class DeepIdleSettingActivity extends Activity implements OnClickListener,
-        OnCheckedChangeListener {
-
-    private static final String TAG = "DeepIdle";
-    private static final String FS_DPIDLE_MODE = "/proc/spm_fs/dpidle_mode";
-    private static final String FS_DPIDLE_LEVEL = "/proc/spm_fs/dpidle_level";
-    private static final String FS_DPIDLE_TIMERVAL = "/proc/spm_fs/dpidle_timer";
-    private static final String FS_DPIDLE = "/proc/spm_fs/dpidle";
-    private static final String CAT = "cat ";
-    private static final String CMD_CPU_PDN =
-            "echo \"%1$d cpu_pdn\" > " + FS_DPIDLE;
-    private static final String CMD_POWER_LEVEL =
-            "echo \"%1$d pwrlevel\" > " + FS_DPIDLE;
-    private static final String CMD_TIMER_VAL =
-            "echo \"%1$s timer_val_ms\" > " + FS_DPIDLE;
-
-    private RadioButton mRBDisableDpIdl;
-    private RadioButton mRBLegacySleep;
-    private RadioButton mRBDormantMode;
-    private RadioButton mRBPowerLevel0;
-    private RadioButton mRBPowerLevel1;
-    private RadioButton mRBDisableTimer;
-    private RadioButton mRBTimerValSet;
-    private RadioButton[] mRBModes = new RadioButton[3];
-    private RadioButton[] mRBLevels = new RadioButton[2];
-    private RadioButton[] mRBTimerVals = new RadioButton[2];
-
-    private EditText mEditTimerVal;
-    private Button mBtnStartTimer;
-    private Button mBtnGetSetting;
-    private boolean mInitDone;
-    private LinearLayout mLevelControler;
-    private LinearLayout mSetTimerControler;
-    @Override
-     protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.deep_idle_setting);
-
-        mRBDisableDpIdl = (RadioButton) findViewById(R.id.deep_idle_disable);
-        mRBDisableDpIdl.setOnCheckedChangeListener(this);
-        mRBLegacySleep = (RadioButton) findViewById(R.id.deep_idle_legacy_sleep);
-        mRBLegacySleep.setOnCheckedChangeListener(this);
-        mRBDormantMode = (RadioButton) findViewById(R.id.deep_idle_dormant_mode);
-        mRBDormantMode.setOnCheckedChangeListener(this);
-        mRBModes[0] = mRBDisableDpIdl;
-        mRBModes[1] = mRBLegacySleep;
-        mRBModes[2] = mRBDormantMode;
-
-        mRBPowerLevel0 = (RadioButton) findViewById(R.id.deep_idle_power_level0);
-        mRBPowerLevel0.setOnCheckedChangeListener(this);
-        mRBPowerLevel1 = (RadioButton) findViewById(R.id.deep_idle_power_level1);
-        mRBPowerLevel1.setOnCheckedChangeListener(this);
-        mRBLevels[0] = mRBPowerLevel0;
-        mRBLevels[1] = mRBPowerLevel1;
-
-        mRBDisableTimer = (RadioButton) findViewById(R.id.deep_idle_timer_disable);
-        mRBDisableTimer.setOnCheckedChangeListener(this);
-        mRBTimerValSet = (RadioButton) findViewById(R.id.mcdi_timer_val_set);
-        mRBTimerValSet.setOnCheckedChangeListener(this);
-        mRBTimerVals[0] = mRBDisableTimer;
-        mRBTimerVals[1] = mRBTimerValSet;
-
-        mEditTimerVal = (EditText) findViewById(R.id.deep_idle_timer_val);
-        mBtnStartTimer = (Button) findViewById(R.id.deep_idle_start_timer);
-        mBtnStartTimer.setOnClickListener(this);
-        mBtnGetSetting = (Button) findViewById(R.id.deep_idle_get_setting);
-        mBtnGetSetting.setOnClickListener(this);
-        mLevelControler = (LinearLayout) findViewById(R.id.deep_idle_power_level_contrl);
-        mSetTimerControler = (LinearLayout) findViewById(R.id.deep_idle_wake_timer_contrl);
-
-        mInitDone = false;
-        initUIByData();
-        mInitDone = true;
-    }
-
-    private void initUIByData() {
-        String cmd;
-        String output;
-
-        cmd = CAT + FS_DPIDLE_MODE;
-        output = execCommand(cmd);
-        //output = "1 \n";
-        if (output == null) {
-            Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        output = output.trim();
-        int modeIdx = -1;
-        try {
-            modeIdx = Integer.parseInt(output);
-        } catch (NumberFormatException e) {
-            Log.e("@M_" + TAG, "NumberFormatException invalid output:" + output);
-        }
-        try {
-            mRBModes[modeIdx].setChecked(true);
-        } catch (IndexOutOfBoundsException e) {
-            Log.e("@M_" + TAG, "Fail to set Default Mode; IndexOutOfBoundsException: " + e.getMessage());
-        }
-
-        cmd = CAT + FS_DPIDLE_LEVEL;
-        output = execCommand(cmd);
-        //output = "0 ";
-        if (output == null) {
-            Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        output = output.trim();
-        int levelIdx = -1;
-        try {
-            levelIdx = Integer.parseInt(output);
-        } catch (NumberFormatException e) {
-            Log.e("@M_" + TAG, "NumberFormatException invalid output:" + output);
-        }
-        try {
-            mRBLevels[levelIdx].setChecked(true);
-        } catch (IndexOutOfBoundsException e) {
-            Log.e("@M_" + TAG, "Fail to set Default Level; IndexOutOfBoundsException: " + e.getMessage());
-        }
-
-        cmd = CAT + FS_DPIDLE_TIMERVAL;
-        output = execCommand(cmd);
-        //output = " 100 ";
-        if (output == null) {
-            Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        output = output.trim();
-        Log.d("@M_" + TAG, "timer val output: " + output);
-        int timerVal = -1;
-        try {
-            timerVal = Integer.parseInt(output);
-        } catch (NumberFormatException e) {
-            Log.e("@M_" + TAG, "NumberFormatException invalid output:" + output);
-        }
-        if (timerVal == 0) {
-            mRBDisableTimer.setChecked(true);
-        } else if (timerVal > 15 && timerVal < 1000000) {
-            mRBTimerValSet.setChecked(true);
-            mEditTimerVal.setText(output);
-        } else {
-            Log.e("@M_" + TAG, "Invalid Timer Value:" + timerVal);
-        }
-    }
-
-    private void enableTimerValUI(boolean enabled) {
-        mEditTimerVal.setEnabled(enabled);
-        mBtnStartTimer.setEnabled(enabled);
-    }
-
-    private void setCpuPdn(int input) {
-        String cmd;
-        cmd = String.format(CMD_CPU_PDN, input);
-        execCommand(cmd);
-    }
-
-    private void setPowerLevel(int input) {
-        String cmd;
-        cmd = String.format(CMD_POWER_LEVEL, input);
-        execCommand(cmd);
-    }
-
-    private void setTimerVal(String input) {
-        String cmd;
-        cmd = String.format(CMD_TIMER_VAL, input);
-        execCommand(cmd);
-    }
-
-    private String execCommand(String cmd) {
-         int ret = -1;
-         Log.d("@M_" + TAG, "[cmd]:" + cmd);
-         //Toast.makeText(this, cmd, Toast.LENGTH_SHORT).show();
-         try {
-             ret = ShellExe.execCommand(cmd);
-         } catch (IOException e) {
-             Log.e("@M_" + TAG, "IOException: " + e.getMessage());
-         }
-         if (ret == 0) {
-             String outStr = ShellExe.getOutput();
-             Log.d("@M_" + TAG, "[output]: " + outStr);
-             return outStr;
-         }
-         return null;
-     }
-
-    private void showDialog(String title, String msg) {
-        AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-               false).setTitle(title).setMessage(msg).setCancelable(true).
-               setPositiveButton(android.R.string.ok, null).create();
-        dialog.show();
-    }
-
-    private void checkOneRadio(RadioButton[] array, RadioButton target, boolean checked) {
-         for (int i = 0; i < array.length; i++) {
-             if (target == array[i]) {
-                 array[i].setChecked(checked);
-             } else {
-                 array[i].setChecked(!checked);
-             }
-         }
-     }
-
-//  private void enableLevelSetTimerUI(boolean enabled) {
-//      int i;
-//      for (i = 0; i < mRBLevels.length; i++) {
-//          mRBLevels[i].setEnabled(enabled);
-//      }
-//      for (i = 0; i < mRBTimerVals.length; i++) {
-//          mRBTimerVals[i].setEnabled(enabled);
-//      }
-//  }
-
-    private void visibleLevelSetTimerUI(boolean visible) {
-        int visibility;
-        if (visible) {
-            visibility = View.VISIBLE;
-        } else {
-            visibility = View.GONE;
-        }
-        mLevelControler.setVisibility(visibility);
-        mSetTimerControler.setVisibility(visibility);
-        mBtnStartTimer.setVisibility(visibility);
-    }
-
-    private boolean validateInputData() {
-        String msg;
-        if (TextUtils.isEmpty(mEditTimerVal.getText())) {
-            msg = getString(R.string.deep_idle_invalid_timer_val);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return false;
-        }
-        int timerVal = -1;
-        String timerValStr = mEditTimerVal.getText().toString();
-        try {
-            timerVal = Integer.parseInt(timerValStr);
-        } catch (NumberFormatException e) {
-            msg = getString(R.string.deep_idle_invalid_timer_val);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return false;
-        }
-        if (timerVal < 15 || timerVal > 1000000) {
-            msg = getString(R.string.deep_idle_invalid_timer_val);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return false;
-        }
-        return true;
-    }
-
-    @Override
-    public void onClick(View view) {
-        int id = view.getId();
-        String cmd;
-        String output;
-        switch(id) {
-        case R.id.deep_idle_start_timer:
-            if (validateInputData()) {
-                setTimerVal(mEditTimerVal.getText().toString());
-            }
-            break;
-        case R.id.deep_idle_get_setting:
-            cmd = CAT + FS_DPIDLE;
-            output = execCommand(cmd);
-            showDialog(getString(R.string.deep_idle_setting), output);
-            break;
-        default:
-            Log.w("@M_" + TAG, "unknown view id: " + id);
-            break;
-        }
-    }
-
-    @Override
-    public void onCheckedChanged(CompoundButton btnView, boolean isChecked) {
-        int id = btnView.getId();
-        switch(id) {
-        case R.id.deep_idle_disable:
-            if (isChecked) {
-                //enableLevelSetTimerUI(false);
-                visibleLevelSetTimerUI(false);
-                setCpuPdn(0);
-            }
-            break;
-        case R.id.deep_idle_legacy_sleep:
-            if (isChecked) {
-                //enableLevelSetTimerUI(true);
-                visibleLevelSetTimerUI(true);
-                setCpuPdn(1);
-            }
-            break;
-        case R.id.deep_idle_dormant_mode:
-            if (isChecked) {
-                //enableLevelSetTimerUI(true);
-                visibleLevelSetTimerUI(true);
-                setCpuPdn(2);
-            }
-            break;
-        case R.id.deep_idle_power_level0:
-            if (isChecked) {
-                setPowerLevel(0);
-            }
-            break;
-        case R.id.deep_idle_power_level1:
-            if (isChecked) {
-                setPowerLevel(1);
-            }
-            break;
-        case R.id.deep_idle_timer_disable:
-            if (isChecked) {
-                Log.d("@M_" + TAG, "[debug]onCheckedChanged: deepIdle timer disable");
-                enableTimerValUI(false);
-                checkOneRadio(mRBTimerVals, mRBDisableTimer, true);
-                setTimerVal("0");
-            }
-            break;
-        case R.id.mcdi_timer_val_set:
-            if (isChecked) {
-                enableTimerValUI(true);
-                checkOneRadio(mRBTimerVals, mRBTimerValSet, true);
-            }
-            break;
-        default:
-            Log.w("@M_" + TAG, "Unknown CompoundButton id: " + id);
-            break;
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/desense/DesenseActivity.java b/EngineerMode/src/com/mediatek/engineermode/desense/DesenseActivity.java
deleted file mode 100644
index 2537610..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/desense/DesenseActivity.java
+++ /dev/null
@@ -1,81 +0,0 @@
-package com.mediatek.engineermode.desense;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.WindowManager;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.ChipSupport;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class DesenseActivity extends Activity implements OnItemClickListener {
-
-    public static final String TAG = "EM/DesenseActivity";
-    private static final String ITEM_PLLS = "PLLs";
-    private static final String ITEM_FREQHOPPING = "Frequency Hopping Setting";
-    private static final String ITEM_MEMPLL = "MEMPLL Setting";
-    private static final String[] ITEMS = {ITEM_PLLS, ITEM_FREQHOPPING,
-            ITEM_MEMPLL };
-    private List<String> mListData;
-
-    private ListView mListView;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
-        setContentView(R.layout.desense_activity);
-        mListView = (ListView) findViewById(R.id.desense_listview);
-        mListView.setOnItemClickListener(this);
-        mListData = getData();
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mListData);
-        mListView.setAdapter(adapter);
-    }
-
-    private List<String> getData() {
-        List<String> items = new ArrayList<String>();
-        for (int i = 0; i < ITEMS.length; i++) {
-            items.add(ITEMS[i]);
-        }
-
-        if (!MemPllSet.isSupport()) {
-            items.remove(ITEMS[2]);
-        }
-
-
-        if (!DesensePllsActivity.isSupport()) {
-            items.remove(ITEMS[0]);
-        }
-        return items;
-    }
-
-    public void onItemClick(AdapterView<?> parent, View view, int position,
-            long id) {
-        Log.v("@M_" + TAG, mListData.get(position) + " item is clicked!");
-        if (ITEM_PLLS.equals(mListData.get(position))) {
-            startActivity(new Intent(this, DesensePllsActivity.class));
-        } else if (ITEM_FREQHOPPING.equals(mListData.get(position))) {
-            if (ChipSupport.isChipInSet(ChipSupport.CHIP_657X_SERIES_NEW)) {
-                startActivity(new Intent(this, FreqHoppingSetting6572.class));
-            } else {
-                startActivity(new Intent(this, FreqHoppingSet.class));
-            }
-
-        } else if (ITEM_MEMPLL.equals(mListData.get(position))) {
-            startActivity(new Intent(this, MemPllSet.class));
-        } else {
-            Log.v("@M_" + TAG, "other item is clicked!");
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/desense/DesensePllsActivity.java b/EngineerMode/src/com/mediatek/engineermode/desense/DesensePllsActivity.java
deleted file mode 100644
index cb585a2..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/desense/DesensePllsActivity.java
+++ /dev/null
@@ -1,171 +0,0 @@
-package com.mediatek.engineermode.desense;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.WindowManager;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public class DesensePllsActivity extends Activity implements
-        OnItemClickListener {
-
-    private static final String TAG = "EM/DesensePll";
-    private static final String COMMAND_GET_ALL_PLL = "cat /proc/clkmgr/pll_fsel";
-    private static final String REGEX_PLL_GROUP = "\\[[\\s\\S]*?\\]";
-    private static final String HEX_VALUE_DEFAULT = "-1";
-    private static final String PLL_FILE = "/proc/clkmgr/pll_fsel";
-    private String[] mNameArray;
-    private int[] mIdArray;
-    private String[] mValueArray;
-    private List<String> mListData = new ArrayList<String>();
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
-        setContentView(R.layout.desense_plls_activity);
-        if (null == getAllPllInfo()) {
-            Toast.makeText(this, R.string.desense_plls_error, Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        ListView pllMenuListView = (ListView) findViewById(R.id.pll_menu_listview);
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mListData);
-        pllMenuListView.setOnItemClickListener(this);
-        pllMenuListView.setAdapter(adapter);
-    }
-
-    @Override
-    protected void onStart() {
-        super.onStart();
-        if (!updateData()) {
-            Toast.makeText(this, R.string.desense_plls_updatefail,
-                    Toast.LENGTH_SHORT).show();
-        }
-    }
-
-    @Override
-    public void onItemClick(AdapterView<?> parent, View view, int position,
-            long id) {
-        Intent intent = new Intent(this, PllDetailActivity.class);
-        intent.putExtra(PllDetailActivity.PLL_DETAIL_ITEM_NAME,
-                mNameArray[position]);
-        intent.putExtra(PllDetailActivity.PLL_DETAIL_ITEM_ID,
-                mIdArray[position]);
-        intent.putExtra(PllDetailActivity.PLL_DETAIL_ITEM_VALUE,
-                mValueArray[position]);
-        startActivity(intent);
-    }
-
-    private boolean updateData() {
-        boolean result = false;
-        ArrayList<PllStruct> list = getAllPllInfo();
-        if (null != list) {
-            mListData.clear();
-            int size = list.size();
-            Log.v("@M_" + TAG, "PLLGetAllInfo list size = " + size);
-            mNameArray = new String[size];
-            mIdArray = new int[size];
-            mValueArray = new String[size];
-            for (int i = 0; i < size; i++) {
-                PllStruct item = list.get(i);
-                mNameArray[i] = item.mName;
-                mIdArray[i] = item.mId;
-                mValueArray[i] = item.mHexVal;
-                mListData.add(item.mName);
-                Log.v("@M_" + TAG, "PLLGetAllInfo list.get(i) = " + item.toString());
-            }
-            result = true;
-        }
-        return result;
-    }
-
-    private static ArrayList<PllStruct> getAllPllInfo() {
-        ArrayList<PllStruct> listResult = null;
-        try {
-            if (ShellExe.RESULT_SUCCESS == ShellExe
-                    .execCommand(COMMAND_GET_ALL_PLL)) {
-                String info = ShellExe.getOutput();
-                Pattern p = Pattern.compile(REGEX_PLL_GROUP);
-                Matcher m = p.matcher(info);
-                int index = 0;
-                listResult = new ArrayList<PllStruct>();
-                String string = null;
-                PllStruct struct = null;
-                try {
-                    while (m.find()) {
-                        string = m.group();
-                        if (null == string) {
-                            continue;
-                        }
-                        if (index == 0) {
-                            struct = new PllStruct();
-                            struct.mId = Integer.valueOf(string.substring(1,
-                                    string.length() - 1));
-                            index++;
-                        } else if (index == 1) {
-                            struct.mName = string.substring(1,
-                                    string.length() - 1).trim();
-                            index++;
-                        } else {
-                            if (string.contains(HEX_VALUE_DEFAULT)) {
-                                struct.mHexVal = HEX_VALUE_DEFAULT;
-                            } else {
-                                struct.mHexVal = string.substring(3, string
-                                        .length() - 1);
-                            }
-                            index = 0;
-                            listResult.add(struct);
-                        }
-                    }
-                } catch (IllegalStateException e) {
-                    Log.w("@M_" + TAG, "getAllPllInfo IllegalStateException: "
-                            + e.getMessage());
-                } catch (NumberFormatException e) {
-                    Log.w("@M_" + TAG, "getAllPllInfo NumberFormatException: "
-                            + e.getMessage());
-                } catch (IndexOutOfBoundsException e) {
-                    Log.w("@M_" + TAG, "getAllPllInfo IndexOutOfBoundsException: "
-                            + e.getMessage());
-                }
-            }
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "getAllPllInfo IOException: " + e.getMessage());
-        }
-        return listResult;
-    }
-
-    static class PllStruct {
-        public int mId;
-        public String mName;
-        public String mHexVal;
-
-        @Override
-        public String toString() {
-            return String.format("PllStruct: mId: %d, mName: %s, mHexVal: %s",
-                    mId, mName, mHexVal);
-        }
-    }
-
-    static boolean isSupport() {
-        return new File(PLL_FILE).exists();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/desense/FreqHoppingSet.java b/EngineerMode/src/com/mediatek/engineermode/desense/FreqHoppingSet.java
deleted file mode 100644
index 60b1d16..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/desense/FreqHoppingSet.java
+++ /dev/null
@@ -1,418 +0,0 @@
-package com.mediatek.engineermode.desense;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Spinner;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.File;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public class FreqHoppingSet extends Activity {
-
-    private static final String TAG = "EM/FreqHoppingSet";
-    private static final int RADIX_16 = 16;
-    private static final int FREQ_HOPPING_SIZE = 6;
-    private static final int EDITTEXT_SIZE = 5;
-    private static final String FILE_FREQ_HOPPING_DEBUG = "/proc/freqhopping/freqhopping_debug";
-    private static final String FILE_FREQ_DUMPREGS = "/proc/freqhopping/dumpregs";
-    private static final String FILE_FREQ_STATUS = "/proc/freqhopping/status";
-    private static final String PATSTR = "\\=[\\s]*?\\d+\\=";
-    private static final String PLL_NAME_PATTERN = "\\=\\w*PLL\\w*";
-    private static final int DIALOG_ID_SHOWALL = 0;
-    private static final int DIALOG_ID_SHOWPLL = 1;
-    private static final String SUCCESS = " success";
-    private static final String FAIL = " fail";
-    private Spinner mSpPlls;
-    private EditText mEtDds;
-    private EditText mEtDeltaFreq;
-    private EditText mEtDeltaTime;
-    private EditText mEtLimitUpper;
-    private EditText mEtLimitDown;
-    private Button mBtnEnable;
-    private Button mBtnDisable;
-    private Button mBtnReadAll;
-    private EditText[] mEtArray = new EditText[EDITTEXT_SIZE];
-    private int[] mFreqHopping;
-    private int mPllCount;
-
-    private final OnItemSelectedListener mSpinnerSelectListener = new OnItemSelectedListener() {
-
-        public void onItemSelected(AdapterView<?> parent, View view,
-                int position, long id) {
-            selectItem(position);
-            showDialog(DIALOG_ID_SHOWPLL);
-        }
-
-        public void onNothingSelected(AdapterView<?> parent) {
-        }
-
-    };
-
-    private final View.OnClickListener mBtnClickListener = new View.OnClickListener() {
-
-        public void onClick(View v) {
-            switch (v.getId()) {
-            case R.id.desense_freqhopping_btn_enable:
-                if (validateInput(true)) {
-                    enableFreqHopping();
-                }
-                break;
-            case R.id.desense_freqhopping_btn_disable:
-                if (validateInput(false)) {
-                    disableFreqHopping();
-                }
-                break;
-            case R.id.desense_freqhopping_btn_readall:
-                if (validateInput(false)) {
-                    readAllFreqHopping();
-                }
-                break;
-            default:
-                break;
-            }
-        }
-
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (!new File(FILE_FREQ_HOPPING_DEBUG).exists()) {
-            Toast.makeText(this, R.string.desense_freqhopping_notsupport,
-                    Toast.LENGTH_SHORT).show();
-            Log.w("@M_" + TAG, "FreqHoppingSet file not exists");
-            finish();
-            return;
-        }
-        setContentView(R.layout.desense_freqhopping_set);
-        mSpPlls = (Spinner) findViewById(R.id.desense_freqhopping_sp_plls);
-        mSpPlls.setOnItemSelectedListener(mSpinnerSelectListener);
-        if (0 != initPllSpinnerItems(mSpPlls)) {
-            Toast.makeText(this, "init pll spinner fail", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-
-        mFreqHopping = new int[mPllCount];
-        mEtDds = (EditText) findViewById(R.id.desense_freqhopping_et_dds);
-        mEtDeltaFreq = (EditText) findViewById(R.id.desense_freqhopping_et_deltafreq);
-        mEtDeltaTime = (EditText) findViewById(R.id.desense_freqhopping_et_deltatime);
-        mEtLimitUpper = (EditText) findViewById(R.id.desense_freqhopping_et_upperlimit);
-        mEtLimitDown = (EditText) findViewById(R.id.desense_freqhopping_et_downlimit);
-        mEtArray[0] = mEtDds;
-        mEtArray[1] = mEtDeltaFreq;
-        mEtArray[2] = mEtDeltaTime;
-        mEtArray[EDITTEXT_SIZE - 2] = mEtLimitUpper;
-        mEtArray[EDITTEXT_SIZE - 1] = mEtLimitDown;
-        mBtnEnable = (Button) findViewById(R.id.desense_freqhopping_btn_enable);
-        mBtnEnable.setOnClickListener(mBtnClickListener);
-        mBtnDisable = (Button) findViewById(R.id.desense_freqhopping_btn_disable);
-        mBtnDisable.setOnClickListener(mBtnClickListener);
-        mBtnReadAll = (Button) findViewById(R.id.desense_freqhopping_btn_readall);
-        mBtnReadAll.setOnClickListener(mBtnClickListener);
-    }
-
-    private int initPllSpinnerItems(Spinner pllSpn) {
-        String debugMsg = getFreqHopDebugMsg();
-        if (debugMsg != null) {
-            Pattern pattern = Pattern.compile(PLL_NAME_PATTERN, Pattern.CASE_INSENSITIVE);
-            Matcher matcher = pattern.matcher(debugMsg);
-            List<String> pllList = new ArrayList<String>();
-            while (matcher.find()) {
-                String pllName = matcher.group().substring(1);
-                pllList.add(pllName);
-            }
-            mPllCount = pllList.size();
-            if (mPllCount > 0) {
-
-                ArrayAdapter<String> pllAdatper = new ArrayAdapter<String>(this,
-                        android.R.layout.simple_spinner_item, pllList);
-                pllAdatper
-                        .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-                pllSpn.setAdapter(pllAdatper);
-                return 0;
-            } else {
-                Log.d("@M_" + TAG, "init pll spinner fail; mPllCount:" + mPllCount);
-                return -1;
-            }
-
-        } else {
-            Log.d("@M_" + TAG, "init pll spinner fail; debugMsg = null");
-            return -1;
-        }
-    }
-
-    private void updateCurrentStatus() {
-        selectItem(mSpPlls.getSelectedItemPosition());
-    }
-
-    @Override
-    protected Dialog onCreateDialog(final int id) {
-        Dialog dialog = null;
-        if (DIALOG_ID_SHOWALL == id) {
-            AlertDialog.Builder builder = new AlertDialog.Builder(
-                    FreqHoppingSet.this);
-            builder.setTitle(R.string.desense_freqhopping_dialog_title);
-            builder.setCancelable(false);
-            builder.setMessage(getFreqHopMsg());
-            builder.setPositiveButton("OK",
-                    new DialogInterface.OnClickListener() {
-
-                        public void onClick(DialogInterface dialog, int which) {
-                            removeDialog(id);
-                        }
-
-                    });
-            dialog = builder.create();
-        } else if (DIALOG_ID_SHOWPLL == id) {
-            AlertDialog.Builder builder = new AlertDialog.Builder(
-                    FreqHoppingSet.this);
-            builder.setTitle(R.string.desense_freqhopping_dialog_title);
-            builder.setCancelable(false);
-            builder.setMessage(getFreqHopDebugMsg());
-            builder.setPositiveButton("OK",
-                    new DialogInterface.OnClickListener() {
-
-                        public void onClick(DialogInterface dialog, int which) {
-                            removeDialog(id);
-                        }
-
-                    });
-            dialog = builder.create();
-        }
-        return dialog;
-    }
-
-    private void enableFreqHopping() {
-        boolean bSuccess = false;
-        boolean bEmpty = mEtArray[0].getText().toString().trim().isEmpty();
-        StringBuilder strBuilder = new StringBuilder();
-        if (bEmpty) {
-            strBuilder.append("echo 1 ");
-            strBuilder.append(mSpPlls.getSelectedItemPosition());
-            strBuilder.append(" > ");
-            strBuilder.append(FILE_FREQ_STATUS);
-            Log.v("@M_" + TAG, "enable command: " + strBuilder.toString());
-        } else {
-            strBuilder.append("echo 3 0 ");
-            strBuilder.append(mSpPlls.getSelectedItemPosition());
-            for (EditText edt : mEtArray) {
-                strBuilder.append(" ");
-                strBuilder.append(edt.getText().toString().trim());
-            }
-            strBuilder.append(" > ");
-            strBuilder.append(FILE_FREQ_HOPPING_DEBUG);
-            Log.v("@M_" + TAG, "enable command 1: " + strBuilder.toString());
-        }
-        try {
-            if (ShellExe.RESULT_SUCCESS == ShellExe.execCommand(strBuilder
-                    .toString())) {
-                if (bEmpty) {
-                    bSuccess = true;
-                    updateCurrentStatus();
-                } else {
-                    strBuilder.delete(0, strBuilder.length());
-                    strBuilder.append("echo 1 1 ");
-                    strBuilder.append(mSpPlls.getSelectedItemPosition());
-                    strBuilder.append(" 1 0 0 0 0 > ");
-                    strBuilder.append(FILE_FREQ_HOPPING_DEBUG);
-                    Log.v("@M_" + TAG, "enable command 2: " + strBuilder.toString());
-                    if (ShellExe.RESULT_SUCCESS == ShellExe
-                            .execCommand(strBuilder.toString())) {
-                        bSuccess = true;
-                        updateCurrentStatus();
-                    }
-                }
-            }
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "enable freqhopping IOException: " + e.getMessage());
-        }
-        Toast.makeText(
-                this,
-                getString(R.string.desense_freqhopping_set)
-                        + (bSuccess ? SUCCESS : FAIL), Toast.LENGTH_SHORT)
-                .show();
-    }
-
-    private void disableFreqHopping() {
-        boolean bSuccess = false;
-        StringBuilder strBuilder = new StringBuilder();
-        strBuilder.append("echo 2 3 ");
-        strBuilder.append(mSpPlls.getSelectedItemPosition());
-        strBuilder.append(" 0 0 0 0 0 > ");
-        strBuilder.append(FILE_FREQ_HOPPING_DEBUG);
-        Log.v("@M_" + TAG, "disable command: " + strBuilder.toString());
-        try {
-            if (ShellExe.RESULT_SUCCESS == ShellExe.execCommand(strBuilder
-                    .toString())) {
-                bSuccess = true;
-                updateCurrentStatus();
-            }
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "disable freqhopping IOException: " + e.getMessage());
-        }
-        Toast.makeText(
-                this,
-                getString(R.string.desense_freqhopping_set)
-                        + (bSuccess ? SUCCESS : FAIL), Toast.LENGTH_SHORT)
-                .show();
-    }
-
-    private void readAllFreqHopping() {
-        showDialog(DIALOG_ID_SHOWALL);
-    }
-
-    private boolean validateInput(boolean bEtInput) {
-        boolean result = true;
-        if (bEtInput) {
-            try {
-                for (int index = 0; index < EDITTEXT_SIZE; index++) {
-                    String input = mEtArray[index].getText().toString().trim();
-                    if (input.isEmpty()
-                            || Integer.parseInt(input, RADIX_16) < 0) {
-                        result = false;
-                        break;
-                    }
-                }
-                if (!result) {
-                    result = true;
-                    for (int index = 0; index < EDITTEXT_SIZE; index++) {
-                        String input = mEtArray[index].getText().toString()
-                                .trim();
-                        if (!input.isEmpty()) {
-                            result = false;
-                            break;
-                        }
-                    }
-                }
-            } catch (NumberFormatException e) {
-                Log.w("@M_" + TAG, "validate input NumberFormatException: "
-                        + e.getMessage());
-                result = false;
-            }
-        }
-        if (result) {
-            int select = mSpPlls.getSelectedItemPosition();
-            if (select < 0 || select >= mPllCount) {
-                result = false;
-            }
-        }
-        if (!result) {
-            Toast.makeText(this, R.string.desense_freqhopping_inputerror,
-                    Toast.LENGTH_SHORT).show();
-        }
-        return result;
-    }
-
-    private void selectItem(int position) {
-        if (updateHoppingStatus()) {
-            updateBtnStatus(position);
-        } else {
-            disableAllBtn();
-            Toast.makeText(this, R.string.desense_freqhopping_geterror,
-                    Toast.LENGTH_SHORT).show();
-        }
-    }
-
-    private boolean updateHoppingStatus() {
-        boolean result = false;
-        String debugMsg = getFreqHopDebugMsg();
-        if (null != debugMsg) {
-            Pattern pattern = Pattern.compile(PATSTR);
-            Matcher m = pattern.matcher(debugMsg);
-            int index = 0;
-            try {
-                while (m.find() && index < mPllCount) {
-                    String msg = m.group();
-                    if (null != msg) {
-                        int value = Integer.parseInt(msg.substring(1,
-                                msg.length() - 1).trim());
-                        Log.v("@M_" + TAG, "index: " + index + " value: " + value);
-                        mFreqHopping[index] = value;
-                        index++;
-                    }
-                }
-                result = index == mPllCount;
-            } catch (IllegalStateException e) {
-                Log.w("@M_" + TAG, "updateHoppingStatus IllegalStateException: "
-                        + e.getMessage());
-            } catch (IndexOutOfBoundsException e) {
-                Log.w("@M_" + TAG, "updateHoppingStatus IndexOutOfBoundsException: "
-                        + e.getMessage());
-            } catch (NumberFormatException e) {
-                Log.w("@M_" + TAG, "updateHoppingStatus NumberFormatException: "
-                        + e.getMessage());
-            }
-        }
-        return result;
-    }
-
-    private String getFreqHopDebugMsg() {
-        String result = null;
-        try {
-            int ret = ShellExe.execCommand("cat " + FILE_FREQ_HOPPING_DEBUG);
-            if (ShellExe.RESULT_SUCCESS == ret) {
-                result = ShellExe.getOutput();
-            }
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "getFreqHopDebugMsg IOException: " + e.getMessage());
-        }
-        return result;
-    }
-
-    private String getFreqHopMsg() {
-        String result = null;
-        try {
-            int ret = ShellExe.execCommand("cat " + FILE_FREQ_DUMPREGS);
-            if (ShellExe.RESULT_SUCCESS == ret) {
-                result = ShellExe.getOutput();
-            }
-            ret = ShellExe.execCommand("cat " + FILE_FREQ_STATUS);
-            if (ShellExe.RESULT_SUCCESS == ret) {
-                result += ShellExe.getOutput();
-            }
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "getFreqHopMsg IOException: " + e.getMessage());
-        }
-        return result;
-    }
-
-    private void updateBtnStatus(int position) {
-        if (position < 0 || position >= mPllCount
-                || mFreqHopping[position] < 0) {
-            disableAllBtn();
-        } else {
-            updateBtns(0 == mFreqHopping[position]);
-        }
-    }
-
-    private void updateBtns(boolean bEnable) {
-        mBtnEnable.setEnabled(bEnable);
-        mBtnDisable.setEnabled(!bEnable);
-        mBtnReadAll.setEnabled(true);
-    }
-
-    private void disableAllBtn() {
-        mBtnEnable.setEnabled(false);
-        mBtnDisable.setEnabled(false);
-        mBtnReadAll.setEnabled(false);
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/desense/FreqHoppingSetting6572.java b/EngineerMode/src/com/mediatek/engineermode/desense/FreqHoppingSetting6572.java
deleted file mode 100644
index 8cf770c..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/desense/FreqHoppingSetting6572.java
+++ /dev/null
@@ -1,424 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.desense;
-
-import java.io.IOException;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.os.Bundle;
-import android.text.TextUtils;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.AdapterView;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Spinner;
-import android.widget.Toast;
-import android.widget.AdapterView.OnItemSelectedListener;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-public class FreqHoppingSetting6572 extends Activity implements OnClickListener,
-        OnItemSelectedListener {
-
-    private static final String TAG = "FreqHoppingSet";
-    private static final String FS_DBG = "/proc/fhctl/dbg";
-    private static final String FS_DUMPREG = "/proc/fhctl/dumpregs";
-    private static final String FS_HELP = "/proc/fhctl/help";
-    private static final String CAT = "cat ";
-    private static final int IDX_SSC_EN = 0;
-    private static final int IDX_HOP_EN = 1;
-    private static final int IDX_DDS = 2;
-    private static final int IDX_DDS_MON = 3;
-    private static final int IDX_DF = 4;
-    private static final int IDX_DT = 5;
-    private static final int IDX_UP = 6;
-    private static final int IDX_DN = 7;
-    private static final int PLL_VAL_NUM = 8;
-    private static final String CMD_SET_HOP =
-            "echo 1 1 %1$s %2$s 0 0 0 0 > " + FS_DBG;
-    private static final String CMD_TRIGGER_HOP =
-            "echo 2 1 %1$d %2$s %3$s 0 0 0 > " + FS_DBG;
-    private static final String CMD_DISABLE_HOP =
-            "echo 2 0 %1$d %2$s 0 0 0 0 > " + FS_DBG;
-    private static final String CMD_ENABLE_SSC =
-            "echo 3 1 %1$d %2$s %3$s %4$s %5$s %6$s > " + FS_DBG;
-    private static final String CMD_DISABLE_SSC =
-            "echo 3 0 %1$d %2$s 0 0 0 0 > " + FS_DBG;
-
-    private EditText mEditHopDeltaFreq;
-    private EditText mEditHopDeltaTime;
-    private EditText mEditDds;
-    private EditText mEditSscDeltaFreq;
-    private EditText mEditSscDeltaTime;
-    private EditText mEditSscUpLmt;
-    private EditText mEditSscDnLmt;
-    private EditText mEditHopDds;
-
-    private Button mBtnHopSet;
-    private Button mBtnEnableSsc;
-    private Button mBtnDisableSsc;
-    private Button mBtnTriggerHop;
-    private Button mBtnDisableHop;
-    private Button mBtnDumpAll;
-    private Button mBtnHelp;
-
-    private Spinner mSpnPll;
-    private String[] mPllsTag;
-    private String[] mPllValEntrys = new String[PLL_VAL_NUM];
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.desense_freqhopping_set_6572);
-
-        mEditHopDeltaFreq = (EditText) findViewById(R.id.desense_freqhopping_hop_deltafreq_edit);
-        mEditHopDeltaTime = (EditText) findViewById(R.id.desense_freqhopping_hop_deltatime_edit);
-        mEditDds = (EditText) findViewById(R.id.desense_freqhopping_ssc_dds_edit);
-        mEditSscDeltaFreq = (EditText) findViewById(R.id.desense_freqhopping_ssc_deltafreq_edit);
-        mEditSscDeltaTime = (EditText) findViewById(R.id.desense_freqhopping_ssc_deltatime_edit);
-        mEditSscUpLmt = (EditText) findViewById(R.id.desense_freqhopping_ssc_upperlimit_edit);
-        mEditSscDnLmt = (EditText) findViewById(R.id.desense_freqhopping_ssc_downlimit_edit);
-        mEditHopDds = (EditText) findViewById(R.id.desense_freqhopping_hop_dds_edit);
-
-        mBtnHopSet = (Button) findViewById(R.id.desense_freqhopping_hop_set_btn);
-        mBtnHopSet.setOnClickListener(this);
-        mBtnEnableSsc = (Button) findViewById(R.id.desense_freqhopping_ssc_enable_btn);
-        mBtnEnableSsc.setOnClickListener(this);
-        mBtnDisableSsc = (Button) findViewById(R.id.desense_freqhopping_ssc_disable_btn);
-        mBtnDisableSsc.setOnClickListener(this);
-        mBtnTriggerHop = (Button) findViewById(R.id.desense_freqhopping_trigger_hop_btn);
-        mBtnTriggerHop.setOnClickListener(this);
-        mBtnDisableHop = (Button) findViewById(R.id.desense_freqhopping_disable_hop_btn);
-        mBtnDisableHop.setOnClickListener(this);
-        mBtnDumpAll = (Button) findViewById(R.id.desense_freqhopping_dump_all_btn);
-        mBtnDumpAll.setOnClickListener(this);
-        mBtnHelp = (Button) findViewById(R.id.desense_freqhopping_help_btn);
-        mBtnHelp.setOnClickListener(this);
-
-        mSpnPll = (Spinner) findViewById(R.id.desense_freqhopping_plls);
-        mSpnPll.setOnItemSelectedListener(this);
-        mPllsTag = getResources().getStringArray(R.array.desense_freqhopping_plls_6572);
-
-    }
-
-    private void handleClickHopSet(Button btn) {
-        String hopDeltaFreq;
-        String hopDeltaTime;
-        String cmd;
-        if (TextUtils.isEmpty(mEditHopDeltaFreq.getText()) ||
-                TextUtils.isEmpty(mEditHopDeltaTime.getText())) {
-            Toast.makeText(this, getString(R.string.desense_freqhopping_invalid_input),
-                    Toast.LENGTH_SHORT).show();
-            return;
-        }
-        hopDeltaFreq = mEditHopDeltaFreq.getText().toString();
-        hopDeltaTime = mEditHopDeltaTime.getText().toString();
-        Long freq = parseHexStr(hopDeltaFreq);
-        Long time = parseHexStr(hopDeltaTime);
-        if (freq >= 0 && freq <= 0x1fffff && time >= 0 && time <= 0xff) {
-            cmd = String.format(CMD_SET_HOP, hopDeltaFreq, hopDeltaTime);
-            execCommand(cmd);
-            String msg = btn.getText().toString() + " " + getString(R.string.desense_freqhopping_operate_success);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-        } else {
-            Toast.makeText(this, getString(R.string.desense_freqhopping_invalid_input),
-                    Toast.LENGTH_SHORT).show();
-        }
-    }
-
-    private void handleClickEnableSsc(Button btn) {
-        if (TextUtils.isEmpty(mEditSscDeltaFreq.getText()) ||
-                TextUtils.isEmpty(mEditSscDeltaTime.getText()) ||
-                TextUtils.isEmpty(mEditSscUpLmt.getText()) ||
-                TextUtils.isEmpty(mEditSscDnLmt.getText())) {
-            Toast.makeText(this, getString(R.string.desense_freqhopping_invalid_input),
-                    Toast.LENGTH_SHORT).show();
-            return;
-        }
-        String sscDF;
-        String sscDT;
-        String sscUpLmt;
-        String sscDnLmt;
-        long sscDFVal;
-        long sscDTVal;
-        int sscUpLmtVal;
-        int sscDnLmtVal;
-        sscDF = mEditSscDeltaFreq.getText().toString();
-        sscDT = mEditSscDeltaTime.getText().toString();
-        sscUpLmt = mEditSscUpLmt.getText().toString();
-        sscDnLmt = mEditSscDnLmt.getText().toString();
-        sscDFVal = parseHexStr(sscDF);
-        sscDTVal = parseHexStr(sscDT);
-        sscUpLmtVal = parseDecStr(sscUpLmt);
-        sscDnLmtVal = parseDecStr(sscDnLmt);
-        if (sscDFVal < 0 || sscDFVal > 0xf ||
-                sscDTVal < 0 || sscDTVal > 0xf ||
-                sscUpLmtVal < 0 || sscUpLmtVal > 99 ||
-                sscDnLmtVal < 0 || sscDnLmtVal > 99) {
-            Toast.makeText(this, getString(R.string.desense_freqhopping_invalid_input),
-                    Toast.LENGTH_SHORT).show();
-            return;
-        }
-        int pllIdx = mSpnPll.getSelectedItemPosition();
-        String cmd;
-        cmd = String.format(CMD_ENABLE_SSC, pllIdx, mPllValEntrys[IDX_DDS],
-                sscDF, sscDT, sscUpLmt, sscDnLmt);
-        execCommand(cmd);
-        String msg = btn.getText().toString() + " " + getString(R.string.desense_freqhopping_operate_success);
-        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-        mBtnEnableSsc.setEnabled(false);
-        mBtnDisableSsc.setEnabled(true);
-    }
-
-    private void handleClickDisableSsc(Button btn) {
-        int pllIdx = mSpnPll.getSelectedItemPosition();
-        String cmd;
-        cmd = String.format(CMD_DISABLE_SSC, pllIdx, mPllValEntrys[IDX_DDS]);
-        execCommand(cmd);
-        String msg = btn.getText().toString() + " " + getString(R.string.desense_freqhopping_operate_success);
-        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-        mBtnEnableSsc.setEnabled(true);
-        mBtnDisableSsc.setEnabled(false);
-    }
-
-    private void handleClickTriggerHop(Button btn) {
-        String hopDds;
-        if (TextUtils.isEmpty(mEditHopDds.getText())) {
-            Toast.makeText(this, getString(R.string.desense_freqhopping_invalid_input),
-                    Toast.LENGTH_SHORT).show();
-            return;
-        }
-        hopDds = mEditHopDds.getText().toString();
-        long hopDdsVal = parseHexStr(hopDds);
-        if (hopDdsVal < 0 || hopDdsVal > 0x1fffff) {
-            Toast.makeText(this, getString(R.string.desense_freqhopping_invalid_input),
-                    Toast.LENGTH_SHORT).show();
-            return;
-        }
-        int pllIdx = mSpnPll.getSelectedItemPosition();
-        String cmd;
-        cmd = String.format(CMD_TRIGGER_HOP, pllIdx, mPllValEntrys[IDX_DDS], hopDds);
-        execCommand(cmd);
-        String msg = btn.getText().toString() + " " + getString(R.string.desense_freqhopping_operate_success);
-        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-    }
-
-    private void handleClickDisableHop(Button btn) {
-        int pllIdx = mSpnPll.getSelectedItemPosition();
-        String cmd;
-        cmd = String.format(CMD_DISABLE_HOP, pllIdx, mPllValEntrys[IDX_DDS]);
-        execCommand(cmd);
-        String msg = btn.getText().toString() + " " + getString(R.string.desense_freqhopping_operate_success);
-        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-    }
-
-    @Override
-    public void onClick(View view) {
-        String cmd;
-        String output;
-        switch(view.getId()) {
-        case R.id.desense_freqhopping_hop_set_btn:
-            handleClickHopSet((Button) view);
-            break;
-        case R.id.desense_freqhopping_ssc_enable_btn:
-            handleClickEnableSsc((Button) view);
-            break;
-        case R.id.desense_freqhopping_ssc_disable_btn:
-            handleClickDisableSsc((Button) view);
-            break;
-        case R.id.desense_freqhopping_trigger_hop_btn:
-            handleClickTriggerHop((Button) view);
-            break;
-        case R.id.desense_freqhopping_disable_hop_btn:
-            handleClickDisableHop((Button) view);
-            break;
-        case R.id.desense_freqhopping_dump_all_btn:
-            cmd = CAT + FS_DUMPREG;
-            output = execCommand(cmd);
-            showDialog(getString(R.string.desense_freqhopping_dump_all), output);
-            break;
-        case R.id.desense_freqhopping_help_btn:
-            cmd = CAT + FS_HELP;
-            output = execCommand(cmd);
-            showDialog("Help", output);
-            break;
-        default:
-            Log.w("@M_" + TAG, "onClick() unknown view id:" + view.getId());
-            break;
-        }
-    }
-
-    private void handleSelectPll(int index) {
-        // clear Edit
-        mEditHopDds.setText("");
-
-        String cmd;
-        String output;
-        cmd = CAT + FS_DBG;
-        output = execCommand(cmd);
-        //output = "ARMPLL : ssc_en =0, hop_en=0, dds=0x0BA000, dds_mon=0x000000, df=0x0, dt=0x0, up= 0, dn= 0 \nMAINPLL : ssc_en =0, hop_en=0, dds=0x456700, dds_mon=0x000000, df=0x0, dt=0x0, up= 0, dn= 0";
-        if (output == null) {
-            Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        showDialog(mPllsTag[index], output);
-        output = output.trim();
-        resolvePllDataById(output, index);
-        if ("0".equals(mPllValEntrys[IDX_SSC_EN])) {
-            mBtnEnableSsc.setEnabled(true);
-            mBtnDisableSsc.setEnabled(false);
-        } else {
-            mBtnEnableSsc.setEnabled(false);
-            mBtnDisableSsc.setEnabled(true);
-        }
-        mEditDds.setText(mPllValEntrys[IDX_DDS]);
-        mEditSscDeltaFreq.setText(mPllValEntrys[IDX_DF]);
-        mEditSscDeltaTime.setText(mPllValEntrys[IDX_DT]);
-        mEditSscUpLmt.setText(mPllValEntrys[IDX_UP]);
-        mEditSscDnLmt.setText(mPllValEntrys[IDX_DN]);
-    }
-
-    private long parseHexStr(String hexStr) {
-        long hexVal = -1;
-        try {
-            hexVal = Long.parseLong(hexStr, 16);
-        } catch (NumberFormatException e) {
-            return -1;
-        }
-        return hexVal;
-    }
-
-    private int parseDecStr(String decStr) {
-        int decVal = -1;
-        try {
-            decVal = Integer.parseInt(decStr);
-        } catch (NumberFormatException e) {
-            return -1;
-        }
-        return decVal;
-    }
-
-    private void resolvePllDataById(String outStr, int index) {
-        String output;
-        output = outStr;
-        String[] pllInfos = output.split(" *\n *");
-        if (pllInfos.length != 2) {
-            Log.e("@M_" + TAG, "resolve PLL Data fail");
-            return;
-        }
-        pllInfos[0] = pllInfos[0].trim();
-        pllInfos[0] = pllInfos[0].substring(pllInfos[0].indexOf("ssc_en"));
-        pllInfos[1] = pllInfos[1].trim();
-        pllInfos[1] = pllInfos[1].substring(pllInfos[1].indexOf("ssc_en"));
-        switch(index) {
-        case 0:
-            resolvePllData(pllInfos[0]);
-            break;
-        case 1:
-            resolvePllData(pllInfos[1]);
-            break;
-        default:
-            Log.w("@M_" + TAG, "resolvePllDataById() Unknown index: " + index);
-            break;
-        }
-    }
-
-    /**
-     * infoStr format:
-     * "ssc_en =??, hop_en=??, dds=0x??, dds_mon=0x??, df=0x??, dt=0x??, up=??, dn=??"
-     */
-    private boolean resolvePllData(String infoStr) {
-        String[] pairs;
-        pairs = infoStr.split(" *, *");
-        if (pairs.length != PLL_VAL_NUM) {
-            Log.e("@M_" + TAG, "resolvePllData() resolve fail, unknown format");
-            return false;
-        }
-        String[] entry;
-        for (int i = 0; i < PLL_VAL_NUM; i++) {
-            entry = pairs[i].split(" *= *");
-            mPllValEntrys[i] = entry[1];
-            if (mPllValEntrys[i].indexOf("0x") == 0 || mPllValEntrys[i].indexOf("0X") == 0) {
-                mPllValEntrys[i] = mPllValEntrys[i].substring(2);
-            }
-        }
-
-        return true;
-    }
-
-    private String execCommand(String cmd) {
-         int ret = -1;
-         Log.d("@M_" + TAG, "[cmd]:" + cmd);
-         //Toast.makeText(this, cmd, Toast.LENGTH_LONG).show();
-         try {
-             ret = ShellExe.execCommand(cmd);
-         } catch (IOException e) {
-             Log.e("@M_" + TAG, "IOException: " + e.getMessage());
-         }
-         if (ret == 0) {
-             String outStr = ShellExe.getOutput();
-             Log.d("@M_" + TAG, "[output]: " + outStr);
-             return outStr;
-         }
-         return null;
-     }
-
-    private void showDialog(String title, String msg) {
-        AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                false).setTitle(title).setMessage(msg).
-                setPositiveButton(android.R.string.ok, null).create();
-        dialog.show();
-    }
-
-    @Override
-    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
-
-        handleSelectPll(position);
-    }
-
-    @Override
-    public void onNothingSelected(AdapterView<?> parent) {
-        Log.d("@M_" + TAG, "onNothingSelected() + " + parent.toString());
-
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/desense/MemPllSet.java b/EngineerMode/src/com/mediatek/engineermode/desense/MemPllSet.java
deleted file mode 100644
index 9789653..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/desense/MemPllSet.java
+++ /dev/null
@@ -1,175 +0,0 @@
-package com.mediatek.engineermode.desense;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.ChipSupport;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.File;
-import java.io.IOException;
-import java.util.Scanner;
-
-public class MemPllSet extends Activity {
-
-    private static final String TAG = "EM/MemPllSet";
-    private static final String FILE_DRAMC = "/proc/freqhopping/dramc";
-    private static final String CURRENT_PRE = "Current DRAMC is ";
-    private static final String SUCCESS = " success";
-    private static final String FAIL = " fail";
-    private static final String VALUE_200 = "200";
-    private static final String VALUE_266 = "266";
-    private static final String VALUE_333 = "333";
-    private static final int VALUE = 266;
-    private TextView mTvCurrent;
-    private Button mBtn200to266;
-    private Button mBtn266to200;
-    private int mValue0 = 0;
-    private int mValue1 = 0;
-    private String mText0;
-    private String mText1;
-
-    private final View.OnClickListener mClickListener = new View.OnClickListener() {
-
-        public void onClick(View v) {
-            if (v.equals(mBtn200to266)) {
-                doConvert(false);
-            } else if (v.equals(mBtn266to200)) {
-                doConvert(true);
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (!new File(FILE_DRAMC).exists() || !new File(FILE_DRAMC).exists()) {
-            Toast.makeText(this, R.string.desense_mempll_notsupport,
-                    Toast.LENGTH_SHORT).show();
-            Log.w("@M_" + TAG, "MemPllSet files not exist");
-            finish();
-            return;
-        }
-        setContentView(R.layout.desense_mempll_set);
-        mTvCurrent = (TextView) findViewById(R.id.desense_mempll_tv_current);
-        mBtn200to266 = (Button) findViewById(R.id.desense_mempll_btn_convert266);
-        mBtn200to266.setOnClickListener(mClickListener);
-        mBtn266to200 = (Button) findViewById(R.id.desense_mempll_btn_convert200);
-        mBtn266to200.setOnClickListener(mClickListener);
-        if (ChipSupport.MTK_6592_SUPPORT == ChipSupport.getChip()) {
-            mValue0 = 266;
-            mValue1 = 333;
-            mText0 = VALUE_266;
-            mText1 = VALUE_333;
-            mBtn200to266.setText(getString(R.string.desense_mempll_266to333));
-            mBtn266to200.setText(getString(R.string.desense_mempll_333to266));
-        } else {
-            mValue0 = 200;
-            mValue1 = 266;
-            mText0 = VALUE_200;
-            mText1 = VALUE_266;
-        }
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        int current = getCurrentDramc();
-        Log.v("@M_" + TAG, "Current: " + current);
-        if (0 == current) {
-            Toast.makeText(this, R.string.desense_mempll_geterror,
-                    Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        mTvCurrent.setText(CURRENT_PRE
-                + (current < mValue1 ? mText0 : mText1));
-        updateBtnStatus(mTvCurrent.getText().toString().contains(mText0));
-    }
-
-    private void doConvert(boolean bValue200) {
-        boolean result = setCurrentDramc(bValue200 ? mText0 : mText1);
-        if (result) {
-            mTvCurrent.setText(CURRENT_PRE
-                    + (bValue200 ? mText0 : mText1));
-            updateBtnStatus(bValue200);
-        }
-        Toast.makeText(
-                this,
-                getString(R.string.desense_mempll_set)
-                        + (result ? SUCCESS : FAIL), Toast.LENGTH_SHORT).show();
-    }
-
-    private void updateBtnStatus(boolean bValue200) {
-        mBtn200to266.setEnabled(bValue200);
-        mBtn266to200.setEnabled(!bValue200);
-    }
-
-    private int getCurrentDramc() {
-        StringBuilder strBuilder = new StringBuilder();
-        int value = 0;
-        strBuilder.append("cat ");
-        strBuilder.append(FILE_DRAMC);
-        Log.v("@M_" + TAG, "get current dramc cmd: " + strBuilder.toString());
-        try {
-            if (ShellExe.RESULT_SUCCESS == ShellExe.execCommand(strBuilder
-                    .toString())) {
-                String result = ShellExe.getOutput();
-                Scanner scan = new Scanner(result);
-                value = Integer.valueOf(scan.findInLine("\\d+"));
-                scan.close();
-            }
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "get current dramc IOException: " + e.getMessage());
-        }
-        return value;
-    }
-
-    private boolean setCurrentDramc(String value) {
-        StringBuilder strBuilder = new StringBuilder();
-        boolean result = false;
-        strBuilder.append("echo ");
-        strBuilder.append(value);
-        strBuilder.append(" > ");
-        strBuilder.append(FILE_DRAMC);
-        Log.v("@M_" + TAG, "set current dramc cmd: " + strBuilder.toString());
-        try {
-            if (ShellExe.RESULT_SUCCESS == ShellExe.execCommand(strBuilder
-                    .toString())) {
-                result = true;
-            }
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "set current dramc IOException: " + e.getMessage());
-        }
-        return result;
-    }
-
-    static boolean isSupport() {
-        final int chip = ChipSupport.getChip();
-        boolean support = true;
-
-        if (chip == ChipSupport.MTK_6595_SUPPORT || chip == ChipSupport.MTK_6795_SUPPORT) {
-            support = false;
-        }
-
-        if (chip == ChipSupport.MTK_6752_SUPPORT) {
-            support = false;
-        }
-
-        if (ChipSupport.isChipInSet(ChipSupport.CHIP_657X_SERIES_NEW)) {
-            support = false;
-        }
-
-        if (!new File(FILE_DRAMC).exists()) {
-            support = false;
-        }
-
-        return support;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/desense/PllDetailActivity.java b/EngineerMode/src/com/mediatek/engineermode/desense/PllDetailActivity.java
deleted file mode 100644
index 3bae928..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/desense/PllDetailActivity.java
+++ /dev/null
@@ -1,96 +0,0 @@
-package com.mediatek.engineermode.desense;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.IOException;
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-public class PllDetailActivity extends Activity {
-
-    private static final String TAG = "EM/DesensePllDetail";
-    public static final String PLL_DETAIL_ITEM_NAME = "name";
-    public static final String PLL_DETAIL_ITEM_ID = "id";
-    public static final String PLL_DETAIL_ITEM_VALUE = "value";
-    private static final String PATTERN = "^[0-9a-fA-F]{1,16}$";
-    private Button mBtnSet;
-    private TextView mTvTitle;
-    private EditText mEtValue;
-    private String mName;
-    private int mId;
-    private String mValue;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.desense_pll_detail_activity);
-        mBtnSet = (Button) findViewById(R.id.desense_pll_detail_set_btn);
-        mTvTitle = (TextView) findViewById(R.id.desense_pll_detail_title_textview);
-        mEtValue = (EditText) findViewById(R.id.desense_pll_detail_edit);
-        Intent intent = getIntent();
-        mName = intent.getStringExtra(PLL_DETAIL_ITEM_NAME);
-        mId = intent.getIntExtra(PLL_DETAIL_ITEM_ID, -1);
-        mValue = intent.getStringExtra(PLL_DETAIL_ITEM_VALUE);
-        mTvTitle.setText(mName);
-        mEtValue.setText(mValue);
-        mEtValue.setSelection(mValue.length());
-        mBtnSet.setOnClickListener(new View.OnClickListener() {
-
-            public void onClick(View v) {
-                String editValue = mEtValue.getText().toString().trim();
-                Log.v("@M_" + TAG, "editValue = " + editValue);
-                Pattern pattern = Pattern.compile(PATTERN);
-                Matcher m = pattern.matcher(editValue);
-                if (m.find()) {
-                    if (pllSetClock(mId, editValue) < 0) {
-                        Toast.makeText(PllDetailActivity.this, "Set PLL fail",
-                                Toast.LENGTH_SHORT).show();
-                    } else {
-                        Toast.makeText(PllDetailActivity.this,
-                                "Set PLL success", Toast.LENGTH_SHORT).show();
-                    }
-                } else {
-                    Log.w("@M_" + TAG, "set button NumberFormatException");
-                    Toast.makeText(PllDetailActivity.this,
-                            "The input number is wrong!", Toast.LENGTH_SHORT)
-                            .show();
-                }
-            }
-        });
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        Toast.makeText(this, "Wrong set may cause system error!",
-                Toast.LENGTH_SHORT).show();
-    }
-
-    private static int pllSetClock(int id, String hexVal) {
-        int result = -1;
-        String cmd = "echo enable " + id + " >/proc/clkmgr/pll_test";
-        Log.i("@M_" + TAG, cmd);
-        try {
-            if (ShellExe.RESULT_SUCCESS == ShellExe.execCommand(cmd)) {
-                cmd = "echo " + id + " " + hexVal + " >/proc/clkmgr/pll_fsel";
-                if (ShellExe.RESULT_SUCCESS == ShellExe.execCommand(cmd)) {
-                    result = 0;
-                }
-            }
-        } catch (IOException e) {
-            Log.v("@M_" + TAG, "pllSetClock IOException: " + e.getMessage());
-        }
-        return result;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/dualtalknetworkinfo/NetworkInfoSimType.java b/EngineerMode/src/com/mediatek/engineermode/dualtalknetworkinfo/NetworkInfoSimType.java
deleted file mode 100644
index 61230af..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/dualtalknetworkinfo/NetworkInfoSimType.java
+++ /dev/null
@@ -1,108 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.dualtalknetworkinfo;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.android.internal.telephony.PhoneConstants;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class NetworkInfoSimType extends Activity implements OnItemClickListener {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.dualtalk_networkinfo);
-        ListView simTypeListView = (ListView) findViewById(R.id.ListView_dualtalk_networkinfo);
-
-        ArrayList<String> items = new ArrayList<String>();
-        items.add(getString(R.string.networkinfo_sim1));
-        items.add(getString(R.string.networkinfo_sim2));
-
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, items);
-        simTypeListView.setAdapter(adapter);
-        simTypeListView.setOnItemClickListener(this);
-    }
-
-    /**
-     * @see android.widget.AdapterView.OnItemClickListener#onItemClick(android.widget.AdapterView,
-     *      android.view.View, int, long)
-     * @param arg0
-     *            the Adapter for parent
-     * @param arg1
-     *            the View to display
-     * @param position
-     *            the integer of item position
-     * @param arg3
-     *            the long of ignore
-     */
-    public void onItemClick(AdapterView<?> arg0, View arg1, int position, long arg3) {
-        Intent intent = new Intent();
-        int simType;
-        switch (position) {
-        case 0:
-            intent.setClassName(this,
-                    "com.mediatek.engineermode.networkinfo.NetworkInfo");
-            simType = PhoneConstants.SIM_ID_1;
-            intent.putExtra("mSimType", simType);
-
-            break;
-        case 1:
-            intent.setClassName(this,
-                    "com.mediatek.engineermode.networkinfo.NetworkInfo");
-            simType = PhoneConstants.SIM_ID_2;
-            intent.putExtra("mSimType", simType);
-            break;
-        default:
-            break;
-        }
-
-        this.startActivity(intent);
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/dvfs/CpuDvfs.java b/EngineerMode/src/com/mediatek/engineermode/dvfs/CpuDvfs.java
deleted file mode 100644
index b4e4483..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/dvfs/CpuDvfs.java
+++ /dev/null
@@ -1,293 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.dvfs;
-
-import java.io.IOException;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.AdapterView;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.ListView;
-import android.widget.Toast;
-import android.widget.AdapterView.OnItemClickListener;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-public class CpuDvfs extends Activity implements OnItemClickListener,
-        DialogInterface.OnClickListener, OnClickListener {
-    private static final String TAG = "CpuDvfs";
-    private static final String FS_GOVERNOR_LIST =
-            "/sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors";
-    private static final String FS_GOVERNOR_DEFAULT =
-            "/sys/devices/system/cpu/cpu0/cpufreq/scaling_governor";
-    private static final String FS_SET_SPEED =
-            "/sys/devices/system/cpu/cpu0/cpufreq/scaling_setspeed";
-//  private static final String FS_MAX_SPEED =
-//          "/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq";
-//  private static final String FS_MIN_SPEED =
-//          "/sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq";
-    private static final String FS_CUR_FREQ =
-            "/proc/cpufreq/cpufreq_cur_freq";
-    private static final String ECHO = "echo";
-    private static final String CAT = "cat ";
-    private static final String CMD_PERFORMANCE_GOVERNOR =
-            "echo performance > " + FS_GOVERNOR_DEFAULT;
-    private static final String CMD_SET_CPU_SPEED =
-            "echo %1$s > " + FS_CUR_FREQ;
-    private ListView mLVCpuGovernor;
-    private EditText mEditCpuClockVal;
-    private Button mBtnSetFreq;
-    private CharSequence[] mGovernorItems;
-    private long mFreqMin = -1;
-    private long mFreqMax = -1;
-
-    @Override
-     protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.cpu_dvfs);
-        mLVCpuGovernor = (ListView) findViewById(R.id.dvfs_cpu_governor);
-        mLVCpuGovernor.setOnItemClickListener(this);
-        mEditCpuClockVal = (EditText) findViewById(R.id.dvfs_cpu_clock);
-        mBtnSetFreq = (Button) findViewById(R.id.dvfs_set_cpu_freq);
-        mBtnSetFreq.setOnClickListener(this);
-        String lblGovernor = getString(R.string.dvfs_cpu_governor);
-        String[] arrGovernor = new String[1];
-        arrGovernor[0] = lblGovernor;
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, arrGovernor);
-        mLVCpuGovernor.setAdapter(adapter);
-        initUIByData();
-    }
-
-//  private void getMaxMinFreq() {
-//      String cmd;
-//      String output;
-//      cmd = CAT + FS_MIN_SPEED;
-//      output = execCommand(cmd);
-//      output = output.trim();
-//      try {
-//          mFreqMin = Long.parseLong(output);
-//      } catch(NumberFormatException e) {
-//            Log.e("@M_" + TAG, "NumberFormatExceptin: Fail to get min cpu speed; " + e.getMessage());
-//      }
-//
-//      cmd = CAT + FS_MAX_SPEED;
-//      output = execCommand(cmd);
-//      output = output.trim();
-//      try {
-//          mFreqMax = Long.parseLong(output);
-//      } catch(NumberFormatException e) {
-//            Log.e("@M_" + TAG, "NumberFormatExceptin: Fail to get max cpu speed; " + e.getMessage());
-//      }
-//
-//  }
-
-    private boolean validateSetting() {
-        long cpuClock = -1;
-        String msg;
-        try {
-            cpuClock = Long.parseLong(mEditCpuClockVal.getText().toString());
-        } catch (NumberFormatException e) {
-            msg = getString(R.string.dvfs_invalid_clock);
-            Toast.makeText(this, msg , Toast.LENGTH_SHORT).show();
-            return false;
-        }
-
-        if (cpuClock < mFreqMin || cpuClock > mFreqMax) {
-            msg = getString(R.string.dvfs_invalid_clock_range);
-            msg = String.format(msg, mFreqMin, mFreqMax);
-            Toast.makeText(this, msg , Toast.LENGTH_SHORT).show();
-            return false;
-        }
-        return true;
-    }
-
-    private void initUIByData() {
-        String cmd;
-        String output;
-        cmd = CAT + FS_CUR_FREQ;
-        output = execCommand(cmd);
-        //output = "Current Freq : 497250\n [0] 1209000 KHZ\n [1] 754000 KHZ\n [2] 497250 KHZ \n ";
-        if (output == null) {
-            Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        output = output.trim();
-        String[] freqInfos = output.split(" *\n *");
-        String dftFreq = freqInfos[0];
-        String[] keyVal = dftFreq.split(" *: *");
-        mEditCpuClockVal.setText(keyVal[1]);
-        for (int i = 1; i < freqInfos.length; i++) {
-            String[] freqParts = freqInfos[i].split(" +");
-            long freqVal = -1;
-            try {
-                freqVal = Long.parseLong(freqParts[1]);
-            } catch (NumberFormatException e) {
-                Log.e("@M_" + TAG, "NumberFormatExcaption: parse available freq fail: " + freqParts[1]);
-            }
-            if (mFreqMax == -1) {
-                mFreqMax = freqVal;
-            } else if (freqVal > mFreqMax) {
-                mFreqMax = freqVal;
-            }
-            if (mFreqMin == -1) {
-                mFreqMin = freqVal;
-            } else if (freqVal < mFreqMin) {
-                mFreqMin = freqVal;
-            }
-        }
-    }
-
-    private void showSelectDialog(String title, CharSequence[] items,
-            int checkedId, DialogInterface.OnClickListener listener) {
-        AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                false).setTitle(title).setSingleChoiceItems(items, checkedId, listener).
-                setNegativeButton(android.R.string.cancel, null).create();
-        dialog.show();
-    }
-
-     private String execCommand(String cmd) {
-         int ret = -1;
-         Log.d("@M_" + TAG, "[cmd]:" + cmd);
-         try {
-             ret = ShellExe.execCommand(cmd);
-         } catch (IOException e) {
-             Log.e("@M_" + TAG, "IOException: " + e.getMessage());
-         }
-         if (ret == 0) {
-             String outStr = ShellExe.getOutput();
-             Log.d("@M_" + TAG, "[output]: " + outStr);
-             return outStr;
-         }
-         return null;
-     }
-
-     private CharSequence[] getGovernorAvailList() {
-         String cmd = CAT + " " + FS_GOVERNOR_LIST;
-         String output = execCommand(cmd);
-         if (output == null) {
-             return new CharSequence[]{};
-         }
-         output = output.trim();
-         String[] items = output.split(" +");
-         CharSequence[] charItems;
-         if (items.length > 0) {
-             charItems = new CharSequence[items.length];
-             for (int i = 0; i < items.length; i++) {
-                 charItems[i] = items[i];
-             }
-         } else {
-             charItems = new CharSequence[0];
-         }
-         return charItems;
-     }
-
-     private int getGovernorIndex(CharSequence[] items) {
-         if (items == null) {
-             return -1;
-         }
-         String target;
-         String cmd = CAT + " " + FS_GOVERNOR_DEFAULT;
-         target = execCommand(cmd);
-         for (int i = 0; i < items.length; i++) {
-             if (items[i].equals(target)) {
-                 return i;
-             }
-         }
-         return -1;
-     }
-
-    @Override
-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        int index;
-        switch(position) {
-        case 0:
-            mGovernorItems = getGovernorAvailList();
-            index = getGovernorIndex(mGovernorItems);
-            showSelectDialog(getString(R.string.dvfs_governor_choose), mGovernorItems, index, this);
-            break;
-        default:
-            Log.w("@M_" + TAG, "unknown position: " + position);
-            break;
-        }
-    }
-
-    private void setGovernor(String item) {
-        String cmd = ECHO + " " + item + " > " + FS_GOVERNOR_DEFAULT;
-        Log.d("@M_" + TAG, "SetGovernor: " + cmd);
-        execCommand(cmd);
-    }
-
-    private void setCpuSpeed(String speed) {
-        String cmd;
-
-        cmd = CMD_PERFORMANCE_GOVERNOR;
-        execCommand(cmd);
-
-        cmd = String.format(CMD_SET_CPU_SPEED, speed);
-        execCommand(cmd);
-    }
-
-    @Override
-    public void onClick(DialogInterface dialog, int which) {
-        CharSequence checkItem = mGovernorItems[which];
-        setGovernor(checkItem.toString());
-        dialog.dismiss();
-    }
-
-    @Override
-    public void onClick(View view) {
-        if (view.getId() == R.id.dvfs_set_cpu_freq) {
-            if (validateSetting()) {
-                setCpuSpeed(mEditCpuClockVal.getText().toString());
-                String msg = getString(R.string.dvfs_success);
-                Toast.makeText(this, msg , Toast.LENGTH_SHORT).show();
-            }
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/emsvr/AFMFunctionCallEx.java b/EngineerMode/src/com/mediatek/engineermode/emsvr/AFMFunctionCallEx.java
deleted file mode 100644
index 661e46a..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/emsvr/AFMFunctionCallEx.java
+++ /dev/null
@@ -1,196 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-/*
- * To change this template, choose Tools | Templates
- * and open the template in the editor.
- */
-package com.mediatek.engineermode.emsvr;
-
-import android.util.Log;
-
-import java.io.EOFException;
-import java.io.IOException;
-
-/**
- *
- * @author MTK80905
- */
-public class AFMFunctionCallEx {
-
-    private static final String TAG = "EM/functioncall";
-
-    public static final int FUNCTION_EM_BASEBAND = 10001;
-    public static final int FUNCTION_EM_FB0_IOCTL = 30001;
-    public static final int FUNCTION_EM_CPU_STRESS_TEST_APMCU = 40001;
-    public static final int FUNCTION_EM_CPU_STRESS_TEST_SWCODEC = 40002;
-    public static final int FUNCTION_EM_CPU_STRESS_TEST_BACKUP = 40003;
-    public static final int FUNCTION_EM_CPU_STRESS_TEST_THERMAL = 40004;
-    public static final int FUNCTION_EM_CPU_STRESS_TEST_INIT = 40005;
-    public static final int FUNCTION_EM_SENSOR_DO_CALIBRATION = 50001;
-    public static final int FUNCTION_EM_SENSOR_CLEAR_CALIBRATION = 50002;
-    public static final int FUNCTION_EM_SENSOR_SET_THRESHOLD = 50003;
-    public static final int FUNCTION_EM_SENSOR_DO_GSENSOR_CALIBRATION = 50004;
-    public static final int FUNCTION_EM_SENSOR_GET_GSENSOR_CALIBRATION = 50005;
-    public static final int FUNCTION_EM_SENSOR_CLEAR_GSENSOR_CALIBRATION = 50006;
-    public static final int FUNCTION_EM_SENSOR_DO_GYROSCOPE_CALIBRATION = 50007;
-    public static final int FUNCTION_EM_SENSOR_GET_GYROSCOPE_CALIBRATION = 50008;
-    public static final int FUNCTION_EM_SENSOR_CLEAR_GYROSCOPE_CALIBRATION = 50009;
-    public static final int FUNCTION_EM_MSDC_SET_CURRENT = 70001;
-    public static final int FUNCTION_EM_MSDC_GET_CURRENT = 70002;
-    public static final int FUNCTION_EM_MSDC_SET30_MODE = 70003;
-    public static final int FUNCTION_EM_SHELL_CMD_EXECUTION = 80001;
-
-    public static final int RESULT_FIN = 0;
-    public static final int RESULT_CONTINUE = 1;
-    public static final int RESULT_IO_ERR = -1;
-
-    private static final String ERROR = "ERROR ";
-
-    private Client mSocket = null;
-
-    /**
-     * Prepare to call function by EM native server
-     *
-     * @param functionId
-     *            Functional ID
-     * @return True if call function success
-     */
-    public boolean startCallFunctionStringReturn(int functionId) {
-        boolean result = false;
-        mSocket = new Client();
-        mSocket.startClient();
-        try {
-            mSocket.writeFunctionNo(String.valueOf(functionId));
-            result = true;
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "StartCallFunctionStringReturnEXP " + e.getMessage());
-            result = false;
-        }
-        return result;
-    }
-
-    /**
-     * Send parameter number
-     *
-     * @param number
-     *            Parameters number
-     * @return True if send success to server
-     */
-    public boolean writeParamNo(int number) {
-        boolean ret = false;
-        try {
-            mSocket.writeParamNo(number);
-            ret = true;
-        } catch (IOException e) {
-            ret = false;
-        }
-        return ret;
-    }
-
-    /**
-     * Send "int" parameter to server
-     *
-     * @param param
-     *            Parameter
-     * @return True if send success to server
-     */
-    public boolean writeParamInt(int param) {
-        boolean ret = false;
-        try {
-            mSocket.writeParamInt(param);
-            ret = true;
-
-        } catch (IOException e) {
-            ret = false;
-        }
-        return ret;
-    }
-
-    /**
-     * Send string to server as parameter
-     *
-     * @param string
-     *            Parameter
-     * @return True if send success to server
-     */
-    public boolean writeParamString(String string) {
-        boolean ret = false;
-        try {
-            mSocket.writeParamString(string);
-            ret = true;
-        } catch (IOException e) {
-            ret = false;
-        }
-        return ret;
-    }
-
-    /**
-     * Get response from EM server
-     *
-     * @return #FunctionReturn returnCode=0 if socket close normally
-     *         returnCode=1 has more data to be read. returnCode = -1 close
-     *         abnormally.
-     */
-    public FunctionReturn getNextResult() {
-        FunctionReturn ret = new FunctionReturn();
-        try {
-            ret.mReturnString = mSocket.read();
-            if (ret.mReturnString.isEmpty()) {
-                ret.mReturnCode = RESULT_FIN;
-                endCallFunction();
-            } else {
-                ret.mReturnCode = RESULT_CONTINUE;
-            }
-        } catch (EOFException e) {
-            endCallFunction();
-            ret.mReturnCode = RESULT_FIN;
-            ret.mReturnString = "";
-        } catch (IOException e) {
-            endCallFunction();
-            ret.mReturnCode = RESULT_IO_ERR;
-            ret.mReturnString = ERROR + e.getMessage();
-        }
-        return ret;
-    }
-
-    /**
-     * Stop connection with EM server
-     */
-    private void endCallFunction() {
-        mSocket.stopClient();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/emsvr/Client.java b/EngineerMode/src/com/mediatek/engineermode/emsvr/Client.java
deleted file mode 100644
index 26fd30b..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/emsvr/Client.java
+++ /dev/null
@@ -1,208 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-/*
- * To change this template, choose Tools | Templates
- * and open the template in the editor.
- */
-package com.mediatek.engineermode.emsvr;
-
-import android.net.LocalSocket;
-import android.net.LocalSocketAddress;
-import android.util.Log;
-
-
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
-import java.io.IOException;
-import java.nio.charset.Charset;
-
-/**
- *
- * @author MTK80905
- */
-public class Client {
-
-    private static final String TAG = "EM/client";
-    public static final int PARAM_TYPE_STRING = 1;
-    public static final int PARAM_TYPE_INT = 2;
-    private static final int PARAM_INT_LENGTH = 4;
-    private static final String ERROR_NO_INIT = "NOT INIT";
-    private static final String ERROR_PARAM_NUM = "param < 0";
-    private static final int STATUS_SUCCESS = 0;
-    private static final int STATUS_ERROR = -1;
-    private static final int MAX_BUFFER_SIZE = 1024;
-    private static final String EMPTY = "";
-    private static final String EM_SERVER_NAME = "EngineerModeServer";
-
-    private LocalSocket mSocket = null;
-    private DataInputStream mInputStream = null;
-    private DataOutputStream mOutputStream = null;
-    private int mStatus = STATUS_SUCCESS;
-
-    /**
-     * Connect to EM native server
-     */
-    public void startClient() {
-        try {
-            // mSocket = new Socket("127.0.0.1", 37121);
-            // mSocket(10000);
-            mSocket = new LocalSocket();
-            // LocalSocketAddress.Namespace.FILESYSTEM
-            mSocket.connect(new LocalSocketAddress(EM_SERVER_NAME));
-            mInputStream = new DataInputStream(mSocket.getInputStream());
-            mOutputStream = new DataOutputStream(mSocket.getOutputStream());
-            mStatus = STATUS_SUCCESS;
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "startclient IOException " + e.getMessage());
-            mStatus = STATUS_ERROR;
-        }
-    }
-
-    /**
-     * Read response string from EM server
-     *
-     * @return Response string
-     * @throws IOException
-     *             Input stream exception
-     */
-    synchronized String read() throws IOException {
-        if (STATUS_ERROR == mStatus || null == mInputStream) {
-            throw new IOException(ERROR_NO_INIT);
-        }
-        String result = null;
-        int len = mInputStream.readInt();
-        if (len > MAX_BUFFER_SIZE) {
-            len = MAX_BUFFER_SIZE;
-        }
-        byte bb[] = new byte[len];
-        int x = mInputStream.read(bb, 0, len);
-        if (-1 == x) {
-            result = EMPTY;
-        } else {
-            result = new String(bb, Charset.defaultCharset());
-        }
-        return result;
-    }
-
-    /**
-     * Send function number to EM server
-     *
-     * @param functionNo
-     *            Function ID
-     * @throws IOException
-     *             Output stream exception
-     */
-    synchronized void writeFunctionNo(String functionNo) throws IOException {
-        if (STATUS_ERROR == mStatus || null == mOutputStream) {
-            throw new IOException(ERROR_NO_INIT);
-        }
-        if (functionNo == null || functionNo.length() == 0) {
-            return;
-        }
-        mOutputStream.writeInt(functionNo.length());
-        mOutputStream.write(functionNo.getBytes(Charset.defaultCharset()), 0, functionNo.length());
-        return;
-    }
-
-    /**
-     * Send parameter number to EM server
-     *
-     * @param paramNum
-     *            Parameter total count
-     * @throws IOException
-     *             Output stream exception
-     */
-    synchronized void writeParamNo(int paramNum) throws IOException {
-        if (STATUS_ERROR == mStatus || null == mOutputStream) {
-            throw new IOException(ERROR_NO_INIT);
-        }
-        if (paramNum < 0) {
-            throw new IOException(ERROR_PARAM_NUM);
-        }
-        mOutputStream.writeInt(paramNum);
-    }
-
-    /**
-     * Send parameter to EM server
-     *
-     * @param param
-     *            Parameter
-     * @throws IOException
-     *             Output stream exception
-     */
-    synchronized void writeParamInt(int param) throws IOException {
-        if (STATUS_ERROR == mStatus || null == mOutputStream) {
-            throw new IOException(ERROR_NO_INIT);
-        }
-        mOutputStream.writeInt(PARAM_TYPE_INT);
-        mOutputStream.writeInt(PARAM_INT_LENGTH);
-        mOutputStream.writeInt(param);
-    }
-
-    /**
-     * Send string to EM server as parameter
-     *
-     * @param param
-     *            Parameter
-     * @throws IOException
-     *             Output stream exception
-     */
-    synchronized void writeParamString(String param) throws IOException {
-        if (STATUS_ERROR == mStatus || null == mOutputStream) {
-            throw new IOException(ERROR_NO_INIT);
-        }
-        mOutputStream.writeInt(PARAM_TYPE_STRING);
-        mOutputStream.writeInt(param.length());
-        mOutputStream.write(param.getBytes(Charset.defaultCharset()), 0, param.length());
-    }
-
-    /**
-     * Stop connection with EM server
-     */
-    public void stopClient() {
-        if (null == mInputStream || null == mOutputStream || null == mSocket) {
-            return;
-        }
-        try {
-            mOutputStream.close();
-            mInputStream.close();
-            mSocket.close();
-        } catch (IOException e) {
-            Log.w("@M_" + TAG, "stop client IOException: " + e.getMessage());
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/emsvr/FunctionReturn.java b/EngineerMode/src/com/mediatek/engineermode/emsvr/FunctionReturn.java
deleted file mode 100644
index 1b6699f..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/emsvr/FunctionReturn.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-/*
- * To change this template, choose Tools | Templates
- * and open the template in the editor.
- */
-
-package com.mediatek.engineermode.emsvr;
-
-/**
- *
- * @author MTK80905
- */
-public class FunctionReturn {
-    public int mReturnCode = -1;
-    public String mReturnString = "";
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/CardEmulationMode.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/CardEmulationMode.java
deleted file mode 100644
index 3f083bf..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/CardEmulationMode.java
+++ /dev/null
@@ -1,260 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.RadioGroup;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsCardmReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsCardmRsp;
-
-import java.nio.ByteBuffer;
-
-public class CardEmulationMode extends Activity {
-
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int DIALOG_ID_WAIT = 0;
-    private RadioGroup mRgSwio;
-
-    private CheckBox mCbTypeA;
-    private CheckBox mCbTypeB;
-    private CheckBox mCbTypeF;
-    private CheckBox mCbTypeB2;
-
-    private Button mBtnSelectAll;
-    private Button mBtnClearAll;
-    private Button mBtnStart;
-    private Button mBtnReturn;
-    private Button mBtnRunInBack;
-
-    private NfcEmAlsCardmRsp mResponse;
-    private byte[] mRspArray;
-    private boolean mEnableBackKey = true;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "mReceiver onReceive");
-            String action = intent.getAction();
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_CARD_MODE_RSP).equals(action)) {
-                mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mResponse = new NfcEmAlsCardmRsp();
-                    mResponse.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                String toastMsg = null;
-                switch (mResponse.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "CardEmulation Rsp Result: SUCCESS";
-                        if (mBtnStart.getText().equals(
-                                CardEmulationMode.this.getString(R.string.hqa_nfc_start))) {
-                            setButtonsStatus(false);
-                        } else {
-                            setButtonsStatus(true);
-                        }
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "CardEmulation Rsp Result: FAIL";
-                        break;
-                    case RspResult.NFC_STATUS_NO_SIM:
-                        toastMsg = "CardEmulation Rsp Result: No SIM";
-                        break;
-                    default:
-                        toastMsg = "CardEmulation Rsp Result: ERROR";
-                        break;
-                }
-                Toast.makeText(CardEmulationMode.this, toastMsg, Toast.LENGTH_SHORT).show();
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "onClick button view is " + ((Button) arg0).getText());
-            if (arg0.equals(mBtnStart)) {
-                showDialog(DIALOG_ID_WAIT);
-                doTestAction(mBtnStart.getText().equals(
-                        CardEmulationMode.this.getString(R.string.hqa_nfc_start)));
-            } else if (arg0.equals(mBtnSelectAll)) {
-                changeAllSelect(true);
-            } else if (arg0.equals(mBtnClearAll)) {
-                changeAllSelect(false);
-            } else if (arg0.equals(mBtnReturn)) {
-                CardEmulationMode.this.onBackPressed();
-            } else if (arg0.equals(mBtnRunInBack)) {
-                doTestAction(null);
-                Intent intent = new Intent(Intent.ACTION_MAIN);
-                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                intent.addCategory(Intent.CATEGORY_HOME);
-                startActivity(intent);
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_card_emulation_mode);
-        initComponents();
-        changeAllSelect(true);
-      //  mCbVirtualCardFunct.setChecked(false);
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_CARD_MODE_RSP);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (!mEnableBackKey) {
-            return;
-        }
-        super.onBackPressed();
-    }
-
-    private void initComponents() {
-        Elog.v(NfcMainPage.TAG, "initComponents");
-        mRgSwio = (RadioGroup) findViewById(R.id.hqa_cardmode_rg_swio);
-
-        mCbTypeA = (CheckBox) findViewById(R.id.hqa_cardmode_cb_typea);
-        mCbTypeB = (CheckBox) findViewById(R.id.hqa_cardmode_cb_typeb);
-        mCbTypeF = (CheckBox) findViewById(R.id.hqa_cardmode_cb_typef);
-        mCbTypeB2 = (CheckBox) findViewById(R.id.hqa_cardmode_cb_typeb2);
-
-       // mCbVirtualCardFunct = (CheckBox) findViewById(R.id.hqa_virtual_card);
-        mBtnSelectAll = (Button) findViewById(R.id.hqa_cardmode_btn_select_all);
-        mBtnSelectAll.setOnClickListener(mClickListener);
-        mBtnClearAll = (Button) findViewById(R.id.hqa_cardmode_btn_clear_all);
-        mBtnClearAll.setOnClickListener(mClickListener);
-        mBtnStart = (Button) findViewById(R.id.hqa_cardmode_btn_start_stop);
-        mBtnStart.setOnClickListener(mClickListener);
-        mBtnReturn = (Button) findViewById(R.id.hqa_cardmode_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        mBtnRunInBack = (Button) findViewById(R.id.hqa_cardmode_btn_run_back);
-        mBtnRunInBack.setOnClickListener(mClickListener);
-        mBtnRunInBack.setEnabled(false);
-    }
-
-    private void setButtonsStatus(boolean b) {
-        if (b) {
-            mBtnStart.setText(R.string.hqa_nfc_start);
-        } else {
-            mBtnStart.setText(R.string.hqa_nfc_stop);
-        }
-        mBtnRunInBack.setEnabled(!b);
-        mEnableBackKey = b;
-        mBtnReturn.setEnabled(b);
-        mBtnSelectAll.setEnabled(b);
-        mBtnClearAll.setEnabled(b);
-    }
-
-    private void changeAllSelect(boolean checked) {
-        Elog.v(NfcMainPage.TAG, "changeDisplay status is " + checked);
-        if (checked) {
-            mRgSwio.check(R.id.hqa_cardmode_rb_swio1);
-        }
-
-        mCbTypeA.setChecked(checked);
-        mCbTypeB.setChecked(checked);
-        mCbTypeF.setChecked(checked);
-        mCbTypeB2.setChecked(checked);
-
-       // mCbVirtualCardFunct.setChecked(false);
-    }
-
-    private void doTestAction(Boolean bStart) {
-        sendCommand(bStart);
-    }
-
-    private void sendCommand(Boolean bStart) {
-        NfcEmAlsCardmReq requestCmd = new NfcEmAlsCardmReq();
-        fillRequest(bStart, requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_ALS_CARD_MODE_REQ, requestCmd);
-    }
-
-    private void fillRequest(Boolean bStart, NfcEmAlsCardmReq requestCmd) {
-        if (null == bStart) {
-            requestCmd.mAction = EmAction.ACTION_RUNINBG;
-        } else if (bStart.booleanValue()) {
-            requestCmd.mAction = EmAction.ACTION_START;
-        } else {
-            requestCmd.mAction = EmAction.ACTION_STOP;
-        }
-        int temp = 0;
-
-        temp |= mCbTypeA.isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_A : 0;
-        temp |= mCbTypeB.isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_B : 0;
-        temp |= mCbTypeF.isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_F : 0;
-        temp |= mCbTypeB2.isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_BPRIME : 0;
-        requestCmd.mSupportType = temp;
-        temp = 0;
-        switch (mRgSwio.getCheckedRadioButtonId()) {
-        case R.id.hqa_cardmode_rb_swio1:
-            temp = NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIO1;
-            break;
-        case R.id.hqa_cardmode_rb_swio2:
-            temp = NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIO2;
-            break;
-        case R.id.hqa_cardmode_rb_swio_se:
-            temp = NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIOSE;
-            break;
-        default:
-            break;
-        }
-/*
-        temp |= mCbSwio1.isChecked() ? NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIO1 : 0;
-        temp |= mCbSwio2.isChecked() ? NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIO2 : 0;
-        temp |= mCbSwioSe.isChecked() ? NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIOSE : 0;
-*/
-        requestCmd.mSwNum = temp;
-        requestCmd.mFgVirtualCard = 0; //mCbVirtualCardFunct.isChecked() ? 1 : 0;
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        ProgressDialog dialog = null;
-        if (id == DIALOG_ID_WAIT) {
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        }
-        return dialog;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/FunctionRead.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/FunctionRead.java
deleted file mode 100644
index e9d3e56..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/FunctionRead.java
+++ /dev/null
@@ -1,208 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.RadioButton;
-import android.widget.RadioGroup;
-import android.widget.Toast;
-import android.text.InputType;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.DataConvert;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmOptAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermOptReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermOptRsp;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcNdefType;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcTagReadNdef;
-
-import java.nio.ByteBuffer;
-
-public class FunctionRead extends Activity {
-
-    protected static final String PARENT_EXTRA_STR = "parent_ui_id";
-    protected static final String BYTE_EXTRA_STR = "byte_data";
-    protected static final int HANDLER_MSG_GET_RSP = 300;
-
-    private RadioGroup mRgTagType;
-//    private RadioButton mRbTypeUri;
-//    private RadioButton mRbTypeText;
-//    private RadioButton mRbTypeSmart;
-    private RadioButton mRbTypeOthers;
-    private EditText mTvLang;
-    private EditText mTvRecordFlag;
-    private EditText mTvRecordId;
-    private EditText mTvRecordInf;
-    private EditText mTvPayloadLength;
-    private EditText mTvPayloadHex;
-    private EditText mTvPayloadAscii;
-    private Button mBtnRead;
-    private Button mBtnCancel;
-
-    private NfcEmAlsReadermOptRsp mOptRsp;
-    private byte[] mRspArray;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "[FunctionRead]mReceiver onReceive");
-            String action = intent.getAction();
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_OPT_RSP)
-                    .equals(action)) {
-                mRspArray = intent.getExtras().getByteArray(
-                        NfcCommand.MESSAGE_CONTENT_KEY);
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mOptRsp = new NfcEmAlsReadermOptRsp();
-                    mOptRsp.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[FunctionRead]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                String toastMsg = null;
-                switch (mOptRsp.mResult) {
-                case RspResult.SUCCESS:
-                    toastMsg = "Function Read Rsp Result: SUCCESS";
-                    updateUi(mOptRsp.mTagReadNdef);
-                    break;
-                case RspResult.FAIL:
-                    toastMsg = "Function Read Rsp Result: FAIL";
-                    break;
-                default:
-                    toastMsg = "Function Read Rsp Result: ERROR";
-                    break;
-                }
-                Toast.makeText(FunctionRead.this, toastMsg, Toast.LENGTH_SHORT)
-                        .show();
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[FunctionRead]onClick button view is " + ((Button) arg0).getText());
-            if (arg0.equals(mBtnRead)) {
-                doRead();
-            } else if (arg0.equals(mBtnCancel)) {
-                FunctionRead.this.onBackPressed();
-            } else {
-                Elog.v(NfcMainPage.TAG, "[FunctionRead]onClick noting.");
-            }
-        }
-
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_function_read);
-        initComponents();
-        int parentId = getIntent().getIntExtra(PARENT_EXTRA_STR, 0);
-        if (1 == parentId) {
-            mBtnRead.setEnabled(false); // just show the result
-            byte[] optData = getIntent().getByteArrayExtra(BYTE_EXTRA_STR);
-            NfcEmAlsReadermOptRsp optRsp = new NfcEmAlsReadermOptRsp();
-            optRsp.readRaw(ByteBuffer.wrap(optData));
-            updateUi(optRsp.mTagReadNdef);
-        }
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE
-                + CommandType.MTK_NFC_EM_ALS_READER_MODE_OPT_RSP);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onPause() {
-        unregisterReceiver(mReceiver);
-        super.onPause();
-    }
-
-    private void initComponents() {
-        mRgTagType = (RadioGroup) findViewById(R.id.hqa_read_rg_tag_type);
-//        mRbTypeUri = (RadioButton) findViewById(R.id.hqa_read_rb_type_uri);
-//        mRbTypeText = (RadioButton) findViewById(R.id.hqa_read_rb_type_text);
-//        mRbTypeSmart = (RadioButton) findViewById(R.id.hqa_read_rb_type_smart);
-        mRbTypeOthers = (RadioButton) findViewById(R.id.hqa_read_rb_type_others);
-        mRbTypeOthers.setVisibility(View.GONE);
-        mTvLang = (EditText) findViewById(R.id.hqa_read_tv_lang);
-        mTvLang.setInputType(InputType.TYPE_NULL);
-        mTvRecordFlag = (EditText) findViewById(R.id.hqa_read_tv_flag);
-        mTvRecordFlag.setInputType(InputType.TYPE_NULL);
-        mTvRecordId = (EditText) findViewById(R.id.hqa_read_tv_id);
-        mTvRecordId.setInputType(InputType.TYPE_NULL);
-        mTvRecordInf = (EditText) findViewById(R.id.hqa_read_tv_inf);
-        mTvRecordInf.setInputType(InputType.TYPE_NULL);
-        mTvPayloadLength = (EditText) findViewById(R.id.hqa_read_tv_length);
-        mTvPayloadLength.setInputType(InputType.TYPE_NULL);
-        mTvPayloadHex = (EditText) findViewById(R.id.hqa_read_tv_hex);
-        mTvPayloadHex.setInputType(InputType.TYPE_NULL);
-        mTvPayloadAscii = (EditText) findViewById(R.id.hqa_read_tv_ascii);
-        mTvPayloadAscii.setInputType(InputType.TYPE_NULL);
-        mBtnRead = (Button) findViewById(R.id.hqa_read_btn_read);
-        mBtnRead.setOnClickListener(mClickListener);
-        mBtnCancel = (Button) findViewById(R.id.hqa_read_btn_cancel);
-        mBtnCancel.setOnClickListener(mClickListener);
-        mRgTagType.check(-1);
-    }
-
-    private void doRead() {
-        NfcEmAlsReadermOptReq request = new NfcEmAlsReadermOptReq();
-        request.mAction = EmOptAction.READ;
-        NfcClient.getInstance().sendCommand(
-                CommandType.MTK_NFC_EM_ALS_READER_MODE_OPT_REQ, request);
-    }
-
-    private void updateUi(NfcTagReadNdef info) {
-        int tempInt = -1;
-        switch (info.mNdefType.mEnumValue) {
-        case NfcNdefType.URI:
-            tempInt = R.id.hqa_read_rb_type_uri;
-            break;
-        case NfcNdefType.TEXT:
-            tempInt = R.id.hqa_read_rb_type_text;
-            break;
-        case NfcNdefType.SP:
-            tempInt = R.id.hqa_read_rb_type_smart;
-            break;
-        case NfcNdefType.OTHERS:
-            tempInt = R.id.hqa_read_rb_type_others;
-            break;
-        default:
-            Elog.d(NfcMainPage.TAG, "[FunctionRead]NfcNdefType is error");
-            break;
-        }
-        mRgTagType.check(tempInt);
-        mTvRecordFlag.setText(DataConvert.printHexString(info.mRecordFlags));
-        mTvRecordId.setText(DataConvert.printHexString(info.mRecordId, 0));
-        mTvRecordInf.setText(DataConvert.printHexString(info.mRecordTnf));
-        mTvPayloadLength.setText(String.valueOf(info.mLength));
-        mTvLang.setText(new String(info.mLang));
-        mTvPayloadAscii.setText(new String(info.mData, 0, info.mLength));
-        mTvPayloadHex.setText(DataConvert.printHexString(info.mData, info.mLength));
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/FunctionWrite.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/FunctionWrite.java
deleted file mode 100644
index 6756517..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/FunctionWrite.java
+++ /dev/null
@@ -1,255 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.RadioGroup;
-import android.widget.Spinner;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmOptAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermOptReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermOptRsp;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcNdefType;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.SmartPosterT;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.TextT;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.UrlT;
-
-import java.nio.ByteBuffer;
-
-public class FunctionWrite extends Activity {
-
-    protected static final int HANDLER_MSG_GET_RSP = 200;
-
-    private RadioGroup mRgTagType;
-    private Spinner mSpLang;
-    private EditText mEtCompany;
-    private EditText mEtUrl;
-    private EditText mEtText;
-    private TextView mTvCompany;
-    private TextView mTvUrl;
-    private TextView mTvText;
-    private Button mBtnWrite;
-    private Button mBtnCancel;
-
-    private NfcEmAlsReadermOptRsp mOptRsp;
-    private byte[] mRspArray;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "[FunctionWrite]mReceiver onReceive");
-            String action = intent.getAction();
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_OPT_RSP)
-                    .equals(action)) {
-                mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mOptRsp = new NfcEmAlsReadermOptRsp();
-                    mOptRsp.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[FunctionWrite]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                String toastMsg = null;
-                switch (mOptRsp.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "Function Write Rsp Result: SUCCESS";
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "Function Write Rsp Result: FAIL";
-                        break;
-                    default:
-                        toastMsg = "Function Write Rsp Result: ERROR";
-                        break;
-                }
-                Toast.makeText(FunctionWrite.this, toastMsg, Toast.LENGTH_SHORT).show();
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[FunctionWrite]onClick button view is "
-                    + ((Button) arg0).getText());
-            if (arg0.equals(mBtnWrite)) {
-                doWrite();
-            } else if (arg0.equals(mBtnCancel)) {
-                FunctionWrite.this.onBackPressed();
-            } else {
-                Elog.v(NfcMainPage.TAG, "[FunctionWrite]onClick noting.");
-            }
-        }
-
-    };
-    private final RadioGroup.OnCheckedChangeListener mCheckedChangeListener = new RadioGroup.OnCheckedChangeListener() {
-
-        public void onCheckedChanged(RadioGroup group, int checkedId) {
-            Elog.v(NfcMainPage.TAG, "[FunctionWrite]onCheckedChanged checkedId is " + checkedId);
-            checkedChange(checkedId);
-        }
-
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_function_write);
-        initComponents();
-    }
-
-    @Override
-    protected void onStart() {
-        super.onStart();
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_OPT_RSP);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onStop() {
-        unregisterReceiver(mReceiver);
-        super.onStop();
-    }
-
-    private void initComponents() {
-        mRgTagType = (RadioGroup) findViewById(R.id.hqa_write_rg_tag_type);
-        mRgTagType.setOnCheckedChangeListener(mCheckedChangeListener);
-        mSpLang = (Spinner) findViewById(R.id.hqa_write_sp_lang);
-        mEtCompany = (EditText) findViewById(R.id.hqa_write_et_company);
-        mEtUrl = (EditText) findViewById(R.id.hqa_write_et_url);
-        mEtText = (EditText) findViewById(R.id.hqa_write_et_text);
-        mBtnWrite = (Button) findViewById(R.id.hqa_write_btn_write);
-        mBtnWrite.setOnClickListener(mClickListener);
-        mBtnCancel = (Button) findViewById(R.id.hqa_write_btn_cancel);
-        mBtnCancel.setOnClickListener(mClickListener);
-        mTvCompany = (TextView) findViewById(R.id.hqa_write_tv_company);
-        mTvUrl = (TextView) findViewById(R.id.hqa_write_tv_url);
-        mTvText = (TextView) findViewById(R.id.hqa_write_tv_text);
-        mEtUrl.setSelection(0);
-        mRgTagType.check(R.id.hqa_write_rb_type_uri);
-    }
-
-    protected void checkedChange(int checkedId) {
-        switch (checkedId) {
-            case R.id.hqa_write_rb_type_uri:
-                mSpLang.setEnabled(false);
-                mEtCompany.setVisibility(View.GONE);
-                mTvCompany.setVisibility(View.GONE);
-                mEtText.setVisibility(View.GONE);
-                mTvText.setVisibility(View.GONE);
-                mEtUrl.setVisibility(View.VISIBLE);
-                mTvUrl.setVisibility(View.VISIBLE);
-                mEtUrl.setText("");
-                mEtUrl.setSelection(0);
-                break;
-            case R.id.hqa_write_rb_type_text:
-                mSpLang.setEnabled(true);
-                mEtCompany.setVisibility(View.GONE);
-                mTvCompany.setVisibility(View.GONE);
-                mEtText.setVisibility(View.VISIBLE);
-                mTvText.setVisibility(View.VISIBLE);
-                mEtUrl.setVisibility(View.GONE);
-                mTvUrl.setVisibility(View.GONE);
-                mEtText.setText("");
-                mEtText.setSelection(mEtText.getText().length());
-                break;
-            default:
-                break;
-        }
-    }
-
-    private void doWrite() {
-        if (checkInput()) {
-            NfcEmAlsReadermOptReq request = new NfcEmAlsReadermOptReq();
-            request.mAction = EmOptAction.WRITE;
-            int tempInt = -1;
-            switch (mRgTagType.getCheckedRadioButtonId()) {
-                case R.id.hqa_write_rb_type_uri:
-                    tempInt = NfcNdefType.URI;
-                    break;
-                case R.id.hqa_write_rb_type_text:
-                    tempInt = NfcNdefType.TEXT;
-                    break;
-                default:
-                    tempInt = NfcNdefType.OTHERS;
-                    break;
-            }
-            request.mTagWriteNdef.mNdefType.mEnumValue = tempInt;
-            request.mTagWriteNdef.mNdefLangType.mEnumValue = mSpLang.getSelectedItemPosition();
-            switch (tempInt) {
-                case NfcNdefType.URI:
-                    UrlT url = new UrlT();
-                    byte[] urlArray = mEtUrl.getText().toString().getBytes();
-                    System.arraycopy(urlArray, 0, url.mUrlData, 0, urlArray.length);
-                    url.mUrlDataLength = (short) url.mUrlData.length;
-                    byte[] arrayU = url.getByteArray();
-                    System.arraycopy(arrayU, 0, request.mTagWriteNdef.mNdefData.mData, 0,
-                            arrayU.length);
-                    request.mTagWriteNdef.mLength = arrayU.length;
-                    break;
-                case NfcNdefType.TEXT:
-                    TextT text = new TextT();
-                    byte[] textArray = mEtText.getText().toString().getBytes();
-                    System.arraycopy(textArray, 0, text.mData, 0, textArray.length);
-                    text.mDataLength = (short) textArray.length;
-                    byte[] arrayT = text.getByteArray();
-                    System.arraycopy(arrayT, 0, request.mTagWriteNdef.mNdefData.mData, 0,
-                            arrayT.length);
-                    request.mTagWriteNdef.mLength = arrayT.length;
-                    break;
-                case NfcNdefType.SP:
-                    SmartPosterT smart = new SmartPosterT();
-                    byte[] comArray = mEtCompany.getText().toString().getBytes();
-                    System.arraycopy(comArray, 0, smart.mCompany, 0, comArray.length);
-                    smart.mCompanyLength = (short) comArray.length;
-                    byte[] comUrlArray = mEtUrl.getText().toString().getBytes();
-                    System.arraycopy(comUrlArray, 0, smart.mCompanyUrl, 0, comUrlArray.length);
-                    smart.mCompanyUrlLength = (short) comUrlArray.length;
-                    byte[] arrayS = smart.getByteArray();
-                    System.arraycopy(arrayS, 0, request.mTagWriteNdef.mNdefData.mData, 0,
-                            arrayS.length);
-                    request.mTagWriteNdef.mLength = arrayS.length;
-                    break;
-                case NfcNdefType.OTHERS:
-                    break;
-                default:
-                    break;
-            }
-            NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_ALS_READER_MODE_OPT_REQ,
-                    request);
-        } else {
-            Toast.makeText(this, "Input error", Toast.LENGTH_SHORT).show();
-        }
-    }
-
-    private boolean checkInput() {
-        if (-1 == mRgTagType.getCheckedRadioButtonId()) {
-            return false;
-        }
-        return true;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/LoopBackTest.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/LoopBackTest.java
deleted file mode 100644
index 0767331..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/LoopBackTest.java
+++ /dev/null
@@ -1,172 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmLoopbackReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmLoopbackRsp;
-
-import java.nio.ByteBuffer;
-
-public class LoopBackTest extends Activity {
-
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int DIALOG_ID_WAIT = 0;
-    private Button mBtnStart;
-    private Button mBtnReturn;
-
-    private NfcEmLoopbackRsp mResponse;
-    private byte[] mRspArray;
-    private boolean mEnableBackKey = true;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "[LoopBackTest]mReceiver onReceive");
-            String action = intent.getAction();
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_EM_LOOPBACK_TEST_RSP)
-                    .equals(action)) {
-                mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mResponse = new NfcEmLoopbackRsp();
-                    mResponse.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[LoopBackTest]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                String toastMsg = null;
-                switch (mResponse.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "LoopBackTest Rsp Result: SUCCESS";
-                        if (mBtnStart.getText().equals(
-                                LoopBackTest.this.getString(R.string.hqa_nfc_start))) {
-                            setButtonsStatus(false);
-                        } else {
-                            setButtonsStatus(true);
-                        }
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "LoopBackTest Rsp Result: FAIL";
-                        break;
-                    default:
-                        toastMsg = "LoopBackTest Rsp Result: ERROR";
-                        break;
-                }
-                Toast.makeText(LoopBackTest.this, toastMsg, Toast.LENGTH_SHORT).show();
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[LoopBackTest]onClick button view is "
-                    + ((Button) arg0).getText());
-            if (arg0.equals(mBtnStart)) {
-                showDialog(DIALOG_ID_WAIT);
-                doTestAction(mBtnStart.getText().equals(
-                        LoopBackTest.this.getString(R.string.hqa_nfc_start)));
-            } else if (arg0.equals(mBtnReturn)) {
-                LoopBackTest.this.onBackPressed();
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_loopback_test);
-        mBtnStart = (Button) findViewById(R.id.hqa_loopback_btn_start_stop);
-        mBtnStart.setOnClickListener(mClickListener);
-        mBtnReturn = (Button) findViewById(R.id.hqa_loopback_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_EM_LOOPBACK_TEST_RSP);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (!mEnableBackKey) {
-            return;
-        }
-        super.onBackPressed();
-    }
-
-    private void setButtonsStatus(boolean b) {
-        Elog.v(NfcMainPage.TAG, "[LoopBackTest]setButtonsStatus " + b);
-        if (b) {
-            mBtnStart.setText(R.string.hqa_nfc_start);
-        } else {
-            mBtnStart.setText(R.string.hqa_nfc_stop);
-        }
-        mEnableBackKey = b;
-        mBtnReturn.setEnabled(b);
-    }
-
-    private void doTestAction(Boolean bStart) {
-        sendCommand(bStart);
-    }
-
-    private void sendCommand(Boolean bStart) {
-        NfcEmLoopbackReq requestCmd = new NfcEmLoopbackReq();
-        fillRequest(bStart, requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_EM_LOOPBACK_TEST_REQ,
-                requestCmd);
-    }
-
-    private void fillRequest(Boolean bStart, NfcEmLoopbackReq requestCmd) {
-        if (null == bStart) {
-            requestCmd.mAction = EmAction.ACTION_RUNINBG;
-        } else if (bStart.booleanValue()) {
-            requestCmd.mAction = EmAction.ACTION_START;
-        } else {
-            requestCmd.mAction = EmAction.ACTION_STOP;
-        }
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        ProgressDialog dialog = null;
-        if (id == DIALOG_ID_WAIT) {
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        }
-        return dialog;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcClient.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcClient.java
deleted file mode 100644
index 2848b2a..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcClient.java
+++ /dev/null
@@ -1,186 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.content.Context;
-import android.net.LocalSocket;
-import android.net.LocalSocketAddress;
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.hqanfc.NfcCommand.DataConvert;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmReq;
-
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
-import java.io.IOException;
-//import java.net.Socket;
-//import java.net.UnknownHostException;
-import java.nio.ByteBuffer;
-
-/**
- * Class Name: ConnectClient.
- */
-public class NfcClient {
-
-    public static final int DEFAULT_PORT = 7500;
-    public static final int DEFAULT_TIMEOUT = 4000;
-    private static final String LOCALSOCKET_NAME = "/data/nfc_socket/mtknfc_server";
-    private static final String LOCALHOST_IP_ADDRESS = "127.0.0.1";
-    private static final int MAX_DISCON_TIMES = 5;
-    private static final int SLEEP_TIME = 100;
-
-    private LocalSocket mSocket;
-    private ReceiveThread mPollingThr;
-    private Thread mThread;
-    private DataOutputStream mOutputStream;
-    private DataInputStream mInputStream;
-    private boolean mConnected = false;
-    private static NfcClient sInstance;
-
-
-
-    public static NfcClient getInstance() {
-        if (sInstance == null) {
-            sInstance = new NfcClient();
-        }
-        return sInstance;
-    }
-
-    public synchronized int sendCommand(int msgType, NfcEmReq cmdReq) {
-        if (mSocket == null || mOutputStream == null || !isConnected()) {
-            Elog.d(NfcMainPage.TAG, "[NfcClient]send command fail");
-            return -1;
-        }
-        Elog.d(NfcMainPage.TAG, "[NfcClient]Send command type: " + msgType);
-        try {
-            ByteBuffer buffer = null;
-            if (cmdReq == null) {
-                buffer = ByteBuffer.allocate(NfcCommand.MAIN_MESSAGE_SIZE);
-                buffer.put(DataConvert.intToLH(msgType));
-                buffer.put(DataConvert.intToLH(0));
-            } else {
-                buffer = ByteBuffer
-                        .allocate(cmdReq.getContentSize() + NfcCommand.MAIN_MESSAGE_SIZE);
-                buffer.put(DataConvert.intToLH(msgType));
-                int msglen = cmdReq.getContentSize();
-                Elog.d(NfcMainPage.TAG, "[NfcClient]Send command lenght: " + msglen);
-                buffer.put(DataConvert.intToLH(msglen));
-                cmdReq.writeRaw(buffer);
-            }
-            for (int i = 0; i < buffer.array().length; i++) {
-                Elog.d(NfcMainPage.TAG, buffer.array()[i] + " ");
-            }
-            Elog.d(NfcMainPage.TAG,"done send");
-            mOutputStream.write(buffer.array());
-            mOutputStream.flush();
-        } catch (IOException e) {
-            Elog.w(NfcMainPage.TAG, "[NfcClient]sendCommand IOException: " + e.getMessage());
-            e.printStackTrace();
-            return -1;
-        }
-        return msgType;
-    }
-
-    // @Override
-    public boolean closeConnection() {
-        Elog.d(NfcMainPage.TAG, "[NfcClient]closeConnection().");
-        if (mSocket == null || !isConnected()) {
-            Elog.d(NfcMainPage.TAG, "[NfcClient]close connection fail");
-            return false;
-        }
-        mPollingThr.setRunning(false);
-        int cnt = 0;
-        while (mPollingThr.isRunning() && mThread.isAlive() && cnt < MAX_DISCON_TIMES) {
-            try {
-                Thread.sleep(SLEEP_TIME);
-                cnt++;
-            } catch (InterruptedException e) {
-                e.printStackTrace();
-            }
-        }
-        if (mPollingThr.isRunning() || mThread.isAlive()) {
-            mThread.interrupt();
-        }
-        try {
-            mInputStream.close();
-            mInputStream = null;
-            mOutputStream.close();
-            mOutputStream = null;
-        } catch (IOException e) {
-            Elog.w(NfcMainPage.TAG, "[NfcClient]closeConnection IOException: " + e.getMessage());
-        }
-        if (null != mSocket) {
-            try {
-                mSocket.close();
-            } catch (IOException e) {
-                Elog.w(NfcMainPage.TAG, "[NfcClient]closeConnection finally IOException: "
-                        + e.getMessage());
-            }
-            mSocket = null;
-        }
-        sInstance = null;
-        setConnected(false);
-        Elog.v(NfcMainPage.TAG, "[NfcClient]close connection success");
-        return true;
-    }
-
-    // @Override
-    public boolean createConnection(Context context) {
-        Elog.d(NfcMainPage.TAG, "[NfcClient]createConnection().");
-        int timeout = 30000;
-        if (mSocket != null && isConnected()) {
-            Elog.v(NfcMainPage.TAG, "[NfcClient]createConnection: has connected");
-            return true;
-        }
-        for (int i = 1; i <= 3; i ++) {
-            try {
-                //mSocket = new Socket(LOCALHOST_IP_ADDRESS, DEFAULT_PORT);
-                Elog.d(NfcMainPage.TAG, "[NfcClient]createConnection() re-try :" + i + "");
-                mSocket = new LocalSocket();
-                LocalSocketAddress name = new LocalSocketAddress(
-                        LOCALSOCKET_NAME, LocalSocketAddress.Namespace.FILESYSTEM);
-                mSocket.connect(name);
-                mSocket.setSoTimeout(timeout);
-                if (mSocket.isConnected() == false) {
-                    Elog.d(NfcMainPage.TAG, "[NfcClient] createConnection nfcstackp FAIL !");
-                    Thread.sleep(10000);
-                } else {
-                    break;
-                }
-            } catch (IOException e) {
-                Elog.w(NfcMainPage.TAG, "[NfcClient]createConnection IOException: "
-                        + e.getMessage());
-                mSocket = null;
-            } catch (InterruptedException e) {
-                // TODO Auto-generated catch block
-                e.printStackTrace();
-            }
-        }
-        if (mSocket == null) {
-            return false;
-        }
-        try {
-            mOutputStream = new DataOutputStream(mSocket.getOutputStream());
-            mInputStream = new DataInputStream(mSocket.getInputStream());
-        } catch (IOException e) {
-            Elog.w(NfcMainPage.TAG, "[NfcClient]getStream IOException: " + e.getMessage());
-            try {
-                mSocket.close();
-                mSocket = null;
-            } catch (IOException e1) {
-                mSocket = null;
-            }
-            return false;
-        }
-        setConnected(true);
-        mPollingThr = new ReceiveThread(mInputStream, context);
-        mThread = new Thread(mPollingThr);
-        mThread.start();
-        return true;
-    }
-
-    public void setConnected(boolean connected) {
-        this.mConnected = connected;
-    }
-
-    public boolean isConnected() {
-        return mConnected;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcCommand.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcCommand.java
deleted file mode 100644
index b719fdb..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcCommand.java
+++ /dev/null
@@ -1,518 +0,0 @@
-/*
- * To change this template, choose Tools | Templates
- * and open the template in the editor.
- */
-package com.mediatek.engineermode.hqanfc;
-
-import android.widget.CheckBox;
-import android.widget.RadioButton;
-//import android.widget.RadioGroup;
-
-//import com.mediatek.engineermode.R;
-
-import java.nio.ByteBuffer;
-
-/**
- *
- * @author mtk54045
- */
-public class NfcCommand {
-
-    public static final int RECEIVE_DATA_SIZE = 1024;
-    public static final int MAIN_MESSAGE_SIZE = 8;
-    public static final int INT_SIZE = 4;
-    public static final String ACTION_PRE = "com.mediatek.hqanfc.";
-    public static final String MESSAGE_CONTENT_KEY = "content";
-    private static final int POS_3 = 3;
-    private static final int POS_4 = 4;
-    private static final int POS_5 = 5;
-    private static final int MOVE_BIT_8 = 8;
-    private static final int MOVE_BIT_16 = 16;
-    private static final int MOVE_BIT_24 = 24;
-    private static final int NUMBER_OXFF = 0xff;
-
-      /* BITMAP OF EM_ALS_READER_M_TYPE */
-    public static final int EM_ALS_READER_M_TYPE_A = (1 << 0);
-    public static final int EM_ALS_READER_M_TYPE_B = (1 << 1);
-    public static final int EM_ALS_READER_M_TYPE_F = (1 << 2);
-    public static final int EM_ALS_READER_M_TYPE_V = (1 << 3);
-    public static final int EM_ALS_READER_M_TYPE_BPRIME = (1 << 4);
-    public static final int EM_ALS_READER_M_TYPE_KOVIO = (1 << 5);
-
-    /* BITMAP OF EM_ALS_READER_M_SPDRATE */
-    public static final int EM_ALS_READER_M_SPDRATE_106 = (1 << 0);
-    public static final int EM_ALS_READER_M_SPDRATE_212 = (1 << 1);
-    public static final int EM_ALS_READER_M_SPDRATE_424 = (1 << 2);
-    public static final int EM_ALS_READER_M_SPDRATE_848 = (1 << 3);
-    public static final int EM_ALS_READER_M_SPDRATE_662 = (1 << 4);
-    public static final int EM_ALS_READER_M_SPDRATE_2648 = (1 << 5);
-    /* BITMAP OF EM_ENABLE_FUNC */
-    public static final int EM_ENABLE_FUNC_READER_MODE = (1 << 0);
-    public static final int EM_ENABLE_FUNC_RCARDR_MODE = (1 << 1);
-    public static final int EM_ENABLE_FUNC_P2P_MODE = (1 << 2);
-    /* BITMAP OF EM_ALS_CARD_M_SW_NUM */
-    public static final int EM_ALS_CARD_M_SW_NUM_SWIO1 = (1 << 0);
-    public static final int EM_ALS_CARD_M_SW_NUM_SWIO2 = (1 << 1);
-    public static final int EM_ALS_CARD_M_SW_NUM_SWIOSE = (1 << 2);
-    /* BITMAP OF EM_P2P_ROLE */
-    public static final int EM_P2P_ROLE_INITIATOR_MODE = (1 << 0);
-    public static final int EM_P2P_ROLE_TARGET_MODE = (1 << 1);
-    /* BITMAP OF EM_P2P_MODE */
-    public static final int EM_P2P_MODE_PASSIVE_MODE = (1 << 0);
-    public static final int EM_P2P_MODE_ACTIVE_MODE = (1 << 1);
-
-    public static final int EM_ALS_READER_M_SUB_CARRIER = 0;
-    public static final int EM_ALS_READER_M_DUAL_SUB_CARRIER = 1;
-    public static final int EM_ALS_READER_M_CODING_MODE_4 = 0;
-    public static final int EM_ALS_READER_M_CODING_MODE_256 = 1;
-
-    private int mMessageType;
-    private ByteBuffer mMessageContent;
-
-    public NfcCommand(int msgType, ByteBuffer bufferCont) {
-        mMessageType = msgType;
-        mMessageContent = bufferCont;
-    }
-
-    public ByteBuffer getMessageContent() {
-        return mMessageContent;
-    }
-
-    public void setMessageContent(ByteBuffer mMessageLenContent) {
-        this.mMessageContent = mMessageLenContent;
-    }
-
-    public int getMessageType() {
-        return mMessageType;
-    }
-
-    public void setMessageType(int messageType) {
-        this.mMessageType = messageType;
-    }
-
-    public static class DataConvert {
-
-        public static byte[] intToLH(int n) {
-            byte[] b = new byte[INT_SIZE];
-            b[0] = (byte) (n & NUMBER_OXFF);
-            b[1] = (byte) (n >> MOVE_BIT_8 & NUMBER_OXFF);
-            b[2] = (byte) (n >> MOVE_BIT_16 & NUMBER_OXFF);
-            b[POS_3] = (byte) (n >> MOVE_BIT_24 & NUMBER_OXFF);
-            return b;
-        }
-
-        public static int byteToInt(byte[] b) {
-            int n = 0;
-            for (int i = 0; i < INT_SIZE; i++) {
-                int c = b[POS_3 - i] & NUMBER_OXFF;
-                n = (n << MOVE_BIT_8) + c;
-            }
-            return n;
-        }
-
-        static int byte2uint16(byte[] b) {
-            int n = 0;
-            if (b == null || b.length != 2) {
-                throw new IllegalArgumentException("invalid uint16 byte array");
-            }
-            n = b[0] + b[1] << 8;
-            return n;
-        }
-
-        public static byte[] shortToLH(short n) {
-            byte[] b = new byte[2];
-            b[0] = (byte) (n & NUMBER_OXFF);
-            b[1] = (byte) (n >> MOVE_BIT_8 & NUMBER_OXFF);
-            return b;
-        }
-
-        public static byte[] getByteArr(ByteBuffer buffer) {
-            byte[] b = new byte[INT_SIZE];
-            buffer.get(b);
-            return b;
-        }
-
-        public static String printHexString(byte[] b, int length) {
-            String string = "";
-            int leng = b.length;
-            if (0 != length) {
-                leng = length;
-            }
-
-            for (int i = 0; i < leng; i++) {
-                String hex = Integer.toHexString(b[i] & 0xFF);
-                if (hex.length() == 1) {
-                    hex = '0' + hex;
-                }
-                // string = string + hex.toUpperCase() + " ";
-                string = string + "0x" + hex.toUpperCase() + " ";
-            }
-            return string;
-        }
-
-        public static String printHexString(byte b) {
-            String string = "";
-            String hex = Integer.toHexString(b & NUMBER_OXFF);
-            if (hex.length() == 1) {
-                hex = '0' + hex;
-            }
-            // string = string + hex.toUpperCase() + " ";
-            string = string + "0x" + hex.toUpperCase() + " ";
-            return string;
-        }
-
-        public static long readUnsignedInt(byte[] bytes) {
-            long b0 = (long) (bytes[0] & NUMBER_OXFF);
-            long b1 = ((long) (bytes[1] & NUMBER_OXFF)) << MOVE_BIT_8;
-            long b2 = ((long) (bytes[2] & NUMBER_OXFF)) << MOVE_BIT_16;
-            long b3 = ((long) (bytes[POS_3] & NUMBER_OXFF)) << MOVE_BIT_24;
-            return (long) (b0 | b1 | b2 | b3);
-        }
-    }
-
-    /* FOR EM */
-    // def SUPPORT_EM
-    public static class CommandType {
-        public static final int MTK_NFC_EM_START_CMD = 100;
-        public static final int MTK_NFC_EM_ALS_READER_MODE_REQ = 101;
-        public static final int MTK_NFC_EM_ALS_READER_MODE_RSP = 102;
-        public static final int MTK_NFC_EM_ALS_READER_MODE_OPT_REQ = 103;
-        public static final int MTK_NFC_EM_ALS_READER_MODE_OPT_RSP = 104;
-        public static final int MTK_NFC_EM_ALS_P2P_MODE_REQ = 105;
-        public static final int MTK_NFC_EM_ALS_P2P_MODE_RSP = 106;
-        public static final int MTK_NFC_EM_ALS_CARD_MODE_REQ = 107;
-        public static final int MTK_NFC_EM_ALS_CARD_MODE_RSP = 108;
-        public static final int MTK_NFC_EM_POLLING_MODE_REQ = 109;
-        public static final int MTK_NFC_EM_POLLING_MODE_RSP = 110;
-        public static final int MTK_NFC_EM_TX_CARRIER_ALS_ON_REQ = 111;
-        public static final int MTK_NFC_EM_TX_CARRIER_ALS_ON_RSP = 112;
-        public static final int MTK_NFC_EM_VIRTUAL_CARD_REQ = 113;
-        public static final int MTK_NFC_EM_VIRTUAL_CARD_RSP = 114;
-        public static final int MTK_NFC_EM_PNFC_CMD_REQ = 115;
-        public static final int MTK_NFC_EM_PNFC_CMD_RSP = 116;
-        public static final int MTK_NFC_EM_POLLING_MODE_NTF = 117;
-        public static final int MTK_NFC_EM_ALS_READER_MODE_NTF = 118;
-        public static final int MTK_NFC_EM_ALS_P2P_MODE_NTF = 119;
-        public static final int MTK_NFC_EM_STOP_CMD = 120;
-
-        public static final int MTK_NFC_TESTMODE_SETTING_REQ = 127;  // option
-        public static final int MTK_NFC_TESTMODE_SETTING_RSP = 128;
-        public static final int MTK_EM_LOOPBACK_TEST_REQ = 129;  // loop back test
-        public static final int MTK_EM_LOOPBACK_TEST_RSP = 130;
-        public static final int MTK_NFC_SW_VERSION_QUERY = 131;  // version query
-        public static final int MTK_NFC_SW_VERSION_RESPONSE = 132;
-        public static final int MTK_NFC_EM_DEACTIVATE_CMD = 135; // deactivate : 0 idle
-        public static final int MTK_NFC_FM_SWP_TEST_REQ = 201;  // swp test
-        public static final int MTK_NFC_FM_SWP_TEST_NTF = 202;
-        public static final int MTK_NFC_FM_SWP_TEST_RSP = 203;
-
-        public static final int MTK_NFC_EM_MSG_END = 204;
-    }
-
-    // public static class CommandType {
-    // public static final int MTK_NFC_EM_SETART_CMD = 100;
-    // public static final int MTK_NFC_EM_ALS_READER_MODE_REQ = 101;
-    // public static final int MTK_NFC_EM_ALS_READER_MODE_RSP = 102;
-    // public static final int MTK_NFC_EM_ALS_READER_MODE_OPT_REQ = 103;
-    // public static final int MTK_NFC_EM_ALS_READER_MODE_OPT_RSP = 104;
-    // public static final int MTK_NFC_EM_ALS_P2P_MODE_REQ = 105;
-    // public static final int MTK_NFC_EM_ALS_P2P_MODE_RSP = 106;
-    // public static final int MTK_NFC_EM_ALS_CARD_MODE_REQ = 107;
-    // public static final int MTK_NFC_EM_ALS_CARD_MODE_RSP = 108;
-    // public static final int MTK_NFC_EM_POLLING_MODE_REQ = 109;
-    // public static final int MTK_NFC_EM_POLLING_MODE_RSP = 110;
-    // public static final int MTK_NFC_EM_TX_CARRIER_ALS_ON_REQ = 111;
-    // public static final int MTK_NFC_EM_TX_CARRIER_ALS_ON_RSP = 112;
-    // public static final int MTK_NFC_EM_VIRTUAL_CARD_REQ = 113;
-    // public static final int MTK_NFC_EM_VIRTUAL_CARD_RSP = 114;
-    // public static final int MTK_NFC_EM_PNFC_CMD_REQ = 115;
-    // public static final int MTK_NFC_EM_PNFC_CMD_RSP = 116;
-    // public static final int MTK_NFC_EM_POLLING_MODE_NTF = 117;
-    // public static final int MTK_NFC_EM_STOP_CMD = 118;
-    // }
-
-    public static class BitMapValue {
-        public static int getTypeValue(CheckBox[] checkBoxs) {
-            int result = 0;
-            result |= checkBoxs[0].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_A : 0;
-            result |= checkBoxs[1].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_B : 0;
-            result |= checkBoxs[2].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_F : 0;
-            result |= checkBoxs[POS_3].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_V : 0;
-           // result |= checkBoxs[POS_4].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_BPRIME : 0;
-            result |= checkBoxs[POS_4].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_KOVIO : 0;
-            return result;
-        }
-
-        public static int getTypeAbDataRateValue(RadioButton[] checkBoxs) {
-            int result = 0;
-            result |= checkBoxs[0].isChecked() ? NfcCommand.EM_ALS_READER_M_SPDRATE_106 : 0;
-            result |= checkBoxs[1].isChecked() ? NfcCommand.EM_ALS_READER_M_SPDRATE_212 : 0;
-            result |= checkBoxs[2].isChecked() ? NfcCommand.EM_ALS_READER_M_SPDRATE_424 : 0;
-            result |= checkBoxs[POS_3].isChecked() ? NfcCommand.EM_ALS_READER_M_SPDRATE_848 : 0;
-            return result;
-        }
-
-        public static int getTypeFDataRateValue(RadioButton[] checkBoxs) {
-            int result = 0;
-            result |= checkBoxs[0].isChecked() ? NfcCommand.EM_ALS_READER_M_SPDRATE_212 : 0;
-            result |= checkBoxs[1].isChecked() ? NfcCommand.EM_ALS_READER_M_SPDRATE_424 : 0;
-            return result;
-        }
-
-        public static int getTypeVDataRateValue(RadioButton[] checkBoxs) {
-            int result = 0;
-            result |= checkBoxs[0].isChecked() ? NfcCommand.EM_ALS_READER_M_SPDRATE_662 : 0;
-            result |= checkBoxs[1].isChecked() ? NfcCommand.EM_ALS_READER_M_SPDRATE_2648 : 0;
-            return result;
-        }
-/*
-        public static int getTypeVSubcarrier(RadioButton[] radioGroup) {
-            int checked = -1, result = 0;
-            for (int i = 0; i < radioGroup.getChildCount(); i++) {
-                if (radioGroup.getChildAt(i).getId() == radioGroup.getCheckedRadioButtonId()) {
-                    checked = i;
-                    break;
-                }
-            }
-            switch (checked) {
-            case 0:
-                result = NfcCommand.EM_ALS_READER_M_SUB_CARRIER;
-                break;
-            case 1:
-                result = NfcCommand.EM_ALS_READER_M_DUAL_SUB_CARRIER;
-                break;
-            default:
-                break;
-            }
-            return result;
-        }
-
-        public static int getTypeVCodingMode(RadioButton[] radioGroup) {
-            int checked = -1, result = 0;
-            for (int i = 0; i < radioGroup.getChildCount(); i++) {
-                if (radioGroup.getChildAt(i).getId() == radioGroup.getCheckedRadioButtonId()) {
-                    checked = i;
-                    break;
-                }
-            }
-            switch (checked) {
-            case 0:
-                result = NfcCommand.EM_ALS_READER_M_CODING_MODE_4;
-                break;
-            case 1:
-                result = NfcCommand.EM_ALS_READER_M_CODING_MODE_256;
-                break;
-            default:
-                break;
-            }
-            return result;
-        }
-*/
-
-/*        public static int getTypeADataRateValue(RadioGroup radioGroup) {
-            int checked = -1, result = 0;
-            for (int i = 0; i < radioGroup.getChildCount(); i++) {
-                if (radioGroup.getChildAt(i).getId() == radioGroup.getCheckedRadioButtonId()) {
-                    checked = i;
-                    break;
-                }
-            }
-            switch (checked) {
-            case 0:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_106;
-                break;
-            case 1:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_212;
-                break;
-            case 2:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_424;
-                break;
-            case 3:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_848;
-                break;
-            default:
-                break;
-            }
-            return result;
-        }
-
-        public static int getTypeBDataRateValue(RadioGroup radioGroup) {
-            int checked = -1, result = 0;
-            for (int i = 0; i < radioGroup.getChildCount(); i++) {
-                if (radioGroup.getChildAt(i).getId() == radioGroup.getCheckedRadioButtonId()) {
-                    checked = i;
-                    break;
-                }
-            }
-            switch (checked) {
-            case 0:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_106;
-                break;
-            case 1:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_212;
-                break;
-            case 2:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_424;
-                break;
-            case 3:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_848;
-                break;
-            default:
-                break;
-            }
-            return result;
-        }
-
-        public static int getTypeFDataRateValue(RadioGroup radioGroup) {
-            int checked = -1, result = 0;
-            for (int i = 0; i < radioGroup.getChildCount(); i++) {
-                if (radioGroup.getChildAt(i).getId() == radioGroup.getCheckedRadioButtonId()) {
-                    checked = i;
-                    break;
-                }
-            }
-            switch (checked) {
-            case 0:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_212;
-                break;
-            case 1:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_424;
-                break;
-            default:
-                break;
-            }
-            return result;
-        }
-
-        public static int getTypeVDataRateValue(RadioGroup radioGroup) {
-            int checked = -1, result = 0;
-            for (int i = 0; i < radioGroup.getChildCount(); i++) {
-                if (radioGroup.getChildAt(i).getId() == radioGroup.getCheckedRadioButtonId()) {
-                    checked = i;
-                    break;
-                }
-            }
-            switch (checked) {
-            case 0:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_662;
-                break;
-            case 1:
-                result = NfcCommand.EM_ALS_READER_M_SPDRATE_2648;
-                break;
-            default:
-                break;
-            }
-            return result;
-        }
-
-        public static int getTypeVSubcarrier(RadioGroup radioGroup) {
-            int checked = -1, result = 0;
-            for (int i = 0; i < radioGroup.getChildCount(); i++) {
-                if (radioGroup.getChildAt(i).getId() == radioGroup.getCheckedRadioButtonId()) {
-                    checked = i;
-                    break;
-                }
-            }
-            switch (checked) {
-            case 0:
-                result = NfcCommand.EM_ALS_READER_M_SUB_CARRIER;
-                break;
-            case 1:
-                result = NfcCommand.EM_ALS_READER_M_DUAL_SUB_CARRIER;
-                break;
-            default:
-                break;
-            }
-            return result;
-        }
-
-        public static int getTypeVCodingMode(RadioGroup radioGroup) {
-            int checked = -1, result = 0;
-            for (int i = 0; i < radioGroup.getChildCount(); i++) {
-                if (radioGroup.getChildAt(i).getId() == radioGroup.getCheckedRadioButtonId()) {
-                    checked = i;
-                    break;
-                }
-            }
-            switch (checked) {
-            case 0:
-                result = NfcCommand.EM_ALS_READER_M_CODING_MODE_4;
-                break;
-            case 1:
-                result = NfcCommand.EM_ALS_READER_M_CODING_MODE_256;
-                break;
-            default:
-                break;
-            }
-            return result;
-        }
-*/
-        public static int getFunctionValue(CheckBox[] checkBoxs) {
-            int result = 0;
-            result |= checkBoxs[0].isChecked() ? NfcCommand.EM_ENABLE_FUNC_READER_MODE : 0;
-            result |= checkBoxs[1].isChecked() ? NfcCommand.EM_ENABLE_FUNC_RCARDR_MODE : 0;
-            result |= checkBoxs[2].isChecked() ? NfcCommand.EM_ENABLE_FUNC_P2P_MODE : 0;
-            return result;
-        }
-
-        public static int getSwioValue(CheckBox[] checkBoxs) {
-            int result = 0;
-            result |= checkBoxs[0].isChecked() ? NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIO1 : 0;
-            result |= checkBoxs[1].isChecked() ? NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIO2 : 0;
-            result |= checkBoxs[2].isChecked() ? NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIOSE : 0;
-            return result;
-        }
-    }
-
-
-    public static class RspResult {
-        public static final int SUCCESS = 0;
-        public static final int FAIL = 1;
-        // TAG ADD
-        public static final int NFC_STATUS_NOT_SUPPORT = (0xA);
-        public static final int NFC_STATUS_INVALID_NDEF_FORMAT = (0x20); // FOR
-                                                                         // NDEF
-                                                                         // USE
-        public static final int NFC_STATUS_INVALID_FORMAT = (0x21); // FOR NDEF
-                                                                    // USE
-        public static final int NFC_STATUS_NDEF_EOF_REACHED = (0x22);
-        public static final int NFC_STATUS_NO_SIM = (0xE1);
-        public static final int NFC_STATUS_REMOVE_SE = (0xE3);
-        public static final int NFC_STATUS_LINK_UP = 1;
-        public static final int NFC_STATUS_LINK_DOWN = 0;
-    }
-
-    public static class EmAction {
-        public static final int ACTION_START = 0;
-        public static final int ACTION_STOP = 1;
-        public static final int ACTION_RUNINBG = 2;
-    }
-
-    public static class PollingPhase {
-        public static final int PHASE_LISTEN = 0;
-        public static final int PHASE_PAUSE = 1;
-    }
-
-    public static class P2pDisableCardM {
-        public static final int NOT_DISABLE = 0;
-        public static final int DISABLE = 1;
-    }
-
-    public static class ReaderModeRspResult {
-        public static final int CONNECT = 0;
-        public static final int FAIL = 1;
-        public static final int DISCONNECT = 2;
-    }
-
-    public static class ReaderModeRspNdef {
-        public static final int NDEF = 0;
-        public static final int NON_NDEF = 1;
-    }
-
-    public static class EmOptAction {
-        public static final int READ = 0;
-        public static final int WRITE = 1;
-        public static final int FORMAT = 2;
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcCommandHandler.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcCommandHandler.java
deleted file mode 100644
index 49fd08a..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcCommandHandler.java
+++ /dev/null
@@ -1,109 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.content.Context;
-import android.content.Intent;
-
-import com.mediatek.engineermode.Elog;
-
-import java.nio.ByteBuffer;
-import java.util.concurrent.ArrayBlockingQueue;
-import java.util.concurrent.BlockingQueue;
-
-/**
- * 
- * @author mtk54045
- */
-public class NfcCommandHandler {
-
-    private static final int QUEUE_SIZE = 50;
-    private BlockingQueue<NfcCommand> mCommandQueue = new ArrayBlockingQueue<NfcCommand>(QUEUE_SIZE);
-    private Thread mConsumerThr;
-    private Context mContext;
-    private static NfcCommandHandler sInstance;
-
-    public static synchronized NfcCommandHandler getInstance(Context context) {
-        if (sInstance == null) {
-            sInstance = new NfcCommandHandler(context);
-        }
-        return sInstance;
-    }
-
-    public NfcCommandHandler(Context context) {
-        Elog.w(NfcMainPage.TAG, "[NfcCommandHandler]NfcCommandHandler NfcCommandHandler()");
-        mContext = context;
-        mConsumerThr = new Thread(new Consumer());
-        mConsumerThr.start();
-    }
-
-    public void destroy() {
-        mCommandQueue.clear();
-        mConsumerThr.interrupt();
-    }
-
-    // put the recieve data to the queue
-    public boolean execute(NfcCommand entity) {
-        Elog.w(NfcMainPage.TAG, "[NfcCommandHandler] execute()");
-        boolean result = false;
-        try {
-            mCommandQueue.put((NfcCommand) entity);
-            result = true;
-        } catch (InterruptedException ex) {
-            Elog.w(NfcMainPage.TAG, "[NfcCommandHandler]execute InterruptedException: " + ex.getMessage());
-        }
-        return result;
-    }
-
-    private class Consumer implements Runnable {
-
-        // private BlockingQueue<NfcCommand> commandQueue;
-        //
-        // public Consumer(BlockingQueue<NfcCommand> queue) {
-        // this.commandQueue = queue;
-        // }
-
-        @Override
-        public void run() {
-            while (true) {
-                try {
-                    Elog.w(NfcMainPage.TAG, "[NfcCommandHandler] Consumer take.");
-                    if (mCommandQueue == null) {
-                        Elog.w(NfcMainPage.TAG, "[NfcCommandHandler] mCommandQueue is null.");
-                    } else {
-                        NfcCommand command = mCommandQueue.take();
-                        processCommand(command);
-                    }
-                } catch (InterruptedException ex) {
-                    Elog.w(NfcMainPage.TAG, "[NfcCommandHandler]Consumer InterruptedException: " + ex.getMessage());
-                    ex.printStackTrace();
-                }
-            }
-        }
-    }
-
-    // // inner class: Take the recieve data from the queue and handler it
-    // private class Consumer implements Runnable {
-    //
-    // @Override
-    // public void run() {
-    // Elog.w(NfcMainPage.TAG, "NfcCommandHandler Consumer");
-    // while (true) {
-    // try {
-    // NfcCommand command = mCommandQueue.take();
-    // processCommand(command);
-    // } catch (InterruptedException ex) {
-    // Elog.w(NfcMainPage.TAG, "Consumer InterruptedException: " +
-    // ex.getMessage());
-    // ex.printStackTrace();
-    // }
-    // }
-    // }
-    // }
-
-    private void processCommand(NfcCommand receiveData) {
-        Intent intent = new Intent();
-        intent.setAction(NfcCommand.ACTION_PRE + receiveData.getMessageType());
-        ByteBuffer content = receiveData.getMessageContent();
-        intent.putExtra(NfcCommand.MESSAGE_CONTENT_KEY, (content == null) ? null : content.array());
-        mContext.sendBroadcast(intent);
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcEmReqRsp.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcEmReqRsp.java
deleted file mode 100644
index 3cf62d8..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcEmReqRsp.java
+++ /dev/null
@@ -1,1151 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.hqanfc.NfcCommand.DataConvert;
-
-import java.nio.BufferOverflowException;
-import java.nio.BufferUnderflowException;
-import java.nio.ByteBuffer;
-
-/**
- *
- * @author mtk54045
- */
-public class NfcEmReqRsp {
-
-    private static final int TAG_WRITE_MAXDATA = 512;
-
-    // typedef struct mtk_nfc_sw_version_rsp{
-    // CHAR mv_ver[19];
-    // UINT16 fw_ver;
-    // UINT16 hw_ver;
-    // }mtk_nfc_sw_version_rsp_t;
-    public static class NfcEmVersionRsp implements RawOperation {
-        private static final int DATA_LENGTH = 19;
-        public static final int CONTENT_SIZE = DATA_LENGTH + 2 + 2 + 2;
-
-        public byte[] mMwVersion;
-        public int mFwVersion;
-        public int mHwVersion;
-        public int mChipVersion;
-
-        public NfcEmVersionRsp() {
-            mMwVersion = new byte[DATA_LENGTH];
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            buffer.get(mMwVersion, 0, DATA_LENGTH);
-            int version = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mFwVersion = (int) (version & 0xFFFF);
-            mHwVersion = (int) ((version >> 16) & 0xFFFF);
-            byte[] u16buffer = new byte[2];
-            buffer.get(u16buffer, 0, 2);
-            mChipVersion = DataConvert.byte2uint16(u16buffer);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(mMwVersion, 0, DATA_LENGTH);
-            buffer.put(DataConvert.intToLH(mFwVersion));
-            buffer.put(DataConvert.intToLH(mHwVersion));
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct s_mtk_nfc_test_mode_setting_req{
-    // UINT16 forceDownload; // 1: enable
-    // UINT16 tagAutoPresenceChk; // 1: enable
-    // }s_mtk_nfc_test_mode_setting_req_t;
-    public static class NfcEmOptionReq extends NfcEmReq {
-        public static final int CONTENT_SIZE = 4;
-        public short mForceDownload;
-        public short mAutoCheck;
-
-        public NfcEmOptionReq() {
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            int option = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mForceDownload = (short) (option & 0xFFFF);
-            mAutoCheck = (short) ((option >> 16) & 0xFFFF);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.shortToLH(mForceDownload));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_test_mode_setting_req forceDownload: " + mForceDownload);
-            buffer.put(DataConvert.shortToLH(mAutoCheck));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_test_mode_setting_req tagAutoPresenceChk: " + mAutoCheck);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct s_mtk_nfc_test_mode_setting_rsp{
-    // UINT16 result;
-    // }s_mtk_nfc_test_mode_setting_rsp_t;
-    public static class NfcEmOptionRsp {
-        public static final int CONTENT_SIZE = 1;
-        public byte mResult;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mResult = buffer.get();
-            Elog.d(NfcMainPage.TAG, "NfcEmOptionRsp result: " + mResult);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(mResult);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct s_mtk_nfc_loopback_test_req{
-    // CHAR action;
-    // }s_mtk_nfc_test_mode_setting_req_t;
-    public static class NfcEmLoopbackReq extends NfcEmReq {
-        public static final int CONTENT_SIZE = 1;
-        public byte mAction;
-
-        public NfcEmLoopbackReq() {
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mAction = buffer.get();
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(mAction);
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_loopback_test_req action: " + mAction);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct s_mtk_nfc_loopback_test_rsp{
-    // CHAR result;
-    // }s_mtk_nfc_loopback_test_rsp_t;
-    public static class NfcEmLoopbackRsp {
-        public static final int CONTENT_SIZE = 1;
-        public byte mResult;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mResult = buffer.get();
-            Elog.d(NfcMainPage.TAG, "NfcEmLoopbackRsp result: " + mResult);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(mResult);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct s_mtk_nfc_fm_swp_test_req{
-    // INT32 action;
-    // }s_mtk_nfc_fm_swp_test_req_t;
-    public static class NfcEmSwpReq extends NfcEmReq {
-        public static final int CONTENT_SIZE = 4;
-        public int mAction;
-
-        public NfcEmSwpReq() {
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mAction = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mAction));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_fm_swp_test_req action: " + mAction);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct s_mtk_nfc_fm_swp_test_rsp{
-    // INT32 result;
-    // }s_mtk_nfc_fm_swp_test_rsp_t;
-    public static class NfcEmSwpRsp extends NfcEmRsp {
-    }
-
-    // typedef struct mtk_nfc_em_pnfc_req{
-    // unsigned int action; /*Action, please refer ENUM of EM_ACTION*/
-    // unsigned int datalen;
-    // unsigned char data[256];
-    // }s_mtk_nfc_em_pnfc_req;
-    public static class NfcEmPnfcReq extends NfcEmReq {
-
-        public static final int DATA_MAX_LENGTH = 256;
-        public static final int CONTENT_SIZE = DATA_MAX_LENGTH + NfcCommand.INT_SIZE * 2;
-        public int mAction;
-        public int mDataLen;
-        public byte[] mData;
-
-        public NfcEmPnfcReq() {
-            mData = new byte[DATA_MAX_LENGTH];
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mAction = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mDataLen = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            buffer.get(mData, 0, mDataLen);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mAction));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_em_pnfc_req action: " + mAction);
-            buffer.put(DataConvert.intToLH(mDataLen));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_em_pnfc_req datalen: " + mDataLen);
-            buffer.put(mData, 0, mDataLen);
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_em_pnfc_req data: " + new String(mData));
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-
-    }
-
-    // typedef struct mtk_nfc_em_pnfc_rsp{
-    // unsigned int result; /*0:Success,1:Fail*/
-    // unsigned int datalen;
-    // unsigned char data[256];
-    // }s_mtk_nfc_em_pnfc_rsp;
-    public static class NfcEmPnfcRsp implements RawOperation {
-        private static final int DATA_LENGTH = 256;
-        public static final int CONTENT_SIZE = 4 + 4 + DATA_LENGTH;
-
-        public int mResult;
-        public int mLength;
-        public byte[]mData;
-
-        public NfcEmPnfcRsp() {
-            mData = new byte[DATA_LENGTH];
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mResult = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mLength = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-
-            buffer.get(mData, 0, mLength);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-
-            buffer.put(DataConvert.intToLH(mResult));
-            buffer.put(DataConvert.intToLH(mLength));
-            buffer.put(mData, 0, DATA_LENGTH);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_virtual_card_req{
-    // unsigned int action; /*Action, please refer ENUM of EM_ACTION*/
-    // unsigned int supporttype; /* supporttype, please refer BITMAP of
-    // EM_ALS_READER_M_TYPE*/
-    // //unsigned int typeA_datarate; /* TypeA,datarate, please refer BITMAP of
-    // EM_ALS_READER_M_SPDRATE*/
-    // //unsigned int typeB_datarate; /* TypeB,datarate, please refer BITMAP of
-    // EM_ALS_READER_M_SPDRATE*/
-    // unsigned int typeF_datarate; /* TypeF,datarate, please refer BITMAP of
-    // EM_ALS_READER_M_SPDRATE*/
-    // }s_mtk_nfc_em_virtual_card_req;
-    public static class NfcEmVirtualCardReq extends NfcEmReq {
-
-        public static final int CONTENT_SIZE = 12;
-        public int mAction;
-        public int mSupportType;
-        // public int mTypeADataRate;
-        // public int mTypeBDataRate;
-        public int mTypeFDataRate;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mAction = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mSupportType = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            // mTypeADataRate =
-            // DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            // mTypeBDataRate =
-            // DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mTypeFDataRate = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mAction));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_victual_card_req action: " + mAction);
-            buffer.put(DataConvert.intToLH(mSupportType));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_victual_card_req supporttype: "
-                    + mSupportType);
-            // buffer.put(DataConvert.intToLH(mTypeADataRate));
-            // Elog.d(NfcMainPage.TAG,
-            // "[NfcEmReqRsp]mtk_nfc_em_victual_card_req typeA_datarate: "
-            // + mTypeADataRate);
-            // buffer.put(DataConvert.intToLH(mTypeBDataRate));
-            // Elog.d(NfcMainPage.TAG,
-            // "[NfcEmReqRsp]mtk_nfc_em_victual_card_req typeB_datarate: "
-            // + mTypeBDataRate);
-            buffer.put(DataConvert.intToLH(mTypeFDataRate));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_victual_card_req typeF_datarate: "
-                    + mTypeFDataRate);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_victual_card_rsp{
-    // unsigned int result; /*0:Success,1:Fail*/
-    // }s_mtk_nfc_em_victual_card_rsp;
-    public static class NfcEmVirtualCardRsp extends NfcEmRsp {
-    }
-
-    // typedef struct mtk_nfc_em_tx_carr_als_on_req{
-    // unsigned int action; /*Action, please refer ENUM of EM_ACTION*/
-    // }s_mtk_nfc_em_tx_carr_als_on_req;
-    public static class NfcEmTxCarrAlsOnReq extends NfcEmReq {
-
-        public static final int CONTENT_SIZE = 4;
-        public int mAction;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mAction = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mAction));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_tx_carr_als_on_req action: " + mAction);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_tx_carr_als_on_rsp{
-    // unsigned int result; /*0:Success,1:Fail*/
-    // }s_mtk_nfc_em_tx_carr_als_on_rsp;
-    public static class NfcEmTxCarrAlsOnRsp extends NfcEmRsp {
-    }
-
-    // typedef struct mtk_nfc_em_polling_req{
-    // unsigned int action; /*Action, please refer ENUM of EM_ACTION*/
-    // unsigned int phase; /*0:Listen phase, 1:Pause phase*/
-    // unsigned int Period;
-    // unsigned int enablefunc; /*enablefunc, please refer BITMAP of
-    // EM_ENABLE_FUNC*/
-    // s_mtk_nfc_em_als_p2p_req p2pM;
-    // s_mtk_nfc_em_als_cardm_req cardM;
-    // s_mtk_nfc_em_als_readerm_req readerM;
-    // }s_mtk_nfc_em_polling_req;
-    public static class NfcEmPollingReq extends NfcEmReq {
-
-        public static final int CONTENT_SIZE = NfcCommand.INT_SIZE * 4
-                + NfcEmAlsP2pReq.CONTENT_SIZE + NfcEmAlsCardmReq.CONTENT_SIZE
-                + NfcEmAlsReadermReq.CONTENT_SIZE;
-        public int mAction;
-        public int mPhase;
-        public int mPeriod;
-        public int mEnableFunc;
-        public NfcEmAlsP2pReq mP2pmReq;
-        public NfcEmAlsCardmReq mCardmReq;
-        public NfcEmAlsReadermReq mReadermReq;
-
-        public NfcEmPollingReq() {
-            mP2pmReq = new NfcEmAlsP2pReq();
-            mCardmReq = new NfcEmAlsCardmReq();
-            mReadermReq = new NfcEmAlsReadermReq();
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mAction = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mPhase = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mPeriod = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mEnableFunc = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mP2pmReq.readRaw(buffer);
-            mCardmReq.readRaw(buffer);
-            mReadermReq.readRaw(buffer);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mAction));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_polling_req action: " + mAction);
-            buffer.put(DataConvert.intToLH(mPhase));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_polling_req phase: " + mPhase);
-            buffer.put(DataConvert.intToLH(mPeriod));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_polling_req period: " + mPeriod);
-            buffer.put(DataConvert.intToLH(mEnableFunc));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_polling_req enablefunc: "
-                    + mEnableFunc);
-            mP2pmReq.writeRaw(buffer);
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_polling_req write p2p.");
-            mCardmReq.writeRaw(buffer);
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_polling_req write card mode.");
-            mReadermReq.writeRaw(buffer);
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_polling_req write reader mode.");
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_polling_rsp{
-    // int result; /*0:Success,1:Fail*/
-    // }s_mtk_nfc_em_polling_rsp;
-    public static class NfcEmPollingRsp extends NfcEmRsp {
-    }
-
-    // typedef union {
-    // s_mtk_nfc_em_als_p2p_ntf p2p;
-    // s_mtk_nfc_em_als_cardm_rsp card;
-    // s_mtk_nfc_em_als_readerm_ntf reader;
-    // } s_mtk_nfc_em_polling_func_ntf;
-    //
-    // typedef struct mtk_nfc_em_polling_ntf{
-    // int detecttype; /*enablefunc, please refer ENUM of EM_ENABLE_FUNC*/
-    // s_mtk_nfc_em_polling_func_ntf ntf;
-    // }s_mtk_nfc_em_polling_ntf;
-    public static class NfcEmPollingNty implements RawOperation {
-        public static final int CONTENT_SIZE = NfcCommand.INT_SIZE + NfcEmAlsReadermNtf.CONTENT_SIZE;
-        public int mDetectType;
-        public byte[] mData;
-
-        public NfcEmPollingNty() {
-            mData = new byte[NfcEmAlsReadermNtf.CONTENT_SIZE];
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mDetectType = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_polling_ntf detecttype: "
-                    + mDetectType);
-            buffer.get(mData, 0, NfcEmAlsReadermNtf.CONTENT_SIZE);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mDetectType));
-            buffer.put(mData, 0, NfcEmAlsReadermNtf.CONTENT_SIZE);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_als_p2p_req{
-    // unsigned int action; /*Action, please refer ENUM of EM_ACTION*/
-    // unsigned int supporttype; /* supporttype, please refer BITMAP of
-    // EM_ALS_READER_M_TYPE*/
-    // unsigned int typeA_datarate; /* TypeA,datarate, please refer BITMAP of
-    // EM_ALS_READER_M_SPDRATE*/
-    // unsigned int typeF_datarate; /* TypeV,datarate, please refer BITMAP of
-    // EM_ALS_READER_M_SPDRATE*/
-    // unsigned int mode; /* BITMAPS bit0: Passive mode, bit1: Active mode*/
-    // unsigned int role; /* BITMAPS bit0: Initator, bit1: Target*/
-    // unsigned int isDisableCardM; /* 0: , 1: disable card mode*/
-    // }s_mtk_nfc_em_als_p2p_req;
-    public static class NfcEmAlsP2pReq extends NfcEmReq {
-
-        public static final int CONTENT_SIZE = 28;
-        public int mAction;
-        public int mSupportType;
-        public int mTypeADataRate;
-        public int mTypeFDataRate;
-        public int mMode;
-        public int mRole;
-        public int mIsDisableCardM;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mAction = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mSupportType = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mTypeADataRate = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mTypeFDataRate = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mMode = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mRole = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mIsDisableCardM = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mAction));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_p2p_req action: " + mAction);
-            buffer.put(DataConvert.intToLH(mSupportType));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_p2p_req supporttype: "
-                    + mSupportType);
-            buffer.put(DataConvert.intToLH(mTypeADataRate));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_p2p_req typeA_speedrate: "
-                    + mTypeADataRate);
-            buffer.put(DataConvert.intToLH(mTypeFDataRate));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_p2p_req typeV_speedrate: "
-                    + mTypeFDataRate);
-            buffer.put(DataConvert.intToLH(mMode));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_p2p_req mode: " + mMode);
-            buffer.put(DataConvert.intToLH(mRole));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_p2p_req role: " + mRole);
-            buffer.put(DataConvert.intToLH(mIsDisableCardM));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_p2p_req isDisableCardM: "
-                    + mIsDisableCardM);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_als_p2p_ntf{
-    // int link_status; /*1:llcp link is up,0:llcp link is down*/
-    // //unsigned int datalen;
-    // //unsigned char data[256];
-    // }s_mtk_nfc_em_als_p2p_ntf;
-    public static class NfcEmAlsP2pNtf implements RawOperation {
-
-        public static final int DATA_MAX_LENGTH = 256;
-//        public static final int CONTENT_SIZE = NfcCommand.INT_SIZE * 2 + DATA_MAX_LENGTH;
-        public static final int CONTENT_SIZE = NfcCommand.INT_SIZE;
-        public int mResult;
-//        public int mDataLen;
-//        public byte[] mData;
-
-        public NfcEmAlsP2pNtf() {
-//            mData = new byte[DATA_MAX_LENGTH];
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mResult = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_em_als_p2p_ntf result: " + mResult);
-//            mDataLen = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-//            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_em_als_p2p_ntf datalen: " + mDataLen);
-//            buffer.get(mData, 0, mDataLen);
-//            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_em_als_p2p_ntf data: "
-//                    + new String(mData));
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mResult));
-//            buffer.put(DataConvert.intToLH(mDataLen));
-//            buffer.put(mData, 0, mDataLen);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_als_p2p_rsp{
-    // int result; /*0:Success,1:Fail*/
-    // }s_mtk_nfc_em_als_p2p_rsp;
-    public static class NfcEmAlsP2pRsp extends NfcEmRsp {
-    }
-
-    // typedef struct mtk_nfc_em_als_cardm_req{
-    // unsigned int action; /*Action, please refer ENUM of EM_ACTION*/
-    // unsigned int SWNum; /* SWNum, please refer BITMAP of
-    // EM_ALS_CARD_M_SW_NUM*/
-    // unsigned int supporttype; /* supporttype, please refer BITMAP of
-    // EM_ALS_READER_M_TYPE*/
-    // unsigned int fgvirtualcard; /* 1:enable virtual card, 0:disable virtual
-    // card(default) */
-    // }s_mtk_nfc_em_als_cardm_req;
-    public static class NfcEmAlsCardmReq extends NfcEmReq {
-
-        public static final int CONTENT_SIZE = 16;
-        public int mAction;
-        public int mSwNum;
-        public int mSupportType;
-        public int mFgVirtualCard;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mAction = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mSwNum = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mSupportType = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mAction));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_cardm_req action: " + mAction);
-            buffer.put(DataConvert.intToLH(mSwNum));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_cardm_req SWNum: " + mSwNum);
-            buffer.put(DataConvert.intToLH(mSupportType));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_cardm_req supporttype: "
-                    + mSupportType);
-            buffer.put(DataConvert.intToLH(mFgVirtualCard));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_cardm_req fgvirtualcard: "
-                    + mFgVirtualCard);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_als_cardm_rsp{
-    // int result; /*0:Success,1:Fail*/
-    // }s_mtk_nfc_em_als_cardm_rsp;
-    public static class NfcEmAlsCardmRsp extends NfcEmRsp {
-    }
-
-    // typedef struct mtk_nfc_em_als_readerm_req{
-    // unsigned int action; /*Action, please refer ENUM of EM_ACTION*/
-    // unsigned int supporttype; /* supporttype, please refer BITMAP of
-    // EM_ALS_READER_M_TYPE*/
-    // unsigned int typeA_datarate; /* TypeA,datarate, please refer BITMAP of
-    // EM_ALS_READER_M_SPDRATE*/
-    // unsigned int typeB_datarate; /* TypeB,datarate, please refer BITMAP of
-    // EM_ALS_READER_M_SPDRATE*/
-    // unsigned int typeV_datarate; /* TypeV,datarate, please refer BITMAP of
-    // EM_ALS_READER_M_SPDRATE*/
-    // unsigned int typeF_datarate; /* TypeF,datarate, please refer BITMAP of
-    // EM_ALS_READER_M_SPDRATE*/
-    // unsigned int typeV_subcarrier; /* 0: subcarrier, 1 :dual subcarrier*/
-    // }s_mtk_nfc_em_als_readerm_req;
-    public static class NfcEmAlsReadermReq extends NfcEmReq {
-
-        public static final int CONTENT_SIZE = 32;
-        public int mAction;
-        public int mSupportType;
-        public int mTypeADataRate;
-        public int mTypeBDataRate;
-        public int mTypeVDataRate;
-        public int mTypeFDataRate;
-        public int mTypeVSubcarrier;
-        public int mTypeVCodingMode;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mAction = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mSupportType = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mTypeADataRate = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mTypeBDataRate = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mTypeVDataRate = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mTypeFDataRate = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mTypeVSubcarrier = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mTypeVCodingMode = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mAction));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_readerm_req action: " + mAction);
-            buffer.put(DataConvert.intToLH(mSupportType));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_readerm_req supporttype: "
-                    + mSupportType);
-            buffer.put(DataConvert.intToLH(mTypeADataRate));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_readerm_req typeA_datarate: "
-                    + mTypeADataRate);
-            buffer.put(DataConvert.intToLH(mTypeBDataRate));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_readerm_req typeB_datarate: "
-                    + mTypeBDataRate);
-            buffer.put(DataConvert.intToLH(mTypeVDataRate));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_readerm_req typeV_datarate: "
-                    + mTypeVDataRate);
-            buffer.put(DataConvert.intToLH(mTypeFDataRate));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_readerm_req typeF_datarate: "
-                    + mTypeFDataRate);
-            buffer.put(DataConvert.intToLH(mTypeVSubcarrier));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_readerm_req typeV_subcarrier: "
-                    + mTypeVSubcarrier);
-            buffer.put(DataConvert.intToLH(mTypeVCodingMode));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_readerm_req typeV_codingmode: "
-                    + mTypeVCodingMode);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_als_readerm_ntf{
-    // int result; /*0:Success,Tag connected, 1: Fail, 2:Tag disconnected*/
-    // unsigned int isNDEF; /*1:NDEF, 0: Non-NDEF, 2: NDEF with Read function
-    // only*/
-    // unsigned int UidLen;
-    // unsigned char Uid[10];
-    // }s_mtk_nfc_em_als_readerm_ntf;
-    public static class NfcEmAlsReadermNtf implements RawOperation {
-
-        public static final int DATA_MAX_LENGTH = 32;
-        public static final int CONTENT_SIZE = NfcCommand.INT_SIZE * 3 + DATA_MAX_LENGTH;
-        public int mResult;
-        public int mIsNdef;
-        public int mUidLen;
-        public byte[] mUid;
-
-        public NfcEmAlsReadermNtf() {
-            mUid = new byte[DATA_MAX_LENGTH];
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mResult = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_em_als_readerm_ntf result: " + mResult);
-            mIsNdef = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_em_als_readerm_ntf isNDEF: " + mIsNdef);
-            mUidLen = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_em_als_readerm_ntf UidLen: " + mUidLen);
-            buffer.get(mUid, 0, mUidLen);
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]s_mtk_nfc_em_als_readerm_ntf mUid: "
-                    + new String(mUid));
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mResult));
-            buffer.put(DataConvert.intToLH(mIsNdef));
-            buffer.put(DataConvert.intToLH(mUidLen));
-            buffer.put(mUid, 0, mUidLen);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_als_readerm_rsp{
-    // int result; /*0:Success, 1: Fail,*/
-    // }s_mtk_nfc_em_als_readerm_rsp;
-    public static class NfcEmAlsReadermRsp extends NfcEmRsp {
-    }
-
-    // typedef struct mtk_nfc_em_als_readerm_opt_req{
-    // int action; /*Action, please refer ENUM of EM_OPT_ACTION*/
-    // s_mtk_nfc_tag_write_ndef ndef_write;
-    // }s_mtk_nfc_em_als_readerm_opt_req;
-    public static class NfcEmAlsReadermOptReq extends NfcEmReq {
-
-        public static final int CONTENT_SIZE = NfcCommand.INT_SIZE + NfcTagWriteNdef.CONTENT_SIZE;
-        public int mAction;
-        public NfcTagWriteNdef mTagWriteNdef;
-
-        public NfcEmAlsReadermOptReq() {
-            mTagWriteNdef = new NfcTagWriteNdef();
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mAction = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mTagWriteNdef.readRaw(buffer);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mAction));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_readerm_opt_req action: "
-                    + mAction);
-            mTagWriteNdef.writeRaw(buffer);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    // typedef struct mtk_nfc_em_als_readerm_opt_rsp{
-    // int result; /*0:Success,1:Fail*/
-    // s_mtk_nfc_tag_read_ndef ndef_read;
-    // }s_mtk_nfc_em_als_readerm_opt_rsp;
-    public static class NfcEmAlsReadermOptRsp implements RawOperation {
-
-        public static final int CONTENT_SIZE = NfcCommand.INT_SIZE + NfcTagReadNdef.CONTENT_SIZE;
-        public int mResult;
-        public NfcTagReadNdef mTagReadNdef;
-
-        public NfcEmAlsReadermOptRsp() {
-            mTagReadNdef = new NfcTagReadNdef();
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mResult = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            Elog.d(NfcMainPage.TAG, "[NfcEmReqRsp]mtk_nfc_em_als_readerm_opt_rsp result: "
-                    + mResult);
-            mTagReadNdef.readRaw(buffer);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mResult));
-            mTagReadNdef.writeRaw(buffer);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-//    typedef struct mtk_nfc_tag_read_ndef {
-//        e_mtk_nfc_ndef_type  ndef_type;
-//        unsigned  char lang[3];
-//        unsigned  char recordFlags;
-//        unsigned  char recordId[32];
-//        unsigned  char recordTnf;
-//        unsigned  int  length;
-//        unsigned  char data[NDEF_DATA_LEN];
-//      } s_mtk_nfc_tag_read_ndef;
-
-    public static class NfcTagReadNdef implements RawOperation {
-        private static final int LANG_LENGTH = 3;
-        private static final int RECORD_ID_LENGTH = 32;
-        private static final int DATA_LENGTH = 512;
-        public static final int CONTENT_SIZE = 2 + NfcNdefType.CONTENT_SIZE * 2
-                + LANG_LENGTH + RECORD_ID_LENGTH + DATA_LENGTH;
-        public NfcNdefType mNdefType;
-        public byte[] mLang;
-        public byte mRecordFlags;
-        public byte[] mRecordId;
-        public byte mRecordTnf;
-        public int mLength;
-        public byte[] mData;
-
-        public NfcTagReadNdef() {
-            mNdefType = new NfcNdefType();
-            mLang = new byte[LANG_LENGTH];
-            mRecordId = new byte[RECORD_ID_LENGTH];
-            mData = new byte[DATA_LENGTH];
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-
-            mNdefType.readRaw(buffer);
-            buffer.get(mLang, 0, LANG_LENGTH);
-            mRecordFlags = buffer.get();
-            buffer.get(mRecordId, 0, RECORD_ID_LENGTH);
-            mRecordTnf = buffer.get();
-            mLength = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            buffer.get(mData, 0, DATA_LENGTH);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            mNdefType.readRaw(buffer);
-            buffer.put(mLang, 0, LANG_LENGTH);
-            buffer.put(mRecordFlags);
-            buffer.put(mRecordId, 0, RECORD_ID_LENGTH);
-            buffer.put(mRecordTnf);
-            buffer.put(DataConvert.intToLH(mLength));
-            buffer.put(mData, 0, DATA_LENGTH);
-            mNdefType.writeRaw(buffer);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-
-    }
-
-    public static class NfcTagWriteNdef implements RawOperation {
-
-        public static final int CONTENT_SIZE = NfcCommand.INT_SIZE + NfcNdefType.CONTENT_SIZE
-                + NfcNdefLangType.CONTENT_SIZE + NfcTagWriteNdefData.CONTENT_SIZE;
-        public NfcNdefType mNdefType;
-        public NfcNdefLangType mNdefLangType;
-        public int mLength;
-        public NfcTagWriteNdefData mNdefData;
-
-        public NfcTagWriteNdef() {
-            mNdefType = new NfcNdefType();
-            mNdefLangType = new NfcNdefLangType();
-            mNdefData = new NfcTagWriteNdefData();
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mNdefType.readRaw(buffer);
-            mNdefLangType.readRaw(buffer);
-            mLength = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            mNdefData.readRaw(buffer);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            mNdefType.writeRaw(buffer);
-            mNdefLangType.writeRaw(buffer);
-            buffer.put(DataConvert.intToLH(mLength));
-            mNdefData.writeRaw(buffer);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    public static class NfcNdefType implements RawOperation {
-        public static final int CONTENT_SIZE = 4;
-        public static final int URI = 0;
-        public static final int TEXT = 1;
-        public static final int SP = 2;
-        public static final int OTHERS = 3;
-
-        public int mEnumValue;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mEnumValue = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mEnumValue));
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    public static class NfcNdefLangType implements RawOperation {
-        public static final int CONTENT_SIZE = 4;
-        public static final int DEFAULT = 0;
-        public static final int DE = 1;
-        public static final int EN = 2;
-        public static final int FR = 3;
-
-        public int mEnumValue;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mEnumValue = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mEnumValue));
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    public static class NfcTagWriteNdefData implements RawOperation {
-        public static final int CONTENT_SIZE = EXTTagT.CONTENT_SIZE;
-        public byte[] mData;
-
-        public NfcTagWriteNdefData() {
-            mData = new byte[CONTENT_SIZE];
-        }
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            buffer.get(mData, 0, CONTENT_SIZE);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(mData, 0, CONTENT_SIZE);
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-    }
-
-    public static class SmartPosterT {
-        public static final int CONTENT_SIZE = 132;
-        public static final int COMPANY_LENGTH = 64;
-        public static final int COMPANY_URL_LENGTH = 64;
-        public byte[] mCompany;
-        public short mCompanyLength;
-        public byte[] mCompanyUrl;
-        public short mCompanyUrlLength;
-
-        public SmartPosterT() {
-            mCompany = new byte[COMPANY_LENGTH];
-            mCompanyUrl = new byte[COMPANY_URL_LENGTH];
-        }
-
-        public byte[] getByteArray() {
-            byte[] array = new byte[CONTENT_SIZE];
-            System.arraycopy(mCompany, 0, array, 0, mCompany.length);
-            byte[] shortArray = DataConvert.shortToLH(mCompanyLength);
-            System.arraycopy(shortArray, 0, array, COMPANY_LENGTH, shortArray.length);
-            System.arraycopy(mCompanyUrl, 0, array, COMPANY_LENGTH + shortArray.length,
-                    mCompanyUrl.length);
-            shortArray = DataConvert.shortToLH(mCompanyUrlLength);
-            System.arraycopy(shortArray, 0, array, COMPANY_LENGTH + shortArray.length
-                    + COMPANY_URL_LENGTH, shortArray.length);
-            return array;
-        }
-
-    }
-
-    public static class VcardT {
-        public static final int CONTENT_SIZE = 576;
-        public static final int NAME_LENGTH = 64;
-        public static final int COMPANY_LENGTH = 64;
-        public static final int TITLEP_LENGTH = 64;
-        public static final int TEL_LENGTH = 32;
-        public static final int EMAIL_LENGTH = 64;
-        public static final int ADDRESS_LENGTH = 128;
-        public static final int POSTAL_CODE_LENGTH = 32;
-        public static final int CITY_LENGTH = 64;
-        public static final int COMPANY_URL_LENGTH = 64;
-        public byte[] mName;
-        public byte[] mCompany;
-        public byte[] mTitlep;
-        public byte[] mTel;
-        public byte[] mEmail;
-        public byte[] mAddress;
-        public byte[] mPostalCode;
-        public byte[] mCity;
-        public byte[] mCompanyUrl;
-
-        public VcardT() {
-            mName = new byte[NAME_LENGTH];
-            mCompany = new byte[COMPANY_LENGTH];
-            mTitlep = new byte[TITLEP_LENGTH];
-            mTel = new byte[TEL_LENGTH];
-            mEmail = new byte[EMAIL_LENGTH];
-            mAddress = new byte[ADDRESS_LENGTH];
-            mPostalCode = new byte[POSTAL_CODE_LENGTH];
-            mCity = new byte[CITY_LENGTH];
-            mCompanyUrl = new byte[COMPANY_URL_LENGTH];
-        }
-    }
-
-    public static class TextT {
-        public static final int CONTENT_SIZE = TAG_WRITE_MAXDATA + 2;
-        public static final int DATA_LENGTH = TAG_WRITE_MAXDATA;
-        public byte[] mData;
-        public short mDataLength;
-
-        public TextT() {
-            mData = new byte[DATA_LENGTH];
-        }
-
-        public byte[] getByteArray() {
-
-            byte[] array = new byte[CONTENT_SIZE];
-            System.arraycopy(mData, 0, array, 0, mData.length);
-            byte[] shortArray = DataConvert.shortToLH(mDataLength);
-            System.arraycopy(shortArray, 0, array, DATA_LENGTH, shortArray.length);
-            return array;
-        }
-    }
-
-    public static class UrlT {
-        public static final int CONTENT_SIZE = 66;
-        public static final int DATA_LENGTH = 64;
-        public byte[] mUrlData;
-        public short mUrlDataLength;
-
-        public UrlT() {
-            mUrlData = new byte[DATA_LENGTH];
-        }
-
-        public byte[] getByteArray() {
-            byte[] array = new byte[CONTENT_SIZE];
-            System.arraycopy(mUrlData, 0, array, 0, mUrlData.length);
-            byte[] shortArray = DataConvert.shortToLH(mUrlDataLength);
-            System.arraycopy(shortArray, 0, array, DATA_LENGTH, shortArray.length);
-            return array;
-        }
-
-    }
-
-    public static class EXTTagT {
-        public static final int CONTENT_SIZE = TAG_WRITE_MAXDATA + UrlT.CONTENT_SIZE;
-        public static final int DATA_LENGTH = 64;
-        public byte[] mExtTagType;
-        public byte[] mExtData;
-        public short mExtLength;
-
-        public EXTTagT() {
-            mExtTagType = new byte[DATA_LENGTH];
-            mExtData = new byte[TAG_WRITE_MAXDATA];
-        }
-    }
-
-    // //////
-
-    public abstract static class NfcEmReq implements RawOperation {
-
-        public static final int CONTENT_SIZE = 0;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-
-    }
-
-    public abstract static class NfcEmRsp implements RawOperation {
-
-        public static final int CONTENT_SIZE = 4;
-        public int mResult;
-
-        public void readRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferUnderflowException {
-            mResult = DataConvert.byteToInt(DataConvert.getByteArr(buffer));
-            Elog.d(NfcMainPage.TAG, "NfcEmRsp result: " + mResult);
-        }
-
-        public void writeRaw(ByteBuffer buffer) throws NullPointerException,
-                BufferOverflowException {
-            buffer.put(DataConvert.intToLH(mResult));
-        }
-
-        public int getContentSize() {
-            return CONTENT_SIZE;
-        }
-
-    }
-
-    interface RawOperation {
-        void readRaw(ByteBuffer buffer) throws NullPointerException, BufferUnderflowException;
-
-        void writeRaw(ByteBuffer buffer) throws NullPointerException, BufferOverflowException;
-
-        int getContentSize();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcMainPage.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcMainPage.java
deleted file mode 100644
index 6aa3ef0..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/NfcMainPage.java
+++ /dev/null
@@ -1,177 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.nfc.NfcAdapter;
-import android.os.AsyncTask;
-import android.os.Bundle;
-import android.preference.PreferenceActivity;
-import android.preference.PreferenceScreen;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-
-import java.io.File;
-import java.io.IOException;
-
-/**
- * NFC main menu.
- */
-public class NfcMainPage extends PreferenceActivity {
-    public static final String TAG = "EM/HQA/NFC";
-    private static final String START_LIB_COMMAND = "./system/xbin/nfcstackp";
-    private static final String KILL_LIB_COMMAND = "kill -9 nfcstackp";
-    private static final String QUICK_MODE_FILE = "/sdcard/mtknfcSyncQuickMode";
-    private static final int DIALOG_WAIT = 1;
-    private ConnectServerTask mTask;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        addPreferencesFromResource(R.xml.hqa_nfc_main);
-        showDialog(DIALOG_WAIT);
-        mTask = new ConnectServerTask();
-        mTask.execute();
-    }
-
-    protected void onDestroy() {
-        Elog.i(TAG, "[NfcMainPage]Nfc main page onDestroy().");
-        // nfc enter nci idle flow , wait command ...
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_DEACTIVATE_CMD, null);
-        // nfc enter nci deinit flow
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_STOP_CMD, null);
-        NfcClient.getInstance().closeConnection();
-        mTask.cancel(true);
-        super.onDestroy();
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        switch (id) {
-        case DIALOG_WAIT:
-            ProgressDialog dialog = new ProgressDialog(this);
-            dialog.setMessage("Please Wait...");
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            return dialog;
-        default:
-            Elog.d(TAG, "error dialog ID");
-            break;
-        }
-        return super.onCreateDialog(id);
-    }
-
-    private void closeNFCServiceAtStart() {
-        NfcAdapter adp = NfcAdapter.getDefaultAdapter(getApplicationContext());
-        if (adp.isEnabled()) {
-            if (adp.disable()) {
-                Elog.i(TAG, "[NfcMainPage]Nfc service set off.");
-            } else {
-                Elog.i(TAG, "[NfcMainPage]Nfc service set off Fail.");
-            }
-        } else {
-            Elog.i(TAG, "[NfcMainPage]Nfc service is off");
-        }
-    }
-
-    private void executeXbinFile(final String command, int sleepTime) {
-        new Thread() {
-            @Override
-            public void run() {
-                Elog.d(TAG, "[NfcMainPage]nfc command:" + command);
-                try {
-                    int err = ShellExe.execCommand(command, true);
-                    Elog.d(TAG, "[NfcMainPage]nfc command:result: " + err);
-                } catch (IOException e) {
-                    Elog.e(TAG, "[NfcMainPage]executeXbinFile IOException: " + e.getMessage());
-                    e.printStackTrace();
-                }
-            }
-        } .start();
-        try {
-            Thread.sleep(500);
-        } catch (InterruptedException e) {
-            Elog.e(TAG, "[NfcMainPage]executeXbinFile InterruptedException: " + e.getMessage());
-        }
-    }
-
-    private void setNfcQuickMode(int mode) {
-        File file = new File(QUICK_MODE_FILE);
-        boolean result = false;
-        try {
-            Elog.i(TAG, "[QE]setNfcQuickMode(" + mode);
-            if (!file.exists()) {
-                if (mode == 1) {
-                    result = file.createNewFile();
-                }
-            } else {
-                if (mode == 0) {
-                    result = file.delete();
-                }
-            }
-            Elog.i(TAG, "[QE]setNfcQuickMode(" + mode + ") result:" + result);
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-    }
-
-    private void init() {
-        NfcAdapter adp = NfcAdapter.getDefaultAdapter(getApplicationContext());
-        Elog.i(TAG, "[QE]Engineer Mode clear all.");
-        setNfcQuickMode(0);
-        Elog.i(TAG, "[QE]set file");
-        setNfcQuickMode(1);
-        Elog.i(TAG, "[QE]NFC Disable.");
-        if (adp != null && adp.isEnabled()) {
-            Elog.i(TAG, "[QE] force NFC Disable.");
-            adp.disable();
-        } else {
-            Elog.i(TAG, "[QE]NFC Enable -->Disable.");
-            adp.enable();
-            try {
-                Thread.sleep(100);
-            } catch (InterruptedException e) {
-                Elog.i(TAG, "InterruptedException");
-            }
-            adp.disable();
-        }
-        do {
-            try {
-                Thread.sleep(100);
-            } catch (InterruptedException e) {
-                Elog.i(TAG, "InterruptedException");
-            }
-        } while (adp.isEnabled());
-        executeXbinFile(START_LIB_COMMAND, 500);
-    }
-
-    private class ConnectServerTask extends AsyncTask<Void, Void, Boolean> {
-
-        @Override
-        protected Boolean doInBackground(Void... params) {
-            init();
-            return NfcClient.getInstance().createConnection(NfcMainPage.this);
-        }
-
-        @Override
-        protected void onPostExecute(Boolean result) {
-            if (null != result && result.booleanValue()) {
-                PreferenceScreen screen = getPreferenceScreen();
-                int count = screen.getPreferenceCount();
-                for (int index = 0; index < count; index++) {
-                    screen.getPreference(index).setEnabled(true);
-                }
-                // nfc enter nci init flow
-                NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_START_CMD, null);
-                // nfc enter nci idle flow , wait command ...
-                NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_DEACTIVATE_CMD, null);
-            } else {
-                Toast.makeText(NfcMainPage.this, R.string.hqa_nfc_connect_fail, Toast.LENGTH_SHORT).show();
-            }
-            NfcMainPage.this.dismissDialog(DIALOG_WAIT);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/Option.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/Option.java
deleted file mode 100644
index c17a84f..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/Option.java
+++ /dev/null
@@ -1,151 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.CheckBox;
-//import android.widget.EditText;
-import android.widget.Toast;
-//import android.widget.TextView;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-//import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmOptionReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmOptionRsp;
-
-import java.nio.ByteBuffer;
-
-public class Option extends Activity {
-
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int DIALOG_ID_WAIT = 0;
-    private CheckBox mCbForceDownload;
-    private CheckBox mCbAutoCheck;
-    private Button mBtnReturn;
-    private Button mBtnSet;
-    private NfcEmOptionRsp mResponse;
-    private byte[] mRspArray;
-
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "[Option]mReceiver onReceive");
-            String action = intent.getAction();
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_TESTMODE_SETTING_RSP).equals(action)) {
-                mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mResponse = new NfcEmOptionRsp();
-                    mResponse.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[Option]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                String toastMsg = null;
-                switch (mResponse.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "Option Rsp Result: SUCCESS";
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "Option Rsp Result: FAIL";
-                        break;
-                    default:
-                        toastMsg = "Option Rsp Result: ERROR";
-                        break;
-                }
-                Toast.makeText(Option.this, toastMsg, Toast.LENGTH_SHORT).show();
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[Option]onClick button view is "
-                    + ((Button) arg0).getText());
-            if (arg0.equals(mBtnSet)) {
-                showDialog(DIALOG_ID_WAIT);
-                sendCommand();
-            } else if (arg0.equals(mBtnReturn)) {
-                Option.this.onBackPressed();
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_option);
-        mBtnReturn = (Button) findViewById(R.id.hqa_option_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        mBtnSet = (Button) findViewById(R.id.hqa_option_btn_set);
-        mBtnSet.setOnClickListener(mClickListener);
-        mCbForceDownload = (CheckBox) findViewById(R.id.hqa_option_force_download);
-        mCbAutoCheck = (CheckBox) findViewById(R.id.hqa_option_auto_check);
-        mCbAutoCheck.setChecked(true);
-
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_TESTMODE_SETTING_RSP);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-//        if (!mEnableBackKey) {
-//            return;
-//        }
-        super.onBackPressed();
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        ProgressDialog dialog = null;
-        if (id == DIALOG_ID_WAIT) {
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        }
-        return dialog;
-    }
-
-    private void sendCommand() {
-        NfcEmOptionReq requestCmd = new NfcEmOptionReq();
-        fillRequest(requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_TESTMODE_SETTING_REQ, requestCmd);
-    }
-
-    private void fillRequest(NfcEmOptionReq requestCmd) {
-        requestCmd.mForceDownload = mCbForceDownload.isChecked() ? (short) 1 : (short) 0;
-        requestCmd.mAutoCheck = mCbAutoCheck.isChecked() ? (short) 1 : (short) 0;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/PeerToPeerMode.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/PeerToPeerMode.java
deleted file mode 100644
index 73cf21a..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/PeerToPeerMode.java
+++ /dev/null
@@ -1,345 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-import android.widget.RadioButton;
-import android.widget.RadioGroup;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.BitMapValue;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.P2pDisableCardM;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsP2pNtf;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsP2pReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsP2pRsp;
-
-import java.nio.ByteBuffer;
-
-public class PeerToPeerMode extends Activity {
-
-    protected static final String KEY_P2P_RSP_ARRAY = "p2p_rsp_array";
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int HANDLER_MSG_GET_NTF = 201;
-    private static final int DIALOG_ID_RESULT = 0;
-    private static final int DIALOG_ID_WAIT = 1;
-
-    private static final int CHECKBOX_TYPEA = 0;
-    private static final int CHECKBOX_TYPEF = 1;
-    private static final int CHECKBOX_PASSIVE_MODE = 2;
-    private static final int CHECKBOX_ACTIVE_MODE = 3;
-    private static final int CHECKBOX_INITIATOR = 4;
-    private static final int CHECKBOX_TARGET = 5;
-    private static final int CHECKBOX_DISABLE_CARD = 6;
-    private static final int CHECKBOX_NUMBER = 7;
-
-    private static final int RADIO_P2P_TYPEA_106 = 0;
-    private static final int RADIO_P2P_TYPEA_212 = 1;
-    private static final int RADIO_P2P_TYPEA_424 = 2;
-    private static final int RADIO_P2P_TYPEA_848 = 3;
-    private static final int RADIO_P2P_TYPEF_212 = 4;
-    private static final int RADIO_P2P_TYPEF_424 = 5;
-    private static final int RADIO_NUMBER = 6;
-
-    private CheckBox[] mSettingsCkBoxs = new CheckBox[CHECKBOX_NUMBER];
-    private RadioButton[] mSettingsRadioButtons = new RadioButton[RADIO_NUMBER];
-    private RadioGroup mRgTypeA;
-    private RadioGroup mRgTypeF;
-    private Button mBtnSelectAll;
-    private Button mBtnClearAll;
-    private Button mBtnStart;
-    private Button mBtnReturn;
-    private Button mBtnRunInBack;
-
-    private AlertDialog mAlertDialog = null;
-
-    private NfcEmAlsP2pNtf mP2pNtf;
-    private NfcEmAlsP2pRsp mP2pRsp;
-    private byte[] mRspArray;
-    private String mNtfContent;
-    private boolean mEnableBackKey = true;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            String action = intent.getAction();
-            Elog.v(NfcMainPage.TAG, "[PeerToPeerMode]mReceiver onReceive: " + action);
-            mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_P2P_MODE_NTF).equals(action)) {
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mP2pNtf = new NfcEmAlsP2pNtf();
-                    mP2pNtf.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_NTF);
-                }
-            } else if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_P2P_MODE_RSP).equals(action)) {
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mP2pRsp = new NfcEmAlsP2pRsp();
-                    mP2pRsp.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[PeerToPeerMode]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            String toastMsg = null;
-            if (HANDLER_MSG_GET_NTF == msg.what) {
-                switch (mP2pNtf.mResult) {
-                    case RspResult.NFC_STATUS_LINK_UP:
-                        showDialog(DIALOG_ID_RESULT);
-                        break;
-                    case RspResult.NFC_STATUS_LINK_DOWN:
-                        if (mAlertDialog != null) {
-                            mAlertDialog.dismiss();
-                        }
-                        break;
-                    default:
-                        toastMsg = "P2P Data Exchange is ERROR";
-                        break;
-                }
-            } else if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                switch (mP2pRsp.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "P2P Mode Rsp Result: SUCCESS";
-                        if (mBtnStart.getText().equals(PeerToPeerMode.this.getString(R.string.hqa_nfc_start))) {
-                            setButtonsStatus(false);
-                        } else {
-                            setButtonsStatus(true);
-                        }
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "P2P Mode Rsp Result: FAIL";
-                        break;
-                    default:
-                        toastMsg = "P2P Mode Rsp Result: ERROR";
-                        break;
-                }
-            }
-            Toast.makeText(PeerToPeerMode.this, toastMsg, Toast.LENGTH_SHORT).show();
-        }
-    };
-
-    private final CheckBox.OnCheckedChangeListener mCheckedListener = new CheckBox.OnCheckedChangeListener() {
-        public void onCheckedChanged(CompoundButton buttonView, boolean checked) {
-            Elog.v(NfcMainPage.TAG, "[PeerToPeerMode]onCheckedChanged view is " + buttonView.getText() + " value is "
-                    + checked);
-            if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_TYPEA])) {
-                for (int i = 0; i < mRgTypeA.getChildCount(); i++) {
-                    mRgTypeA.getChildAt(i).setEnabled(checked);
-                }
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_TYPEF])) {
-                for (int i = 0; i < mRgTypeF.getChildCount(); i++) {
-                    mRgTypeF.getChildAt(i).setEnabled(checked);
-                }
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[PeerToPeerMode]onClick button view is " + ((Button) arg0).getText());
-            if (arg0.equals(mBtnStart)) {
-                if (!checkRoleSelect()) {
-                    Toast.makeText(PeerToPeerMode.this, R.string.hqa_nfc_p2p_role_tip, Toast.LENGTH_LONG).show();
-                } else {
-                    showDialog(DIALOG_ID_WAIT);
-                    doTestAction(mBtnStart.getText().equals(PeerToPeerMode.this.getString(R.string.hqa_nfc_start)));
-                }
-            } else if (arg0.equals(mBtnSelectAll)) {
-                changeAllSelect(true);
-            } else if (arg0.equals(mBtnClearAll)) {
-                changeAllSelect(false);
-            } else if (arg0.equals(mBtnReturn)) {
-                PeerToPeerMode.this.onBackPressed();
-            } else if (arg0.equals(mBtnRunInBack)) {
-                doTestAction(null);
-                Intent intent = new Intent(Intent.ACTION_MAIN);
-                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                intent.addCategory(Intent.CATEGORY_HOME);
-                startActivity(intent);
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_p2p_mode);
-        initComponents();
-        changeAllSelect(true);
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_P2P_MODE_RSP);
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_P2P_MODE_NTF);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (!mEnableBackKey) {
-            return;
-        }
-        super.onBackPressed();
-    }
-
-    private void initComponents() {
-        Elog.v(NfcMainPage.TAG, "[PeerToPeerMode]initComponents");
-        mSettingsCkBoxs[CHECKBOX_TYPEA] = (CheckBox) findViewById(R.id.hqa_p2pmode_cb_typea);
-        mSettingsCkBoxs[CHECKBOX_TYPEA].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_TYPEF] = (CheckBox) findViewById(R.id.hqa_p2pmode_cb_typef);
-        mSettingsCkBoxs[CHECKBOX_TYPEF].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_PASSIVE_MODE] = (CheckBox) findViewById(R.id.hqa_p2pmode_cb_passive_mode);
-        mSettingsCkBoxs[CHECKBOX_ACTIVE_MODE] = (CheckBox) findViewById(R.id.hqa_p2pmode_cb_active_mode);
-        mSettingsCkBoxs[CHECKBOX_INITIATOR] = (CheckBox) findViewById(R.id.hqa_p2pmode_cb_initiator);
-        mSettingsCkBoxs[CHECKBOX_TARGET] = (CheckBox) findViewById(R.id.hqa_p2pmode_cb_target);
-        mSettingsCkBoxs[CHECKBOX_DISABLE_CARD] = (CheckBox) findViewById(R.id.hqa_p2pmode_cb_disable_card_emul);
-
-        mSettingsRadioButtons[RADIO_P2P_TYPEA_106] = (RadioButton) findViewById(R.id.hqa_p2pmode_rb_typea_106);
-        mSettingsRadioButtons[RADIO_P2P_TYPEA_212] = (RadioButton) findViewById(R.id.hqa_p2pmode_rb_typea_212);
-        mSettingsRadioButtons[RADIO_P2P_TYPEA_424] = (RadioButton) findViewById(R.id.hqa_p2pmode_rb_typea_424);
-        mSettingsRadioButtons[RADIO_P2P_TYPEA_848] = (RadioButton) findViewById(R.id.hqa_p2pmode_rb_typea_848);
-        mSettingsRadioButtons[RADIO_P2P_TYPEF_212] = (RadioButton) findViewById(R.id.hqa_p2pmode_rb_typef_212);
-        mSettingsRadioButtons[RADIO_P2P_TYPEF_424] = (RadioButton) findViewById(R.id.hqa_p2pmode_rb_typef_424);
-
-        mRgTypeA = (RadioGroup) findViewById(R.id.hqa_p2pmode_rg_typea);
-        mRgTypeF = (RadioGroup) findViewById(R.id.hqa_p2pmode_rg_typef);
-
-        mBtnSelectAll = (Button) findViewById(R.id.hqa_p2pmode_btn_select_all);
-        mBtnSelectAll.setOnClickListener(mClickListener);
-        mBtnClearAll = (Button) findViewById(R.id.hqa_p2pmode_btn_clear_all);
-        mBtnClearAll.setOnClickListener(mClickListener);
-        mBtnStart = (Button) findViewById(R.id.hqa_p2pmode_btn_start_stop);
-        mBtnStart.setOnClickListener(mClickListener);
-        mBtnReturn = (Button) findViewById(R.id.hqa_p2pmode_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        mBtnRunInBack = (Button) findViewById(R.id.hqa_p2pmode_btn_run_back);
-        mBtnRunInBack.setOnClickListener(mClickListener);
-        mBtnRunInBack.setEnabled(false);
-    }
-
-    private void setButtonsStatus(boolean b) {
-        if (b) {
-            mBtnStart.setText(R.string.hqa_nfc_start);
-        } else {
-            mBtnStart.setText(R.string.hqa_nfc_stop);
-        }
-        mEnableBackKey = b;
-        mBtnRunInBack.setEnabled(!b);
-        mBtnReturn.setEnabled(b);
-        mBtnSelectAll.setEnabled(b);
-        mBtnClearAll.setEnabled(b);
-    }
-
-    private void changeAllSelect(boolean checked) {
-        Elog.v(NfcMainPage.TAG, "[PeerToPeerMode]changeAllSelect status is " + checked);
-        for (int i = CHECKBOX_TYPEA; i < mSettingsCkBoxs.length; i++) {
-            mSettingsCkBoxs[i].setChecked(checked);
-        }
-        mSettingsCkBoxs[CHECKBOX_DISABLE_CARD].setChecked(false);
-        if (checked) {
-            mRgTypeA.check(R.id.hqa_p2pmode_rb_typea_106);
-            mRgTypeF.check(R.id.hqa_p2pmode_rb_typef_212);
-        }
-    }
-
-    private void doTestAction(Boolean bStart) {
-        sendCommand(bStart);
-    }
-
-    private void sendCommand(Boolean bStart) {
-        NfcEmAlsP2pReq requestCmd = new NfcEmAlsP2pReq();
-        fillRequest(bStart, requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_ALS_P2P_MODE_REQ, requestCmd);
-    }
-
-    private void fillRequest(Boolean bStart, NfcEmAlsP2pReq requestCmd) {
-        if (null == bStart) {
-            requestCmd.mAction = EmAction.ACTION_RUNINBG;
-        } else if (bStart.booleanValue()) {
-            requestCmd.mAction = EmAction.ACTION_START;
-        } else {
-            requestCmd.mAction = EmAction.ACTION_STOP;
-        }
-        int temp = 0;
-        temp |= mSettingsCkBoxs[CHECKBOX_TYPEA].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_A : 0;
-        temp |= mSettingsCkBoxs[CHECKBOX_TYPEF].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_F : 0;
-        requestCmd.mSupportType = temp;
-
-        RadioButton[] typeADateRateBoxs = {mSettingsRadioButtons[RADIO_P2P_TYPEA_106], mSettingsRadioButtons[RADIO_P2P_TYPEA_212],
-                mSettingsRadioButtons[RADIO_P2P_TYPEA_424], mSettingsRadioButtons[RADIO_P2P_TYPEA_848] };
-        requestCmd.mTypeADataRate = BitMapValue.getTypeAbDataRateValue(typeADateRateBoxs);
-
-        RadioButton[] typeFDateRateBoxs = {mSettingsRadioButtons[RADIO_P2P_TYPEF_212], mSettingsRadioButtons[RADIO_P2P_TYPEF_424] };
-        requestCmd.mTypeFDataRate = BitMapValue.getTypeFDataRateValue(typeFDateRateBoxs);
-
-//        requestCmd.mTypeADataRate = BitMapValue.getTypeADataRateValue(mRgTypeA);
-//        requestCmd.mTypeFDataRate = BitMapValue.getTypeFDataRateValue(mRgTypeF);
-        requestCmd.mIsDisableCardM = mSettingsCkBoxs[CHECKBOX_DISABLE_CARD].isChecked() ? P2pDisableCardM.DISABLE
-                : P2pDisableCardM.NOT_DISABLE;
-        temp = 0;
-        temp |= mSettingsCkBoxs[CHECKBOX_INITIATOR].isChecked() ? NfcCommand.EM_P2P_ROLE_INITIATOR_MODE : 0;
-        temp |= mSettingsCkBoxs[CHECKBOX_TARGET].isChecked() ? NfcCommand.EM_P2P_ROLE_TARGET_MODE : 0;
-        requestCmd.mRole = temp;
-        temp = 0;
-        temp |= mSettingsCkBoxs[CHECKBOX_PASSIVE_MODE].isChecked() ? NfcCommand.EM_P2P_MODE_PASSIVE_MODE : 0;
-        temp |= mSettingsCkBoxs[CHECKBOX_ACTIVE_MODE].isChecked() ? NfcCommand.EM_P2P_MODE_ACTIVE_MODE : 0;
-        requestCmd.mMode = temp;
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        if (DIALOG_ID_WAIT == id) {
-            ProgressDialog dialog = null;
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        } else if (DIALOG_ID_RESULT == id) {
-            mAlertDialog = new AlertDialog.Builder(PeerToPeerMode.this).setTitle(R.string.hqa_nfc_p2p_mode_ntf_title)
-                    .setMessage("P2P link is up").setPositiveButton(android.R.string.ok, null).create();
-            return mAlertDialog;
-        }
-        return null;
-    }
-
-    private boolean checkRoleSelect() {
-        boolean result = true;
-        if (!mSettingsCkBoxs[CHECKBOX_INITIATOR].isChecked() && !mSettingsCkBoxs[CHECKBOX_TARGET].isChecked()) {
-            result = false;
-        }
-        if (!mSettingsCkBoxs[CHECKBOX_PASSIVE_MODE].isChecked() && !mSettingsCkBoxs[CHECKBOX_ACTIVE_MODE].isChecked()) {
-            result = false;
-        }
-        return result;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/PnfcCommand.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/PnfcCommand.java
deleted file mode 100644
index afc4941..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/PnfcCommand.java
+++ /dev/null
@@ -1,162 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-//import android.widget.Toast;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmPnfcReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmPnfcRsp;
-
-import java.nio.ByteBuffer;
-
-public class PnfcCommand extends Activity {
-
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int DIALOG_ID_WAIT = 0;
-    private static final String START_STR = "$PNFC";
-    private static final String END_STR = "*";
-    private Button mBtnReturn;
-    private Button mBtnSend;
-    private EditText mEtPnfc;
-    private NfcEmPnfcRsp mResponse;
-    private byte[] mRspArray;
-    private TextView mResultTv;
-
-//    private boolean mEnableBackKey = true;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "[PnfcCommand]mReceiver onReceive");
-            String action = intent.getAction();
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_PNFC_CMD_RSP).equals(action)) {
-                mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mResponse = new NfcEmPnfcRsp();
-                    mResponse.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[PnfcCommand]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                String toastMsg = null;
-                switch (mResponse.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "PnfcCommand Rsp Result: SUCCESS";
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "PnfcCommand Rsp Result: FAIL";
-                        break;
-                    default:
-                        toastMsg = "PnfcCommand Rsp Result: ERROR";
-                        break;
-                }
-                String infoMsg = new String(mResponse.mData);
-                Elog.v(NfcMainPage.TAG, toastMsg);
-                Elog.v(NfcMainPage.TAG, infoMsg);
-                mResultTv.setText(toastMsg + "\n" + infoMsg);
-
-                //Toast.makeText(PnfcCommand.this, toastMsg, Toast.LENGTH_SHORT).show();
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[PnfcCommand]onClick button view is "
-                    + ((Button) arg0).getText());
-            if (arg0.equals(mBtnSend)) {
-                mResultTv.setText("");
-                showDialog(DIALOG_ID_WAIT);
-                sendCommand();
-            } else if (arg0.equals(mBtnReturn)) {
-                PnfcCommand.this.onBackPressed();
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_pnfc_command);
-        mBtnReturn = (Button) findViewById(R.id.hqa_pnfc_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        mBtnSend = (Button) findViewById(R.id.hqa_pnfc_btn_send);
-        mBtnSend.setOnClickListener(mClickListener);
-        mEtPnfc = (EditText) findViewById(R.id.hqa_pnfc_et_pnfc);
-        mEtPnfc.setSelection(0);
-        mResultTv = (TextView) findViewById(R.id.hqa_pnfc_tv_reslut);
-
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_PNFC_CMD_RSP);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-//        if (!mEnableBackKey) {
-//            return;
-//        }
-        super.onBackPressed();
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        ProgressDialog dialog = null;
-        if (id == DIALOG_ID_WAIT) {
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        }
-        return dialog;
-    }
-
-    private void sendCommand() {
-        NfcEmPnfcReq requestCmd = new NfcEmPnfcReq();
-        fillRequest(requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_PNFC_CMD_REQ, requestCmd);
-    }
-
-    private void fillRequest(NfcEmPnfcReq requestCmd) {
-        requestCmd.mAction = EmAction.ACTION_START;
-        String temp = START_STR + mEtPnfc.getText() + END_STR;
-        byte[] cmdArray = temp.getBytes();
-        System.arraycopy(cmdArray, 0, requestCmd.mData, 0, cmdArray.length);
-        requestCmd.mDataLen = cmdArray.length;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/PollingLoopMode.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/PollingLoopMode.java
deleted file mode 100644
index 1e8c414..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/PollingLoopMode.java
+++ /dev/null
@@ -1,626 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-import android.widget.EditText;
-import android.widget.RadioButton;
-import android.widget.RadioGroup;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.BitMapValue;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.P2pDisableCardM;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsCardmRsp;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsP2pNtf;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermNtf;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmPollingNty;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmPollingReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmPollingRsp;
-
-import java.nio.ByteBuffer;
-
-public class PollingLoopMode extends Activity {
-
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int HANDLER_MSG_GET_NTF = 100;
-    private static final int DIALOG_ID_RESULT = 0;
-    private static final int DIALOG_ID_WAIT = 1;
-
-    private static final int CHECKBOX_READER_MODE = 0;
-    private static final int CHECKBOX_READER_TYPEA = 1;
-    private static final int CHECKBOX_READER_TYPEB = 2;
-    private static final int CHECKBOX_READER_TYPEF = 3;
-    private static final int CHECKBOX_READER_TYPEV = 4;
-   // private static final int CHECKBOX_READER_TYPEB2 = 5;
-    private static final int CHECKBOX_READER_KOVIO = 5;
-
-    private static final int CHECKBOX_P2P_MODE = 6;
-    private static final int CHECKBOX_P2P_TYPEA = 7;
-    private static final int CHECKBOX_P2P_TYPEF = 8;
-    private static final int CHECKBOX_P2P_PASSIVE_MODE = 9;
-    private static final int CHECKBOX_P2P_ACTIVE_MODE = 10;
-    private static final int CHECKBOX_P2P_INITIATOR = 11;
-    private static final int CHECKBOX_P2P_TARGET = 12;
-    private static final int CHECKBOX_P2P_DISABLE_CARD = 13;
-
-    private static final int CHECKBOX_CARD_MODE = 14;
-   // private static final int CHECKBOX_CARD_VITRUAL_CARD = 16;
-    private static final int CHECKBOX_CARD_MODE_TYPEA = 15;
-    private static final int CHECKBOX_CARD_MODE_TYPEB = 16;
-    private static final int CHECKBOX_CARD_MODE_TYPEF = 17;
-    private static final int CHECKBOXS_NUMBER = 18;
-
-    private static final int RADIO_READER_TYPEA_106 = 0;
-    private static final int RADIO_READER_TYPEA_212 = 1;
-    private static final int RADIO_READER_TYPEA_424 = 2;
-    private static final int RADIO_READER_TYPEA_848 = 3;
-    private static final int RADIO_READER_TYPEB_106 = 4;
-    private static final int RADIO_READER_TYPEB_212 = 5;
-    private static final int RADIO_READER_TYPEB_424 = 6;
-    private static final int RADIO_READER_TYPEB_848 = 7;
-    private static final int RADIO_READER_TYPEF_212 = 8;
-    private static final int RADIO_READER_TYPEF_424 = 9;
-    private static final int RADIO_READER_TYPEV_166 = 10;
-    private static final int RADIO_READER_TYPEV_2648 = 11;
-    private static final int RADIO_P2P_TYPEA_106 = 12;
-    private static final int RADIO_P2P_TYPEA_212 = 13;
-    private static final int RADIO_P2P_TYPEA_424 = 14;
-    private static final int RADIO_P2P_TYPEA_848 = 15;
-    private static final int RADIO_P2P_TYPEF_212 = 16;
-    private static final int RADIO_P2P_TYPEF_424 = 17;
-    private static final int RADIO_CARD_SWIO1 = 18;
-    private static final int RADIO_CARD_SWIO2 = 19;
-    private static final int RADIO_CARD_SWIOSE = 20;
-    private static final int RADIO_NUMBER = 21;
-
-    private EditText mTvPeriod;
-    private CheckBox[] mSettingsCkBoxs = new CheckBox[CHECKBOXS_NUMBER];
-    private RadioButton[] mSettingsRadioButtons = new RadioButton[RADIO_NUMBER];
-    private RadioGroup mRgPollingSelect;
-    private RadioButton mRbPollingSelectListen;
-    private RadioButton mRbPollingSelectPause;
-
-    private RadioGroup mRgTypeA;
-    private RadioGroup mRgTypeB;
-    private RadioGroup mRgTypeF;
-    private RadioGroup mRgTypeVSubCarrier;
-    private RadioGroup mRgTypeVMode;
-    private RadioGroup mRgTypeVRate;
-
-    private RadioGroup mRgP2pTypeA;
-    private RadioGroup mRgP2pTypeF;
-
-    private RadioGroup mRgCardSwio;
-
-    private CheckBox mCbTypeA;
-    private CheckBox mCbTypeB;
-    private CheckBox mCbTypeF;
-
-    private Button mBtnSelectAll;
-    private Button mBtnClearAll;
-    private Button mBtnStart;
-    private Button mBtnReturn;
-    private Button mBtnRunInBack;
-
-    private AlertDialog mAlertDialog = null;
-
-    private NfcEmPollingRsp mPollingRsp;
-    private NfcEmPollingNty mPollingNty;
-    private byte[] mRspArray;
-    private String mNtfContent;
-    private boolean mEnableBackKey = true;
-    private boolean mUnregisterReceiver = false;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            String action = intent.getAction();
-            Elog.v(NfcMainPage.TAG, "[PollingLoopMode]mReceiver onReceive: " + action);
-            mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_POLLING_MODE_RSP).equals(action)) {
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mPollingRsp = new NfcEmPollingRsp();
-                    mPollingRsp.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_POLLING_MODE_NTF).equals(action)) {
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mPollingNty = new NfcEmPollingNty();
-                    mPollingNty.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_NTF);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[PollingLoopMode]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            String toastMsg = null;
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                switch (mPollingRsp.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "Poling Loop Mode Rsp Result: SUCCESS";
-                        if (mBtnStart.getText().equals(PollingLoopMode.this.getString(R.string.hqa_nfc_start))) {
-                            setButtonsStatus(false);
-                        } else {
-                            setButtonsStatus(true);
-                        }
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "Poling Loop Mode Rsp Result: FAIL";
-                        break;
-                    case RspResult.NFC_STATUS_NO_SIM:
-                        toastMsg = "Poling Loop Mode Rsp Result: No SIM";
-                        break;
-                    default:
-                        toastMsg = "Poling Loop Mode Rsp Result: ERROR";
-                        break;
-                }
-            } else if (HANDLER_MSG_GET_NTF == msg.what) {
-                switch (mPollingNty.mDetectType) {
-                    case NfcCommand.EM_ENABLE_FUNC_P2P_MODE:
-                        NfcEmAlsP2pNtf alsP2pNtf = new NfcEmAlsP2pNtf();
-                        alsP2pNtf.readRaw(ByteBuffer.wrap(mPollingNty.mData));
-                        if (RspResult.NFC_STATUS_LINK_UP == alsP2pNtf.mResult) {
-//                            toastMsg = "P2P Data Exchange is terminated";
-                            // mNtfContent = new String(alsP2pNtf.mData);
-                            showDialog(DIALOG_ID_RESULT);
-                        } else if (RspResult.NFC_STATUS_LINK_DOWN == alsP2pNtf.mResult) {
-//                            toastMsg = "P2P Data Exchange is On-going";
-                            if (mAlertDialog != null) {
-                                mAlertDialog.dismiss();
-                            }
-                        } else {
-                            toastMsg = "P2P Data Exchange is ERROR";
-                        }
-                        break;
-                    case NfcCommand.EM_ENABLE_FUNC_READER_MODE:
-                        // show RW function ui
-                        NfcEmAlsReadermNtf readermNtf = new NfcEmAlsReadermNtf();
-                        readermNtf.readRaw(ByteBuffer.wrap(mPollingNty.mData));
-                        Intent intent = new Intent();
-                        intent.putExtra(ReaderMode.KEY_READER_MODE_RSP_ARRAY, mPollingNty.mData);
-                        intent.putExtra(ReaderMode.KEY_READER_MODE_RSP_NDEF, readermNtf.mIsNdef);
-                        intent.setClass(PollingLoopMode.this, RwFunction.class);
-                        unregisterReceiver(mReceiver);
-                        mUnregisterReceiver = true;
-                        startActivity(intent);
-                        break;
-                    case NfcCommand.EM_ENABLE_FUNC_RCARDR_MODE:
-                        NfcEmAlsCardmRsp alsCardRsp = new NfcEmAlsCardmRsp();
-                        alsCardRsp.readRaw(ByteBuffer.wrap(mPollingNty.mData));
-                        if (RspResult.SUCCESS == alsCardRsp.mResult) {
-                            toastMsg = "CardEmulation Rsp Result: SUCCESS";
-                        } else if (RspResult.FAIL == alsCardRsp.mResult) {
-                            toastMsg = "CardEmulation Rsp Result: FAIL";
-                        } else if (RspResult.NFC_STATUS_NO_SIM == alsCardRsp.mResult) {
-                            toastMsg = "CardEmulation Rsp Result: No SIM";
-                        } else {
-                            toastMsg = "CardEmulation Rsp Result: ERROR";
-                        }
-                        break;
-                    default:
-                        break;
-                }
-            }
-            Toast.makeText(PollingLoopMode.this, toastMsg, Toast.LENGTH_SHORT).show();
-        }
-    };
-   private final CheckBox.OnCheckedChangeListener mCheckedListener = new CheckBox.OnCheckedChangeListener() {
-        public void onCheckedChanged(CompoundButton buttonView, boolean checked) {
-            Elog.v(NfcMainPage.TAG, "[PollingLoopMode]onCheckedChanged view is " + buttonView.getText() + " value is "
-                    + checked);
-            if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_READER_MODE])) {
-                for (int i = CHECKBOX_READER_TYPEA; i <= CHECKBOX_READER_KOVIO; i++) {
-                    mSettingsCkBoxs[i].setEnabled(checked);
-                }
-                setRadioGroup(mRgTypeA, checked);
-                setRadioGroup(mRgTypeB, checked);
-                setRadioGroup(mRgTypeF, checked);
-                setRadioGroup(mRgTypeVSubCarrier, checked);
-                setRadioGroup(mRgTypeVMode, checked);
-                setRadioGroup(mRgTypeVRate, checked);
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_READER_TYPEA])) {
-                setRadioGroup(mRgTypeA, checked);
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_READER_TYPEB])) {
-                setRadioGroup(mRgTypeB, checked);
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_READER_TYPEF])) {
-                setRadioGroup(mRgTypeF, checked);
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_READER_TYPEV])) {
-                setRadioGroup(mRgTypeVSubCarrier, checked);
-                setRadioGroup(mRgTypeVMode, checked);
-                setRadioGroup(mRgTypeVRate, checked);
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_P2P_MODE])) {
-                for (int i = CHECKBOX_P2P_TYPEA; i <= CHECKBOX_P2P_DISABLE_CARD; i++) {
-                    mSettingsCkBoxs[i].setEnabled(checked);
-                }
-                setRadioGroup(mRgP2pTypeA, checked);
-                setRadioGroup(mRgP2pTypeF, checked);
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_P2P_TYPEA])) {
-                setRadioGroup(mRgP2pTypeA, checked);
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_P2P_TYPEF])) {
-                setRadioGroup(mRgP2pTypeF, checked);
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_CARD_MODE])) {
-                setRadioGroup(mRgCardSwio, checked);
-                for (int i = CHECKBOX_CARD_MODE_TYPEA; i <= CHECKBOX_CARD_MODE_TYPEF; i++) {
-                    mSettingsCkBoxs[i].setEnabled(checked);
-                }
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[PollingLoopMode]onClick button view is " + ((Button) arg0).getText());
-            if (arg0.equals(mBtnStart)) {
-                if (!checkRoleSelect()) {
-                    Toast.makeText(PollingLoopMode.this, R.string.hqa_nfc_p2p_role_tip, Toast.LENGTH_LONG).show();
-                } else {
-                    showDialog(DIALOG_ID_WAIT);
-                    doTestAction(mBtnStart.getText().equals(PollingLoopMode.this.getString(R.string.hqa_nfc_start)));
-                }
-            } else if (arg0.equals(mBtnSelectAll)) {
-                changeAllSelect(true);
-            } else if (arg0.equals(mBtnClearAll)) {
-                changeAllSelect(false);
-            } else if (arg0.equals(mBtnReturn)) {
-                PollingLoopMode.this.onBackPressed();
-            } else if (arg0.equals(mBtnRunInBack)) {
-                doTestAction(null);
-                Intent intent = new Intent(Intent.ACTION_MAIN);
-                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                intent.addCategory(Intent.CATEGORY_HOME);
-                startActivity(intent);
-            }
-        }
-    };
-
-    private void setRadioGroup(RadioGroup rg, boolean checked) {
-        for (int i = 0; i < rg.getChildCount(); i++) {
-            rg.getChildAt(i).setEnabled(checked);
-        }
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_pollingloop_mode);
-        initComponents();
-        changeAllSelect(true);
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_POLLING_MODE_RSP);
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_POLLING_MODE_NTF);
-        registerReceiver(mReceiver, filter);
-    }
-    @Override
-    protected void onStart() {
-        Elog.v(NfcMainPage.TAG, "[PollingLoopMode]onStart");
-        if (mUnregisterReceiver) {
-            Elog.v(NfcMainPage.TAG, "register receiver");
-            mUnregisterReceiver = false;
-            IntentFilter filter = new IntentFilter();
-            filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_POLLING_MODE_RSP);
-            filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_POLLING_MODE_NTF);
-            registerReceiver(mReceiver, filter);
-        }
-        super.onStart();
-    }
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (!mEnableBackKey) {
-            return;
-        }
-        super.onBackPressed();
-    }
-
-    private void initComponents() {
-        Elog.v(NfcMainPage.TAG, "[PollingLoopMode]initComponents");
-        // reader mode
-        mRgPollingSelect = (RadioGroup) findViewById(R.id.hqa_pollingmode_rg_polling_select);
-        mRbPollingSelectListen = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_polling_listen);
-        mRbPollingSelectPause = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_polling_pause);
-        mTvPeriod = (EditText) findViewById(R.id.hqa_pollingmode_et_polling_period);
-        mSettingsCkBoxs[CHECKBOX_READER_MODE] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_reader_mode);
-        mSettingsCkBoxs[CHECKBOX_READER_MODE].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEA] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_typea);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEA].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEB] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_typeb);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEB].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEF] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_typef);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEF].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEV] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_typev);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEV].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_READER_KOVIO] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_kovio);
-
-        mSettingsRadioButtons[RADIO_READER_TYPEA_106] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typea_106);
-        mSettingsRadioButtons[RADIO_READER_TYPEA_212] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typea_212);
-        mSettingsRadioButtons[RADIO_READER_TYPEA_424] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typea_424);
-        mSettingsRadioButtons[RADIO_READER_TYPEA_848] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typea_848);
-        mSettingsRadioButtons[RADIO_READER_TYPEB_106] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typeb_106);
-        mSettingsRadioButtons[RADIO_READER_TYPEB_212] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typeb_212);
-        mSettingsRadioButtons[RADIO_READER_TYPEB_424] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typeb_424);
-        mSettingsRadioButtons[RADIO_READER_TYPEB_848] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typeb_848);
-        mSettingsRadioButtons[RADIO_READER_TYPEF_212] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typef_212);
-        mSettingsRadioButtons[RADIO_READER_TYPEF_424] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typef_424);
-        mSettingsRadioButtons[RADIO_READER_TYPEV_166] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typev_166);
-        mSettingsRadioButtons[RADIO_READER_TYPEV_2648] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_typev_2648);
-
-        mRgTypeA = (RadioGroup) findViewById(R.id.hqa_pollingmode_rg_typea);
-        mRgTypeB = (RadioGroup) findViewById(R.id.hqa_pollingmode_rg_typeb);
-        mRgTypeF = (RadioGroup) findViewById(R.id.hqa_pollingmode_rg_typef);
-        mRgTypeVSubCarrier = (RadioGroup) findViewById(R.id.hqa_pollingmode_rg_typev_subcarrier);
-        mRgTypeVMode = (RadioGroup) findViewById(R.id.hqa_pollingmode_rg_typev_mode);
-        mRgTypeVRate = (RadioGroup) findViewById(R.id.hqa_pollingmode_rg_typev_rate);
-
-        // p2p
-        mSettingsCkBoxs[CHECKBOX_P2P_MODE] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_p2p_mode);
-        mSettingsCkBoxs[CHECKBOX_P2P_MODE].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_P2P_TYPEA] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_p2p_typea);
-        mSettingsCkBoxs[CHECKBOX_P2P_TYPEA].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_P2P_TYPEF] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_p2p_typef);
-        mSettingsCkBoxs[CHECKBOX_P2P_TYPEF].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_P2P_PASSIVE_MODE] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_p2p_passive_mode);
-        mSettingsCkBoxs[CHECKBOX_P2P_ACTIVE_MODE] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_p2p_active_mode);
-        mSettingsCkBoxs[CHECKBOX_P2P_INITIATOR] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_p2p_initiator);
-        mSettingsCkBoxs[CHECKBOX_P2P_TARGET] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_p2p_target);
-        mSettingsCkBoxs[CHECKBOX_P2P_DISABLE_CARD] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_p2p_disable_card_emu);
-
-        mSettingsRadioButtons[RADIO_P2P_TYPEA_106] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_p2p_typea_106);
-        mSettingsRadioButtons[RADIO_P2P_TYPEA_212] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_p2p_typea_212);
-        mSettingsRadioButtons[RADIO_P2P_TYPEA_424] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_p2p_typea_424);
-        mSettingsRadioButtons[RADIO_P2P_TYPEA_848] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_p2p_typea_848);
-        mSettingsRadioButtons[RADIO_P2P_TYPEF_212] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_p2p_typef_212);
-        mSettingsRadioButtons[RADIO_P2P_TYPEF_424] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_p2p_typef_424);
-
-        mRgP2pTypeA = (RadioGroup) findViewById(R.id.hqa_pollingmode_rg_p2p_typea);
-        mRgP2pTypeF = (RadioGroup) findViewById(R.id.hqa_pollingmode_rg_p2p_typef);
-
-        // card mode
-        mSettingsCkBoxs[CHECKBOX_CARD_MODE] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_card_emu_mode);
-        mSettingsCkBoxs[CHECKBOX_CARD_MODE].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_CARD_MODE_TYPEA] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_card_emu_typea);
-        mSettingsCkBoxs[CHECKBOX_CARD_MODE_TYPEB] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_card_emu_typeb);
-        mSettingsCkBoxs[CHECKBOX_CARD_MODE_TYPEF] = (CheckBox) findViewById(R.id.hqa_pollingmode_cb_card_emu_typef);
-
-        mSettingsRadioButtons[RADIO_CARD_SWIO1] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_card_emu_swio1);
-        mSettingsRadioButtons[RADIO_CARD_SWIO2] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_card_emu_swio2);
-        mSettingsRadioButtons[RADIO_CARD_SWIOSE] = (RadioButton) findViewById(R.id.hqa_pollingmode_rb_card_emu_swiose);
-
-        mRgCardSwio = (RadioGroup) findViewById(R.id.hqa_pollingmode_rg_swio);
-
-        mBtnSelectAll = (Button) findViewById(R.id.hqa_pollingmode_btn_select_all);
-        mBtnSelectAll.setOnClickListener(mClickListener);
-        mBtnClearAll = (Button) findViewById(R.id.hqa_pollingmode_btn_clear_all);
-        mBtnClearAll.setOnClickListener(mClickListener);
-        mBtnStart = (Button) findViewById(R.id.hqa_pollingmode_btn_start_stop);
-        mBtnStart.setOnClickListener(mClickListener);
-        mBtnReturn = (Button) findViewById(R.id.hqa_pollingmode_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        mBtnRunInBack = (Button) findViewById(R.id.hqa_pollingmode_btn_run_back);
-        mBtnRunInBack.setOnClickListener(mClickListener);
-        mBtnRunInBack.setEnabled(false);
-        mRgPollingSelect.check(R.id.hqa_pollingmode_rb_polling_listen);
-        mTvPeriod.setText("500");
-        mTvPeriod.setSelection(mTvPeriod.getText().toString().length());
-    }
-
-    private void setButtonsStatus(boolean b) {
-        if (b) {
-            mBtnStart.setText(R.string.hqa_nfc_start);
-        } else {
-            mBtnStart.setText(R.string.hqa_nfc_stop);
-        }
-        mBtnRunInBack.setEnabled(!b);
-        mEnableBackKey = b;
-        mBtnReturn.setEnabled(b);
-        mBtnSelectAll.setEnabled(b);
-        mBtnClearAll.setEnabled(b);
-    }
-
-    private void changeAllSelect(boolean checked) {
-        Elog.v(NfcMainPage.TAG, "[PollingLoopMode]changeDisplay status is " + checked);
-        mRgPollingSelect.check(R.id.hqa_pollingmode_rb_polling_listen);
-        mTvPeriod.setText("500");
-        for (int i = 0; i < mSettingsCkBoxs.length; i++) {
-            mSettingsCkBoxs[i].setChecked(checked);
-        }
-        mSettingsCkBoxs[CHECKBOX_P2P_DISABLE_CARD].setChecked(false); // default false
-        if (checked) {
-            mRgTypeA.check(R.id.hqa_pollingmode_rb_typea_106);
-            mRgTypeB.check(R.id.hqa_pollingmode_rb_typeb_106);
-            mRgTypeF.check(R.id.hqa_pollingmode_rb_typef_212);
-            mRgTypeVSubCarrier.check(R.id.hqa_pollingmode_rb_typev_dual_subcarrier);
-            mRgTypeVMode.check(R.id.hqa_pollingmode_rb_typev_mode_4);
-            mRgTypeVRate.check(R.id.hqa_pollingmode_rb_typev_166);
-
-            mRgP2pTypeA.check(R.id.hqa_pollingmode_rb_p2p_typea_106);
-            mRgP2pTypeF.check(R.id.hqa_pollingmode_rb_p2p_typef_212);
-
-            mRgCardSwio.check(R.id.hqa_pollingmode_rb_card_emu_swio1);
-        }
-    }
-
-    private void doTestAction(Boolean bStart) {
-        sendCommand(bStart);
-    }
-
-    private void sendCommand(Boolean bStart) {
-        NfcEmPollingReq requestCmd = new NfcEmPollingReq();
-        fillRequest(bStart, requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_POLLING_MODE_REQ, requestCmd);
-    }
-
-    private void fillRequest(Boolean bStart, NfcEmPollingReq requestCmd) {
-        if (null == bStart) {
-            requestCmd.mAction = EmAction.ACTION_RUNINBG;
-            requestCmd.mP2pmReq.mAction = EmAction.ACTION_RUNINBG;
-            requestCmd.mReadermReq.mAction = EmAction.ACTION_RUNINBG;
-            requestCmd.mCardmReq.mAction = EmAction.ACTION_RUNINBG;
-        } else if (bStart.booleanValue()) {
-            requestCmd.mAction = EmAction.ACTION_START;
-            requestCmd.mP2pmReq.mAction = EmAction.ACTION_START;
-            requestCmd.mReadermReq.mAction = EmAction.ACTION_START;
-            requestCmd.mCardmReq.mAction = EmAction.ACTION_START;
-        } else {
-            requestCmd.mAction = EmAction.ACTION_STOP;
-            requestCmd.mP2pmReq.mAction = EmAction.ACTION_STOP;
-            requestCmd.mReadermReq.mAction = EmAction.ACTION_STOP;
-            requestCmd.mCardmReq.mAction = EmAction.ACTION_STOP;
-        }
-        requestCmd.mPhase = mRbPollingSelectListen.isChecked() ? 0 : 1;
-        try {
-            requestCmd.mPeriod = Integer.valueOf(mTvPeriod.getText().toString());
-        } catch (NumberFormatException e) {
-            Toast.makeText(this, "Please input the right Period.", Toast.LENGTH_SHORT).show();
-        }
-        CheckBox[] functionBoxs = {mSettingsCkBoxs[CHECKBOX_READER_MODE], mSettingsCkBoxs[CHECKBOX_CARD_MODE],
-                mSettingsCkBoxs[CHECKBOX_P2P_MODE] };
-        requestCmd.mEnableFunc = BitMapValue.getFunctionValue(functionBoxs);
-        // p2p
-        int p2pTemp = 0;
-        p2pTemp |= mSettingsCkBoxs[CHECKBOX_P2P_TYPEA].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_A : 0;
-        p2pTemp |= mSettingsCkBoxs[CHECKBOX_P2P_TYPEF].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_F : 0;
-        requestCmd.mP2pmReq.mSupportType = p2pTemp;
-
-        RadioButton[] typeADateRateBoxs = {mSettingsRadioButtons[RADIO_P2P_TYPEA_106], mSettingsRadioButtons[RADIO_P2P_TYPEA_212],
-                mSettingsRadioButtons[RADIO_P2P_TYPEA_424], mSettingsRadioButtons[RADIO_P2P_TYPEA_848] };
-        requestCmd.mP2pmReq.mTypeADataRate = BitMapValue.getTypeAbDataRateValue(typeADateRateBoxs);
-
-        RadioButton[] typeFDateRateBoxs = {mSettingsRadioButtons[RADIO_P2P_TYPEF_212], mSettingsRadioButtons[RADIO_P2P_TYPEF_424] };
-        requestCmd.mP2pmReq.mTypeFDataRate = BitMapValue.getTypeFDataRateValue(typeFDateRateBoxs);
-
-        requestCmd.mP2pmReq.mIsDisableCardM = mSettingsCkBoxs[CHECKBOX_P2P_DISABLE_CARD].isChecked()
-                ? P2pDisableCardM.DISABLE : P2pDisableCardM.NOT_DISABLE;
-        p2pTemp = 0;
-        p2pTemp |= mSettingsCkBoxs[CHECKBOX_P2P_INITIATOR].isChecked() ? NfcCommand.EM_P2P_ROLE_INITIATOR_MODE : 0;
-        p2pTemp |= mSettingsCkBoxs[CHECKBOX_P2P_TARGET].isChecked() ? NfcCommand.EM_P2P_ROLE_TARGET_MODE : 0;
-        requestCmd.mP2pmReq.mRole = p2pTemp;
-        p2pTemp = 0;
-        p2pTemp |= mSettingsCkBoxs[CHECKBOX_P2P_PASSIVE_MODE].isChecked() ? NfcCommand.EM_P2P_MODE_PASSIVE_MODE : 0;
-        p2pTemp |= mSettingsCkBoxs[CHECKBOX_P2P_ACTIVE_MODE].isChecked() ? NfcCommand.EM_P2P_MODE_ACTIVE_MODE : 0;
-        requestCmd.mP2pmReq.mMode = p2pTemp;
-
-        // reader mode
-        CheckBox[] typeBoxs = {mSettingsCkBoxs[CHECKBOX_READER_TYPEA], mSettingsCkBoxs[CHECKBOX_READER_TYPEB],
-                mSettingsCkBoxs[CHECKBOX_READER_TYPEF], mSettingsCkBoxs[CHECKBOX_READER_TYPEV],
-                mSettingsCkBoxs[CHECKBOX_READER_KOVIO] };
-        requestCmd.mReadermReq.mSupportType = BitMapValue.getTypeValue(typeBoxs);
-
-        RadioButton[] readerADateRateBoxs = {mSettingsRadioButtons[RADIO_READER_TYPEA_106],
-                mSettingsRadioButtons[RADIO_READER_TYPEA_212], mSettingsRadioButtons[RADIO_READER_TYPEA_424],
-                mSettingsRadioButtons[RADIO_READER_TYPEA_848] };
-        requestCmd.mReadermReq.mTypeADataRate = BitMapValue.getTypeAbDataRateValue(readerADateRateBoxs);
-
-        RadioButton[] readerBDateRateBoxs = {mSettingsRadioButtons[RADIO_READER_TYPEB_106],
-                mSettingsRadioButtons[RADIO_READER_TYPEB_212], mSettingsRadioButtons[RADIO_READER_TYPEB_424],
-                mSettingsRadioButtons[RADIO_READER_TYPEB_848] };
-        requestCmd.mReadermReq.mTypeBDataRate = BitMapValue.getTypeAbDataRateValue(readerBDateRateBoxs);
-
-        RadioButton[] readerFDateRateBoxs = {mSettingsRadioButtons[RADIO_READER_TYPEF_212],
-                mSettingsRadioButtons[RADIO_READER_TYPEF_424] };
-        requestCmd.mReadermReq.mTypeFDataRate = BitMapValue.getTypeFDataRateValue(readerFDateRateBoxs);
-
-        RadioButton[] readerVDateRateBoxs = {mSettingsRadioButtons[RADIO_READER_TYPEV_166],
-                mSettingsRadioButtons[RADIO_READER_TYPEV_2648] };
-        requestCmd.mReadermReq.mTypeVDataRate = BitMapValue.getTypeVDataRateValue(readerVDateRateBoxs);
-
-        if (mRgTypeVSubCarrier.getCheckedRadioButtonId() == R.id.hqa_pollingmode_rb_typev_subcarrier) {
-            requestCmd.mReadermReq.mTypeVSubcarrier = 0;
-        } else {
-            requestCmd.mReadermReq.mTypeVSubcarrier = 1;
-        }
-
-        if (mRgTypeVMode.getCheckedRadioButtonId() == R.id.hqa_pollingmode_rb_typev_mode_4) {
-            requestCmd.mReadermReq.mTypeVCodingMode = 0;
-        } else {
-            requestCmd.mReadermReq.mTypeVCodingMode = 1;
-        }
-
-        // card mode
-        int cardTemp = 0;
-
-        cardTemp |= mSettingsCkBoxs[CHECKBOX_CARD_MODE_TYPEA].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_A : 0;
-        cardTemp |= mSettingsCkBoxs[CHECKBOX_CARD_MODE_TYPEB].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_B : 0;
-        cardTemp |= mSettingsCkBoxs[CHECKBOX_CARD_MODE_TYPEF].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_F : 0;
-        requestCmd.mCardmReq.mSupportType = cardTemp;
-
-        cardTemp = 0;
-
-        switch (mRgCardSwio.getCheckedRadioButtonId()) {
-        case R.id.hqa_pollingmode_rb_card_emu_swio1:
-            cardTemp = NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIO1;
-            break;
-        case R.id.hqa_pollingmode_rb_card_emu_swio2:
-            cardTemp = NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIO2;
-            break;
-        case R.id.hqa_pollingmode_rb_card_emu_swiose:
-            cardTemp = NfcCommand.EM_ALS_CARD_M_SW_NUM_SWIOSE;
-            break;
-        default:
-            break;
-        }
-        requestCmd.mCardmReq.mSwNum = cardTemp;
-        requestCmd.mCardmReq.mFgVirtualCard = 0; //mSettingsCkBoxs[CHECKBOX_CARD_VITRUAL_CARD].isChecked() ? 1 : 0;
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        if (DIALOG_ID_WAIT == id) {
-            ProgressDialog dialog = null;
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        } else if (DIALOG_ID_RESULT == id) {
-            AlertDialog alertDialog = null;
-            alertDialog = new AlertDialog.Builder(PollingLoopMode.this).setTitle(R.string.hqa_nfc_p2p_mode_ntf_title)
-                    .setMessage("P2P link is up").setPositiveButton(android.R.string.ok, null).create();
-            return alertDialog;
-        }
-        return null;
-    }
-
-    private boolean checkRoleSelect() {
-        boolean result = true;
-        if (!mSettingsCkBoxs[CHECKBOX_P2P_INITIATOR].isChecked() && !mSettingsCkBoxs[CHECKBOX_P2P_TARGET].isChecked()) {
-            result = false;
-        }
-        if (!mSettingsCkBoxs[CHECKBOX_P2P_PASSIVE_MODE].isChecked()
-                && !mSettingsCkBoxs[CHECKBOX_P2P_ACTIVE_MODE].isChecked()) {
-            result = false;
-        }
-        return result;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/ReaderMode.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/ReaderMode.java
deleted file mode 100644
index 7e60d73..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/ReaderMode.java
+++ /dev/null
@@ -1,458 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-import android.widget.RadioButton;
-import android.widget.RadioGroup;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.BitMapValue;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.ReaderModeRspResult;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermNtf;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermRsp;
-
-import java.nio.ByteBuffer;
-
-public class ReaderMode extends Activity {
-
-    protected static final String KEY_READER_MODE_RSP_ARRAY = "reader_mode_rsp_array";
-    protected static final String KEY_READER_MODE_RSP_NDEF = "reader_mode_rsp_ndef";
-
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int HANDLER_MSG_GET_NTF = 100;
-    private static final int DIALOG_ID_WAIT = 0;
-
-    private static final int CHECKBOXS_NUMBER = 5;
-    private static final int CHECKBOX_READER_TYPEA = 0;
-    private static final int CHECKBOX_READER_TYPEB = 1;
-    private static final int CHECKBOX_READER_TYPEF = 2;
-    private static final int CHECKBOX_READER_TYPEV = 3;
-   // private static final int CHECKBOX_READER_TYPEB2 = 4;
-    private static final int CHECKBOX_READER_KOVIO = 4;
-
-    private static final int RADIO_READER_TYPEA_106 = 0;
-    private static final int RADIO_READER_TYPEA_212 = 1;
-    private static final int RADIO_READER_TYPEA_424 = 2;
-    private static final int RADIO_READER_TYPEA_848 = 3;
-    private static final int RADIO_READER_TYPEB_106 = 4;
-    private static final int RADIO_READER_TYPEB_212 = 5;
-    private static final int RADIO_READER_TYPEB_424 = 6;
-    private static final int RADIO_READER_TYPEB_848 = 7;
-    private static final int RADIO_READER_TYPEF_212 = 8;
-    private static final int RADIO_READER_TYPEF_424 = 9;
-    private static final int RADIO_READER_TYPEV_166 = 10;
-    private static final int RADIO_READER_TYPEV_2648 = 11;
-    private static final int RADIO_NUMBER = 12;
-
-    private CheckBox[] mSettingsCkBoxs = new CheckBox[CHECKBOXS_NUMBER];
-    private RadioButton[] mSettingsRadioButtons = new RadioButton[RADIO_NUMBER];
-    private RadioGroup mRgTypeA;
-    private RadioGroup mRgTypeB;
-    private RadioGroup mRgTypeF;
-    private RadioGroup mRgTypeVSubCarrier;
-    private RadioGroup mRgTypeVMode;
-    private RadioGroup mRgTypeVRate;
-    private Button mBtnSelectAll;
-    private Button mBtnClearAll;
-    private Button mBtnStart;
-    private Button mBtnReturn;
-    private Button mBtnRunInBack;
-    private NfcEmAlsReadermRsp mResponse;
-    private NfcEmAlsReadermNtf mReadermNtf;
-    private byte[] mRspArray;
-    private boolean mEnableBackKey = true; // can or can not press back key
-    private boolean mUnregisterReceiver = false;
-    private boolean mRunInBack = false;
-
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            String action = intent.getAction();
-            Elog.v(NfcMainPage.TAG, "[ReaderMode]mReceiver onReceive: " + action);
-            mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_RSP).equals(action)) {
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mResponse = new NfcEmAlsReadermRsp();
-                    mResponse.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_NTF)
-                    .equals(action)) {
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mReadermNtf = new NfcEmAlsReadermNtf();
-                    mReadermNtf.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_NTF);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[ReaderMode]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            String toastMsg = null;
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                switch (mResponse.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "ReaderMode Rsp Result: SUCCESS";
-                        if (mBtnStart.getText().equals(
-                                ReaderMode.this.getString(R.string.hqa_nfc_start))) {
-                            setButtonsStatus(false);
-                        } else {
-                            setButtonsStatus(true);
-                        }
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "ReaderMode Rsp Result: FAIL";
-                        break;
-                    case RspResult.NFC_STATUS_INVALID_FORMAT:
-                        toastMsg = "ReaderMode Rsp Result: INVALID_FORMAT";
-                        break;
-                    case RspResult.NFC_STATUS_INVALID_NDEF_FORMAT:
-                        toastMsg = "ReaderMode Rsp Result: INVALID_NDEF_FORMAT";
-                        break;
-                    case RspResult.NFC_STATUS_NDEF_EOF_REACHED:
-                        toastMsg = "ReaderMode Rsp Result: NDEF_EOF_REACHED";
-                        break;
-                    case RspResult.NFC_STATUS_NOT_SUPPORT:
-                        toastMsg = "ReaderMode Rsp Result: NOT_SUPPORT";
-                        break;
-                    default:
-                        toastMsg = "ReaderMode Rsp Result: ERROR";
-                        break;
-                }
-            } else if (HANDLER_MSG_GET_NTF == msg.what) {
-                switch (mReadermNtf.mResult) {
-                    case ReaderModeRspResult.CONNECT:
-                        toastMsg = "ReaderMode Ntf Result: CONNECT";
-                        if (!mRunInBack
-                                && (mReadermNtf.mIsNdef == 0 || mReadermNtf.mIsNdef == 1 || mReadermNtf.mIsNdef == 2)) {
-                            Intent intent = new Intent();
-                            intent.putExtra(KEY_READER_MODE_RSP_ARRAY, mRspArray);
-                            intent.putExtra(KEY_READER_MODE_RSP_NDEF, mReadermNtf.mIsNdef);
-                            intent.setClass(ReaderMode.this, RwFunction.class);
-                            unregisterReceiver(mReceiver);
-                            mUnregisterReceiver = true;
-                            startActivity(intent);
-                        }
-                        break;
-                    case ReaderModeRspResult.DISCONNECT:
-                        toastMsg = "ReaderMode Ntf Result: DISCONNECT";
-                        break;
-                    case ReaderModeRspResult.FAIL:
-                        // toastMsg = "ReaderMode Ntf Result: FAIL"; ALPS00676063
-                        Elog.v(NfcMainPage.TAG, "[ReaderMode]Ntf Result: FAIL");
-                        if (mRunInBack) {
-                            toastMsg = "ReaderMode Ntf Result: FAIL";
-                        } else {
-                            Intent intent = new Intent();
-                            intent.putExtra(KEY_READER_MODE_RSP_ARRAY, mRspArray);
-                            intent.putExtra(KEY_READER_MODE_RSP_NDEF, 3);
-                            intent.setClass(ReaderMode.this, RwFunction.class);
-                            unregisterReceiver(mReceiver);
-                            mUnregisterReceiver = true;
-                            startActivity(intent);
-                        }
-                        break;
-                    default:
-                        Elog.v(NfcMainPage.TAG, "ReaderMode Ntf Result: ERROR");
-                        if (mRunInBack) {
-                            toastMsg = "Tag is not NDEF format";
-                        } else {
-                            Intent defaultIntent = new Intent();
-                            defaultIntent.putExtra(KEY_READER_MODE_RSP_ARRAY, mRspArray);
-                            defaultIntent.putExtra(KEY_READER_MODE_RSP_NDEF, 3);
-                            defaultIntent.setClass(ReaderMode.this, RwFunction.class);
-                            unregisterReceiver(mReceiver);
-                            mUnregisterReceiver = true;
-                            startActivity(defaultIntent);
-                        }
-                        break;
-                }
-            }
-            if (toastMsg != null) {
-                Elog.v(NfcMainPage.TAG, "Toast: " + toastMsg);
-                Toast.makeText(ReaderMode.this, toastMsg, Toast.LENGTH_SHORT).show();
-            }
-        }
-    };
-
-    private final CheckBox.OnCheckedChangeListener mCheckedListener = new CheckBox.OnCheckedChangeListener() {
-        public void onCheckedChanged(CompoundButton buttonView, boolean checked) {
-            Elog.v(NfcMainPage.TAG, "[ReaderMode]onCheckedChanged view is " + buttonView.getText()
-                    + " value is " + checked);
-            if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_READER_TYPEA])) {
-                for (int i = 0; i < mRgTypeA.getChildCount(); i++) {
-                    mRgTypeA.getChildAt(i).setEnabled(checked);
-                }
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_READER_TYPEB])) {
-                for (int i = 0; i < mRgTypeB.getChildCount(); i++) {
-                    mRgTypeB.getChildAt(i).setEnabled(checked);
-                }
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_READER_TYPEF])) {
-                for (int i = 0; i < mRgTypeF.getChildCount(); i++) {
-                    mRgTypeF.getChildAt(i).setEnabled(checked);
-                }
-            } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_READER_TYPEV])) {
-                for (int i = 0; i < mRgTypeVSubCarrier.getChildCount(); i++) {
-                    mRgTypeVSubCarrier.getChildAt(i).setEnabled(checked);
-                }
-                for (int i = 0; i < mRgTypeVMode.getChildCount(); i++) {
-                    mRgTypeVMode.getChildAt(i).setEnabled(checked);
-                }
-                for (int i = 0; i < mRgTypeVRate.getChildCount(); i++) {
-                    mRgTypeVRate.getChildAt(i).setEnabled(checked);
-                }
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[ReaderMode]onClick button view is "
-                    + ((Button) arg0).getText());
-            if (arg0.equals(mBtnStart)) {
-                showDialog(DIALOG_ID_WAIT);
-                doTestAction(mBtnStart.getText().equals(
-                        ReaderMode.this.getString(R.string.hqa_nfc_start)));
-            } else if (arg0.equals(mBtnSelectAll)) {
-                changeAllSelect(true);
-            } else if (arg0.equals(mBtnClearAll)) {
-                changeAllSelect(false);
-            } else if (arg0.equals(mBtnReturn)) {
-                ReaderMode.this.onBackPressed();
-            } else if (arg0.equals(mBtnRunInBack)) {
-                doTestAction(null);
-                Intent intent = new Intent(Intent.ACTION_MAIN);
-                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                intent.addCategory(Intent.CATEGORY_HOME);
-                startActivity(intent);
-                mRunInBack = true; // run in back, just show toast, do not call rwfunction.class.
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        Elog.v(NfcMainPage.TAG, "[ReaderMode]onCreate");
-        setContentView(R.layout.hqa_nfc_reader_mode);
-        initComponents();
-        changeAllSelect(true);
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_RSP);
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_NTF);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onStop() {
-        Elog.v(NfcMainPage.TAG, "[ReaderMode]onStop");
-        super.onStop();
-    }
-    @Override
-    protected void onStart() {
-        Elog.v(NfcMainPage.TAG, "[ReaderMode]onStart");
-        mRunInBack = false;
-        if (mUnregisterReceiver) {
-            Elog.v(NfcMainPage.TAG, "register receiver");
-            mUnregisterReceiver = false;
-            IntentFilter filter = new IntentFilter();
-            filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_RSP);
-            filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_NTF);
-            registerReceiver(mReceiver, filter);
-        }
-        super.onStart();
-    }
-
-    @Override
-    protected void onDestroy() {
-        Elog.v(NfcMainPage.TAG, "[ReaderMode]onDestroy");
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (!mEnableBackKey) {
-            return;
-        }
-        super.onBackPressed();
-    }
-
-    private void initComponents() {
-        Elog.v(NfcMainPage.TAG, "[ReaderMode]initComponents");
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEA] = (CheckBox) findViewById(R.id.hqa_readermode_cb_typea);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEA].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEB] = (CheckBox) findViewById(R.id.hqa_readermode_cb_typeb);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEB].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEF] = (CheckBox) findViewById(R.id.hqa_readermode_cb_typef);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEF].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEV] = (CheckBox) findViewById(R.id.hqa_readermode_cb_typev);
-        mSettingsCkBoxs[CHECKBOX_READER_TYPEV].setOnCheckedChangeListener(mCheckedListener);
-
-        mSettingsRadioButtons[RADIO_READER_TYPEA_106] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typea_106);
-        mSettingsRadioButtons[RADIO_READER_TYPEA_212] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typea_212);
-        mSettingsRadioButtons[RADIO_READER_TYPEA_424] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typea_424);
-        mSettingsRadioButtons[RADIO_READER_TYPEA_848] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typea_848);
-        mSettingsRadioButtons[RADIO_READER_TYPEB_106] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typeb_106);
-        mSettingsRadioButtons[RADIO_READER_TYPEB_212] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typeb_212);
-        mSettingsRadioButtons[RADIO_READER_TYPEB_424] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typeb_424);
-        mSettingsRadioButtons[RADIO_READER_TYPEB_848] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typeb_848);
-        mSettingsRadioButtons[RADIO_READER_TYPEF_212] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typef_212);
-        mSettingsRadioButtons[RADIO_READER_TYPEF_424] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typef_424);
-        mSettingsRadioButtons[RADIO_READER_TYPEV_166] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typev_166);
-        mSettingsRadioButtons[RADIO_READER_TYPEV_2648] = (RadioButton) findViewById(R.id.hqa_readermode_rb_typev_2648);
-
-        mRgTypeA = (RadioGroup) findViewById(R.id.hqa_readermode_rg_typea);
-        mRgTypeB = (RadioGroup) findViewById(R.id.hqa_readermode_rg_typeb);
-        mRgTypeF = (RadioGroup) findViewById(R.id.hqa_readermode_rg_typef);
-        mRgTypeVSubCarrier = (RadioGroup) findViewById(R.id.hqa_readermode_rg_typev_subcarrier);
-        mRgTypeVMode = (RadioGroup) findViewById(R.id.hqa_readermode_rg_typev_mode);
-        mRgTypeVRate = (RadioGroup) findViewById(R.id.hqa_readermode_rg_typev_rate);
-
-        //mSettingsCkBoxs[CHECKBOX_READER_TYPEB2] = (CheckBox) findViewById(R.id.hqa_readermode_cb_typeb2);
-        mSettingsCkBoxs[CHECKBOX_READER_KOVIO] = (CheckBox) findViewById(R.id.hqa_readermode_cb_kovio);
-        mBtnSelectAll = (Button) findViewById(R.id.hqa_readermode_btn_select_all);
-        mBtnSelectAll.setOnClickListener(mClickListener);
-        mBtnClearAll = (Button) findViewById(R.id.hqa_readermode_btn_clear_all);
-        mBtnClearAll.setOnClickListener(mClickListener);
-        mBtnStart = (Button) findViewById(R.id.hqa_readermode_btn_start_stop);
-        mBtnStart.setOnClickListener(mClickListener);
-        mBtnReturn = (Button) findViewById(R.id.hqa_readermode_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        mBtnRunInBack = (Button) findViewById(R.id.hqa_readermode_btn_run_back);
-        mBtnRunInBack.setOnClickListener(mClickListener);
-        mBtnRunInBack.setEnabled(false);
-    }
-
-    private void setButtonsStatus(boolean b) {
-        if (b) {
-            mBtnStart.setText(R.string.hqa_nfc_start);
-        } else {
-            mBtnStart.setText(R.string.hqa_nfc_stop);
-        }
-        mBtnRunInBack.setEnabled(!b);
-        mEnableBackKey = b;
-        mBtnReturn.setEnabled(b);
-        mBtnSelectAll.setEnabled(b);
-        mBtnClearAll.setEnabled(b);
-    }
-
-    private void changeAllSelect(boolean checked) {
-        Elog.v(NfcMainPage.TAG, "[ReaderMode]changeDisplay status is " + checked);
-        for (int i = CHECKBOX_READER_TYPEA; i < mSettingsCkBoxs.length; i++) {
-            mSettingsCkBoxs[i].setChecked(checked);
-        }
-        if (checked) {
-            mRgTypeA.check(R.id.hqa_readermode_rb_typea_106);
-            mRgTypeB.check(R.id.hqa_readermode_rb_typeb_106);
-            mRgTypeF.check(R.id.hqa_readermode_rb_typef_212);
-            mRgTypeVSubCarrier.check(R.id.hqa_readermode_rb_typev_dual_subcarrier);
-            mRgTypeVMode.check(R.id.hqa_readermode_rb_typev_mode_4);
-            mRgTypeVRate.check(R.id.hqa_readermode_rb_typev_166);
-        }
-    }
-
-    private void doTestAction(Boolean bStart) {
-        sendCommand(bStart);
-    }
-
-    private void sendCommand(Boolean bStart) {
-        NfcEmAlsReadermReq requestCmd = new NfcEmAlsReadermReq();
-        fillRequest(bStart, requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_ALS_READER_MODE_REQ, requestCmd);
-    }
-
-    private void fillRequest(Boolean bStart, NfcEmAlsReadermReq requestCmd) {
-        if (null == bStart) {
-            requestCmd.mAction = EmAction.ACTION_RUNINBG;
-        } else if (bStart.booleanValue()) {
-            requestCmd.mAction = EmAction.ACTION_START;
-        } else {
-            requestCmd.mAction = EmAction.ACTION_STOP;
-        }
-        CheckBox[] typeBoxs = {mSettingsCkBoxs[CHECKBOX_READER_TYPEA],
-                mSettingsCkBoxs[CHECKBOX_READER_TYPEB], mSettingsCkBoxs[CHECKBOX_READER_TYPEF],
-                mSettingsCkBoxs[CHECKBOX_READER_TYPEV],
-                mSettingsCkBoxs[CHECKBOX_READER_KOVIO] };
-        requestCmd.mSupportType = BitMapValue.getTypeValue(typeBoxs);
-
-        RadioButton[] readerADateRateBoxs = {mSettingsRadioButtons[RADIO_READER_TYPEA_106],
-                mSettingsRadioButtons[RADIO_READER_TYPEA_212], mSettingsRadioButtons[RADIO_READER_TYPEA_424],
-                mSettingsRadioButtons[RADIO_READER_TYPEA_848] };
-        requestCmd.mTypeADataRate = BitMapValue.getTypeAbDataRateValue(readerADateRateBoxs);
-
-        RadioButton[] readerBDateRateBoxs = {mSettingsRadioButtons[RADIO_READER_TYPEB_106],
-                mSettingsRadioButtons[RADIO_READER_TYPEB_212], mSettingsRadioButtons[RADIO_READER_TYPEB_424],
-                mSettingsRadioButtons[RADIO_READER_TYPEB_848] };
-        requestCmd.mTypeBDataRate = BitMapValue.getTypeAbDataRateValue(readerBDateRateBoxs);
-
-        RadioButton[] readerFDateRateBoxs = {mSettingsRadioButtons[RADIO_READER_TYPEF_212],
-                mSettingsRadioButtons[RADIO_READER_TYPEF_424] };
-        requestCmd.mTypeFDataRate = BitMapValue.getTypeFDataRateValue(readerFDateRateBoxs);
-
-        RadioButton[] readerVDateRateBoxs = {mSettingsRadioButtons[RADIO_READER_TYPEV_166],
-                mSettingsRadioButtons[RADIO_READER_TYPEV_2648] };
-        requestCmd.mTypeVDataRate = BitMapValue.getTypeVDataRateValue(readerVDateRateBoxs);
-
-        if (mRgTypeVSubCarrier.getCheckedRadioButtonId() == R.id.hqa_readermode_rb_typev_subcarrier) {
-            requestCmd.mTypeVSubcarrier = 0;
-        } else {
-            requestCmd.mTypeVSubcarrier = 1;
-        }
-
-        if (mRgTypeVMode.getCheckedRadioButtonId() == R.id.hqa_readermode_rb_typev_mode_4) {
-            requestCmd.mTypeVCodingMode = 0;
-        } else {
-            requestCmd.mTypeVCodingMode = 1;
-        }
-/*
-        requestCmd.mTypeADataRate = BitMapValue.getTypeADataRateValue(mRgTypeA);
-        requestCmd.mTypeBDataRate = BitMapValue.getTypeBDataRateValue(mRgTypeB);
-        requestCmd.mTypeFDataRate = BitMapValue.getTypeFDataRateValue(mRgTypeF);
-        requestCmd.mTypeVDataRate = BitMapValue.getTypeVDataRateValue(mRgTypeVRate);
-        requestCmd.mTypeVSubcarrier = BitMapValue.getTypeVSubcarrier(mRgTypeVSubCarrier);
-        requestCmd.mTypeVCodingMode = BitMapValue.getTypeVCodingMode(mRgTypeVMode);
-*/
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        ProgressDialog dialog = null;
-        if (id == DIALOG_ID_WAIT) {
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        }
-        return dialog;
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/ReceiveThread.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/ReceiveThread.java
deleted file mode 100644
index 7669686..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/ReceiveThread.java
+++ /dev/null
@@ -1,118 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.content.Context;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.DataConvert;
-
-import java.io.DataInputStream;
-import java.io.IOException;
-import java.nio.ByteBuffer;
-
-/**
- * Class Name: ReceiveThread
- * <p>
- * Package: com.mediatek.nfcdemo.communication
- * <p>
- * Created on: 2012-6-27
- * <p>
- * <p>
- * Description:
- * <p>
- * Runnable for polling data from socket IO stream.
- * <p>
- *
- * @author mtk54045
- * @version V1.0
- */
-public class ReceiveThread implements Runnable {
-
-    private DataInputStream mInputStream;
-    private boolean mRunning;
-    private Context mContext;
-
-    /**
-     * Constructor with parameters.
-     *
-     */
-    public ReceiveThread(DataInputStream is, Context context) {
-        mContext = context;
-        mInputStream = is;
-        mRunning = false;
-    }
-
-    /**
-     * Set whether the runnable should run.
-     */
-    public void setRunning(boolean running) {
-        this.mRunning = running;
-    }
-
-    // @Override
-    public void run() {
-        if (mInputStream == null) {
-            Elog.d(NfcMainPage.TAG, "[ReceiveThread]The dispatcher or stream object is null!");
-            return;
-        }
-        mRunning = true;
-        NfcCommandHandler commandHandler = NfcCommandHandler.getInstance(mContext);
-        while (mRunning) {
-            try {
-                byte[] b = new byte[NfcCommand.RECEIVE_DATA_SIZE];
-                mInputStream.read(b);
-                for (int i = 0; i < b.length; i++) {
-                    Elog.d(NfcMainPage.TAG, b[i] + " ");
-                }
-                Elog.d(NfcMainPage.TAG,"done receive");
-                ByteBuffer buffer = ByteBuffer.wrap(b);
-                byte[] type = new byte[NfcCommand.INT_SIZE];
-                buffer.get(type);
-                int msgType = DataConvert.byteToInt(type);
-                Elog.d(NfcMainPage.TAG, "[ReceiveThread:info]Recieved data message type is "
-                        + msgType);
-                if (msgType > CommandType.MTK_NFC_EM_MSG_END) {
-                    Elog.v(NfcMainPage.TAG,
-                            "[ReceiveThread]receive message is not the correct msg and the content: "
-                                    + new String(b));
-                } else {
-                    byte[] lenght = new byte[NfcCommand.INT_SIZE];
-                    buffer.get(lenght);
-                    int msgLen = DataConvert.byteToInt(lenght);
-                    Elog.d(NfcMainPage.TAG, "[ReceiveThread:info]Recieved data message lenght is "
-                            + msgLen);
-                    NfcCommand mainMessage;
-                    if (msgLen == 0) {
-                        mainMessage = new NfcCommand(msgType, null);
-                    } else {
-                        byte[] bufferCont = new byte[msgLen];
-                        buffer.get(bufferCont);
-                        mainMessage = new NfcCommand(msgType, ByteBuffer.wrap(bufferCont));
-                    }
-                    commandHandler.execute(mainMessage);
-                }
-            } catch (IOException e) {
-                String errorMsg = e.getMessage();
-                if (!errorMsg.equals("Try again")) {
-                    mRunning = false;
-                    e.printStackTrace();
-                }
-                Elog.v(NfcMainPage.TAG, "[ReceiveThread]receive thread IOException: " + errorMsg);
-
-            }
-        }
-        if (!mRunning) {
-            commandHandler.destroy();
-        }
-        // mRunning = false;
-    }
-
-    /**
-     * Whether the runnable is running.
-     *
-     * @return True if running, otherwise false.
-     */
-    public boolean isRunning() {
-        return mRunning;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/RwFunction.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/RwFunction.java
deleted file mode 100644
index b880093..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/RwFunction.java
+++ /dev/null
@@ -1,292 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.DataConvert;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmOptAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.ReaderModeRspResult;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermNtf;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermOptReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmAlsReadermOptRsp;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmPollingNty;
-
-import java.nio.ByteBuffer;
-
-public class RwFunction extends Activity {
-
-    protected static final int HANDLER_MSG_GET_RSP = 300;
-    private static final int HANDLER_MSG_GET_NTF = 100;
-    private static final int HANDLER_MSG_GET_POLLING_NTF = 200;
-    private TextView mTvUid;
-    private Button mBtnRead;
-    private Button mBtnWrite;
-    private Button mBtnFormat;
-    //private byte[] mReadermRspArray;
-    //private NfcEmAlsReadermNtf mTransferReadermNtf;
-    private NfcEmAlsReadermNtf mReceivedReadermNtf;
-    private byte[] mRspArray;
-    private NfcEmAlsReadermOptRsp mOptRsp;
-    private boolean mUnregisterReceiver = false;
-    private NfcEmPollingNty mPollingNty;
-
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "[RwFunction]mReceiver onReceive");
-            String action = intent.getAction();
-            mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_OPT_RSP)
-                    .equals(action)) {
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mOptRsp = new NfcEmAlsReadermOptRsp();
-                    mOptRsp.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_NTF)
-                    .equals(action)) {
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                   // mReceivedReadermNtf = new NfcEmAlsReadermNtf();
-                    mReceivedReadermNtf.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_NTF);
-                }
-            } else if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_POLLING_MODE_NTF)
-             .equals(action)) {
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mPollingNty = new NfcEmPollingNty();
-                    mPollingNty.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_POLLING_NTF);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[RwFunction]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            String toastMsg = null;
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                switch (mOptRsp.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "Rw Format Rsp Result: SUCCESS";
-                        mBtnFormat.setEnabled(false);
-                        mBtnRead.setEnabled(true);
-                        mBtnWrite.setEnabled(true);
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "Rw Format Rsp Result: FAIL";
-                        break;
-                    default:
-                        toastMsg = "Rw Format Rsp Result: ERROR";
-                        break;
-                }
-
-            } else if (HANDLER_MSG_GET_NTF == msg.what) {
-                switch (mReceivedReadermNtf.mResult) {
-                    case ReaderModeRspResult.CONNECT:
-                        toastMsg = "ReaderMode Ntf Result: CONNECT";
-                        if (mReceivedReadermNtf.mIsNdef == 0 || mReceivedReadermNtf.mIsNdef == 1
-                                || mReceivedReadermNtf.mIsNdef == 2) {
-                            if (null == mRspArray) {
-                                toastMsg = "Not get the response";
-                                RwFunction.this.finish();
-                            } else {
-                                updateButtonUI(mReceivedReadermNtf.mIsNdef);
-                                updateUid();
-                            }
-                        }
-                        break;
-                    case ReaderModeRspResult.DISCONNECT:
-                        toastMsg = "ReaderMode Ntf Result: DISCONNECT";
-                        //mUnregisterReceiver = true;
-                        //unregisterReceiver(mReceiver);
-                        //RwFunction.this.finish();
-                        updateButtonUI(4);
-                        mTvUid
-                            .setText("Tag disconnect...and re-polling...");
-                        break;
-                    case ReaderModeRspResult.FAIL:
-                        toastMsg = "ReaderMode Ntf Result: FAIL";
-                        if (null == mRspArray) {
-                            toastMsg = "Not get the response";
-                            RwFunction.this.finish();
-                        } else {
-                            updateButtonUI(3);
-                            updateUid();
-                        }
-                        break;
-                    default:
-                        toastMsg = "Tag is not NDEF format";
-                        if (null == mRspArray) {
-                            toastMsg = "Not get the response";
-                            RwFunction.this.finish();
-                        } else {
-                            updateButtonUI(3);
-                            updateUid();
-                        }
-                        break;
-                }
-            } else if (HANDLER_MSG_GET_POLLING_NTF == msg.what) {
-                 switch (mPollingNty.mDetectType) {
-                    case NfcCommand.EM_ENABLE_FUNC_READER_MODE:
-                        // show RW function ui
-                        mReceivedReadermNtf.readRaw(ByteBuffer.wrap(mPollingNty.mData));
-                        this.sendEmptyMessage(HANDLER_MSG_GET_NTF);
-                        break;
-                    default:
-                         toastMsg = "Please back to polling loop mode screen";
-                        break;
-                }
-            }
-            Elog.v(NfcMainPage.TAG, "[RwFunction]" + toastMsg);
-            if (toastMsg != null) {
-                Toast.makeText(RwFunction.this, toastMsg, Toast.LENGTH_SHORT).show();
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[RwFunction]onClick button view is "
-                    + ((Button) arg0).getText());
-            Intent intent = new Intent();
-            if (arg0.equals(mBtnRead)) {
-                intent.setClass(RwFunction.this, FunctionRead.class);
-                intent.putExtra(FunctionRead.PARENT_EXTRA_STR, 0);
-                startActivity(intent);
-            } else if (arg0.equals(mBtnWrite)) {
-                intent.setClass(RwFunction.this, FunctionWrite.class);
-                startActivity(intent);
-            } else if (arg0.equals(mBtnFormat)) {
-                doFormat();
-            } else {
-                Elog.v(NfcMainPage.TAG, "[RwFunction]onClick noting.");
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_rw_function);
-        mTvUid = (TextView) findViewById(R.id.hqa_nfc_rw_tv_uid);
-        mBtnRead = (Button) findViewById(R.id.hqa_nfc_rw_btn_read);
-        mBtnWrite = (Button) findViewById(R.id.hqa_nfc_rw_btn_write);
-        mBtnFormat = (Button) findViewById(R.id.hqa_nfc_rw_btn_format);
-        mBtnRead.setOnClickListener(mClickListener);
-        mBtnWrite.setOnClickListener(mClickListener);
-        mBtnFormat.setOnClickListener(mClickListener);
-        Intent intent = getIntent();
-        int ndefType = intent.getIntExtra(ReaderMode.KEY_READER_MODE_RSP_NDEF, 1);
-        updateButtonUI(ndefType);
-        mRspArray = intent.getByteArrayExtra(ReaderMode.KEY_READER_MODE_RSP_ARRAY);
-        if (null == mRspArray) {
-            Toast.makeText(this, "Not get the response", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        if (null == mReceivedReadermNtf) {
-            mReceivedReadermNtf = new NfcEmAlsReadermNtf();
-        }
-        mReceivedReadermNtf.readRaw(ByteBuffer.wrap(mRspArray));
-        mHandler.sendEmptyMessage(HANDLER_MSG_GET_NTF); // update button UI
-    }
-
-    private void updateButtonUI(int ndefType) {
-        mBtnRead.setVisibility(View.VISIBLE);
-        mBtnFormat.setVisibility(View.VISIBLE);
-        mBtnWrite.setVisibility(View.VISIBLE);
-        if (ndefType == 1) { // ndef
-            mBtnRead.setEnabled(true);
-            mBtnWrite.setEnabled(true);
-            mBtnFormat.setEnabled(false);
-        } else if (ndefType == 0) { // format
-            mBtnFormat.setEnabled(true);
-            mBtnRead.setEnabled(false);
-            mBtnWrite.setEnabled(false);
-        } else if (ndefType == 2) { // read function only
-            mBtnRead.setEnabled(true);
-            mBtnFormat.setEnabled(false);
-            mBtnWrite.setEnabled(false);
-        } else if (ndefType == 3) { // result fail case
-            mBtnRead.setEnabled(false);
-            mBtnFormat.setEnabled(false);
-            mBtnWrite.setEnabled(false);
-            Elog.v(NfcMainPage.TAG, "ReaderModeRspResult.FAIL, disabe all buttons");
-        } else if (ndefType == 4) { // result fail case;
-            mBtnRead.setVisibility(View.GONE);
-            mBtnFormat.setVisibility(View.GONE);
-            mBtnWrite.setVisibility(View.GONE);
-            Elog.v(NfcMainPage.TAG, "ReaderModeRspResult.DISCONNECT, Hide all buttons");
-        }
-    }
-
-    private void updateUid() {
-        mTvUid
-                .setText("UID: "
-                        + DataConvert.printHexString(mReceivedReadermNtf.mUid,
-                               mReceivedReadermNtf.mUidLen));
-    }
-    @Override
-    protected void onStart() {
-        Elog.v(NfcMainPage.TAG, "[RwFunction]onStart");
-        super.onStart();
-        updateUid();
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_OPT_RSP);
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_ALS_READER_MODE_NTF); // for reader mode ntf
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_POLLING_MODE_NTF);  // for polling mode ntf
-        registerReceiver(mReceiver, filter);
-        mUnregisterReceiver = false;
-    }
-
-    @Override
-    protected void onStop() {
-        Elog.v(NfcMainPage.TAG, "[RwFunction]onStop");
-        if (!mUnregisterReceiver) {
-            unregisterReceiver(mReceiver);
-        }
-        super.onStop();
-    }
-    @Override
-    public void onBackPressed() {
-        Elog.v(NfcMainPage.TAG, "[RwFunction]onBackPressed");
-        mUnregisterReceiver = true;
-        unregisterReceiver(mReceiver);
-        super.onBackPressed();
-    }
-    @Override
-    protected void onDestroy() {
-        Elog.v(NfcMainPage.TAG, "[RwFunction]onDestroy");
-        super.onDestroy();
-    }
-
-    private void doFormat() {
-        NfcEmAlsReadermOptReq request = new NfcEmAlsReadermOptReq();
-        request.mAction = EmOptAction.FORMAT;
-        NfcClient.getInstance()
-                .sendCommand(CommandType.MTK_NFC_EM_ALS_READER_MODE_OPT_REQ, request);
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/SwpTest.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/SwpTest.java
deleted file mode 100644
index c69a775..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/SwpTest.java
+++ /dev/null
@@ -1,173 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmSwpReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmSwpRsp;
-
-import java.nio.ByteBuffer;
-
-public class SwpTest extends Activity {
-
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int DIALOG_ID_WAIT = 0;
-    private Button mBtnStart;
-    private Button mBtnReturn;
-
-    private NfcEmSwpRsp mResponse;
-    private byte[] mRspArray;
-    private boolean mEnableBackKey = true;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "[SwpTest]mReceiver onReceive");
-            String action = intent.getAction();
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_FM_SWP_TEST_RSP)
-                    .equals(action)) {
-                mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mResponse = new NfcEmSwpRsp();
-                    mResponse.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[SwpTest]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                String toastMsg = null;
-                switch (mResponse.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "SWP Test Rsp Result: SUCCESS";
-                        if (mBtnStart.getText().equals(
-                                SwpTest.this.getString(R.string.hqa_nfc_start))) {
-                            setButtonsStatus(false);
-                        } else {
-                            setButtonsStatus(true);
-                        }
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "SWP Test Rsp Result: FAIL";
-                        break;
-                    default:
-                        toastMsg = "SWP Test Rsp Result: ERROR";
-                        break;
-                }
-                Toast.makeText(SwpTest.this, toastMsg, Toast.LENGTH_SHORT).show();
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[SwpTest]onClick button view is "
-                    + ((Button) arg0).getText());
-            if (arg0.equals(mBtnStart)) {
-                showDialog(DIALOG_ID_WAIT);
-                doTestAction(mBtnStart.getText().equals(
-                        SwpTest.this.getString(R.string.hqa_nfc_start)));
-            } else if (arg0.equals(mBtnReturn)) {
-                SwpTest.this.onBackPressed();
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_swp_test);
-        mBtnStart = (Button) findViewById(R.id.hqa_swp_btn_start_stop);
-        mBtnStart.setOnClickListener(mClickListener);
-        mBtnReturn = (Button) findViewById(R.id.hqa_swp_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_FM_SWP_TEST_RSP);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (!mEnableBackKey) {
-            return;
-        }
-        super.onBackPressed();
-    }
-
-    private void setButtonsStatus(boolean b) {
-        Elog.v(NfcMainPage.TAG, "[SwpTest]setButtonsStatus " + b);
-        if (b) {
-            mBtnStart.setText(R.string.hqa_nfc_start);
-        } else {
-            mBtnStart.setText(R.string.hqa_nfc_stop);
-        }
-        mEnableBackKey = b;
-        mBtnReturn.setEnabled(b);
-    }
-
-    private void doTestAction(Boolean bStart) {
-        sendCommand(bStart);
-    }
-
-    private void sendCommand(Boolean bStart) {
-        NfcEmSwpReq requestCmd = new NfcEmSwpReq();
-        fillRequest(bStart, requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_FM_SWP_TEST_REQ,
-                requestCmd);
-    }
-
-    private void fillRequest(Boolean bStart, NfcEmSwpReq requestCmd) {
-        if (null == bStart) {
-            requestCmd.mAction = EmAction.ACTION_RUNINBG;
-        } else if (bStart.booleanValue()) {
-            requestCmd.mAction = EmAction.ACTION_START;
-        } else {
-            requestCmd.mAction = EmAction.ACTION_STOP;
-        }
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        ProgressDialog dialog = null;
-        if (id == DIALOG_ID_WAIT) {
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        }
-        return dialog;
-    }
-}
-
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/TxCarrierSignal.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/TxCarrierSignal.java
deleted file mode 100644
index efa8381..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/TxCarrierSignal.java
+++ /dev/null
@@ -1,183 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmTxCarrAlsOnReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmTxCarrAlsOnRsp;
-
-import java.nio.ByteBuffer;
-
-public class TxCarrierSignal extends Activity {
-
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int DIALOG_ID_WAIT = 0;
-    private Button mBtnStart;
-    private Button mBtnReturn;
-    private Button mBtnRunInBack;
-
-    private NfcEmTxCarrAlsOnRsp mResponse;
-    private byte[] mRspArray;
-    private boolean mEnableBackKey = true;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "[TxCarrierSignal]mReceiver onReceive");
-            String action = intent.getAction();
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_TX_CARRIER_ALS_ON_RSP)
-                    .equals(action)) {
-                mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mResponse = new NfcEmTxCarrAlsOnRsp();
-                    mResponse.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[TxCarrierSignal]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                String toastMsg = null;
-                switch (mResponse.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "TxCarrierSignal Rsp Result: SUCCESS";
-                        if (mBtnStart.getText().equals(
-                                TxCarrierSignal.this.getString(R.string.hqa_nfc_start))) {
-                            setButtonsStatus(false);
-                        } else {
-                            setButtonsStatus(true);
-                        }
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "TxCarrierSignal Rsp Result: FAIL";
-                        break;
-                    default:
-                        toastMsg = "TxCarrierSignal Rsp Result: ERROR";
-                        break;
-                }
-                Toast.makeText(TxCarrierSignal.this, toastMsg, Toast.LENGTH_SHORT).show();
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[TxCarrierSignal]onClick button view is "
-                    + ((Button) arg0).getText());
-            if (arg0.equals(mBtnStart)) {
-                showDialog(DIALOG_ID_WAIT);
-                doTestAction(mBtnStart.getText().equals(
-                        TxCarrierSignal.this.getString(R.string.hqa_nfc_start)));
-            } else if (arg0.equals(mBtnReturn)) {
-                TxCarrierSignal.this.onBackPressed();
-            } else if (arg0.equals(mBtnRunInBack)) {
-                doTestAction(null);
-                Intent intent = new Intent(Intent.ACTION_MAIN);
-                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                intent.addCategory(Intent.CATEGORY_HOME);
-                startActivity(intent);
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_tx_carrier_signal);
-        mBtnStart = (Button) findViewById(R.id.hqa_carrier_btn_start_stop);
-        mBtnStart.setOnClickListener(mClickListener);
-        mBtnReturn = (Button) findViewById(R.id.hqa_carrier_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        mBtnRunInBack = (Button) findViewById(R.id.hqa_carrier_btn_run_back);
-        mBtnRunInBack.setOnClickListener(mClickListener);
-        mBtnRunInBack.setEnabled(false);
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_TX_CARRIER_ALS_ON_RSP);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (!mEnableBackKey) {
-            return;
-        }
-        super.onBackPressed();
-    }
-
-    private void setButtonsStatus(boolean b) {
-        Elog.v(NfcMainPage.TAG, "[TxCarrierSignal]setButtonsStatus " + b);
-        if (b) {
-            mBtnStart.setText(R.string.hqa_nfc_start);
-        } else {
-            mBtnStart.setText(R.string.hqa_nfc_stop);
-        }
-        mBtnRunInBack.setEnabled(!b);
-        mEnableBackKey = b;
-        mBtnReturn.setEnabled(b);
-    }
-
-    private void doTestAction(Boolean bStart) {
-        sendCommand(bStart);
-    }
-
-    private void sendCommand(Boolean bStart) {
-        NfcEmTxCarrAlsOnReq requestCmd = new NfcEmTxCarrAlsOnReq();
-        fillRequest(bStart, requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_TX_CARRIER_ALS_ON_REQ,
-                requestCmd);
-    }
-
-    private void fillRequest(Boolean bStart, NfcEmTxCarrAlsOnReq requestCmd) {
-        if (null == bStart) {
-            requestCmd.mAction = EmAction.ACTION_RUNINBG;
-        } else if (bStart.booleanValue()) {
-            requestCmd.mAction = EmAction.ACTION_START;
-        } else {
-            requestCmd.mAction = EmAction.ACTION_STOP;
-        }
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        ProgressDialog dialog = null;
-        if (id == DIALOG_ID_WAIT) {
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        }
-        return dialog;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/VersionQuery.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/VersionQuery.java
deleted file mode 100644
index 854e4f2..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/VersionQuery.java
+++ /dev/null
@@ -1,158 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-//import android.widget.EditText;
-//import android.widget.Toast;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-//import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-//import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-//import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmVersionReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmVersionRsp;
-
-import java.nio.ByteBuffer;
-//import java.lang.Integer;
-
-public class VersionQuery extends Activity {
-
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int DIALOG_ID_WAIT = 0;
-    private static final String START_STR = "$PNFC";
-    private static final String END_STR = "*";
-    private Button mBtnReturn;
-    private TextView mTvMwVersion;
-    private TextView mTvFwVersion;
-    private TextView mTvHwVersion;
-
-    private NfcEmVersionRsp mResponse;
-    private byte[] mRspArray;
-
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "[VersionQuery]mReceiver onReceive");
-            String action = intent.getAction();
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_SW_VERSION_RESPONSE).equals(action)) {
-                mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mResponse = new NfcEmVersionRsp();
-                    mResponse.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[VersionQuery]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                String mwVersion = new String(mResponse.mMwVersion);
-                String fwVersion = Integer.toHexString(mResponse.mFwVersion);
-                String hwVersion = Integer.toHexString(mResponse.mHwVersion);
-                Elog.v(NfcMainPage.TAG, mwVersion);
-                Elog.v(NfcMainPage.TAG, String.valueOf(mResponse.mFwVersion));
-                Elog.v(NfcMainPage.TAG, String.valueOf(mResponse.mHwVersion));
-                mTvMwVersion.setText(VersionQuery.this.getString(R.string.hqa_nfc_mw_version) + mwVersion);
-                mTvFwVersion.setText(VersionQuery.this.getString(R.string.hqa_nfc_fw_version) + fwVersion);
-                mTvHwVersion.setText(VersionQuery.this.getString(R.string.hqa_nfc_hw_version) + hwVersion);
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[VersionQuery]onClick button view is "
-                    + ((Button) arg0).getText());
-            if (arg0.equals(mBtnReturn)) {
-                VersionQuery.this.onBackPressed();
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_version_query);
-        mBtnReturn = (Button) findViewById(R.id.hqa_version_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        mTvMwVersion = (TextView) findViewById(R.id.hqa_version_tv_mw_version);
-        mTvFwVersion = (TextView) findViewById(R.id.hqa_version_tv_fw_version);
-        mTvHwVersion = (TextView) findViewById(R.id.hqa_version_tv_hw_version);
-
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_SW_VERSION_RESPONSE);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-//        mTvMwVersion.setText("");
-//        mTvFwVersion.setText("");
-//        mTvHwVersion.setText("");
-        showDialog(DIALOG_ID_WAIT);
-        sendCommand();
-    }
-
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-//        if (!mEnableBackKey) {
-//            return;
-//        }
-        super.onBackPressed();
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        ProgressDialog dialog = null;
-        if (id == DIALOG_ID_WAIT) {
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        }
-        return dialog;
-    }
-
-    private void sendCommand() {
-//        NfcEmPnfcReq requestCmd = new NfcEmPnfcReq();
-//        fillRequest(requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_SW_VERSION_QUERY, null);
-    }
-
-//    private void fillRequest(NfcEmPnfcReq requestCmd) {
-//        requestCmd.mAction = EmAction.ACTION_START;
-//        String temp = START_STR + mEtPnfc.getText() + END_STR;
-//        byte[] cmdArray = temp.getBytes();
-//        System.arraycopy(cmdArray, 0, requestCmd.mData, 0, cmdArray.length);
-//        requestCmd.mDataLen = cmdArray.length;
-//    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/hqanfc/VirtualCardFunction.java b/EngineerMode/src/com/mediatek/engineermode/hqanfc/VirtualCardFunction.java
deleted file mode 100644
index 87b3104..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/hqanfc/VirtualCardFunction.java
+++ /dev/null
@@ -1,289 +0,0 @@
-package com.mediatek.engineermode.hqanfc;
-
-import android.app.Activity;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.hqanfc.NfcCommand.CommandType;
-import com.mediatek.engineermode.hqanfc.NfcCommand.EmAction;
-import com.mediatek.engineermode.hqanfc.NfcCommand.RspResult;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmVirtualCardReq;
-import com.mediatek.engineermode.hqanfc.NfcEmReqRsp.NfcEmVirtualCardRsp;
-
-import java.nio.ByteBuffer;
-
-public class VirtualCardFunction extends Activity {
-
-    private static final int HANDLER_MSG_GET_RSP = 200;
-    private static final int DIALOG_ID_WAIT = 0;
-    private static final int CHECKBOXS_NUMBER = 6;
-    private static final int CHECKBOX_TYPEA = 0;
-    // private static final int CHECKBOX_TYPEA_106 = 1;
-    // private static final int CHECKBOX_TYPEA_212 = 2;
-    // private static final int CHECKBOX_TYPEA_424 = 3;
-    // private static final int CHECKBOX_TYPEA_848 = 4;
-    private static final int CHECKBOX_TYPEB = 1;
-    // private static final int CHECKBOX_TYPEB_106 = 6;
-    // private static final int CHECKBOX_TYPEB_212 = 7;
-    // private static final int CHECKBOX_TYPEB_424 = 8;
-    // private static final int CHECKBOX_TYPEB_848 = 9;
-    private static final int CHECKBOX_TYPEF = 2;
-    private static final int CHECKBOX_TYPEF_212 = 3;
-    private static final int CHECKBOX_TYPEF_424 = 4;
-    private static final int CHECKBOX_TYPEB2 = 5;
-
-    private static final int RADIO_TYPEF_212 = 0;
-    private static final int RADIO_TYPEF_424 = 1;
-    private static final int RADIO_NUMBER = 2;
-
-    private CheckBox[] mSettingsCkBoxs = new CheckBox[CHECKBOXS_NUMBER];
-    //private RadioButton[] mSettingsRadioButtons = new RadioButton[RADIO_NUMBER];
-    //private RadioGroup mRgTypeF;
-    private Button mBtnSelectAll;
-    private Button mBtnClearAll;
-    private Button mBtnStart;
-    private Button mBtnReturn;
-    private Button mBtnRunInBack;
-
-    private NfcEmVirtualCardRsp mResponse;
-    private byte[] mRspArray;
-    private boolean mEnableBackKey = true;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            Elog.v(NfcMainPage.TAG, "[VirtualCardFunction]mReceiver onReceive");
-            String action = intent.getAction();
-            if ((NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_VIRTUAL_CARD_RSP).equals(action)) {
-                mRspArray = intent.getExtras().getByteArray(NfcCommand.MESSAGE_CONTENT_KEY);
-                if (null != mRspArray) {
-                    ByteBuffer buffer = ByteBuffer.wrap(mRspArray);
-                    mResponse = new NfcEmVirtualCardRsp();
-                    mResponse.readRaw(buffer);
-                    mHandler.sendEmptyMessage(HANDLER_MSG_GET_RSP);
-                }
-            } else {
-                Elog.v(NfcMainPage.TAG, "[VirtualCardFunction]Other response");
-            }
-        }
-    };
-
-    private final Handler mHandler = new Handler() {
-
-        public void handleMessage(Message msg) {
-            super.handleMessage(msg);
-            if (HANDLER_MSG_GET_RSP == msg.what) {
-                dismissDialog(DIALOG_ID_WAIT);
-                String toastMsg = null;
-                switch (mResponse.mResult) {
-                    case RspResult.SUCCESS:
-                        toastMsg = "VirtualCardFunction Rsp Result: SUCCESS";
-                        if (mBtnStart.getText().equals(
-                                VirtualCardFunction.this.getString(R.string.hqa_nfc_start))) {
-                            setButtonsStatus(false);
-                        } else {
-                            setButtonsStatus(true);
-                        }
-                        break;
-                    case RspResult.FAIL:
-                        toastMsg = "VirtualCardFunction Rsp Result: FAIL";
-                        break;
-                    case RspResult.NFC_STATUS_REMOVE_SE:
-                        toastMsg = "Please Remove SIM or uSD";
-                        break;
-                    default:
-                        toastMsg = "VirtualCardFunction Rsp Result: ERROR";
-                        break;
-                }
-                Toast.makeText(VirtualCardFunction.this, toastMsg, Toast.LENGTH_SHORT).show();
-            }
-        }
-    };
-
-    private final CheckBox.OnCheckedChangeListener mCheckedListener = new CheckBox.OnCheckedChangeListener() {
-        public void onCheckedChanged(CompoundButton buttonView, boolean checked) {
-            Elog.v(NfcMainPage.TAG, "[VirtualCardFunction]onCheckedChanged view is "
-                    + buttonView.getText() + " value is " + checked);
-            // if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_TYPEA])) {
-            // for (int i = CHECKBOX_TYPEA_106; i < CHECKBOX_TYPEB; i++) {
-            // mSettingsCkBoxs[i].setChecked(checked);
-            // }
-            // } else if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_TYPEB])) {
-            // for (int i = CHECKBOX_TYPEB_106; i < CHECKBOX_TYPEF; i++) {
-            // mSettingsCkBoxs[i].setChecked(checked);
-            // }
-            // } else
-            if (buttonView.equals(mSettingsCkBoxs[CHECKBOX_TYPEF])) {
-               // for (int i = 0; i < mRgTypeF.getChildCount(); i++) {
-               //     mRgTypeF.getChildAt(i).setEnabled(checked);
-               // }
-               mSettingsCkBoxs[CHECKBOX_TYPEF_212].setEnabled(checked);
-               mSettingsCkBoxs[CHECKBOX_TYPEF_424].setEnabled(checked);
-            }
-        }
-    };
-
-    private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(NfcMainPage.TAG, "[VirtualCardFunction]onClick button view is "
-                    + ((Button) arg0).getText());
-            if (arg0.equals(mBtnStart)) {
-                showDialog(DIALOG_ID_WAIT);
-                doTestAction(mBtnStart.getText().equals(
-                        VirtualCardFunction.this.getString(R.string.hqa_nfc_start)));
-            } else if (arg0.equals(mBtnSelectAll)) {
-                changeAllSelect(true);
-            } else if (arg0.equals(mBtnClearAll)) {
-                changeAllSelect(false);
-            } else if (arg0.equals(mBtnReturn)) {
-                VirtualCardFunction.this.onBackPressed();
-            } else if (arg0.equals(mBtnRunInBack)) {
-                doTestAction(null);
-                Intent intent = new Intent(Intent.ACTION_MAIN);
-                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-                intent.addCategory(Intent.CATEGORY_HOME);
-                startActivity(intent);
-            }
-        }
-    };
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.hqa_nfc_virtualcard_function);
-        initComponents();
-        changeAllSelect(true);
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(NfcCommand.ACTION_PRE + CommandType.MTK_NFC_EM_VIRTUAL_CARD_RSP);
-        registerReceiver(mReceiver, filter);
-    }
-
-    @Override
-    protected void onDestroy() {
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-        if (!mEnableBackKey) {
-            return;
-        }
-        super.onBackPressed();
-    }
-
-    private void initComponents() {
-        Elog.v(NfcMainPage.TAG, "[VirtualCardFunction]initComponents");
-        mSettingsCkBoxs[CHECKBOX_TYPEA] = (CheckBox) findViewById(R.id.hqa_virtual_cb_typea);
-        mSettingsCkBoxs[CHECKBOX_TYPEB] = (CheckBox) findViewById(R.id.hqa_virtual_cb_typeb);
-
-        mSettingsCkBoxs[CHECKBOX_TYPEF] = (CheckBox) findViewById(R.id.hqa_virtual_cb_typef);
-        mSettingsCkBoxs[CHECKBOX_TYPEF].setOnCheckedChangeListener(mCheckedListener);
-        mSettingsCkBoxs[CHECKBOX_TYPEF_212] = (CheckBox) findViewById(R.id.hqa_virtual_cb_typef_212);
-        mSettingsCkBoxs[CHECKBOX_TYPEF_424] = (CheckBox) findViewById(R.id.hqa_virtual_cb_typef_424);
-
-        mSettingsCkBoxs[CHECKBOX_TYPEB2] = (CheckBox) findViewById(R.id.hqa_virtual_cb_typeb2);
-
-        //mSettingsRadioButtons[RADIO_TYPEF_212] = (RadioButton) findViewById(R.id.hqa_virtual_rb_typef_212);
-        //mSettingsRadioButtons[RADIO_TYPEF_424] = (RadioButton) findViewById(R.id.hqa_virtual_rb_typef_424);
-
-        //mRgTypeF = (RadioGroup) findViewById(R.id.hqa_virtual_rg_typef);
-
-        mBtnSelectAll = (Button) findViewById(R.id.hqa_virtual_btn_select_all);
-        mBtnSelectAll.setOnClickListener(mClickListener);
-        mBtnClearAll = (Button) findViewById(R.id.hqa_virtual_btn_clear_all);
-        mBtnClearAll.setOnClickListener(mClickListener);
-        mBtnStart = (Button) findViewById(R.id.hqa_virtual_btn_start_stop);
-        mBtnStart.setOnClickListener(mClickListener);
-        mBtnReturn = (Button) findViewById(R.id.hqa_virtual_btn_return);
-        mBtnReturn.setOnClickListener(mClickListener);
-        mBtnRunInBack = (Button) findViewById(R.id.hqa_virtual_btn_run_back);
-        mBtnRunInBack.setOnClickListener(mClickListener);
-        mBtnRunInBack.setEnabled(false);
-    }
-
-    private void setButtonsStatus(boolean b) {
-        if (b) {
-            mBtnStart.setText(R.string.hqa_nfc_start);
-        } else {
-            mBtnStart.setText(R.string.hqa_nfc_stop);
-        }
-        mBtnRunInBack.setEnabled(!b);
-        mEnableBackKey = b;
-        mBtnReturn.setEnabled(b);
-        mBtnSelectAll.setEnabled(b);
-        mBtnClearAll.setEnabled(b);
-    }
-
-    private void changeAllSelect(boolean checked) {
-        Elog.v(NfcMainPage.TAG, "[VirtualCardFunction]changeAllSelect status is " + checked);
-        for (int i = 0; i < mSettingsCkBoxs.length; i++) {
-            mSettingsCkBoxs[i].setChecked(checked);
-        }
-
-        if (checked) {
-            mSettingsCkBoxs[CHECKBOX_TYPEF_424].setChecked(false);
-            //mRgTypeF.check(R.id.hqa_virtual_rb_typef_212);
-        }
-    }
-
-    private void doTestAction(Boolean bStart) {
-        sendCommand(bStart);
-    }
-
-    private void sendCommand(Boolean bStart) {
-        NfcEmVirtualCardReq requestCmd = new NfcEmVirtualCardReq();
-        fillRequest(bStart, requestCmd);
-        NfcClient.getInstance().sendCommand(CommandType.MTK_NFC_EM_VIRTUAL_CARD_REQ, requestCmd);
-    }
-
-    private void fillRequest(Boolean bStart, NfcEmVirtualCardReq requestCmd) {
-        if (null == bStart) {
-            requestCmd.mAction = EmAction.ACTION_RUNINBG;
-        } else if (bStart.booleanValue()) {
-            requestCmd.mAction = EmAction.ACTION_START;
-        } else {
-            requestCmd.mAction = EmAction.ACTION_STOP;
-        }
-        int temp = 0;
-        temp |= mSettingsCkBoxs[CHECKBOX_TYPEA].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_A : 0;
-        temp |= mSettingsCkBoxs[CHECKBOX_TYPEB].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_B : 0;
-        temp |= mSettingsCkBoxs[CHECKBOX_TYPEF].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_F : 0;
-        temp |= mSettingsCkBoxs[CHECKBOX_TYPEB2].isChecked() ? NfcCommand.EM_ALS_READER_M_TYPE_BPRIME : 0;
-        requestCmd.mSupportType = temp;
-
-        int rateVaule = 0;
-        rateVaule |= mSettingsCkBoxs[CHECKBOX_TYPEF_212].isChecked() ? NfcCommand.EM_ALS_READER_M_SPDRATE_212 : 0;
-        rateVaule |= mSettingsCkBoxs[CHECKBOX_TYPEF_424].isChecked() ? NfcCommand.EM_ALS_READER_M_SPDRATE_424 : 0;
-
-        requestCmd.mTypeFDataRate = rateVaule;
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        ProgressDialog dialog = null;
-        if (id == DIALOG_ID_WAIT) {
-            dialog = new ProgressDialog(this);
-            dialog.setMessage(getString(R.string.hqa_nfc_dialog_wait_message));
-            dialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-            dialog.setCancelable(false);
-            return dialog;
-        }
-        return dialog;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/io/Eint.java b/EngineerMode/src/com/mediatek/engineermode/io/Eint.java
deleted file mode 100644
index 915bd2f..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/io/Eint.java
+++ /dev/null
@@ -1,155 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.io;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.IOException;
-
-public class Eint extends Activity implements OnClickListener {
-
-    private TextView mDispSensitivity;
-    private TextView mDispPolarity;
-    private Button mBtnQuery;
-    private EditText mEdit;
-    private static final String TAG = "EM/IO/EINT";
-    private static final String ROOT_DIR = "/sys/bus/platform/drivers/eint/";
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.eint);
-
-        mDispSensitivity = (TextView) findViewById(R.id.EINT_sensitivity);
-        mDispPolarity = (TextView) findViewById(R.id.EINT_polarity);
-
-        mBtnQuery = (Button) findViewById(R.id.EINT_query);
-        mEdit = (EditText) findViewById(R.id.EINT_edit);
-
-        mBtnQuery.setOnClickListener(this);
-
-    }
-
-
-    private void showDialog(String title, String info) {
-        AlertDialog.Builder builder = new AlertDialog.Builder(this);
-        builder.setTitle(title);
-        builder.setMessage(info);
-        builder.setPositiveButton("OK", null);
-        builder.create().show();
-    }
-
-    public void onClick(View arg0) {
-        Log.v("@M_" + TAG, "-->onClick");
-        try {
-            if (arg0.getId() == mBtnQuery.getId()) {
-                String editString = mEdit.getText().toString();
-                if (null == editString || editString.equals("")
-                        || editString.length() > 4) {
-                    Toast.makeText(this, "Please input the NO..",
-                            Toast.LENGTH_LONG).show();
-                    return;
-                }
-                String[] cmd = { "/system/bin/sh", "-c",
-                        "echo " + editString + " > " + ROOT_DIR + "current_eint" };
-                int ret = ShellExe.execCommand(cmd);
-                if (0 != ret) {
-                    mDispSensitivity.setText("Set EINT NO. Error.");
-                    mDispPolarity.setText("Set EINT NO. Error.");
-                    return;
-                }
-
-                cmd[2] = "cat  " + ROOT_DIR + "current_eint";
-                ret = ShellExe.execCommand(cmd);
-                if (0 != ret) {
-                    mDispSensitivity.setText("Query Error.");
-                    mDispPolarity.setText("Query Error.");
-                    return;
-                }
-
-                if (!ShellExe.getOutput().equalsIgnoreCase(editString)) {
-                    mDispSensitivity.setText("No Such EINT NO..");
-                    mDispPolarity.setText("No Such EINT NO..");
-                    return;
-                }
-
-                cmd[2] = "cat " + ROOT_DIR + "current_eint_sens";
-                ret = ShellExe.execCommand(cmd);
-                if (0 != ret) {
-                    mDispSensitivity.setText("Get Sensitivity Error.");
-                } else {
-                    if (ShellExe.getOutput().equalsIgnoreCase("0")) {
-                        mDispSensitivity.setText("edge");
-                    } else {
-                        mDispSensitivity.setText("level");
-                    }
-
-                }
-
-                cmd[2] = "cat " + ROOT_DIR + "current_eint_pol";
-                ret = ShellExe.execCommand(cmd);
-                if (0 != ret) {
-                    mDispPolarity.setText("Get Polarity Error.");
-                    return;
-                } else {
-                    if (ShellExe.getOutput().equalsIgnoreCase("0")) {
-                        mDispPolarity.setText("active-low");
-                    } else {
-                        mDispPolarity.setText("active-high");
-                    }
-                }
-
-                return;
-            }
-
-        } catch (IOException e) {
-            Log.i("@M_" + TAG, e.toString());
-            showDialog("Shell Exception!", e.toString());
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/io/EmGpio.java b/EngineerMode/src/com/mediatek/engineermode/io/EmGpio.java
deleted file mode 100644
index c168575..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/io/EmGpio.java
+++ /dev/null
@@ -1,167 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.io;
-import com.mediatek.engineermode.emsvr.AFMFunctionCallEx;
-import com.mediatek.engineermode.emsvr.FunctionReturn;
-import android.util.Log;
-public class EmGpio {
-    private static final String RESULT_ERROR = "ERROR";
-    private static final String RESULT_SUCCESS = "SUCCESS";
-    private static final String TAG = "EM/EmGpio";
-    public static native int getGpioMaxNumber();
-
-    public static native boolean gpioInit();
-
-    public static native boolean gpioUnInit();
-
-    public static native boolean setGpioInput(int gpioIndex);
-
-    public static native boolean setGpioOutput(int gpioIndex);
-
-    public static native boolean setGpioDataHigh(int gpioIndex);
-
-    public static native boolean setGpioDataLow(int gpioIndex);
-
-    public static native int getCurrent(int hostNumber);
-
-    public static native boolean setCurrent(int hostNumber, int currentDataIdx,
-            int currentCmdIdx);
-
-    public static boolean setSd30Mode(int hostNumber, int sd30Mode,
-            int sd30MaxCurrent, int sd30Drive, int sd30PowerControl) {
-        String response = runCmdInNative(
-        AFMFunctionCallEx.FUNCTION_EM_MSDC_SET30_MODE, 5, hostNumber, sd30Mode, sd30MaxCurrent, sd30Drive, sd30PowerControl);
-        if (response.equals(RESULT_ERROR)) {
-            return false;
-        } else {
-            return true;
-        }
-    }
-
-    public static int newGetCurrent(int hostNumber, int opcode) {
-        String response = runCmdInNative(
-                AFMFunctionCallEx.FUNCTION_EM_MSDC_GET_CURRENT, 2, hostNumber, opcode);
-        Log.d("@M_" + TAG, "newGetCurrent: " + response);
-        int idx = -1;
-        try {
-            idx = Integer.parseInt(response);
-        } catch (NumberFormatException e) {
-            Log.i("@M_" + TAG, "parseInt failed--invalid number!");
-        }
-        return idx;
-    }
-
-    public static boolean newSetCurrent(int hostNumber, int clkpu,
-            int clkpd, int cmdpu, int cmdpd, int datapu, int datapd,
-            int rstpu, int rstpd, int dspu, int dspd,
-            int hopbit, int hoptime, int opcode) {
-        String response = runCmdInNative(
-                AFMFunctionCallEx.FUNCTION_EM_MSDC_SET_CURRENT, 14, hostNumber, clkpu, clkpd, cmdpu, cmdpd,
-                datapu, datapd, rstpu, rstpd, dspu, dspd, hopbit, hoptime, opcode);
-        if (response.equals(RESULT_ERROR)) {
-            return false;
-        } else {
-            return true;
-        }
-
-    }
-    private static String runCmdInNative(int index, int paramNum, int... param) {
-        StringBuilder build = new StringBuilder();
-        AFMFunctionCallEx functionCall = new AFMFunctionCallEx();
-        boolean result = functionCall.startCallFunctionStringReturn(index);
-        functionCall.writeParamNo(paramNum);
-        for (int i : param) {
-            functionCall.writeParamInt(i);
-        }
-        if (result) {
-            FunctionReturn r;
-            do {
-                r = functionCall.getNextResult();
-                if (r.mReturnString.isEmpty()) {
-                    break;
-                }
-                build.append(r.mReturnString);
-            } while (r.mReturnCode == AFMFunctionCallEx.RESULT_CONTINUE);
-            if (r.mReturnCode == AFMFunctionCallEx.RESULT_IO_ERR) {
-                Log.d("@M_" + TAG, "AFMFunctionCallEx: RESULT_IO_ERR");
-                build.replace(0, build.length(), RESULT_ERROR);
-            }
-        } else {
-            Log.d("@M_" + TAG, "AFMFunctionCallEx return false");
-            build.append(RESULT_ERROR);
-        }
-        return build.toString();
-    }
-    static {
-        System.loadLibrary("em_gpio_jni");
-
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/io/Gpio.java b/EngineerMode/src/com/mediatek/engineermode/io/Gpio.java
deleted file mode 100644
index e3ada45..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/io/Gpio.java
+++ /dev/null
@@ -1,169 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.io;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-
-public class Gpio extends Activity implements OnClickListener {
-
-    private Button mBtnDirIn;
-    private Button mBtnDirOut;
-    private Button mBtnDataHigh;
-    private Button mBtnDataLow;
-
-    private EditText mEdit;
-    private TextView mMaxGpioNum;
-
-    private static final String TAG = "EM/IO/GPIO";
-
-    /** Called when the activity is first created. */
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.gpio);
-
-        mBtnDirIn = (Button) findViewById(R.id.GPIO_Direction_In);
-        mBtnDirOut = (Button) findViewById(R.id.GPIO_Direction_Out);
-        mBtnDataHigh = (Button) findViewById(R.id.GPIO_Data_High);
-        mBtnDataLow = (Button) findViewById(R.id.GPIO_Data_Low);
-
-        mEdit = (EditText) findViewById(R.id.GPIO_Edit_Value);
-        mMaxGpioNum = (TextView) findViewById(R.id.GPIO_Setnomax_Text);
-
-        mBtnDirIn.setOnClickListener(this);
-        mBtnDirOut.setOnClickListener(this);
-        mBtnDataHigh.setOnClickListener(this);
-        mBtnDataLow.setOnClickListener(this);
-
-        // mMaxGpioNum.setText("max");
-    }
-
-    @Override
-    public void onPause() {
-        Log.v("@M_" + TAG, "-->onPause");
-        EmGpio.gpioUnInit();
-        super.onPause();
-    }
-
-    @Override
-    protected void onResume() {
-        Log.v("@M_" + TAG, "-->onResume");
-        super.onResume();
-        boolean ret = EmGpio.gpioInit();
-        if (!ret) {
-            AlertDialog.Builder builder = new AlertDialog.Builder(this);
-            builder.setTitle("Error");
-            builder.setMessage("Driver Init error!");
-            builder.setPositiveButton("OK",
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int id) {
-                            Gpio.this.finish();
-                        }
-                    });
-            builder.create().show();
-        } else {
-            mMaxGpioNum.setText("Max Num:"
-                    + String.valueOf(EmGpio.getGpioMaxNumber() - 1));
-        }
-
-    }
-
-    public void onClick(View arg0) {
-        String editString = mEdit.getText().toString();
-        if (null == editString || editString.equals("")
-                || editString.length() > 4) {
-            Toast.makeText(this, "Please input the value.", Toast.LENGTH_LONG)
-                    .show();
-            return;
-        }
-        int inputValue = Integer.valueOf(mEdit.getText().toString());
-        if (inputValue > EmGpio.getGpioMaxNumber() - 1 || inputValue < 0) {
-            Toast.makeText(this, "ERR: Value is too small or too big.",
-                    Toast.LENGTH_LONG).show();
-            return;
-        }
-        boolean setFlag = false;
-        if (arg0.getId() == mBtnDirIn.getId()) {
-
-            boolean ret = EmGpio.setGpioInput(inputValue);
-            if (ret) {
-                // ShowDialog("Set Success", "Set Direction Input succeeded.");
-//                Toast.makeText(this, "Set Direction Input succeeded.",
-//                        Toast.LENGTH_LONG).show();
-                setFlag = true;
-            }
-
-        } else if (arg0.getId() == mBtnDirOut.getId()) {
-            boolean ret = EmGpio.setGpioOutput(inputValue);
-            if (ret) {
-                setFlag = true;
-            } 
-        } else if (arg0.getId() == mBtnDataHigh.getId()) {
-            boolean ret = EmGpio.setGpioDataHigh(inputValue);
-            if (ret) {
-                setFlag = true;
-            } 
-
-        } else if (arg0.getId() == mBtnDataLow.getId()) {
-            boolean ret = EmGpio.setGpioDataLow(inputValue);
-            if (ret) {
-                setFlag = true;
-            } 
-        }
-        if (setFlag) {
-            Toast.makeText(this, "Set success.",
-                  Toast.LENGTH_SHORT).show();
-        } else {
-            Toast.makeText(this, "Set fail.",
-                    Toast.LENGTH_SHORT).show();
-        }
-        
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/io/IoList.java b/EngineerMode/src/com/mediatek/engineermode/io/IoList.java
deleted file mode 100644
index e3317eb..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/io/IoList.java
+++ /dev/null
@@ -1,95 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.io;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class IoList extends Activity implements OnItemClickListener {
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.io);
-
-        ListView listView = (ListView) findViewById(R.id.ListView_Io);
-        // if(TP_listView == null)
-        // {
-        // Log.w("@M_" + "IO", "clocwork worked...");
-        // //not return and let exception happened.
-        // }
-        ArrayList<String> items = new ArrayList<String>();
-        items.add("GPIO");
-        items.add("EINT");
-        items.add("MSDC");
-
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, items);
-        listView.setAdapter(adapter);
-        listView.setOnItemClickListener(this);
-    }
-
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-
-        Intent intent = new Intent();
-        switch (arg2) {
-        case 0:
-            intent.setClass(this, Gpio.class);
-            break;
-        case 1:
-            intent.setClass(this, Eint.class);
-            break;
-        case 2:
-            intent.setClass(this, MsdcSelect.class);
-            break;
-        default:
-            break;
-        }
-
-        this.startActivity(intent);
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/io/MsdcDrivSet.java b/EngineerMode/src/com/mediatek/engineermode/io/MsdcDrivSet.java
deleted file mode 100644
index fb96612..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/io/MsdcDrivSet.java
+++ /dev/null
@@ -1,330 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.io;
-
-import android.content.res.Resources;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.Spinner;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.ChipSupport;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class MsdcDrivSet extends MsdcTest implements OnClickListener {
-
-    private static final String TAG = "MSDC_IOCTL";
-
-    private static final int DATA_BIT = 0xF;
-    private static final int OFFSET_FOUR_BIT = 4;
-    private static final int OFFSET_EIGHT_BIT = 8;
-    private static final int OFFSET_TWELVE_BIT = 12;
-    private static final int OFFSET_SIXTEEN_BIT = 16;
-    private static final int OFFSET_TWENTY_BIT = 20;
-    private static final int OFFSET_RST_BIT = 24;
-    private static final int OFFSET_DS_BIT = 28;
-
-    private Spinner mHostSpinner;
-    private int mHostIndex = 0;
-
-    private Spinner mClkPuSpinner;
-    private int mClkPuIndex = 0;
-
-    private Spinner mClkPdSpinner;
-    private int mClkPdIndex = 0;
-
-    private Spinner mCmdPuSpinner;
-    private int mCmdPuIndex = 0;
-
-    private Spinner mCmdPdSpinner;
-    private int mCmdPdIndex = 0;
-
-    private Spinner mDataPuSpinner;
-    private int mDataPuIndex = 0;
-
-    private Spinner mDataPdSpinner;
-    private int mDataPdIndex = 0;
-
-    private Spinner mRstPuSpinner;
-    private int mRstPuIndex = 0;
-
-    private int mRstPdIndex = 0;
-
-    private Spinner mDsPuSpinner;
-    private int mDsPuIndex = 0;
-
-    private int mDsPdIndex = 0;
-
-    private Button mBtnGet;
-    private Button mBtnSet;
-    private boolean mIsNewChip = false;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.new_msdc);
-        mIsNewChip = ChipSupport.MTK_6589_SUPPORT <= ChipSupport.getChip();
-        mBtnGet = (Button) findViewById(R.id.NEW_MSDC_Get);
-        mBtnSet = (Button) findViewById(R.id.NEW_MSDC_Set);
-
-        mHostSpinner = (Spinner) findViewById(R.id.NEW_MSDC_HOST_sppiner);
-
-        mClkPuSpinner = (Spinner) findViewById(R.id.MSDC_Clk_pu_spinner);
-        mClkPdSpinner = (Spinner) findViewById(R.id.MSDC_clk_pd_spinner);
-
-        mCmdPuSpinner = (Spinner) findViewById(R.id.MSDC_cmd_pu_spinner);
-        mCmdPdSpinner = (Spinner) findViewById(R.id.MSDC_cmd_pd_spinner);
-
-        mDataPuSpinner = (Spinner) findViewById(R.id.MSDC_data_pu_spinner);
-        mDataPdSpinner = (Spinner) findViewById(R.id.MSDC_data_pd_spinner);
-
-        mRstPuSpinner = (Spinner) findViewById(R.id.MSDC_rst_pu_spinner);
-        mDsPuSpinner = (Spinner) findViewById(R.id.MSDC_ds_pu_spinner);
-        mBtnGet.setOnClickListener(this);
-        mBtnSet.setOnClickListener(this);
-        Resources res = getResources();
-        String[] itemArray = res.getStringArray(R.array.host_type);
-        ArrayList<String> itemList = new ArrayList<String>();
-        for (int i = 0; i < itemArray.length - 1; i++) {
-            itemList.add(itemArray[i]);
-        }
-        Log.i("@M_" + TAG, "New chip? " + mIsNewChip);
-        if (mIsNewChip) {
-            itemList.add(itemArray[itemArray.length - 1]);
-        }
-        if (mIsNewChip) {
-            TextView tempView = null;
-            tempView = (TextView) findViewById(R.id.MSDC_Clk_pu_text);
-            tempView.setText(R.string.NEW_MSDC_CLK);
-            tempView = (TextView) findViewById(R.id.MSDC_Cmd_pu_text);
-            tempView.setText(R.string.NEW_MSDC_CMD);
-            tempView = (TextView) findViewById(R.id.MSDC_Data_pu_text);
-            tempView.setText(R.string.NEW_MSDC_DATA);
-            findViewById(R.id.MSDC_Clk_pd_text).setVisibility(View.GONE);
-            findViewById(R.id.MSDC_Cmd_pd_text).setVisibility(View.GONE);
-            findViewById(R.id.MSDC_Data_pd_text).setVisibility(View.GONE);
-            mClkPdSpinner.setVisibility(View.GONE);
-            mCmdPdSpinner.setVisibility(View.GONE);
-            mDataPdSpinner.setVisibility(View.GONE);
-        }
-        if (ChipSupport.MTK_6595_SUPPORT > ChipSupport.getChip()) {
-            findViewById(R.id.MSDC_Rst_pu_text).setVisibility(View.GONE);
-            findViewById(R.id.MSDC_Ds_pu_text).setVisibility(View.GONE);
-            mRstPuSpinner.setVisibility(View.GONE);
-            mDsPuSpinner.setVisibility(View.GONE);
-        }
-        if (ChipSupport.isChipInSet(ChipSupport.CHIP_657X_SERIES_NEW)) {
-            // 72 series only have host 0 & 1
-            for (int j = itemList.size() - 1; itemList.size() > 2; j--) {
-                itemList.remove(j);
-            }
-            if (ChipSupport.isCurrentChipEquals(ChipSupport.MTK_6572_SUPPORT)) {
-                ((TextView) findViewById(R.id.MSDC_Cmd_pu_text)).setVisibility(View.GONE);
-                mCmdPuSpinner.setVisibility(View.GONE);
-                ((TextView) findViewById(R.id.MSDC_Data_pu_text)).setVisibility(View.GONE);
-                mDataPuSpinner.setVisibility(View.GONE);
-                ((TextView) findViewById(R.id.MSDC_Clk_pu_text)).setText(
-                        getString(R.string.NEW_MSDC_CLK) + " / " +
-                        getString(R.string.NEW_MSDC_CMD) + " / " +
-                        getString(R.string.NEW_MSDC_DATA));
-            }
-        }
-
-        ArrayAdapter<String> hostAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, itemList);
-        hostAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mHostSpinner.setAdapter(hostAdapter);
-
-        mHostSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-        ArrayAdapter<String> commonAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, res
-                        .getStringArray(R.array.command_data));
-        commonAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-
-        mClkPuSpinner.setAdapter(commonAdapter);
-        mClkPuSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-        mClkPdSpinner.setAdapter(commonAdapter);
-        mClkPdSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-        mCmdPuSpinner.setAdapter(commonAdapter);
-        mCmdPuSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-        mCmdPdSpinner.setAdapter(commonAdapter);
-        mCmdPdSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-        mDataPuSpinner.setAdapter(commonAdapter);
-        mDataPuSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-        mDataPdSpinner.setAdapter(commonAdapter);
-        mDataPdSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-        mRstPuSpinner.setAdapter(commonAdapter);
-        mRstPuSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-        mDsPuSpinner.setAdapter(commonAdapter);
-        mDsPuSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-        mHostSpinner.setSelection(0);
-    }
-
-    public void onClick(View arg0) {
-
-        if (arg0.getId() == mBtnGet.getId()) {
-            Log.i("@M_" + TAG, "SD_IOCTL: click GetCurrent");
-            int idx = EmGpio.newGetCurrent(mHostIndex, 0);
-            if (idx != -1) {
-                int clkpuIdx = idx & DATA_BIT;
-                int clkpdIdx = (idx >> OFFSET_FOUR_BIT) & DATA_BIT;
-                int cmdpuIdx = (idx >> OFFSET_EIGHT_BIT) & DATA_BIT;
-                int cmdpdIdx = (idx >> OFFSET_TWELVE_BIT) & DATA_BIT;
-                int datapuIdx = (idx >> OFFSET_SIXTEEN_BIT) & DATA_BIT;
-                int datapdIdx = (idx >> OFFSET_TWENTY_BIT) & DATA_BIT;
-                int rstpuIdx = (idx >> OFFSET_RST_BIT) & DATA_BIT;
-                int dspuIdx = (idx >> OFFSET_DS_BIT) & DATA_BIT;
-
-                mClkPuSpinner.setSelection(clkpuIdx);
-                mCmdPuSpinner.setSelection(cmdpuIdx);
-                mDataPuSpinner.setSelection(datapuIdx);
-                mRstPuSpinner.setSelection(rstpuIdx);
-                mDsPuSpinner.setSelection(dspuIdx);
-                if (!mIsNewChip) {
-                    mClkPdSpinner.setSelection(clkpdIdx);
-                    mCmdPdSpinner.setSelection(cmdpdIdx);
-                    mDataPdSpinner.setSelection(datapdIdx);
-                }
-            } else {
-                showDialog(EVENT_GET_FAIL_ID);
-            }
-
-        } else if (arg0.getId() == mBtnSet.getId()) {
-
-            boolean ret = EmGpio.newSetCurrent(mHostIndex, mClkPuIndex,
-                    mClkPdIndex, mCmdPuIndex, mCmdPdIndex, mDataPuIndex,
-                    mDataPdIndex, mRstPuIndex, mRstPdIndex, mDsPuIndex, mDsPdIndex, 0, 0, 0);
-            if (ret) {
-                showDialog(EVENT_SET_OK_ID);
-            } else {
-                showDialog(EVENT_SET_FAIL_ID);
-            }
-        }
-    }
-
-    private void handleHostSelected(int position) {
-        if (ChipSupport.isCurrentChipEquals(ChipSupport.MTK_6571_SUPPORT)) {
-            List<String> valList = new ArrayList<String>();
-            int maxVal = 7;
-            if (position == 1) {
-                maxVal = 3;
-            }
-            for (int i = 0; i <= maxVal; i++) {
-                valList.add(String.valueOf(i));
-            }
-            ArrayAdapter<String> commonAdapter = new ArrayAdapter<String>(this,
-                    android.R.layout.simple_spinner_item, valList);
-            commonAdapter
-                    .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-
-            mClkPuSpinner.setAdapter(commonAdapter);
-            mClkPuSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-            mCmdPuSpinner.setAdapter(commonAdapter);
-            mCmdPuSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-            mDataPuSpinner.setAdapter(commonAdapter);
-            mDataPuSpinner.setOnItemSelectedListener(mSpinnerListener);
-        }
-    }
-
-    private final OnItemSelectedListener mSpinnerListener = new OnItemSelectedListener() {
-
-        public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,
-                long arg3) {
-            switch (arg0.getId()) {
-            case R.id.NEW_MSDC_HOST_sppiner:
-                mHostIndex = arg2;
-                handleHostSelected(mHostIndex);
-                break;
-            case R.id.MSDC_Clk_pu_spinner:
-                mClkPuIndex = arg2;
-                break;
-            case R.id.MSDC_clk_pd_spinner:
-                mClkPdIndex = arg2;
-                break;
-            case R.id.MSDC_cmd_pu_spinner:
-                mCmdPuIndex = arg2;
-                break;
-            case R.id.MSDC_cmd_pd_spinner:
-                mCmdPdIndex = arg2;
-                break;
-            case R.id.MSDC_data_pu_spinner:
-                mDataPuIndex = arg2;
-                break;
-            case R.id.MSDC_data_pd_spinner:
-                mDataPdIndex = arg2;
-                break;
-            case R.id.MSDC_rst_pu_spinner:
-                mRstPuIndex = arg2;
-                break;
-            case R.id.MSDC_ds_pu_spinner:
-                mDsPuIndex = arg2;
-                break;
-            default:
-                break;
-            }
-        }
-
-        public void onNothingSelected(AdapterView<?> arg0) {
-            Log.v("@M_" + TAG, "Spinner nothing selected");
-        }
-
-    };
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/io/MsdcHopSet.java b/EngineerMode/src/com/mediatek/engineermode/io/MsdcHopSet.java
deleted file mode 100644
index 2c6b3ef..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/io/MsdcHopSet.java
+++ /dev/null
@@ -1,178 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.io;
-
-import android.content.res.Resources;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.Spinner;
-
-import com.mediatek.engineermode.ChipSupport;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class MsdcHopSet extends MsdcTest implements OnClickListener {
-
-    private static final String TAG = "MSDC_HOPSET_IOCTL";
-    private static final int DATA_BIT = 0xF;
-    private static final int OFFSET_HOP_BIT = 24;
-    private static final int OFFSET_TIME_BIT = 28;
-
-    private Spinner mHostSpinner;
-    private int mHostIndex = 0;
-    private Spinner mHoppingBitSpinner;
-    private int mHoppingBitIndex = 0;
-    private Spinner mHoppingTimeSpinner;
-    private int mHoppingTimeIndex = 0;
-    private Button mBtnGet;
-    private Button mBtnSet;
-    private boolean mIsNewChip = false;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.msdc_hopset);
-        mIsNewChip = ChipSupport.MTK_6589_SUPPORT <= ChipSupport.getChip();
-        mBtnGet = (Button) findViewById(R.id.MSDC_HopSet_Get);
-        mBtnSet = (Button) findViewById(R.id.MSDC_HopSet_Set);
-        mHostSpinner = (Spinner) findViewById(R.id.MSDC_HopSet_HOST_sppiner);
-        mHoppingBitSpinner = (Spinner) findViewById(R.id.MSDC_hopping_bit_spinner);
-        mHoppingTimeSpinner = (Spinner) findViewById(R.id.MSDC_hopping_time_spinner);
-        mBtnGet.setOnClickListener(this);
-        mBtnSet.setOnClickListener(this);
-        Resources res = getResources();
-        String[] itemArray = res.getStringArray(R.array.host_type);
-        ArrayList<String> itemList = new ArrayList<String>();
-        for (int i = 0; i < itemArray.length - 1; i++) {
-            itemList.add(itemArray[i]);
-        }
-        if (mIsNewChip) {
-            itemList.add(itemArray[itemArray.length - 1]);
-        }
-        ArrayAdapter<String> hostAdaprer = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, itemList);
-        hostAdaprer
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-
-        mHostSpinner.setAdapter(hostAdaprer);
-
-        mHostSpinner.setOnItemSelectedListener(mSpinnerListener);
-
-        ArrayAdapter<String> hopBitAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, res
-                        .getStringArray(R.array.hopping_bit));
-        hopBitAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-
-        mHoppingBitSpinner.setAdapter(hopBitAdapter);
-
-        ArrayAdapter<String> hopTimeAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, res
-                        .getStringArray(R.array.hopping_time));
-        hopTimeAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-
-        mHoppingBitSpinner.setAdapter(hopBitAdapter);
-        mHoppingBitSpinner
-                .setOnItemSelectedListener(mSpinnerListener);
-        mHoppingTimeSpinner.setAdapter(hopTimeAdapter);
-        mHoppingTimeSpinner
-                .setOnItemSelectedListener(mSpinnerListener);
-
-        mHostSpinner.setSelection(0);
-    }
-
-    public void onClick(View arg0) {
-        if (arg0.getId() == mBtnGet.getId()) {
-
-            int idx = EmGpio.newGetCurrent(mHostIndex, 1);
-            Log.i("@M_" + TAG, "get Data: " + idx);
-            if (idx != -1) {
-                int mHopbitIdx = (idx >> OFFSET_HOP_BIT) & DATA_BIT;
-                int mHoptimeIdx = (idx >> OFFSET_TIME_BIT) & DATA_BIT;
-                mHoppingBitSpinner.setSelection(mHopbitIdx);
-                mHoppingTimeSpinner.setSelection(mHoptimeIdx);
-            } else {
-                showDialog(EVENT_GET_FAIL_ID);
-            }
-
-        } else if (arg0.getId() == mBtnSet.getId()) {
-
-            boolean ret = EmGpio.newSetCurrent(mHostIndex, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-                    mHoppingBitIndex, mHoppingTimeIndex, 1);
-            if (ret) {
-                showDialog(EVENT_SET_OK_ID);
-            } else {
-                showDialog(EVENT_SET_FAIL_ID);
-            }
-        }
-    }
-
-    private final OnItemSelectedListener mSpinnerListener = new OnItemSelectedListener() {
-
-        public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,
-                long arg3) {
-            switch (arg0.getId()) {
-            case R.id.MSDC_HopSet_HOST_sppiner:
-                mHostIndex = arg2;
-                break;
-            case R.id.MSDC_hopping_bit_spinner:
-                mHoppingBitIndex = arg2;
-                break;
-            case R.id.MSDC_hopping_time_spinner:
-                mHoppingTimeIndex = arg2;
-                break;
-            default:
-                break;
-            }
-        }
-
-        public void onNothingSelected(AdapterView<?> arg0) {
-            Log.v("@M_" + TAG, "Spinner nothing selected");
-        }
-
-    };
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/io/MsdcSd3Test.java b/EngineerMode/src/com/mediatek/engineermode/io/MsdcSd3Test.java
deleted file mode 100644
index a0335d0..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/io/MsdcSd3Test.java
+++ /dev/null
@@ -1,188 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.io;
-
-import android.content.res.Resources;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.Spinner;
-
-import com.mediatek.engineermode.ChipSupport;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class MsdcSd3Test extends MsdcTest implements OnClickListener {
-
-    private static final String TAG = "EM/MSDC_SD30_TEST";
-
-
-    private Spinner mSpinnerHost = null;
-    private Spinner mSpinnerMode = null;
-    private Spinner mSpinnerMaxCurrent = null;
-    private Spinner mSpinnerDrive = null;
-    private Spinner mSpinnerPowerControl = null;
-    private Button mBtnGet;
-    private Button mBtnSet;
-
-    private int mIndexHost = 0;
-    private int mIndexMode = 4;
-    private int mIndexMaxCurrent = 0;
-    private int mIndexDrive = 1;
-    private int mIndexPowerControl = 1;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.msdc_sd3test);
-        mBtnGet = (Button) findViewById(R.id.msdc_sd3test_get);
-        mBtnSet = (Button) findViewById(R.id.msdc_sd3test_set);
-        mSpinnerHost = (Spinner) findViewById(R.id.msdc_sd3test_host_spinner);
-        mSpinnerMode = (Spinner) findViewById(R.id.msdc_sd3test_mode_spinner);
-        mSpinnerMaxCurrent = (Spinner) findViewById(R.id.msdc_sd3test_max_current_spinner);
-        mSpinnerDrive = (Spinner) findViewById(R.id.msdc_sd3test_drive_spinner);
-        mSpinnerPowerControl = (Spinner) findViewById(R.id.msdc_sd3test_power_control_spinner);
-        mBtnGet.setOnClickListener(this);
-        mBtnGet.setVisibility(View.GONE);
-        mBtnSet.setOnClickListener(this);
-        final Resources res = getResources();
-        String[] itemArray = res.getStringArray(R.array.host_type);
-        ArrayList<String> itemList = new ArrayList<String>();
-        itemList.add(itemArray[0]);
-        itemList.add(itemArray[1]);
-        // 6572 Chip only have host 0 & 1
-        if (!ChipSupport.isCurrentChipEquals(ChipSupport.MTK_6572_SUPPORT)) {
-            itemList.add(itemArray[2]);
-            itemList.add(itemArray[4]);
-        }
-        ArrayAdapter<String> hostAdaprer = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, itemList);
-        hostAdaprer
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mSpinnerHost.setAdapter(hostAdaprer);
-        mSpinnerHost.setOnItemSelectedListener(mSpinnerListener);
-
-        ArrayAdapter<String> modeAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, res
-                        .getStringArray(R.array.msdc_sd3_mode));
-        modeAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        ArrayAdapter<String> maxCurrentAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, res
-                        .getStringArray(R.array.msdc_sd3_max_current));
-        maxCurrentAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        ArrayAdapter<String> driveAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, res
-                        .getStringArray(R.array.msdc_sd3_drive));
-        driveAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        ArrayAdapter<String> powerControlAdapter = new ArrayAdapter<String>(
-                this, android.R.layout.simple_spinner_item, res
-                        .getStringArray(R.array.msdc_sd3_power_control));
-        powerControlAdapter
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mSpinnerMode.setAdapter(modeAdapter);
-        mSpinnerMode.setOnItemSelectedListener(mSpinnerListener);
-        mSpinnerMaxCurrent.setAdapter(maxCurrentAdapter);
-        mSpinnerMaxCurrent.setOnItemSelectedListener(mSpinnerListener);
-        mSpinnerDrive.setAdapter(driveAdapter);
-        mSpinnerDrive.setOnItemSelectedListener(mSpinnerListener);
-        mSpinnerPowerControl.setAdapter(powerControlAdapter);
-        mSpinnerPowerControl.setOnItemSelectedListener(mSpinnerListener);
-        mSpinnerMode.setSelection(mIndexMode);
-        mSpinnerMaxCurrent.setSelection(mIndexMaxCurrent);
-        mSpinnerDrive.setSelection(mIndexDrive);
-        mSpinnerPowerControl.setSelection(mIndexPowerControl);
-    }
-
-    public void onClick(View arg0) {
-        if (arg0.getId() == mBtnGet.getId()) {
-            showDialog(EVENT_GET_FAIL_ID);
-        } else if (arg0.getId() == mBtnSet.getId()) {
-            boolean result = EmGpio.setSd30Mode(mIndexHost, mIndexMode,
-                    mIndexMaxCurrent, mIndexDrive, mIndexPowerControl);
-            if (result) {
-                showDialog(EVENT_SET_OK_ID);
-            } else {
-                showDialog(EVENT_SET_FAIL_ID);
-            }
-        }
-    }
-
-    private final OnItemSelectedListener mSpinnerListener = new OnItemSelectedListener() {
-
-        public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,
-                long arg3) {
-            switch (arg0.getId()) {
-            case R.id.msdc_sd3test_host_spinner:
-                mIndexHost = arg2;
-                if (3 == mIndexHost) {
-                    mIndexHost++;
-                }
-                break;
-            case R.id.msdc_sd3test_mode_spinner:
-                mIndexMode = arg2;
-                break;
-            case R.id.msdc_sd3test_max_current_spinner:
-                mIndexMaxCurrent = arg2;
-                break;
-            case R.id.msdc_sd3test_drive_spinner:
-                mIndexDrive = arg2;
-                break;
-            case R.id.msdc_sd3test_power_control_spinner:
-                mIndexPowerControl = arg2;
-                break;
-            default:
-                break;
-            }
-        }
-
-        public void onNothingSelected(AdapterView<?> arg0) {
-            Log.v("@M_" + TAG, "Spinner nothing selected");
-        }
-
-    };
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/io/MsdcSelect.java b/EngineerMode/src/com/mediatek/engineermode/io/MsdcSelect.java
deleted file mode 100644
index ea759ed..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/io/MsdcSelect.java
+++ /dev/null
@@ -1,97 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.io;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-
-import com.mediatek.engineermode.ChipSupport;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class MsdcSelect extends Activity implements OnItemClickListener {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.msdc_select);
-        ListView msdcTypeSelect = (ListView) findViewById(R.id.ListView_msdcSelect);
-
-        ArrayList<String> items = new ArrayList<String>();
-        items.add(getString(R.string.msdc_drive_set));
-        if (ChipSupport.MTK_6589_SUPPORT <= ChipSupport.getChip()) {
-            items.add(getString(R.string.msdc_sd3_test));
-        } else {
-            items.add(getString(R.string.msdc_hop_set));
-        }
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, items);
-        msdcTypeSelect.setAdapter(adapter);
-        msdcTypeSelect.setOnItemClickListener(this);
-
-    }
-
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        Intent intent = new Intent();
-        switch (arg2) {
-        case 0:
-            intent.setClass(this, MsdcDrivSet.class);
-            break;
-        case 1:
-            if (ChipSupport.MTK_6589_SUPPORT <= ChipSupport.getChip()) {
-                intent.setClass(this, MsdcSd3Test.class);
-            } else {
-                intent.setClass(this, MsdcHopSet.class);
-            }
-            break;
-        default:
-            break;
-        }
-        this.startActivity(intent);
-
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/io/MsdcTest.java b/EngineerMode/src/com/mediatek/engineermode/io/MsdcTest.java
deleted file mode 100644
index 91ff9ab..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/io/MsdcTest.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.io;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-
-import com.mediatek.engineermode.R;
-
-public class MsdcTest extends Activity {
-
-    static final int EVENT_SET_OK_ID = 100;
-    static final int EVENT_SET_FAIL_ID = 101;
-    static final int EVENT_GET_FAIL_ID = 110;
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        AlertDialog.Builder builder = new AlertDialog.Builder(this);
-        if (id == EVENT_SET_OK_ID) {
-            builder.setTitle(R.string.msdc_set_ok_title);
-            builder.setMessage(R.string.msdc_set_ok_message);
-            builder.setPositiveButton(R.string.msdc_btn_text, null);
-        } else if (id == EVENT_SET_FAIL_ID) {
-            builder.setTitle(R.string.msdc_set_fail_title);
-            builder.setMessage(R.string.msdc_set_fail_message);
-            builder.setPositiveButton(R.string.msdc_btn_text, null);
-        } else {
-            builder.setTitle(R.string.msdc_get_fail_title);
-            builder.setMessage(R.string.msdc_get_fail_message);
-            builder.setPositiveButton(R.string.msdc_btn_text, null);
-        }
-        return builder.create();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/mcdi/McdiSetting.java b/EngineerMode/src/com/mediatek/engineermode/mcdi/McdiSetting.java
deleted file mode 100644
index abb81cf..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/mcdi/McdiSetting.java
+++ /dev/null
@@ -1,353 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.mcdi;
-
-import java.io.IOException;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.Context;
-import android.os.Bundle;
-import android.os.PowerManager;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.CompoundButton;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.RadioButton;
-import android.widget.Toast;
-import android.widget.CompoundButton.OnCheckedChangeListener;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-public class McdiSetting extends Activity implements OnCheckedChangeListener, OnClickListener {
-
-    private static final String TAG = "McdiSetting";
-    private static final String MODE_FS = "/proc/spm_fs/mcdi_mode";
-    private static final String TIMER_FS = "/proc/spm_fs/mcdi_timer";
-    private static final String SETTING_FS = "/proc/spm_fs/mcdi";
-    private static final String TIMER_VAL_TAG = "timer_val_ms";
-    private static final String MCDI_MODE_TAG = "mcdi_mode";
-    private static final String CAT = "cat";
-    private static final String ECHO = "echo";
-    private RadioButton mRBDisableMcdi;
-    private RadioButton mRBMcdiOnly;
-    private RadioButton mRBMcdiSodi;
-    private RadioButton mRBDisableTimer;
-    private RadioButton mRBSetTimer;
-    private RadioButton[] mRBModeArray;
-    private RadioButton[] mRBTimerArray;
-    private Button mBtnStartTimer;
-    private Button mBtnGetMcdiSetting;
-    private EditText mEditTimerVal;
-    private LinearLayout mSetTimerControler;
-    private PowerManager mPowerManager;
-    private PowerManager.WakeLock mWakeLock;
-
-    private int mMcdiMode;
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
-         setContentView(R.layout.mcdi_setting);
-
-         mRBDisableMcdi = (RadioButton) findViewById(R.id.mcdi_disable);
-         mRBDisableMcdi.setOnCheckedChangeListener(this);
-         mRBMcdiOnly = (RadioButton) findViewById(R.id.mcdi_only);
-         mRBMcdiOnly.setOnCheckedChangeListener(this);
-         mRBMcdiSodi = (RadioButton) findViewById(R.id.mcdi_sodi);
-         mRBMcdiSodi.setOnCheckedChangeListener(this);
-         mRBDisableTimer = (RadioButton) findViewById(R.id.mcdi_timer_disable);
-         mRBDisableTimer.setOnCheckedChangeListener(this);
-         mRBSetTimer = (RadioButton) findViewById(R.id.mcdi_timer_val_set);
-         mRBSetTimer.setOnCheckedChangeListener(this);
-         mBtnStartTimer = (Button) findViewById(R.id.mcdi_start_timer);
-         mBtnStartTimer.setOnClickListener(this);
-         mBtnGetMcdiSetting = (Button) findViewById(R.id.get_mcdi_setting);
-         mBtnGetMcdiSetting.setOnClickListener(this);
-         mEditTimerVal = (EditText) findViewById(R.id.mcdi_timer_val);
-         mSetTimerControler = (LinearLayout) findViewById(R.id.mcdi_wake_timer_contrl);
-         mRBModeArray = new RadioButton[3];
-         mRBModeArray[0] = mRBDisableMcdi;
-         mRBModeArray[1] = mRBMcdiOnly;
-         mRBModeArray[2] = mRBMcdiSodi;
-         mRBTimerArray = new RadioButton[2];
-         mRBTimerArray[0] = mRBDisableTimer;
-         mRBTimerArray[1] = mRBSetTimer;
-         mPowerManager = (PowerManager) getSystemService(Context.POWER_SERVICE);
-         mWakeLock = mPowerManager.newWakeLock(PowerManager.FULL_WAKE_LOCK, TAG);
-         initUIByData();
-     }
-
-     private void initUIByData() {
-         String cmd;
-         String output;
-
-         Log.v("@M_" + TAG, "initUIByData()");
-         // init mode
-         cmd = CAT + " " +  MODE_FS;
-         output = execCommand(cmd);
-         //output = "1";
-         if (output == null) {
-             Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-             finish();
-             return;
-         }
-         output = output.trim();
-         mMcdiMode = -1;
-         try {
-             mMcdiMode = Integer.parseInt(output);
-         } catch (NumberFormatException e) {
-             Log.e("@M_" + TAG, "NumberFormatException: " + e.getMessage());
-         }
-         try {
-             mRBModeArray[mMcdiMode].setChecked(true);
-         } catch (IndexOutOfBoundsException e) {
-             Log.e("@M_" + TAG, "mMcdiMode:" + mMcdiMode + " IndexOutOfBoundsException: " + e.getMessage());
-         }
-         // init timer value
-         cmd = CAT + " " + TIMER_FS;
-         output = execCommand(cmd);
-         //output = "0";
-         if (output == null) {
-             Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-             finish();
-             return;
-         }
-         if ("0".equals(output.trim())) {
-             handleSetTimer(0);
-         } else {
-             handleSetTimer(1);
-             mEditTimerVal.setText(output);
-         }
-
-     }
-
-//   private void enableSetTimerUI(boolean enabled) {
-//       int i;
-//       for (i = 0; i < mRBTimerArray.length; i++) {
-//           mRBTimerArray[i].setEnabled(enabled);
-//       }
-//       mEditTimerVal.setEnabled(enabled);
-//       mBtnStartTimer.setEnabled(enabled);
-//   }
-
-     private void visibleSetTimerUI(boolean visible) {
-         int visibility;
-         if (visible) {
-             visibility = View.VISIBLE;
-         } else {
-             visibility = View.GONE;
-         }
-         mSetTimerControler.setVisibility(visibility);
-         mBtnStartTimer.setVisibility(visibility);
-     }
-
-     private void handleSetTimer(int index) {
-         if (0 == index) {
-             mEditTimerVal.setEnabled(false);
-             checkOneRadio(mRBTimerArray, mRBDisableTimer, true);
-             mBtnStartTimer.setEnabled(false);
-         } else if (1 == index) {
-             mEditTimerVal.setEnabled(true);
-             checkOneRadio(mRBTimerArray, mRBSetTimer, true);
-             mBtnStartTimer.setEnabled(true);
-         } else {
-             Log.w("@M_" + TAG, "unknown index: " + index);
-         }
-     }
-
-     private String execCommand(String cmd) {
-         int ret = -1;
-         Log.d("@M_" + TAG, "[cmd]:" + cmd);
-         //Toast.makeText(this, cmd, Toast.LENGTH_SHORT).show();
-         try {
-             ret = ShellExe.execCommand(cmd);
-         } catch (IOException e) {
-             Log.e("@M_" + TAG, "IOException: " + e.getMessage());
-         }
-         if (ret == 0) {
-             String outStr = ShellExe.getOutput();
-             Log.d("@M_" + TAG, "[output]: " + outStr);
-             return outStr;
-         }
-         return null;
-     }
-
-     private void checkOneRadio(RadioButton[] array, RadioButton target, boolean checked) {
-         for (int i = 0; i < array.length; i++) {
-             if (target == array[i]) {
-                 array[i].setChecked(checked);
-             } else {
-                 array[i].setChecked(!checked);
-             }
-         }
-     }
-
-     private boolean validateSetting() {
-         String msg;
-         if (mRBDisableMcdi.isChecked()) {
-             msg = getString(R.string.mcdi_disable);
-             Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-             return false;
-         }
-         int timerVal;
-         try {
-             timerVal = Integer.parseInt(mEditTimerVal.getText().toString());
-         } catch (NumberFormatException e) {
-             msg = getString(R.string.mcdi_invalid_timer_val);
-             Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-             return false;
-         }
-         if (timerVal >= 15 && timerVal <= 1000000) {
-            return true;
-         }
-         msg = getString(R.string.mcdi_invalid_timer_val);
-         Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-         return false;
-     }
-
-    @Override
-    public void onClick(View view) {
-        int id = view.getId();
-        String cmd;
-        String output;
-        switch(id) {
-        case R.id.mcdi_start_timer:
-            if (validateSetting()) {
-                setTimerVal(mEditTimerVal.getText().toString());
-                String msg = getString(R.string.mcdi_start_timer_success);
-                Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            }
-            break;
-        case R.id.get_mcdi_setting:
-            cmd = CAT + " " + SETTING_FS;
-            output = execCommand(cmd);
-            showDialog("MCDI Setting", output);
-            break;
-        default:
-            Log.w("@M_" + TAG, "unknown view id: " + id);
-            break;
-        }
-    }
-
-    private void showDialog(String title, String msg) {
-        AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                false).setTitle(title).setMessage(msg).
-                setPositiveButton(android.R.string.ok, null).create();
-        dialog.show();
-    }
-
-    private void setMcdiMode(int index) {
-        String cmd;
-
-        cmd = ECHO + " \"" + index + " " + MCDI_MODE_TAG + "\" > " + SETTING_FS;
-        execCommand(cmd);
-    }
-
-    private void setTimerVal(String val) {
-        String cmd;
-
-        cmd = ECHO + " \"" + val + " " + TIMER_VAL_TAG + "\" > " + SETTING_FS;
-        execCommand(cmd);
-    }
-
-    @Override
-    protected void onDestroy() {
-        if (mWakeLock.isHeld()) {
-            mWakeLock.release();
-        }
-        super.onDestroy();
-    }
-
-    @Override
-    public void onCheckedChanged(CompoundButton btnView, boolean isChecked) {
-        int id = btnView.getId();
-        switch(id) {
-        case R.id.mcdi_disable:
-            if (isChecked) {
-                checkOneRadio(mRBModeArray, mRBDisableMcdi, true);
-                //enableSetTimerUI(false);
-                visibleSetTimerUI(false);
-                setMcdiMode(0);
-                if (mWakeLock.isHeld()) {
-                    mWakeLock.release();
-                }
-            }
-            break;
-        case R.id.mcdi_only:
-            if (isChecked) {
-                checkOneRadio(mRBModeArray, mRBMcdiOnly, true);
-                //enableSetTimerUI(true);
-                visibleSetTimerUI(true);
-                setMcdiMode(1);
-                if (!mWakeLock.isHeld()) {
-                    mWakeLock.acquire();
-                }
-            }
-            break;
-        case R.id.mcdi_sodi:
-            if (isChecked) {
-                checkOneRadio(mRBModeArray, mRBMcdiSodi, true);
-                //enableSetTimerUI(true);
-                visibleSetTimerUI(true);
-                setMcdiMode(2);
-                if (!mWakeLock.isHeld()) {
-                    mWakeLock.acquire();
-                }
-            }
-            break;
-        case R.id.mcdi_timer_disable:
-            if (isChecked) {
-                setTimerVal("0");
-                handleSetTimer(0);
-            }
-            break;
-        case R.id.mcdi_timer_val_set:
-            if (isChecked) {
-                handleSetTimer(1);
-            }
-            break;
-        default:
-            Log.w("@M_" + TAG, "unknown view id: " + id);
-            break;
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/memory/EmiRegister.java b/EngineerMode/src/com/mediatek/engineermode/memory/EmiRegister.java
deleted file mode 100644
index 9a78acb..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/memory/EmiRegister.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.memory;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.util.Log;
-
-import com.mediatek.engineermode.R;
-
-public class EmiRegister extends Activity {
-
-    private static final String TAG = "EM/Memory_EMI";
-    private static final int DIALOG_ID_NOTICE = 0;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        showDialog(DIALOG_ID_NOTICE);
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Dialog dialog = null;
-        if (DIALOG_ID_NOTICE == id) {
-            AlertDialog.Builder builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.memory_dialog_title);
-            builder.setMessage(getString(R.string.memory_dialog_message));
-            builder.setPositiveButton(R.string.memory_dialog_ok,
-                    new DialogInterface.OnClickListener() {
-
-                        public void onClick(DialogInterface dialog, int which) {
-                            EmiRegister.this.finish();
-                        }
-                    });
-            dialog = builder.create();
-        } else {
-            Log.w("@M_" + TAG, "unknown dialog ID");
-        }
-        return dialog;
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/memory/Flash.java b/EngineerMode/src/com/mediatek/engineermode/memory/Flash.java
deleted file mode 100644
index 6aa5485..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/memory/Flash.java
+++ /dev/null
@@ -1,150 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.memory;
-
-import android.app.TabActivity;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.widget.TabHost;
-import android.widget.TabHost.OnTabChangeListener;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.IOException;
-
-/**
- * Class for showing flash information.
- *
- */
-@SuppressWarnings("deprecation")
-public class Flash extends TabActivity {
-
-    private static final String TAG = "EM/Memory_flash";
-    private static final String FILE_NAND = "/proc/driver/nand";
-    private static final String FILE_MOUNTS = "/proc/mounts";
-    private static final String FILE_PARTITION = "/proc/partitions";
-    private static final String FILE_MTD = "/proc/mtd";
-    private static final String FILE_CID = "/sys/block/mmcblk0/device/cid";
-    private static final String FILE_DUMCHAR_INFO = "/proc/dumchar_info";
-    private static final String FILE_PARTINFO = "/proc/partinfo";
-    private static final String READ_COMMAND = "cat ";
-    private static final String EMMC_ID_HEADER = "emmc ID: ";
-    private boolean mHaveEmmc = false;
-
-    private TextView mTvCommInfo = null;
-    private TextView mTvFSInfo = null;
-    private TextView mTvPartInfo = null;
-    private String mFileSysTabName = null;
-    private String mPartitionTabName = null;
-    private String mTabId = null;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        mFileSysTabName = getString(R.string.memory_file_sys_info);
-        mPartitionTabName = getString(R.string.memory_partition_info);
-        TabHost tabHost = getTabHost();
-        LayoutInflater.from(this).inflate(R.layout.memory_tabs,
-                tabHost.getTabContentView(), true);
-
-        // tab1
-        tabHost.addTab(tabHost.newTabSpec(mFileSysTabName).setIndicator(
-                mFileSysTabName).setContent(R.id.file_sys_view));
-
-        // tab2
-        tabHost.addTab(tabHost.newTabSpec(mPartitionTabName).setIndicator(
-                mPartitionTabName).setContent(R.id.partition_view));
-        mTvFSInfo = (TextView) findViewById(R.id.file_sys_info);
-        mTvPartInfo = (TextView) findViewById(R.id.partition_info);
-        tabHost.setOnTabChangedListener(new OnTabChangeListener() {
-            public void onTabChanged(String tabId) {
-                mTabId = tabId;
-                showTabContent();
-            }
-        });
-
-        // init
-        mTabId = mFileSysTabName;
-        showTabContent();
-    }
-
-    /**
-     * Show TAB content.
-     */
-    private void showTabContent() {
-        if (mTabId.equals(mFileSysTabName)) {
-            mTvFSInfo.setText(getInfo(FILE_MOUNTS));
-        } else if (mTabId.equals(mPartitionTabName)) {
-            mTvPartInfo.setText(getInfo(FILE_PARTITION));
-
-        }
-    }
-
-     /**
-     * Get file content.
-     *
-     * @param file
-     *            The file's path
-     * @return The file's content
-     */
-    private String getInfo(String file) {
-        String result = null;
-        try {
-            int ret = ShellExe.execCommand(READ_COMMAND + file);
-            if (0 == ret) {
-                result = ShellExe.getOutput();
-            } else {
-                result = getString(R.string.memory_getinfo_error);
-            }
-        } catch (IOException e) {
-            Log.i("@M_" + TAG, e.toString());
-            result = e.toString();
-        }
-        return result;
-    }
-
-
-    @SuppressWarnings("deprecation")
-    @Override
-    protected void onResume() {
-        super.onResume();
-        showTabContent();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/memory/Memory.java b/EngineerMode/src/com/mediatek/engineermode/memory/Memory.java
deleted file mode 100644
index 05ad992..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/memory/Memory.java
+++ /dev/null
@@ -1,100 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.memory;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.FeatureHelpPage;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class Memory extends Activity implements OnItemClickListener {
-
-    private static final String TAG = "EM/Memory";
-    protected static final String FLASH_TYPE = "HAVE_EMMC";
-    private static final String EMMC_PROC_FILE = "/proc/emmc";
-    private boolean mHaveEmmc = false;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.memory);
-        ListView itemList = (ListView) findViewById(R.id.list_memory_item);
-        ArrayList<String> items = new ArrayList<String>();
-        items.add(getString(R.string.memory_title_flash));
-        items.add(getString(R.string.help));
-        // items.add(getString(R.string.memory_item_emi));
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, items);
-        itemList.setAdapter(adapter);
-        itemList.setOnItemClickListener(this);
-    }
-
-    @Override
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        Intent intent = null;
-        switch (arg2) {
-        case 0:
-            intent = new Intent(this, Flash.class);
-            break;
-        case 1:
-            //intent = new Intent(this, EmiRegister.class);
-            intent = new Intent(this, FeatureHelpPage.class);
-            intent.putExtra(FeatureHelpPage.HELP_TITLE_KEY, R.string.help);
-            intent.putExtra(FeatureHelpPage.HELP_MESSAGE_KEY, R.string.memory_help_msg);
-            break;
-        default:
-            break;
-        }
-        if (null == intent) {
-            Toast.makeText(this, R.string.memory_select_error,
-                    Toast.LENGTH_LONG).show();
-            Log.d("@M_" + TAG, "Select error");
-        } else {
-            this.startActivity(intent);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/misc/MiscConfig.java b/EngineerMode/src/com/mediatek/engineermode/misc/MiscConfig.java
deleted file mode 100644
index 2f2dc9d..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/misc/MiscConfig.java
+++ /dev/null
@@ -1,219 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.misc;
-
-import android.os.AsyncResult;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.os.SystemProperties;
-import android.preference.CheckBoxPreference;
-import android.preference.Preference;
-import android.preference.PreferenceActivity;
-import android.preference.PreferenceScreen;
-import android.provider.Settings;
-import android.telephony.SubscriptionManager;
-import android.telephony.TelephonyManager;
-import android.widget.Toast;
-
-import com.android.internal.telephony.Phone;
-import com.android.internal.telephony.PhoneFactory;
-import android.util.Log;
-import com.mediatek.engineermode.FeatureSupport;
-import com.mediatek.engineermode.R;
-
-import java.util.regex.Matcher;
-import java.util.regex.Pattern;
-
-/**
- * Misc feature config Activity.
- */
-public class MiscConfig extends PreferenceActivity {
-    private static final String TAG = "EM/MiscConfig";
-    private static final String KEY_MISC_CONFIG = "1";
-    private static final int INDEX_2G_ONLY_ROAMING = 0;
-    private static final int INDEX_SELF_REGISTER = 2;
-    private static final int MSG_QUERY = 0;
-    private static final int MSG_SET = 1;
-    private static final String CMD_QUERY = "AT+ECFGGET=\"sms_over_sgs\"";
-    private static final String CMD_SET = "AT+ECFGSET=\"sms_over_sgs\"";
-    private static final String VALUE_ENABLE = "1";
-    private static final String VALUE_DISABLE = "0";
-
-    private CheckBoxPreference mPreferences[];
-    private int mConfig = 0;
-    private Toast mToast;
-    private Phone mPhone = null;
-    private CheckBoxPreference mSmsSgsPreference;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        addPreferencesFromResource(R.xml.misc);
-
-        String[] features = getResources().getStringArray(R.array.misc_features);
-        mPreferences = new CheckBoxPreference[features.length];
-        for (int i = 0; i < features.length; i++) {
-            mPreferences[i] = new CheckBoxPreference(this);
-            mPreferences[i].setSummary(features[i]);
-            mPreferences[i].setPersistent(false);
-            if (i == INDEX_SELF_REGISTER &&
-                    !FeatureSupport.isSupported(FeatureSupport.FK_CT4GREG_APP)) {
-                Log.d("@M_" + TAG, "Not show entry for CT4GREG.");
-                continue;
-            }
-            getPreferenceScreen().addPreference(mPreferences[i]);
-        }
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        mConfig = Settings.Global.getInt(getContentResolver(), KEY_MISC_CONFIG, 0);
-        Log.d("@M_" + TAG, "Get " + KEY_MISC_CONFIG + " = " + mConfig);
-        for (int i = 0; i < mPreferences.length; i++) {
-            mPreferences[i].setChecked((mConfig & (1 << i)) != 0);
-        }
-        querySmsSgsValue();
-    }
-
-    @Override
-    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen,
-            Preference preference) {
-        Log.d("@M_" + TAG, "Enter onPreferenceTreeClick()");
-        for (int i = 0; i < mPreferences.length; i++) {
-            if (mPreferences[i].equals(preference)) {
-                if (mPreferences[i].isChecked()) {
-                    mConfig |= (1 << i);
-                } else {
-                    mConfig &= ~(1 << i);
-                }
-                Log.d("@M_" + TAG, "Set " + KEY_MISC_CONFIG + " = " + mConfig);
-                Settings.Global.putInt(getContentResolver(), KEY_MISC_CONFIG, mConfig);
-                return true;
-            }
-        }
-        if (preference == mSmsSgsPreference) {
-            setSgsValue(mSmsSgsPreference.isChecked() ? VALUE_ENABLE : VALUE_DISABLE);
-        }
-        return super.onPreferenceTreeClick(preferenceScreen, preference);
-    }
-
-    private void querySmsSgsValue() {
-        int subId = SubscriptionManager.getDefaultDataSubId();
-        Log.i("@M_" + TAG, "sub id " + subId);
-        int phoneId = SubscriptionManager.getPhoneId(subId);
-        Log.i("@M_" + TAG, "phone id " + phoneId);
-        int phoneCount = TelephonyManager.getDefault().getPhoneCount();
-        Log.i("@M_" + TAG, "phone count " + phoneCount);
-        mPhone = PhoneFactory.getPhone(phoneId >= 0 && phoneId < phoneCount ? phoneId : 0);
-
-        Message msg = mHandler.obtainMessage(MSG_QUERY);
-        if (mPhone != null) {
-            mPhone.invokeOemRilRequestStrings(new String[] {CMD_QUERY, "+ECFGGET:"}, msg);
-        }
-        Log.i("@M_" + TAG, "send " + CMD_QUERY + ", " + "+ECFGGET:");
-
-        mSmsSgsPreference = new CheckBoxPreference(this);
-        mSmsSgsPreference.setSummary(getString(R.string.misc_config_sgs));
-        mSmsSgsPreference.setPersistent(false);
-        getPreferenceScreen().addPreference(mSmsSgsPreference);
-    }
-
-    private void setSgsValue(String value) {
-        Message msg = mHandler.obtainMessage(MSG_SET);
-        if (mPhone != null) {
-            mPhone.invokeOemRilRequestStrings(
-                new String[] {CMD_SET + ",\"" + value + "\"", ""}, msg);
-        }
-        Log.i("@M_" + TAG, "send " + CMD_SET + ",\"" + value + "\"");
-    }
-
-    private void parseSmsSgsValue(String data) {
-        mSmsSgsPreference.setChecked(VALUE_ENABLE.equals(parseCommandResponse(data)));
-    }
-
-    private String parseCommandResponse(String data) {
-        Log.d("@M_" + TAG, "raw data: " + data);
-        Pattern p = Pattern.compile("\\+ECFGGET:\\s*\".*\"\\s*,\\s*\"(.*)\"");
-        Matcher m = p.matcher(data);
-        while (m.find()) {
-            String value = m.group(1);
-            Log.d("@M_" + TAG, "value: " + value);
-            return value;
-        }
-        Log.e("@M_" + TAG, "wrong format: " + data);
-        showToast("wrong format: " + data);
-        return "";
-    }
-
-    private final Handler mHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-            Log.e("@M_" + TAG, "handleMessage() " + msg.what);
-            if (msg.what == MSG_QUERY) {
-                AsyncResult ar = (AsyncResult) msg.obj;
-                if (ar.exception == null && ar.result != null) {
-                    if (ar.result instanceof String[]) {
-                        String[] data = (String[]) ar.result;
-                        if (data.length > 0) {
-                            parseSmsSgsValue(data[0]);
-                            return;
-                        }
-                    }
-                }
-                showToast("Query failed");
-            } else if (msg.what == MSG_SET) {
-                AsyncResult ar = (AsyncResult) msg.obj;
-                if (ar.exception == null) {
-                    showToast("Set successful");
-                } else {
-                    showToast("Set failed");
-                }
-            }
-        }
-    };
-
-    private void showToast(String msg) {
-        if (mToast != null) {
-            mToast.cancel();
-        }
-        mToast = Toast.makeText(this, msg, Toast.LENGTH_SHORT);
-        mToast.show();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/moms/MoMs.java b/EngineerMode/src/com/mediatek/engineermode/moms/MoMs.java
deleted file mode 100644
index b72e5ee..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/moms/MoMs.java
+++ /dev/null
@@ -1,77 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.moms;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.os.SystemProperties;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-
-import com.mediatek.engineermode.R;
-
-
-public class MoMs extends Activity {
-
-    private static final String TAG = "EM/MOMS";
-    private static final String PROPERTY_NAME = "persist.sys.mtk.disable.moms" ;
-    private static final String DISABLE_MOMS = "1" ;
-    private static final String REENABLE_MOMS = "0" ;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.moms);
-        Button mDisableMoMs = (Button) findViewById(R.id.disable_moms_for_cts);
-        mDisableMoMs.setOnClickListener(new View.OnClickListener() {
-            public void onClick(View v) {
-                Log.d(TAG, "mDisableMoMs is clicked, call setprop persist.sys.mtk.disable.moms 1") ;
-                SystemProperties.set(PROPERTY_NAME, DISABLE_MOMS);
-            }
-        });
-
-        Button mReenableMoMs = (Button) findViewById(R.id.reenable_moms);
-        mReenableMoMs.setOnClickListener(new View.OnClickListener() {
-            public void onClick(View v) {
-                Log.d(TAG, "mReenableMoMs is clicked, " +
-                    "call setprop persist.sys.mtk.disable.moms 0") ;
-                SystemProperties.set(PROPERTY_NAME, REENABLE_MOMS);
-            }
-        });
-
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/networkselect/NetworkSelectActivity.java b/EngineerMode/src/com/mediatek/engineermode/networkselect/NetworkSelectActivity.java
deleted file mode 100644
index 052cc1d..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/networkselect/NetworkSelectActivity.java
+++ /dev/null
@@ -1,283 +0,0 @@
-package com.mediatek.engineermode.networkselect;
-
-import android.app.Activity;
-import android.content.Context;
-import android.os.AsyncResult;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.os.SystemProperties;
-import android.provider.Settings;
-import android.telephony.SubscriptionManager;
-import android.telephony.TelephonyManager;
-import android.util.Log;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Spinner;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.android.internal.telephony.Phone;
-import com.android.internal.telephony.PhoneConstants;
-import com.android.internal.telephony.PhoneFactory;
-
-import com.mediatek.engineermode.FeatureSupport;
-import com.mediatek.engineermode.R;
-
-import java.util.Arrays;
-
-/**
- *
- * For setting network mode.
- * @author mtk54043
- *
- */
-public class NetworkSelectActivity extends Activity {
-    private static final String TAG = "EM/NetworkMode";
-    private static final int EVENT_QUERY_NETWORKMODE_DONE = 101;
-    private static final int EVENT_SET_NETWORKMODE_DONE = 102;
-
-    private static final int MODEM_FDD = 1;
-    private static final int MODEM_TD = 2;
-    private static final int MODEM_NO3G = 3;
-
-    private static final int MODEM_MASK_WCDMA = 0x04;
-    private static final int MODEM_MASK_TDSCDMA = 0x08;
-
-    private static final int INDEX_WCDMA_PREFERRED = 0;
-    private static final int INDEX_GSM_ONLY = 1;
-    private static final int INDEX_WCDMA_ONLY = 2;
-    private static final int INDEX_TDSCDMA_ONLY = 3;
-    private static final int INDEX_GSM_WCDMA_AUTO = 4;
-    private static final int INDEX_GSM_TDSCDMA_AUTO = 5;
-    private static final int INDEX_LTE_ONLY = 6;
-    private static final int INDEX_CDMA_ONLY = 7;
-    private static final int INDEX_LTE_GSM_WCDMA = 8;
-    private static final int INDEX_LTE_WCDMA = 9;
-
-    private static final int WCDMA_PREFERRED = Phone.NT_MODE_WCDMA_PREF;
-    private static final int GSM_ONLY = Phone.NT_MODE_GSM_ONLY;
-    private static final int WCDMA_ONLY = Phone.NT_MODE_WCDMA_ONLY;
-    private static final int TDSCDMA_ONLY = Phone.NT_MODE_WCDMA_ONLY;
-    private static final int GSM_WCDMA_AUTO = Phone.NT_MODE_GSM_UMTS;
-    private static final int GSM_TDSCDMA_AUTO = Phone.NT_MODE_GSM_UMTS;
-    private static final int LTE_ONLY = Phone.NT_MODE_LTE_ONLY;
-    private static final int CDMA_ONLY = 0;
-    private static final int LTE_GSM_WCDMA = Phone.NT_MODE_LTE_GSM_WCDMA;
-    private static final int LTE_CDMA_EVDO_GSM_WCDMA = Phone.NT_MODE_LTE_CDMA_EVDO_GSM_WCDMA;
-    private static final int LTE_GSM_WCDMA_PREFERRED = 31;
-    //RILConstants.NETWORK_MODE_LTE_GSM_WCDMA_PREF;
-    private static final int LTE_WCDMA = Phone.NT_MODE_LTE_WCDMA;
-
-    private Phone mPhone = null;
-    private Phone mCdmaPhone = null;
-    private int mModemType;
-    private int mSimType = PhoneConstants.SIM_ID_1;
-    private int mSubId = 1;
-    private int[] mNetworkTypeValues = new int[] {WCDMA_PREFERRED, GSM_ONLY, WCDMA_ONLY,
-            TDSCDMA_ONLY, GSM_WCDMA_AUTO, GSM_TDSCDMA_AUTO,
-            LTE_ONLY, CDMA_ONLY, LTE_GSM_WCDMA, LTE_WCDMA};
-    private int mCurrentSelected = 0;
-    private Spinner mPreferredNetworkSpinner = null;
-
-    private OnItemSelectedListener mPreferredNetworkListener = new OnItemSelectedListener() {
-        @Override
-        public void onItemSelected(AdapterView parent, View v, int pos, long id) {
-            Log.d("@M_" + TAG, "onItemSelected " + pos);
-            if (mCurrentSelected == pos) {
-                return; // avoid listener being invoked by setSelection()
-            }
-            mCurrentSelected = pos;
-
-            Message msg = mHandler.obtainMessage(EVENT_SET_NETWORKMODE_DONE);
-            int selectNetworkMode = mNetworkTypeValues[pos];
-
-            Log.d("@M_" + TAG, "selectNetworkMode " + selectNetworkMode);
-            Settings.Global.putInt(getContentResolver(),
-                    Settings.Global.PREFERRED_NETWORK_MODE + mSubId, selectNetworkMode);
- 
-            msg = mHandler.obtainMessage(EVENT_SET_NETWORKMODE_DONE);
-            if (mPhone != null) {
-                mPhone.setPreferredNetworkType(selectNetworkMode, msg);
-            }
-        }
-
-        @Override
-        public void onNothingSelected(AdapterView parent) {
-        }
-    };
-
-    private Handler mHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-            AsyncResult ar;
-            switch (msg.what) {
-            case EVENT_QUERY_NETWORKMODE_DONE:
-                ar = (AsyncResult) msg.obj;
-                if (ar.exception == null) {
-                    int type = ((int[]) ar.result)[0];
-                    Log.d("@M_" + TAG, "Get Preferred Type " + type);
-                    int index = findSpinnerIndexByType(type);
-                    if (index >= 0 && index < mPreferredNetworkSpinner.getCount()) {
-                        mCurrentSelected = index;
-                        mPreferredNetworkSpinner.setSelection(index, true);
-                    }
-                } else {
-                    Toast.makeText(NetworkSelectActivity.this, R.string.query_preferred_fail,
-                            Toast.LENGTH_SHORT).show();
-                }
-                break;
-            case EVENT_SET_NETWORKMODE_DONE:
-                ar = (AsyncResult) msg.obj;
-                if ((ar.exception != null) && (mPhone != null)) {
-                    mPhone.getPreferredNetworkType(obtainMessage(EVENT_QUERY_NETWORKMODE_DONE));
-                }
-                break;
-            default:
-                break;
-            }
-        }
-    };
-
-    /**
-     * Adapter.
-     */
-    public class CustomAdapter extends ArrayAdapter<String> {
-        /**
-         * Constructor.
-         *
-         * @param context
-         *          Context
-         * @param textViewResourceId
-         *          Resource id
-         * @param objects
-         *          Objects
-         */
-        public CustomAdapter(Context context, int textViewResourceId, String[] objects) {
-            super(context, textViewResourceId, objects);
-        }
-
-        @Override
-        public View getDropDownView(int position, View convertView, ViewGroup parent) {
-            View v = null;
-            Log.d("@M_" + TAG, "isAvailable: " + position + " is " + isAvailable(position));
-            if (!isAvailable(position)) {
-                TextView tv = new TextView(getContext());
-                tv.setVisibility(View.GONE);
-                tv.setHeight(0);
-                v = tv;
-            } else {
-                v = super.getDropDownView(position, null, parent);
-            }
-            return v;
-        }
-    }
-
-    private boolean isAvailable(int index) {
-   
-    
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_LTE_SUPPORT)
-                && (index == INDEX_LTE_ONLY || index == INDEX_LTE_GSM_WCDMA
-                    || index == INDEX_LTE_WCDMA)) {
-            return false;
-        }
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_WCDMA_PREFERRED)
-                && index == INDEX_WCDMA_PREFERRED) {
-            return false;
-        }
-        if (index == INDEX_CDMA_ONLY) {
-            return false;
-        }
-        return true;
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.networkmode_switching);
-        mPreferredNetworkSpinner = (Spinner) findViewById(R.id.networkModeSwitching);
-        //if (!ModemCategory.isCdma()) {
-            findViewById(R.id.network_mode_set_hint).setVisibility(View.GONE);
-        //}
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        //mSimType = getIntent().getIntExtra("mSimType", ModemCategory.getCapabilitySim());
-        Log.i("@M_" + TAG, "mSimType " + mSimType);
-        int[] subId = SubscriptionManager.getSubId(mSimType);
-        if (subId != null) {
-            for (int i = 0; i < subId.length; i++) {
-                Log.i("@M_" + TAG, "subId[" + i + "]: " + subId[i]);
-            }
-        }
-        if (subId == null || subId.length == 0
-                || !SubscriptionManager.isValidSubscriptionId(subId[0])) {
-            Toast.makeText(this, "Invalid sub id, please insert SIM Card!",
-                    Toast.LENGTH_LONG).show();
-            Log.e("@M_" + TAG, "Invalid sub id");
-        } else {
-            mSubId = subId[0];
-        }
-
-        if (TelephonyManager.getDefault().getPhoneCount() > 1) {
-            mPhone = PhoneFactory.getPhone(mSimType);
-        } else {
-            mPhone = PhoneFactory.getDefaultPhone();
-        }
-
-
- 
-
-        mCurrentSelected = 0;
-
-            String[] labels = getResources().getStringArray(R.array.network_mode_labels);
-            CustomAdapter adapter =
-                    new CustomAdapter(this, android.R.layout.simple_spinner_item, labels);
-            adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-            mPreferredNetworkSpinner.setAdapter(adapter);
-            mPreferredNetworkSpinner.setOnItemSelectedListener(mPreferredNetworkListener);
-
-
-        if (mPhone != null) {
-            mPhone.getPreferredNetworkType(mHandler.obtainMessage(EVENT_QUERY_NETWORKMODE_DONE));
-        }
-    }
-
-    private int getModemType() {
-        int mode = MODEM_NO3G;
-        int mask = 1;
-        if (mask == 2) {
-                    mode = MODEM_TD;
-        } else if (mask == 1) {
-            mode = MODEM_FDD;
-        } else {
-            mode = MODEM_NO3G;
-        }
-        Log.i("@M_" + TAG, "mode = " + mode);
-        return mode;
-    }
-
-    private int findSpinnerIndexByType(int type) {
- 
-        // Not support WCDMA preferred
-        if (type == WCDMA_PREFERRED
-                && !FeatureSupport.isSupported(FeatureSupport.FK_WCDMA_PREFERRED)) {
-            type = GSM_WCDMA_AUTO;
-        }
-        // Consider LTE_GSM_WCDMA_PREFERRED as same with LTE_GSM_WCDMA
-        if (type == LTE_GSM_WCDMA_PREFERRED || type == LTE_CDMA_EVDO_GSM_WCDMA) {
-            type = LTE_GSM_WCDMA;
-        }
-        for (int i = 0; i < mNetworkTypeValues.length; i++) {
-            if (mNetworkTypeValues[i] == type && isAvailable(i)) {
-                return i;
-            }
-        }
-        return -1;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/networkselect/NetworkSelectSimType.java b/EngineerMode/src/com/mediatek/engineermode/networkselect/NetworkSelectSimType.java
deleted file mode 100644
index 85d8ee1..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/networkselect/NetworkSelectSimType.java
+++ /dev/null
@@ -1,95 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.networkselect;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.android.internal.telephony.PhoneConstants;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class NetworkSelectSimType extends Activity implements OnItemClickListener {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.network_select_sim_type);
-        ListView simTypeListView = (ListView) findViewById(R.id.ListView_SimSelect);
-
-        ArrayList<String> items = new ArrayList<String>();
-        items.add(getString(R.string.networkinfo_sim1));
-        items.add(getString(R.string.networkinfo_sim2));
-
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, items);
-        simTypeListView.setAdapter(adapter);
-        simTypeListView.setOnItemClickListener(this);
-    }
-
-    public void onItemClick(AdapterView<?> arg0, View arg1, int position, long arg3) {
-        Intent intent = new Intent();
-        int simType;
-        switch (position) {
-        case 0:
-            intent.setClassName(this,
-                    "com.mediatek.engineermode.networkselect.NetworkSelectActivity");
-            simType = PhoneConstants.SIM_ID_1;
-            intent.putExtra("mSimType", simType);
-            break;
-        case 1:
-            intent.setClassName(this,
-                    "com.mediatek.engineermode.networkselect.NetworkSelectActivity");
-            simType = PhoneConstants.SIM_ID_2;
-            intent.putExtra("mSimType", simType);
-            break;
-        default:
-            break;
-        }
-
-        this.startActivity(intent);
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/ModeMap.java b/EngineerMode/src/com/mediatek/engineermode/nfc/ModeMap.java
deleted file mode 100644
index 1d8ed01..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/ModeMap.java
+++ /dev/null
@@ -1,13 +0,0 @@
-package com.mediatek.engineermode.nfc;
-
-import android.widget.CheckBox;
-
-public class ModeMap {
-    CheckBox mChkBox;
-    int mBit;
-
-    ModeMap(CheckBox c, int b) {
-        mChkBox = c;
-        mBit = b;
-    }
-}
\ No newline at end of file
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcCommonDef.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcCommonDef.java
deleted file mode 100644
index 2ae42fd..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcCommonDef.java
+++ /dev/null
@@ -1,11 +0,0 @@
-package com.mediatek.engineermode.nfc;
-
-public class NfcCommonDef {
-    public static final String PREFERENCE_KEY = "NfcSettings";
-    public static final int ERROR_OK = 0;
-    public static final int ERROR_ERROR = 1;
-    public static final int ERROR_TIMEOUT = 2;
-    public static final int RESULT_STATUS_TIMEOUT = 0xDEADBEEF;
-    private NfcCommonDef() {
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcEntry.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcEntry.java
deleted file mode 100644
index 0094730..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcEntry.java
+++ /dev/null
@@ -1,255 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.content.ActivityNotFoundException;
-import android.content.DialogInterface;
-import android.content.DialogInterface.OnClickListener;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.content.SharedPreferences.Editor;
-import android.nfc.NfcAdapter;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class NfcEntry extends Activity implements OnItemClickListener {
-
-    /** Elog tag. */
-    public static final String TAG = "EM/nfc";
-    public static final String ENTRY_SETTING = "Settings";
-    public static final String ENTRY_RAWDATA = "Raw Data";
-    public static final String ENTRY_SOFTWARESTACK = "Software Stack";
-    private static final int DIA_INIT_NFC_DRIVER = 0;
-    private static final int DIA_START_ACTIVITY = 1;
-
-
-    private List<String> mListData;
-    private ListView mMenuListView = null;
-    private boolean mInitNfcDrvOK = false;
-    private int mInitNfcDriverRet;
-    private final String[] mItemString =
-        {ENTRY_SETTING, ENTRY_RAWDATA, ENTRY_SOFTWARESTACK };
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.nfc_entry);
-        mMenuListView = (ListView) findViewById(R.id.ListView_mainmenu);
-        mMenuListView.setOnItemClickListener(this);
-        Elog.i(TAG, "NfcEntry onCreate");
-        /*
-        closeNFCServiceAtStart();
-        int ret = NfcNativeCallClass.initNfcDriver();
-        if (0 == ret) {
-            mInitNfcDrvOK = true;
-            Elog.i(TAG, "NfcEntry initNfcDriver OK");
-        } else {
-            mInitNfcDrvOK = false;
-            showDialog(DIA_INIT_NFC_DRIVER);
-        }
-        resetUIData();
-        */
-        resetUIData();
-    }
-
-    @Override
-    protected void onDestroy() {
-        Elog.i(TAG, "NfcEntry onDestroy");
-        super.onDestroy();
-        if (mInitNfcDrvOK) {
-
-            new Thread(new Runnable() {
-                public void run() {
-                    NfcNativeCallClass.deinitNfcDriver(); // maybe takes long time lead ANR , run in thread.
-                }
-            }).start();
-
-            //NfcNativeCallClass.deinitNfcDriver(); // maybe takes long time lead
-            // ANR
-        }
-        Elog.i(TAG, "NfcEntry onDestroy done");
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        Elog.i(TAG, "NfcEntry onResume");
-        //--- modify 2012/10/31 {
-        closeNFCServiceAtStart();
-        int ret = NfcNativeCallClass.initNfcDriver();
-        if (0 == ret) {
-            mInitNfcDrvOK = true;
-            Elog.i(TAG, "NfcEntry initNfcDriver OK");
-        } else {
-            mInitNfcDrvOK = false;
-            showDialog(DIA_INIT_NFC_DRIVER);
-        }
-        // --- }
-        mListData = getData();
-        ArrayAdapter<String> adapter =
-            new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1,
-                mListData);
-        mMenuListView.setAdapter(adapter);
-    }
-
-    private void closeNFCServiceAtStart() {
-        NfcAdapter adp = NfcAdapter.getDefaultAdapter(getApplicationContext());
-        if (adp.isEnabled()) {
-            if (adp.disable()) {
-                Elog.i(TAG, "Nfc service set off.");
-            } else {
-                Elog.i(TAG, "Nfc service set off Fail.");
-            }
-        } else {
-            Elog.i(TAG, "Nfc service is off");
-        }
-    }
-
-    // private void openNFCServiceAtEnd() {
-    // NfcAdapter adp = NfcAdapter.getDefaultAdapter(getApplicationContext());
-    // if (!adp.isEnabled()) {
-    // if (adp.enable()) {
-    // Elog.i(TAG, "Nfc service set on.");
-    // } else {
-    // Elog.i(TAG, "Nfc service set on Fail.");
-    // }
-    // } else {
-    // Elog.i(TAG, "Nfc service is on");
-    // }
-    // }
-
-    private void resetUIData() {
-        final SharedPreferences preferences =
-            this.getSharedPreferences(NfcCommonDef.PREFERENCE_KEY,
-                android.content.Context.MODE_PRIVATE);
-        // setting always display
-        final Editor editor = preferences.edit();
-        editor.putBoolean(mItemString[0], true);
-        editor.putBoolean(mItemString[1], false);
-        editor.putBoolean(mItemString[2], false);
-        editor.commit();
-    }
-
-    private List<String> getData() {
-        ArrayList<String> items = new ArrayList<String>();
-        final SharedPreferences preferences =
-            this.getSharedPreferences(NfcCommonDef.PREFERENCE_KEY,
-                android.content.Context.MODE_PRIVATE);
-        // setting always display
-        preferences.edit().putBoolean(mItemString[0], true).commit();
-        for (int i = 0; i < mItemString.length; i++) {
-            if (preferences.getBoolean(mItemString[i], false)) {
-                items.add(mItemString[i]);
-            }
-        }
-        return items;
-    }
-
-    /**
-     * Click each camera setting item.
-     *
-     * @param arg0
-     *            : selected item's adapter view
-     * @param arg1
-     *            : selected view
-     * @param arg2
-     *            : position of selected view
-     * @param arg3
-     *            : id of selected view
-     */
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        try {
-            Intent intent = new Intent();
-            if (mListData.get(arg2).equalsIgnoreCase(ENTRY_SETTING)) {
-                intent.setClassName(this,
-                    "com.mediatek.engineermode.nfc.NfcSettings");
-            } else if (mListData.get(arg2).equalsIgnoreCase(ENTRY_RAWDATA)) {
-                intent.setClassName(this,
-                    "com.mediatek.engineermode.nfc.NfcRawData");
-            } else if (mListData.get(arg2)
-                .equalsIgnoreCase(ENTRY_SOFTWARESTACK)) {
-                intent.setClassName(this,
-                    "com.mediatek.engineermode.nfc.NfcSoftwareStack");
-            }
-            this.startActivity(intent);
-        } catch (ActivityNotFoundException e) {
-            showDialog(DIA_START_ACTIVITY);
-        }
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Dialog dialog = null;
-        AlertDialog.Builder builder;
-        switch (id) {
-        case DIA_INIT_NFC_DRIVER:
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.dialog_error_title).setMessage(
-                R.string.dialog_init_nfc_msg + mInitNfcDriverRet)
-                .setPositiveButton(android.R.string.ok, new OnClickListener() {
-                    @Override
-                    public void onClick(DialogInterface dialog, int which) {
-                        NfcEntry.this.finish();
-                    }
-                });
-            dialog = builder.create();
-            break;
-        case DIA_START_ACTIVITY:
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.dialog_error_title).setMessage(
-                R.string.start_activity_msg).setPositiveButton(
-                android.R.string.ok, null);
-            dialog = builder.create();
-            break;
-        default:
-            break;
-        }
-        return dialog;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcNativeCallClass.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcNativeCallClass.java
deleted file mode 100644
index cb51156..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcNativeCallClass.java
+++ /dev/null
@@ -1,493 +0,0 @@
-/*
- * To change this template, choose Tools | Templates
- * and open the template in the editor.
- */
-package com.mediatek.engineermode.nfc;
-
-import com.mediatek.engineermode.Elog;
-
-/**
- *
- * @author mtk80905
- */
-public class NfcNativeCallClass {
-    public static final String TAG = "nfc";
-    public static final int MTK_NFC_DIS_NOTIF_DURATION = 500;
-
-    public static final int MIFARE4K_LEN = 16;
-    public static final int MIFARE1K_LEN = 4;
-    public static final int ISO15693_LEN = 4;
-
-    public static final int MIFARE1K_PAGE = 4;
-    public static final int UID_DATA_LEN = 8;
-    public static final int TAG_RAW_DATA_LEN = 256;
-
-    public static final int NDEF_DATA_LEN = 256; // Need to Check (1024)
-    public static final int RAW_COMM_DATA_LEN = 256;
-
-    public static final int NFC_HEADER_LENGTH = 8;
-    // Reader/card mode/Register_notification Bitmap
-    public static final int BM_MODE_MIFAREUL = 0;
-    public static final int BM_MODE_MIFARESTD = 1;
-    public static final int BM_MODE_ISO1443_4A = 2;
-    public static final int BM_MODE_ISO1443_4B = 3;
-    public static final int BM_MODE_JEWEL = 4;
-    public static final int BM_MODE_NFC = 5;
-    public static final int BM_MODE_FELICA = 6;
-    public static final int BM_MODE_ISO15693 = 7;
-
-    // secure element bitmap
-    public static final int BM_START_OF_TRANSACTION = 0;
-    public static final int BM_END_OF_TRANSACTION = 1;
-    public static final int BM_TRANSACTION = 2;
-    public static final int BM_RF_FIELD_ON = 3;
-    public static final int BM_RF_FIELD_OFF = 4;
-    public static final int BM_CONNECTIVITY = 5;
-
-    // Discovery notification bitmap
-    public static final int BM_DN_ISO1443_4A = 0;
-    public static final int BM_DN_ISO1443_4B = 1;
-    public static final int BM_DN_FELICA212 = 2;
-    public static final int BM_DN_FELICA424 = 3;
-    public static final int BM_DN_ISO15693 = 4;
-    public static final int BM_DN_NFC_ACTIVE = 5;
-    public static final int BM_DN_DISCARD_CE = 6;
-    public static final int BM_DN_DISABLE_P2P = 7;
-
-    // Magic number
-    private static final int NUM_4 = 4;
-    private static final int NUM_16 = 16;
-    private static final int NUM_15 = 15;
-    private static final int NUM_999 = 999;
-    private static final int NUM_888 = 888;
-    private static final int NUM_111 = 111;
-    private static final int NUM_222 = 222;
-    private static final int NUM_333 = 333;
-
-    /* Tag TYPE & card type */
-    public static final int TAG_TYPE_DEFAULT = 0;
-    public static final int TAG_TYPE_MIFARE_UL = 1;
-    public static final int TAG_TYPE_MIFARE_STD = 2;
-    public static final int TAG_TYPE_ISO1443_4A = 3;
-    public static final int TAG_TYPE_ISO1443_4B = 4;
-    public static final int TAG_TYPE_JEWWL = 5;
-    public static final int TAG_TYPE_NFC = 6;
-    public static final int TAG_TYPE_FELICA = 7;
-    public static final int TAG_TYPE_ISO15693 = 8;
-    public static final int TAG_TYPE_NDEF = 9;
-
-    static {
-        System.loadLibrary("em_nfc_jni");
-    }
-
-    /**
-     * init nfc driver
-     *
-     * @return 0: success, 1: failed
-     */
-    public static native int initNfcDriver();
-
-    /**
-     * de Init nfc driver, when back to main view of em call this
-     */
-    public static native void deinitNfcDriver();
-
-    /**
-     * send nfc setting request and get the rsp
-     *
-     * @param req
-     *            : nfc setting req
-     * @return nfc setting rsp
-     */
-    public static native nfc_setting_response getSettings(
-        nfc_setting_request req);
-
-    /**
-     * send nfc notify req and get the rsp
-     *
-     * @param req
-     *            nfc notify req
-     * @return nfc notify rsp
-     */
-    public static native nfc_reg_notif_response getRegisterNotif(
-        nfc_reg_notif_request req);
-
-    /**
-     * Set se req to chip and get the rsp
-     *
-     * @param req
-     *            set se req
-     * @return set se rsp
-     */
-    public static native nfc_se_set_response setSEOption(nfc_se_set_request req);
-
-    /**
-     * send discovery notify req and get the rsp fron the chip
-     *
-     * @param req
-     *            discovery notify req
-     * @return discovery notify rsp
-     */
-    public static native nfc_dis_notif_response getDiscoveryNotif(
-        nfc_dis_notif_request req);
-
-    /**
-     * send the tag read req and get the rsp
-     *
-     * @param req
-     *            tag read req
-     * @return tag read rsp
-     */
-    public static native nfc_tag_read_response readTag(nfc_tag_read_request req);
-
-    /**
-     * send nfc test req and get the rsp
-     *
-     * @param req
-     *            nfc test req
-     * @return nfc test rsp
-     */
-    public static native nfc_test_response testEntry(nfc_test_request req);
-
-    // ========================================================
-    // ====Define NFC Service Handler Return Setting/Bitmap ===
-    // ========================================================
-    // Settings
-    public static class nfc_setting_request {
-
-        public int nfc_enable; /*
-                                * feature enable or disable , 0: disable,
-                                * 1:enable
-                                */
-
-        public int debug_enable; /*
-                                  * debug enable or disable , 0: disable,
-                                  * 1:enable
-                                  */
-
-        public int sw_protocol; /* SW protocol, 0: SW stack, 1: raw data mode */
-
-        public int get_capabilities; /*
-                                      * get chip capability 0: no request, 1:
-                                      * request
-                                      */
-
-        public short[] test1 = new short[NUM_16];
-        public short[][] test2 = new short[NUM_4][NUM_4];
-
-        nfc_setting_request() {
-            test1[0] = NUM_999;
-            test1[NUM_15] = NUM_888;
-            test2[0][0] = NUM_111;
-            test2[1][0] = NUM_222;
-            test2[3][3] = NUM_333;
-        }
-    };
-
-    public static class nfc_setting_response {
-
-        public int status; /* return setting result */
-
-        public int nfc_enable; /* return feature enable or disable */
-
-        public int debug_enable; /* return debug enable or disable */
-
-        public int sw_protocol; /* return SW protocol, */
-
-        public int get_capabilities; /* return chip capability */
-
-        public int sw_ver; /* return software version */
-
-        public int hw_ver; /* return hardware version */
-
-        public int fw_ver; /* return firmware version */
-
-        public int reader_mode; /* return support format bitmap */
-
-        public int card_mode; /* return support format bitmap */
-
-        public short[] test1;
-        public short[][] test2;
-    };
-
-    // NFC Register Notification
-    public static class nfc_reg_notif_request {
-
-        public int reg_type; /* register notification bitmap */
-
-    };
-
-    public static class nfc_reg_notif_response {
-
-        public int status; /* return setting result,0 success, other: fail */
-
-        public int se; /*
-                        * secure element detect, 0: no detect, 1: se typ1 , 2:
-                        * se type 2
-                        */
-
-        public int se_status; /*
-                               * secure element status, 0:off, 1:Virtual,
-                               * 2:Wired
-                               */
-
-        public int se_type; /* secure element type, bitmap */
-
-        public int length; /* length of data */
-
-        public byte data[]; /* ascii data returned. */
-
-    };
-
-    // NFC Secure Element
-    public static class nfc_se_set_request {
-
-        public int set_SEtype; /* setting se type, 0:off, 1:Virtual, 2:Wired */
-
-    };
-
-    public static class nfc_se_set_response {
-
-        public int status; /* return setting result, 0:sucess */
-
-    };
-
-    // NFC Discovery Notification
-    public static class nfc_dis_notif_request {
-
-        public int dis_type; /* discovery notification bitmap */
-
-        public int duration; /* set duration,(unit:ms) */
-
-    };
-
-    public static class nfc_dis_notif_response {
-
-        public int status; /* return setting result, 0:sucess */
-
-        // public int which; /* tag or p2p was detected or nothing.*/
-
-        public Object target;
-
-    };
-
-    // NFC Tag Detected Response
-    public static class nfc_tag_det_response {
-
-        public int tag_type; /* return detected tag type */
-
-        public int card_type; /* card type, 1: Mifare classic 1K */
-        /* 2: Mifare classic 4K */
-        /* 3: NDEF */
-
-        public byte[] uid; /* card Uid */
-
-        public int sak; /* card sak */
-
-        public int atag; /* card atag */
-
-        public int appdata; /* card appdata */
-
-        public int maxdatarate; /* card maxdatarate */
-
-        /**
-         * print the member for debug
-         */
-        public void printMember() {
-            String msg =
-                String
-                    .format(
-                        "tag_type %d, card_type %d, uid %s, sak %d, atag %d, appdata %d, maxdatarate %d",
-                        tag_type, card_type, new String(uid), sak, atag,
-                        appdata, maxdatarate);
-            Elog.i(TAG, msg);
-        }
-
-    };
-
-    // NFC Peer to Peer Detected Response
-    public static class nfc_p2p_det_response {
-
-        public int p2p_type; /* return detected tag type */
-
-    };
-
-    // NFC Peer to Peer Detected Response
-    public static class nfc_none_det_response {
-
-        public int dummy;
-
-    };
-
-    // NFC Peer to Peer communication
-    // public static class nfc_p2p_com_request {
-    //
-    // public int action; /* 1 : send, 2 receive */
-    //
-    // public int length; /* length of */
-    //
-    // public byte data[]; /* ascii data returned. */
-    //
-    // };
-
-    // public static class nfc_p2p_com_response {
-    //
-    // public int status; /* 0:success */
-    //
-    // public int length; /* length of */
-    //
-    // public byte data[]; /* ascii data returned. */
-    //
-    // };
-
-    // NFC raw data communication //not used
-    // public static class nfc_rd_com_request {
-    //
-    // public int action; /* 1:start test, 0:stop test */
-    //
-    // public int length; /* length of */
-    //
-    // public byte data[]; /* ascii data returned. */
-    //
-    // };
-
-    // public static class nfc_rd_com_response {
-    //
-    // public int status; /* Test result, 0:success */
-    //
-    // public int length; /* length of */
-    //
-    // public byte data[]; /* ascii data returned. */
-    //
-    // };
-
-    // /NFC test mode
-    public static class nfc_script_request {
-
-        public int type; /* Test type: currently, always set 1 */
-
-        public int action; /* Test action, 1: start test, 0:stop test */
-
-    };
-
-    public static class nfc_script_response {
-
-        public int result; /* Test result,0 :success */
-
-    };
-
-    // NFC test mode
-    public static class nfc_script_uid_request {
-
-        public int type; /* Test type: currently, always set 1 */
-
-        public int action; /* Test action, 1: start test, 0:stop test */
-
-        public int uid_type; /* 1: uid 4bytes, 2 : uid 7bytes */
-
-        public byte[] data = new byte[UID_DATA_LEN]; /* uid content */
-
-    };
-
-    public static class nfc_script_uid_response {
-
-        public int result; /* Test result, 0: success */
-
-        public int uid_type; /* 1: uid 4bytes, 2 : uid 7bytes */
-
-        public byte[] data; // = new short[UID_DATA_LEN]; /* uid content */
-
-    };
-
-    public static class nfc_tx_alwayson_request {
-        public int type; /* Test type: currently, always set 1 */
-        public int action; /* Test action, 1: start test, 0:stop test */
-        public byte modulation_type; /*
-                                      * 0:type A, 1:type B, 2:type F, 3:No
-                                      * Modulation
-                                      */
-        public byte bitrate; /* 0:106kbps, 1:212kbps, 2:424kbps */
-    };
-
-    public static class nfc_card_emulation_request {
-        public int type; /* Test type: currently, always set 1 */
-        public int action; /* Test action, 1: start test, 0:stop test */
-        public short technology; /*
-                                  * bitmask: MifareUL=bit 0, MifareStd=bit1,
-                                  * ISO14443_4A=bit 2, ISO14443_4B=bit 3,
-                                  * Jewel=bit 4, Felica=bit 5, ISO15693=bit 6
-                                  */
-        public short protocols; /*
-                                 * bitmask: Iso14443A=bit 0, Iso14443B=bit 1,
-                                 * Felica212=bit 2, Felica424=bit 3,
-                                 * Iso15693=bit 4
-                                 */
-    };
-
-    public static class nfc_test_request {
-        public int which; // which test
-        public Object target; // test request. like nfc_tx_alwayson_request..
-    }
-
-    public static class nfc_test_response {
-        public Object target; // test request. like nfc_script_uid_response..
-    }
-
-    // NFC Tag Read Request
-    public static class nfc_tag_read_request {
-
-        public int read_type; /* which type want to read */
-        /* 1 for Mifare classic 1K */
-        /* 2 for Mifare classic 4K */
-        /* 3 for NDEF type */
-
-        public int address; /* for Mifare classic 1K used */
-
-        public int sector; /* for Mifare classic 4K used */
-
-        public int block; /* for Mifare classic 4K used */
-
-    };
-
-    // !!!NDEF type no parameter
-
-    // start NFC Tag Read Response
-    public static class nfc_tag_read_response {
-
-        public int status; /* return read status, 0 success */
-
-        public Object target; /*
-                               * 1 : Mifare classic 1K ,2: Mifare classic 4K, 3:
-                               * NDEF
-                               */
-
-    };
-
-    public static class nfc_tag_read_Mifare1K {
-
-        public int address; /*  */
-
-        public short[] data; // = new short[MIFARE1K_LEN];
-    };
-
-    public static class nfc_tag_read_Mifare4K {
-
-        public int sector; /*  */
-
-        public int block;
-        public short[] data; // = new short[MIFARE4K_LEN];
-    };
-
-    public static class nfc_tag_read_ndef {
-
-        public int ndef_type;
-        public int recordFlage;
-        public int recordId;
-        public int recordInfo;
-        public int length;
-        public short[] dataHex; // = new short[NDEF_DATA_LEN];
-        public char[] dataAscii; // = new short[NDEF_DATA_LEN];
-    };
-
-    // end NFC Tag Read Response
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcRawData.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcRawData.java
deleted file mode 100644
index da55413..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcRawData.java
+++ /dev/null
@@ -1,495 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.AdapterView;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.RadioButton;
-import android.widget.RadioGroup;
-import android.widget.Spinner;
-import android.widget.TextView;
-import android.widget.Toast;
-import android.nfc.NfcAdapter;
-
-import java.util.ArrayList;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class NfcRawData extends Activity implements OnClickListener {
-    private static final String TAG = "EM/nfc";
-    private static final int EVENT_OP_START = 101;
-    private static final int EVENT_OP_STOP = 102;
-    private static final int EVENT_OP_FIN = 103;
-    private static final int EVENT_OP_MSG = 104;
-    private static final int EVENT_UPDATE_RADIO_UI = 105;
-
-    private static final int TEST_ID_ALWAYSE_ON_WITH = 1001;
-    private static final int TEST_ID_ALWAYSE_ON_WO = 1002;
-    private static final int TEST_ID_CARD_EMUL_MODE = 1003;
-    private static final int TEST_ID_READER_MODE = 1004;
-    private static final int TEST_ID_P2P_MODE = 1005;
-    private static final int TEST_ID_SWP_SELF = 1006;
-    private static final int TEST_ID_ANTENNA_SELF = 1007;
-    private static final int TEST_ID_UID_RW = 1008;
-
-    private static final int TEST_START = 1; // according to protocol
-    private static final int TEST_STOP = 0;
-    private static final int NUM_3 = 3;
-    private static final int NUM_3F = 0x03;
-    private static final int NUM_4F = 0x04;
-
-    private boolean mInProgress = false;
-
-    private Button mBtnStart = null;
-    private Button mBtnStop = null;
-    private RadioGroup mRadioGpMode;
-    private TextView mTextResult;
-    private ArrayList<RadioButton> mRadioItems = new ArrayList<RadioButton>();
-    private View mViewAlwayson;
-    private View mViewCardEmul;
-    private Spinner mAlwayseOnModuleAppendix;
-    private Spinner mAlwayseOnBitrateAppendix;
-    private Spinner mCardEmulModeTypeAppendix;
-    private Spinner mCardEmulModeProtAppendix;
-
-    private int mSelectionId = 0;
-    private boolean mInStartTest = false;
-    private Handler mHander = new Handler() {
-        public void handleMessage(Message msg) {
-
-            switch (msg.what) {
-            case EVENT_OP_FIN:
-                mBtnStart.setEnabled(true);
-                mBtnStop.setEnabled(false);
-                mInProgress = false;
-                break;
-            case EVENT_OP_START:
-                mBtnStart.setEnabled(false);
-                mBtnStop.setEnabled(true);
-                mInProgress = true;
-                testing(true);
-                break;
-            case EVENT_OP_STOP:
-                testing(false);
-                break;
-            case EVENT_OP_MSG:
-                String result = msg.getData().getString("MSG");
-                mTextResult.setText(result);
-                break;
-            case EVENT_UPDATE_RADIO_UI:
-                boolean enabled = msg.getData().getBoolean("UP");
-                for (RadioButton r : mRadioItems) {
-                    r.setEnabled(enabled);
-                }
-                disableForTemp();
-                break;
-            default:
-                break;
-            }
-
-        }
-    };
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        Elog.i(TAG, "NfcRawData onCreate");
-        setContentView(R.layout.nfc_rawdata);
-        //Elog.i(TAG, "NfcRawData onResume");
-        //initUI();
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        closeNFCServiceAtStart();
-        Elog.i(TAG, "NfcRawData onResume");
-        initUI();
-    }
-
-    /**
-     * on click the button start and stop
-     *
-     * @param arg0
-     *            : clicked which view
-     */
-    public void onClick(View arg0) {
-        if (arg0 == mBtnStart) {
-            if (mRadioGpMode.getCheckedRadioButtonId() == -1) {
-                Toast.makeText(getApplicationContext(),
-                    "Test Mode is not selected.", Toast.LENGTH_LONG).show();
-                return;
-            }
-            mHander.sendEmptyMessage(EVENT_OP_START);
-        } else if (arg0 == mBtnStop) {
-            mHander.sendEmptyMessage(EVENT_OP_STOP);
-        } else {
-            Elog.e(TAG, "ASSERT. Ghost view " + arg0.getClass().toString());
-        }
-    }
-
-
-    private void closeNFCServiceAtStart() {
-        NfcAdapter adp = NfcAdapter.getDefaultAdapter(getApplicationContext());
-        if (adp.isEnabled()) {
-            if (adp.disable()) {
-                Elog.i(TAG, "Nfc service set off.");
-            } else {
-                Elog.i(TAG, "Nfc service set off Fail.");
-            }
-        } else {
-            Elog.i(TAG, "Nfc service is off");
-        }
-    }
-
-    private void initUI() {
-        mBtnStart = (Button) findViewById(R.id.NFC_RawData_Start);
-        mBtnStop = (Button) findViewById(R.id.NFC_RawData_Stop);
-        mRadioGpMode = (RadioGroup) findViewById(R.id.NFC_RawData_Group);
-        mTextResult = (TextView) findViewById(R.id.NFC_RawData_Result);
-
-        mViewAlwayson = (View) findViewById(R.id.View_Alwayse_on_appendix);
-        mViewCardEmul = (View) findViewById(R.id.View_Card_emul_mode_appendix);
-
-        mRadioItems.add((RadioButton) findViewById(R.id.NFC_RawData_Item1));
-        mRadioItems.add((RadioButton) findViewById(R.id.NFC_RawData_Item2));
-        mRadioItems.add((RadioButton) findViewById(R.id.NFC_RawData_Item3));
-        mRadioItems.add((RadioButton) findViewById(R.id.NFC_RawData_Item4));
-        mRadioItems.add((RadioButton) findViewById(R.id.NFC_RawData_Item5));
-        mRadioItems.add((RadioButton) findViewById(R.id.NFC_RawData_Item6));
-        mRadioItems.add((RadioButton) findViewById(R.id.NFC_RawData_Item7));
-        mRadioItems.add((RadioButton) findViewById(R.id.NFC_RawData_Item8));
-
-        mBtnStart.setOnClickListener(this);
-        mBtnStop.setOnClickListener(this);
-        mRadioGpMode
-            .setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() {
-                @Override
-                public void onCheckedChanged(RadioGroup group, int checkedId) {
-                    Elog.d(TAG, "mRadioGpMode checked Id " + checkedId);
-                    mSelectionId = getSelectionId(checkedId);
-                    addAppendix(mSelectionId);
-                }
-
-                private int getSelectionId(int radioId) {
-                    final int[] idxs =
-                        {R.id.NFC_RawData_Item1, R.id.NFC_RawData_Item2,
-                            R.id.NFC_RawData_Item3, R.id.NFC_RawData_Item4,
-                            R.id.NFC_RawData_Item5, R.id.NFC_RawData_Item6,
-                            R.id.NFC_RawData_Item7, R.id.NFC_RawData_Item8 };
-                    final int[] ids =
-                        {TEST_ID_ALWAYSE_ON_WITH, TEST_ID_ALWAYSE_ON_WO,
-                            TEST_ID_CARD_EMUL_MODE, TEST_ID_READER_MODE,
-                            TEST_ID_P2P_MODE, TEST_ID_SWP_SELF,
-                            TEST_ID_ANTENNA_SELF, TEST_ID_UID_RW };
-
-                    for (int i = 0; i < idxs.length; i++) {
-                        if (idxs[i] == radioId) {
-                            return ids[i];
-                        }
-                    }
-                    Elog.e(TAG, "Ghost RadioGroup checkId " + radioId);
-                    return TEST_ID_ALWAYSE_ON_WITH;
-                }
-            });
-        initSpinner();
-        enableAllRadioBox(true);
-        disableForTemp(); // why
-        mRadioGpMode.check(R.id.NFC_RawData_Item3);
-        mBtnStart.setEnabled(true);
-        mBtnStop.setEnabled(false);
-    }
-
-    private void disableForTemp() {
-        Elog.i(TAG, "disableForTemp");
-        mRadioItems.get(0).setEnabled(false); // TX wait ACK
-        mRadioItems.get(4).setEnabled(false); // P2P test
-        mRadioItems.get(6).setEnabled(false); // antenna test
-
-        //mRadioItems.get(1).setEnabled(true);
-        //mRadioItems.get(2).setEnabled(true);
-        //mRadioItems.get(3).setEnabled(true);
-        //mRadioItems.get(5).setEnabled(true);
-        //mRadioItems.get(7).setEnabled(true);
-
-    }
-
-    // set view visible or gone depends on select raido button
-    private void addAppendix(int selId) {
-        if (selId == TEST_ID_ALWAYSE_ON_WITH || selId == TEST_ID_ALWAYSE_ON_WO) { // item1,2
-            mViewAlwayson.setVisibility(View.VISIBLE);
-            mViewCardEmul.setVisibility(View.GONE);
-        } else if (selId == TEST_ID_CARD_EMUL_MODE) { // item3
-            mViewAlwayson.setVisibility(View.GONE);
-            mViewCardEmul.setVisibility(View.VISIBLE);
-        } else { // item4-8
-            mViewAlwayson.setVisibility(View.GONE);
-            mViewCardEmul.setVisibility(View.GONE);
-        }
-    }
-
-    private void initSpinner() {
-        mAlwayseOnModuleAppendix =
-            (Spinner) findViewById(R.id.NFC_RawData_Alwayson_appendix_module);
-        mAlwayseOnBitrateAppendix =
-            (Spinner) findViewById(R.id.NFC_RawData_Alwayson_appendix_bitrate);
-        mCardEmulModeTypeAppendix =
-            (Spinner) findViewById(R.id.NFC_RawData_cardEmulMode_appendix_type);
-        mCardEmulModeProtAppendix =
-            (Spinner) findViewById(R.id.NFC_RawData_cardEmulMode_appendix_protocol);
-
-        final ArrayAdapter<String> alwaysOnModuleAdatper =
-            new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, R.array.always_on_module);
-        final ArrayAdapter<String> alwaysOnBitrateAdatper =
-            new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, R.array.always_on_bitrate);
-        final ArrayAdapter<String> cardEmulModeTypeAdatper =
-            new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item,
-                R.array.card_emul_mode_type);
-        final ArrayAdapter<String> cardEmulModeProtAdatper =
-            new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item,
-                R.array.card_emul_mode_prot);
-        alwaysOnModuleAdatper
-            .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        alwaysOnBitrateAdatper
-            .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        cardEmulModeTypeAdatper
-            .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        cardEmulModeProtAdatper
-            .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mAlwayseOnModuleAppendix.setAdapter(alwaysOnModuleAdatper);
-        mAlwayseOnBitrateAppendix.setAdapter(alwaysOnBitrateAdatper);
-        mCardEmulModeTypeAppendix.setAdapter(cardEmulModeTypeAdatper);
-        mCardEmulModeProtAppendix.setAdapter(cardEmulModeProtAdatper);
-        mAlwayseOnModuleAppendix.setSelection(0);
-        mAlwayseOnBitrateAppendix.setSelection(0);
-        mCardEmulModeTypeAppendix.setSelection(0);
-        mCardEmulModeProtAppendix.setSelection(0);
-    }
-
-    private void enableAllRadioBox(boolean enabled) {
-        Message msg = new Message();
-        msg.what = EVENT_UPDATE_RADIO_UI;
-        Bundle bun = new Bundle();
-        bun.putBoolean("UP", enabled);
-        msg.setData(bun);
-        mHander.sendMessage(msg);
-    }
-
-    private void testing(final boolean isStart) {
-        mTextResult.setText("Waiting...");
-        if (mInStartTest) {
-            if (mSelectionId == TEST_ID_UID_RW) { // Read UID suppot
-                Elog.d(TAG, "ID = " + TEST_ID_UID_RW + ", Select ID = " + mSelectionId);
-            }  else {
-                threadSendMsg("Operation is still in progress. Try later.");
-                return;
-            }
-        }
-        Elog.d(TAG, " ++++ mInStartTest = " + mInStartTest + ", mInProgress = " + mInProgress);
-        if (mInProgress && !isStart && (mSelectionId == TEST_ID_UID_RW)) {  // Start command in progress and user click Stop button
-            new Thread() {
-                @Override
-                public void run() {
-                    Elog.d(TAG, "++++ Thread 1 , Start +++++");
-                    NfcNativeCallClass.nfc_test_request req = makeRequest(isStart);
-                    NfcNativeCallClass.nfc_test_response resp = NfcNativeCallClass.testEntry(req);
-                    handleResponse(resp);
-
-                    enableAllRadioBox(true);
-                    mHander.sendEmptyMessage(EVENT_OP_FIN);
-                    threadSendMsg("Result: Stop");
-                    mInStartTest = false;
-                    Elog.d(TAG, "++++ Thread 1 , End +++++");
-                }
-            } .start();
-
-        } else {
-            mInStartTest = true;
-            new Thread() {
-                @Override
-                public void run() {
-                    Elog.d(TAG, "++++ Thread 2 , Start +++++");
-                    if (isStart) {
-                        enableAllRadioBox(false);
-                    }
-
-                    NfcNativeCallClass.nfc_test_request req = makeRequest(isStart);
-                    NfcNativeCallClass.nfc_test_response resp = NfcNativeCallClass.testEntry(req);
-                    handleResponse(resp);
-
-                    if (!isStart) {
-                        enableAllRadioBox(true);
-                        mHander.sendEmptyMessage(EVENT_OP_FIN);
-                    }
-                    mInStartTest = false;
-                    Elog.d(TAG, "++++ Thread 2 , End +++++");
-                }
-
-            } .start();
-        }
-    }
-
-    private NfcNativeCallClass.nfc_test_request makeRequest(boolean isStart) {
-        NfcNativeCallClass.nfc_test_request req =
-            new NfcNativeCallClass.nfc_test_request();
-        req.which = mSelectionId;
-
-        switch (mSelectionId) {
-        case TEST_ID_ALWAYSE_ON_WITH:
-        case TEST_ID_ALWAYSE_ON_WO:
-            NfcNativeCallClass.nfc_tx_alwayson_request nfcTxOnReq =
-                new NfcNativeCallClass.nfc_tx_alwayson_request();
-            nfcTxOnReq.action = isStart ? TEST_START : TEST_STOP;
-            nfcTxOnReq.type = 1; // always by protocol.
-
-            byte modPos =
-                (byte) mAlwayseOnModuleAppendix.getSelectedItemPosition();
-            nfcTxOnReq.modulation_type =
-                modPos == AdapterView.INVALID_POSITION ? 0 : modPos;
-
-            byte bitratePos =
-                (byte) mAlwayseOnBitrateAppendix.getSelectedItemPosition();
-            nfcTxOnReq.bitrate =
-                bitratePos == AdapterView.INVALID_POSITION ? 0 : modPos;
-
-            req.target = nfcTxOnReq;
-            Elog.i(TAG, String.format(
-                "action %d, type %d, modulation %d, bitrate %d",
-                nfcTxOnReq.action, nfcTxOnReq.type, nfcTxOnReq.modulation_type,
-                nfcTxOnReq.bitrate));
-            break;
-        case TEST_ID_CARD_EMUL_MODE:
-            NfcNativeCallClass.nfc_card_emulation_request nfcCardEmulReq =
-                new NfcNativeCallClass.nfc_card_emulation_request();
-            nfcCardEmulReq.action = isStart ? TEST_START : TEST_STOP;
-            nfcCardEmulReq.type = 1; // always by protocol.
-
-            int typePos = mCardEmulModeTypeAppendix.getSelectedItemPosition();
-            nfcCardEmulReq.technology = (short) (1 << typePos);
-
-            int protPos = mCardEmulModeProtAppendix.getSelectedItemPosition();
-            nfcCardEmulReq.protocols = (short) (1 << protPos);
-
-            req.target = nfcCardEmulReq;
-            Elog.i(TAG, String.format(
-                "action %d, type %d, technology %d, protocols %d",
-                nfcCardEmulReq.action, nfcCardEmulReq.type,
-                nfcCardEmulReq.technology, nfcCardEmulReq.protocols));
-            break;
-        case TEST_ID_UID_RW:
-            NfcNativeCallClass.nfc_script_uid_request nfcScriptUidReq =
-                new NfcNativeCallClass.nfc_script_uid_request();
-            nfcScriptUidReq.action = isStart ? TEST_START : TEST_STOP;
-            nfcScriptUidReq.type = 1; // always by protocol.
-            nfcScriptUidReq.uid_type = 1; // 1: 4 short. 2: 7 short.
-            nfcScriptUidReq.data[0] = 0x01;
-            nfcScriptUidReq.data[1] = 0x02;
-            nfcScriptUidReq.data[2] = NUM_3F;
-            nfcScriptUidReq.data[NUM_3] = NUM_4F;
-
-            req.target = nfcScriptUidReq;
-            break;
-        case TEST_ID_READER_MODE:
-        case TEST_ID_P2P_MODE:
-        case TEST_ID_SWP_SELF:
-        case TEST_ID_ANTENNA_SELF:
-            NfcNativeCallClass.nfc_script_request nfcScriptReq =
-                new NfcNativeCallClass.nfc_script_request();
-            nfcScriptReq.action = isStart ? TEST_START : TEST_STOP;
-            nfcScriptReq.type = 1; // always by protocol.
-
-            req.target = nfcScriptReq;
-            break;
-        default:
-            break;
-        }
-        return req;
-    }
-
-    private void handleResponse(NfcNativeCallClass.nfc_test_response resp) {
-        if (resp.target instanceof NfcNativeCallClass.nfc_script_uid_response) {
-            NfcNativeCallClass.nfc_script_uid_response uidr =
-                (NfcNativeCallClass.nfc_script_uid_response) resp.target;
-            if (uidr.result != 0) {
-                // if (uidr.result == NfcCommonDef.RESULT_STATUS_TIMEOUT) {
-                // //threadSendMsg("ERROR: Send Timeout.");
-                // } else {
-                threadSendMsg("ERROR: result = " + uidr.result);
-                // }
-                // mHander.sendEmptyMessage(EVENT_OP_FIN);
-            } else {
-                String result =
-                    "UID Test Result: \nData[" + NfcUtils.printArray(uidr.data)
-                        + "]";
-                threadSendMsg(result);
-            }
-        } else if (resp.target instanceof NfcNativeCallClass.nfc_script_response) {
-            NfcNativeCallClass.nfc_script_response res =
-                (NfcNativeCallClass.nfc_script_response) resp.target;
-            if (res.result != 0) {
-                // if (res.result == NfcCommonDef.RESULT_STATUS_TIMEOUT) {
-                // //threadSendMsg("ERROR: Send Timeout.");
-                // } else {
-                threadSendMsg("ERROR: result = " + res.result);
-                // }
-                // mHander.sendEmptyMessage(EVENT_OP_FIN);
-            } else {
-                threadSendMsg("Result: OK");
-            }
-        }
-    }
-
-    private void threadSendMsg(String s) {
-        Message msg = new Message();
-        msg.what = EVENT_OP_MSG;
-        Bundle bun = new Bundle();
-        bun.putString("MSG", s);
-        msg.setData(bun);
-        mHander.sendMessage(msg);
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcRespMap.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcRespMap.java
deleted file mode 100644
index 2d1f2e6..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcRespMap.java
+++ /dev/null
@@ -1,65 +0,0 @@
-package com.mediatek.engineermode.nfc;
-
-import java.util.HashMap;
-
-public class NfcRespMap {
-
-    public static final String KEY_SETTINGS = "nfc.settings";
-    public static final String KEY_SS_REGISTER_NOTIF =
-        "nfc.software_stack.reg_notif";
-    public static final String KEY_SS_SCAN_COMPLETE =
-        "nfc.software_stack.scan_complete";
-    public static final String KEY_SS_TAG_DECT =
-        "nfc.software_stack.normaltag_dect";
-    public static final String KEY_SS_P2P_TARGET_DECT =
-        "nfc.software_stack.p2p_dect";
-    private static volatile NfcRespMap sRespMap = new NfcRespMap();
-    private final HashMap<String, Object> mContainer =
-        new HashMap<String, Object>();
-
-    /**
-     * Get the class's instance, single mode
-     *
-     * @return NfcRespMap's single instance
-     */
-    public static NfcRespMap getInst() {
-
-        synchronized (NfcRespMap.class) {
-            if (sRespMap == null) {
-                    sRespMap = new NfcRespMap();
-            }
-        }
-        return sRespMap;
-    }
-
-    /**
-     * clear the hash map
-     */
-    public void clear() {
-        mContainer.clear();
-    }
-
-    /**
-     * Put a key value to the hash map
-     *
-     * @param key
-     *            : key
-     * @param resp
-     *            : value
-     */
-    public void put(String key, Object resp) {
-        mContainer.put(key, resp);
-    }
-
-    /**
-     * take value from the hash map
-     *
-     * @param key
-     *            : value's key
-     * @return value
-     */
-    public Object take(String key) {
-        return mContainer.get(key);
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSettings.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSettings.java
deleted file mode 100644
index a1b3412..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSettings.java
+++ /dev/null
@@ -1,346 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.Intent;
-import android.content.SharedPreferences;
-import android.content.SharedPreferences.Editor;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.RadioGroup;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class NfcSettings extends Activity implements OnClickListener {
-
-    private static final String TAG = "EM/nfc";
-    private static final String ENTRY_NFC_ONOFF = "nfconoff";
-    private static final String ENTRY_DBG_ONOFF = "dbgonoff";
-
-    private static final int DIALOG_EXCEPTION = 0;
-    private static final int DIALOG_RSP_ERROR = 1;
-    private static final int DIALOG_PROCESS = 2;
-    private static final int SELECTION_NFC_OFF = 0;
-    private static final int SELECTION_NFC_ON = 1;
-    private static final int SELECTION_DBG_OFF = 0;
-    private static final int SELECTION_DBG_ON = 1;
-    private static final int SELECTION_PROT_SW = 0;
-    private static final int SELECTION_PROT_RD = 1;
-    private static final int SELECTION_PROT_OFF = 2;
-
-    private static final int EVENT_OP_SEARCH_START = 101;
-    private static final int EVENT_OP_SEARCH_FIN = 103;
-    private static final int EVENT_OP_ERR = 104;
-    private static final int EVENT_OP_EXCEPTION = 105;
-    private static final int EVENT_OP_TIMEOUT = 106;
-    private static final int EVENT_OP_OK = 107;
-
-    private Button mBtnSet = null;
-    private RadioGroup mGpNfcOnOff = null;
-    private RadioGroup mGpDebug = null;
-    private RadioGroup mGpProtocol = null;
-
-    private int mSetRspStatus = 0;
-    private Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case EVENT_OP_SEARCH_START:
-                showDialog(DIALOG_PROCESS);
-                break;
-            case EVENT_OP_SEARCH_FIN:
-                dismissDialog(DIALOG_PROCESS);
-                break;
-            case EVENT_OP_ERR:
-                showDialog(DIALOG_RSP_ERROR); // show user setting resp status
-                break;
-            // case EVENT_OP_TIMEOUT:
-            // checkRadiobox(SELECTION_NFC_OFF, SELECTION_DBG_OFF,
-            // SELECTION_PROT_OFF);
-            // showDialog(DIALOG_TIME_OUT);
-            // break;
-            case EVENT_OP_EXCEPTION:
-                showDialog(DIALOG_EXCEPTION);
-                break;
-            case EVENT_OP_OK:
-                handleResp();
-                final Intent intent = new Intent();
-                intent.setClassName(NfcSettings.this,
-                    "com.mediatek.engineermode.nfc.NfcSettingsResult");
-                NfcSettings.this.startActivity(intent);
-                break;
-            default:
-                break;
-            }
-        }
-    };
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.nfc_settings);
-        initUI();
-    }
-
-    /**
-     * on click the button set
-     *
-     * @param arg0
-     *            : clicked which view
-     */
-    public void onClick(View arg0) {
-        if (arg0 == mBtnSet) {
-            Elog.d(TAG, "NfcSettings onClick");
-            startSetting();
-        }
-    }
-
-    private void initUI() {
-        mBtnSet = (Button) findViewById(R.id.NFC_Settings_Btn_Set);
-        mGpNfcOnOff = (RadioGroup) findViewById(R.id.NFC_Settings_NFC);
-        mGpDebug = (RadioGroup) findViewById(R.id.NFC_Settings_NFCDBG);
-        mGpProtocol = (RadioGroup) findViewById(R.id.NFC_Settings_Protocol);
-        mBtnSet.setOnClickListener(this);
-
-        final SharedPreferences preferences =
-            this.getSharedPreferences(NfcCommonDef.PREFERENCE_KEY,
-                android.content.Context.MODE_PRIVATE);
-        if (preferences.getBoolean(ENTRY_NFC_ONOFF, false)) {
-            mGpNfcOnOff.check(R.id.NFC_Settings_NFC_ON);
-        } else {
-            mGpNfcOnOff.check(R.id.NFC_Settings_NFC_OFF);
-        }
-
-        if (preferences.getBoolean(ENTRY_DBG_ONOFF, false)) {
-            mGpDebug.check(R.id.NFC_Settings_NFCDBG_ON);
-        } else {
-            mGpDebug.check(R.id.NFC_Settings_NFCDBG_OFF);
-        }
-
-        //if (preferences.getBoolean(NfcEntry.ENTRY_SOFTWARESTACK, false)) {
-        //    mGpProtocol.check(R.id.NFC_Settings_Protocol_SW);
-        //} else
-        if (preferences.getBoolean(NfcEntry.ENTRY_RAWDATA, false)) {
-            mGpProtocol.check(R.id.NFC_Settings_Protocol_RD);
-        } else {
-            mGpProtocol.check(R.id.NFC_Settings_Protocol_OFF);
-        }
-    }
-
-    private int getSelection(int checkedId) {
-        int selection = 0;
-        switch (checkedId) {
-        case R.id.NFC_Settings_NFC_ON:
-            selection = SELECTION_NFC_ON;
-            break;
-        case R.id.NFC_Settings_NFC_OFF:
-            selection = SELECTION_NFC_OFF;
-            break;
-        case R.id.NFC_Settings_NFCDBG_ON:
-            selection = SELECTION_DBG_ON;
-            break;
-        case R.id.NFC_Settings_NFCDBG_OFF:
-            selection = SELECTION_DBG_OFF;
-            break;
-        case R.id.NFC_Settings_Protocol_RD:
-            selection = SELECTION_PROT_RD;
-            break;
-        //case R.id.NFC_Settings_Protocol_SW:
-        //    selection = SELECTION_PROT_SW;
-        //    break;
-        case R.id.NFC_Settings_Protocol_OFF:
-            selection = SELECTION_PROT_OFF;
-            break;
-        default:
-            break;
-        }
-        return selection;
-    }
-
-    private int sendCommand() {
-
-        NfcNativeCallClass.nfc_setting_request req =
-            new NfcNativeCallClass.nfc_setting_request();
-
-        req.nfc_enable = getSelection(mGpNfcOnOff.getCheckedRadioButtonId());
-        req.debug_enable = getSelection(mGpDebug.getCheckedRadioButtonId());
-        req.sw_protocol = getSelection(mGpProtocol.getCheckedRadioButtonId());
-        req.get_capabilities = 0;
-        Elog.d(TAG, String.format(
-            "REQ: nfc_enable, debug_enable, sw_protocol, %d,%d,%d",
-            req.nfc_enable, req.debug_enable, req.sw_protocol));
-        NfcNativeCallClass.nfc_setting_response resp;
-        resp = NfcNativeCallClass.getSettings(req);
-        if (resp == null) {
-            Elog.e(TAG, "NfcNativeCallClass.getSettings(req) (resp == null)");
-            return NfcCommonDef.ERROR_ERROR;
-        }
-        if (resp.status != 0) {
-            // if (resp.status == NfcCommonDef.RESULT_STATUS_TIMEOUT) {
-            // Elog.e(TAG, "NfcNativeCallClass.getSettings(req) time out");
-            // return NfcCommonDef.ERROR_TIMEOUT;
-            // }
-            Elog.e(TAG,
-                "NfcNativeCallClass.getSettings(req) (resp.status != 0) = "
-                    + resp.status);
-            mSetRspStatus = resp.status;
-            return NfcCommonDef.ERROR_ERROR;
-        }
-        Elog.d(TAG, String.format(
-            "RES: nfc_enable, debug_enable, sw_protocol, %d,%d,%d",
-            resp.nfc_enable, resp.debug_enable, resp.sw_protocol));
-
-        NfcRespMap.getInst().put(NfcRespMap.KEY_SETTINGS, resp);
-        return NfcCommonDef.ERROR_OK;
-    }
-
-    private void checkRadiobox(int nfcEnable, int debugEnable, int swProtocol) {
-        final SharedPreferences preferences =
-            this.getSharedPreferences(NfcCommonDef.PREFERENCE_KEY,
-                android.content.Context.MODE_PRIVATE);
-        Editor editor = preferences.edit();
-        if (nfcEnable == SELECTION_NFC_ON) {
-            mGpNfcOnOff.check(R.id.NFC_Settings_NFC_ON);
-            editor.putBoolean(ENTRY_NFC_ONOFF, true);
-            //if (swProtocol == SELECTION_PROT_SW) {
-            //    mGpProtocol.check(R.id.NFC_Settings_Protocol_SW);
-            //    editor.putBoolean(NfcEntry.ENTRY_SOFTWARESTACK, true);
-            //    editor.putBoolean(NfcEntry.ENTRY_RAWDATA, false);
-            //} else
-            if (swProtocol == SELECTION_PROT_RD) {
-                mGpProtocol.check(R.id.NFC_Settings_Protocol_RD);
-                editor.putBoolean(NfcEntry.ENTRY_SOFTWARESTACK, false);
-                editor.putBoolean(NfcEntry.ENTRY_RAWDATA, true);
-            } else {
-                mGpProtocol.check(R.id.NFC_Settings_Protocol_OFF);
-                editor.putBoolean(NfcEntry.ENTRY_SOFTWARESTACK, false);
-                editor.putBoolean(NfcEntry.ENTRY_RAWDATA, false);
-            }
-        } else {
-            mGpNfcOnOff.check(R.id.NFC_Settings_NFC_OFF);
-            mGpProtocol.check(R.id.NFC_Settings_Protocol_OFF);
-            editor.putBoolean(ENTRY_NFC_ONOFF, false);
-            editor.putBoolean(NfcEntry.ENTRY_SOFTWARESTACK, false);
-            editor.putBoolean(NfcEntry.ENTRY_RAWDATA, false);
-        }
-
-        if (debugEnable == SELECTION_DBG_ON) {
-            mGpDebug.check(R.id.NFC_Settings_NFCDBG_ON);
-            editor.putBoolean(ENTRY_DBG_ONOFF, true);
-        } else {
-            mGpDebug.check(R.id.NFC_Settings_NFCDBG_OFF);
-            editor.putBoolean(ENTRY_DBG_ONOFF, false);
-        }
-        editor.commit();
-    }
-
-    private void handleResp() {
-        NfcNativeCallClass.nfc_setting_response resp;
-        resp =
-            (NfcNativeCallClass.nfc_setting_response) NfcRespMap.getInst()
-                .take(NfcRespMap.KEY_SETTINGS);
-        if (resp == null) {
-            Elog.e(TAG, "processResp Take NfcRespMap.KEY_SETTINGS is null");
-            return;
-        }
-        checkRadiobox(resp.nfc_enable, resp.debug_enable, resp.sw_protocol);
-    }
-
-    private void startSetting() {
-        new Thread() {
-            @Override
-            public void run() {
-                mHandler.sendEmptyMessage(EVENT_OP_SEARCH_START);
-                int errCode = sendCommand();
-                Elog.d(TAG, "sendScanCommand errCode = " + errCode);
-                if (NfcCommonDef.ERROR_OK != errCode) {
-                    // if (NfcCommonDef.ERROR_TIMEOUT == errCode) {
-                    // mHandler.sendEmptyMessage(EVENT_OP_TIMEOUT);
-                    // } else {
-                    mHandler.sendEmptyMessage(EVENT_OP_ERR);
-                    // }
-                } else {
-                    mHandler.sendEmptyMessage(EVENT_OP_OK);
-                }
-                mHandler.sendEmptyMessage(EVENT_OP_SEARCH_FIN);
-            }
-        } .start();
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Dialog dialog = null;
-        AlertDialog.Builder builder;
-        switch (id) {
-        case DIALOG_EXCEPTION:
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.dialog_error_title).setMessage(
-                R.string.jni_error_msg).setPositiveButton(android.R.string.ok,
-                null);
-            dialog = builder.create();
-            break;
-        case DIALOG_RSP_ERROR:
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.dialog_error_title).setMessage(
-                "setting rsp status is :" + mSetRspStatus).setPositiveButton(
-                android.R.string.ok, null);
-            dialog = builder.create();
-            break;
-        case DIALOG_PROCESS:
-            ProgressDialog progressDialog =
-                new ProgressDialog(NfcSettings.this);
-            if (null != progressDialog) {
-                progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-                progressDialog.setMessage("In Progress...");
-                progressDialog.setTitle("Setting");
-                progressDialog.setCancelable(false);
-            } else {
-                Elog.e(TAG, "new progressDialog failed");
-            }
-            return progressDialog;
-        default:
-            break;
-        }
-        return dialog;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSettingsResult.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSettingsResult.java
deleted file mode 100644
index fb0969a..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSettingsResult.java
+++ /dev/null
@@ -1,218 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.view.Window;
-import android.view.WindowManager;
-import android.widget.CheckBox;
-import android.widget.TextView;
-
-import java.util.ArrayList;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-/** Just show settings rsp result, just can read. */
-public class NfcSettingsResult extends Activity {
-
-    public static final String TAG = "EM/nfc";
-    private static final int NUMER_3 = 3;
-    private static final int NUMER_4 = 4;
-    private static final int NUMER_5 = 5;
-    private static final int NUMER_6 = 6;
-    private static final int NUMER_7 = 7;
-    private TextView mTextFWVersion = null;
-    private TextView mTextHWVersion = null;
-    private TextView mTextSWVersion = null;
-
-    private ArrayList<ModeMap> mReaderModeArray = new ArrayList<ModeMap>();
-    private ArrayList<ModeMap> mCardModeArray = new ArrayList<ModeMap>();
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
-        setContentView(R.layout.nfc_settings_result);
-        getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
-            WindowManager.LayoutParams.WRAP_CONTENT);
-        Elog.d(TAG, "NfcSettingsResult onCreate");
-        initUI();
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        setDisplayUI();
-    }
-
-    private void setDisplayUI() {
-        NfcNativeCallClass.nfc_setting_response resp;
-        resp =
-            (NfcNativeCallClass.nfc_setting_response) NfcRespMap.getInst()
-                .take(NfcRespMap.KEY_SETTINGS);
-        if (resp == null) {
-            Elog.e(TAG, "Take NfcRespMap.KEY_SETTINGS is null");
-            // assert
-            return;
-        }
-
-        mTextFWVersion.setText(String.format("0x%X", resp.fw_ver));
-        mTextHWVersion.setText(String.format("0x%X", resp.hw_ver));
-        mTextSWVersion.setText(String.format("0x%X", resp.sw_ver));
-
-        setCurrentMode(resp.reader_mode, resp.card_mode);
-    }
-
-    private void initUI() {
-        mTextFWVersion =
-            (TextView) findViewById(R.id.NFC_Settings_Result_Version_FW);
-        mTextHWVersion =
-            (TextView) findViewById(R.id.NFC_Settings_Result_Version_HW);
-        mTextSWVersion =
-            (TextView) findViewById(R.id.NFC_Settings_Result_Version_SW);
-
-        mReaderModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_RM_MifareUL),
-                0));
-        mReaderModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_RM_MifareStd),
-                1));
-        mReaderModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_RM_ISO14443_4A),
-                2));
-        mReaderModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_RM_ISO14443_4B),
-                NUMER_3));
-        mReaderModeArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_RM_Jewel),
-            NUMER_4));
-        mReaderModeArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_RM_NFC),
-            NUMER_5));
-        mReaderModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_RM_Felica),
-                NUMER_6));
-        mReaderModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_RM_ISO15693),
-                NUMER_7));
-        // =========================
-        mCardModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_CM_MifareUL),
-                0));
-        mCardModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_CM_MifareStd),
-                1));
-        mCardModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_CM_ISO14443_4A),
-                2));
-        mCardModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_CM_ISO14443_4B),
-                NUMER_3));
-        mCardModeArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_CM_Jewel),
-            NUMER_4));
-        mCardModeArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_CM_NFC),
-            NUMER_5));
-        mCardModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_CM_Felica),
-                NUMER_6));
-        mCardModeArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_CM_ISO15693),
-                NUMER_7));
-
-        OnClickListenerSpecial specListener = new OnClickListenerSpecial();
-        for (ModeMap m : mReaderModeArray) {
-            m.mChkBox.setOnClickListener(specListener);
-        }
-        for (ModeMap m : mCardModeArray) {
-            m.mChkBox.setOnClickListener(specListener);
-        }
-
-    }
-
-    private void setCurrentMode(int readerModeVal, int cardModeVal) {
-        for (ModeMap m : mReaderModeArray) {
-            if ((readerModeVal & (1 << m.mBit)) == 0) {
-                m.mChkBox.setChecked(false);
-            } else {
-                if (m.mChkBox.isEnabled()) {
-                    m.mChkBox.setChecked(true);
-                }
-            }
-        }
-        for (ModeMap m : mCardModeArray) {
-            if ((cardModeVal & (1 << m.mBit)) == 0) {
-                m.mChkBox.setChecked(false);
-            } else {
-                if (m.mChkBox.isEnabled()) {
-                    m.mChkBox.setChecked(true);
-                }
-            }
-        }
-    }
-
-    private class OnClickListenerSpecial implements OnClickListener {
-        // this function's purpose is making checkBox only display the status,
-        // and can not be set.
-        public void onClick(View arg0) {
-            if (arg0 instanceof CheckBox) {
-                CheckBox chk = (CheckBox) arg0;
-                if (chk.isChecked()) {
-                    chk.setChecked(false);
-                } else {
-                    chk.setChecked(true);
-                }
-            }
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStack.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStack.java
deleted file mode 100644
index 9b7c450..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStack.java
+++ /dev/null
@@ -1,457 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.Intent;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.EditText;
-import android.widget.Toast;
-
-import java.util.ArrayList;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class NfcSoftwareStack extends Activity implements OnClickListener {
-
-    public static final String TAG = "EM/nfc";
-
-    private static final int EVENT_OP_SEARCH_START = 101;
-    private static final int EVENT_OP_SEARCH_FIN = 103;
-    private static final int EVENT_OP_ERR = 104;
-    private static final int EVENT_OP_EXCEPTION = 105;
-    private static final int EVENT_OP_TIMEOUT = 106;
-    private static final int EVENT_UNDER_CONSTRUCT = 107;
-    private static final int DIALOG_EXCEPTION = 0;
-    private static final int DIALOG_NOT_READY = 1;
-    private static final int DIALOG_PROCESS = 2;
-    private static final int DIALOG_SCAN_ERROR = 3;
-    private Button mBtnSet = null;
-    private Button mBtnScan = null;
-    private CheckBox mChkRegisterNotificationAll = null;
-    private EditText mEditDuration = null;
-
-    private ArrayList<ModeMap> mRegisterNotificationArray =
-        new ArrayList<ModeMap>();
-    private ArrayList<ModeMap> mDiscoveryNotificationArray =
-        new ArrayList<ModeMap>();
-    private int mScanErrorCode = NfcCommonDef.ERROR_OK;
-    private static final int NUMER_3 = 3;
-    private static final int NUMER_4 = 4;
-    private static final int NUMER_5 = 5;
-    private static final int NUMER_6 = 6;
-    private static final int NUMER_7 = 7;
-    private Handler mHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            AlertDialog.Builder builder = null;
-            switch (msg.what) {
-            case EVENT_OP_SEARCH_START:
-                showDialog(DIALOG_PROCESS);
-                break;
-            case EVENT_OP_SEARCH_FIN:
-                dismissDialog(DIALOG_PROCESS);
-                break;
-            case EVENT_OP_ERR:
-                // Set Error. return status != 0.
-                showDialog(DIALOG_SCAN_ERROR);
-                break;
-            // case EVENT_OP_TIMEOUT:
-            // showDialog(DIALOG_TIME_OUT);
-            // break;
-            case EVENT_OP_EXCEPTION:
-                showDialog(DIALOG_EXCEPTION);
-                break;
-            case EVENT_UNDER_CONSTRUCT:
-                showDialog(DIALOG_NOT_READY);
-                break;
-            default:
-                break;
-            }
-        }
-    };
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.nfc_software_stack);
-        Elog.e(TAG, "NfcSettingsResult onCreate");
-        initUI();
-    }
-
-    @Override
-    protected void onDestroy() {
-        // dismissDialog(DIALOG_PROCESS);
-        super.onDestroy();
-    }
-
-    /**
-     * on click the button set
-     *
-     * @param arg0
-     *            : clicked which view
-     */
-    public void onClick(View arg0) {
-        Elog.e(TAG, "NfcSoftwareStack onClick");
-        if (arg0 == mBtnSet) {
-            if (!checkRegisterNotiParam()) {
-                Toast.makeText(getApplicationContext(),
-                    R.string.regi_notif_nonsele, Toast.LENGTH_LONG).show();
-                return;
-            }
-            final int checkReslut =
-                checkSecureElementSupport(getValFromRegNotiBox());
-            if (NfcCommonDef.ERROR_OK == checkReslut) {
-                handleSecureEleResp();
-            } else if (NfcCommonDef.ERROR_ERROR == checkReslut) {
-                Toast.makeText(getApplicationContext(), "Response is null!",
-                    Toast.LENGTH_LONG).show();
-            } else {
-                Toast.makeText(getApplicationContext(),
-                    "Response status is: " + checkReslut, Toast.LENGTH_LONG)
-                    .show();
-            }
-        } else if (arg0 == mBtnScan) {
-            if (!checkScanParam()) {
-                Toast.makeText(getApplicationContext(),
-                    R.string.disc_notif_nonsele, Toast.LENGTH_LONG).show();
-                return;
-            }
-            startScan();
-        } else if (arg0 == mChkRegisterNotificationAll) {
-            boolean shouldSelect = mChkRegisterNotificationAll.isChecked();
-            for (ModeMap m : mRegisterNotificationArray) {
-                m.mChkBox.setChecked(shouldSelect);
-            }
-            Elog.d(TAG, "mChkRegisterNotificationAll " + shouldSelect);
-        } else {
-            Elog.e(TAG, "Ghost view " + arg0.getClass().toString());
-        }
-        return;
-    }
-
-    private boolean checkRegisterNotiParam() {
-        boolean result = true;
-        if (getValFromRegNotiBox() == 0) {
-            result = false;
-        }
-        return result;
-    }
-
-    private int checkSecureElementSupport(int secureEleMask) {
-        NfcNativeCallClass.nfc_reg_notif_request req =
-            new NfcNativeCallClass.nfc_reg_notif_request();
-        req.reg_type = secureEleMask;
-        NfcNativeCallClass.nfc_reg_notif_response resp;
-        resp = NfcNativeCallClass.getRegisterNotif(req);
-        if (resp == null) {
-            return NfcCommonDef.ERROR_ERROR;
-        } else if (resp.status != 0) {
-            return resp.status;
-        } else {
-            NfcRespMap.getInst().put(NfcRespMap.KEY_SS_REGISTER_NOTIF, resp);
-            return NfcCommonDef.ERROR_OK;
-        }
-    }
-
-    private void handleSecureEleResp() {
-        NfcNativeCallClass.nfc_reg_notif_response resp;
-        resp =
-            (NfcNativeCallClass.nfc_reg_notif_response) NfcRespMap.getInst()
-                .take(NfcRespMap.KEY_SS_REGISTER_NOTIF);
-        if (resp == null) {
-            Elog.e(TAG, "Take NfcRespMap.KEY_SS_REGISTER_NOTIF is null");
-            Toast.makeText(getApplicationContext(), "Response is null.",
-                Toast.LENGTH_LONG).show();
-            return;
-        }
-        if (resp.se == 0) {
-            // not support
-            Toast.makeText(getApplicationContext(),
-                R.string.secure_elem_nosupt, Toast.LENGTH_LONG).show();
-        } else {
-            final Intent intent = new Intent();
-            intent.setClassName(this,
-                "com.mediatek.engineermode.nfc.NfcSoftwareStackSecure");
-            this.startActivity(intent);
-        }
-    }
-
-    private boolean checkScanParam() {
-        String strDuration = mEditDuration.getText().toString();
-        if (strDuration == null || strDuration.length() == 0) {
-            strDuration = "500"; // 500ms for default.
-            mEditDuration.setText(strDuration);
-        }
-        boolean result = true;
-        if (getValFromDisNotiBox() == 0) {
-            result = false;
-        }
-        return result;
-    }
-
-    private void startScan() {
-        new Thread() {
-            @Override
-            public void run() {
-
-                mHandler.sendEmptyMessage(EVENT_OP_SEARCH_START);
-                int errCode = sendScanCommand();
-                Elog.d(TAG, "sendScanCommand errCode = " + errCode);
-                if (NfcCommonDef.ERROR_OK == errCode) {
-                    onScanOK();
-                } else {
-                    // if (NfcCommonDef.ERROR_TIMEOUT == errCode) {
-                    // mHandler.sendEmptyMessage(EVENT_OP_TIMEOUT);
-                    // } else {
-                    mScanErrorCode = errCode;
-                    mHandler.sendEmptyMessage(EVENT_OP_ERR);
-                    // }
-                }
-                mHandler.sendEmptyMessage(EVENT_OP_SEARCH_FIN);
-            }
-
-        } .start();
-    }
-
-    private int sendScanCommand() {
-        NfcNativeCallClass.nfc_dis_notif_request req =
-            new NfcNativeCallClass.nfc_dis_notif_request();
-
-        req.dis_type = getValFromDisNotiBox();
-        // this is for sure NOT throw Exception. because of checkScanParam()
-        req.duration = Integer.valueOf(mEditDuration.getText().toString());
-
-        Elog.d(TAG, String.format("REQ: dis_type, duration,%d,%d",
-            req.dis_type, req.duration));
-        NfcNativeCallClass.nfc_dis_notif_response resp;
-        resp = NfcNativeCallClass.getDiscoveryNotif(req);
-
-        if (resp == null) {
-            Elog.e(TAG, "NfcNativeCallClass.getSettings(req) (resp == null)");
-            return NfcCommonDef.ERROR_ERROR;
-        }
-        if (resp.status != 0) {
-            Elog.e(TAG,
-                "NfcNativeCallClass.getSettings(req) (resp.status != 0) = "
-                    + resp.status);
-            return resp.status;
-        }
-        Elog.i(TAG, "NfcNativeCallClass.getDiscoveryNotif(req) status = "
-            + resp.status);
-        NfcRespMap.getInst().put(NfcRespMap.KEY_SS_SCAN_COMPLETE, resp);
-        return NfcCommonDef.ERROR_OK;
-    }
-
-    // start other activity depends on rsp target
-    private void onScanOK() {
-        NfcNativeCallClass.nfc_dis_notif_response resp;
-        resp =
-            (NfcNativeCallClass.nfc_dis_notif_response) NfcRespMap.getInst()
-                .take(NfcRespMap.KEY_SS_SCAN_COMPLETE);
-        if (resp == null) {
-            Elog.e(TAG, "Take NfcRespMap.KEY_SS_SCAN_COMPLETE is null");
-            // assert
-            return;
-        }
-
-        Intent intent = new Intent();
-        if (resp.target instanceof NfcNativeCallClass.nfc_none_det_response) {
-            Toast.makeText(getApplicationContext(), R.string.no_target_detect,
-                Toast.LENGTH_LONG).show();
-        } else if (resp.target instanceof NfcNativeCallClass.nfc_tag_det_response) {
-            // FEATURE DRIVER IS NOT READY. SO COMMENT IT.
-            NfcRespMap.getInst().put(NfcRespMap.KEY_SS_TAG_DECT, resp.target);
-            intent.setClassName(this,
-                "com.mediatek.engineermode.nfc.NfcSoftwareStackScan");
-            this.startActivity(intent);
-            // mHandler.sendEmptyMessage(EVENT_UNDER_CONSTRUCT);
-        } else if (resp.target instanceof NfcNativeCallClass.nfc_p2p_det_response) {
-            // FEATURE DRIVER IS NOT READY. SO COMMENT IT.
-            NfcRespMap.getInst().put(NfcRespMap.KEY_SS_P2P_TARGET_DECT,
-                resp.target);
-            intent.setClassName(this,
-                "com.mediatek.engineermode.nfc.NfcSoftwareStackP2PInitDect"); // no
-            // support
-            this.startActivity(intent);
-            // mHandler.sendEmptyMessage(EVENT_UNDER_CONSTRUCT);
-        } else {
-            Elog.e(TAG, "unknown target type "
-                + resp.target.getClass().toString());
-        }
-        return;
-    }
-
-    private void initUI() {
-        mBtnSet =
-            (Button) findViewById(R.id.NFC_SoftwareStack_RegisterNotification_BtnSet);
-        mBtnScan =
-            (Button) findViewById(R.id.NFC_SoftwareStack_DiscoveryNotification_BtnSet);
-        mChkRegisterNotificationAll =
-            (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_ALL);
-        mEditDuration =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_DN_Duration);
-
-        mBtnSet.setOnClickListener(this);
-        mBtnScan.setOnClickListener(this);
-        mChkRegisterNotificationAll.setOnClickListener(this);
-
-        mRegisterNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_MifareUL),
-            0));
-        mRegisterNotificationArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_MifareStd),
-                1));
-        mRegisterNotificationArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_ISO14443_4A),
-                2));
-        mRegisterNotificationArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_ISO14443_4B),
-                NUMER_3));
-        mRegisterNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_Jewel),
-            NUMER_4));
-        mRegisterNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_NFC),
-            NUMER_5));
-        mRegisterNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_Felica),
-            NUMER_6));
-        mRegisterNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_Settings_Result_Support_ISO15693),
-            NUMER_7));
-        // =========================
-        mDiscoveryNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_DN_ISO14443A), 0));
-        mDiscoveryNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_DN_ISO14443B), 1));
-        mDiscoveryNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_DN_felica212), 2));
-        mDiscoveryNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_DN_felica424),
-            NUMER_3));
-        mDiscoveryNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_DN_ISO15693),
-            NUMER_4));
-        mDiscoveryNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_DN_NFCActive),
-            NUMER_5));
-        mDiscoveryNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_DN_DCE), NUMER_6));
-        mDiscoveryNotificationArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_DN_DisableP2P),
-            NUMER_7));
-
-    }
-
-    private int getValFromRegNotiBox() {
-        int val = 0;
-        for (ModeMap m : mRegisterNotificationArray) {
-            if (m.mChkBox.isChecked()) {
-                val |= 1 << m.mBit;
-            }
-        }
-        return val;
-    }
-
-    private int getValFromDisNotiBox() {
-        int val = 0;
-        for (ModeMap m : mDiscoveryNotificationArray) {
-            if (m.mChkBox.isChecked()) {
-                val |= 1 << m.mBit;
-            }
-        }
-        return val;
-    }
-
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Dialog dialog = null;
-        AlertDialog.Builder builder;
-        switch (id) {
-        case DIALOG_EXCEPTION:
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.dialog_error_title).setMessage(
-                R.string.jni_error_msg).setPositiveButton(android.R.string.ok,
-                null);
-            dialog = builder.create();
-            break;
-        case DIALOG_NOT_READY:
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.not_ready_title).setMessage(
-                R.string.not_ready_msg).setPositiveButton(android.R.string.ok,
-                null);
-            dialog = builder.create();
-            break;
-        case DIALOG_SCAN_ERROR:
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.dialog_error_title).setMessage(
-                "Scan response status is: " + mScanErrorCode)
-                .setPositiveButton(android.R.string.ok, null);
-            dialog = builder.create();
-            break;
-        case DIALOG_PROCESS:
-            ProgressDialog progressDialog = new ProgressDialog(this);
-            if (null != progressDialog) {
-                progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER);
-                progressDialog.setMessage(getResources().getString(
-                    R.string.scan_msg));
-                progressDialog.setTitle(getResources().getString(
-                    R.string.scan_title));
-                progressDialog.setCancelable(false);
-            } else {
-                Elog.e(TAG, "new progressDialog failed");
-            }
-            return progressDialog;
-        default:
-            break;
-        }
-        return dialog;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackP2PInitDect.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackP2PInitDect.java
deleted file mode 100644
index 004075c..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackP2PInitDect.java
+++ /dev/null
@@ -1,93 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class NfcSoftwareStackP2PInitDect extends Activity
-        implements
-        OnClickListener {
-
-    private static final String TAG = "EM/nfc";
-    private Button mBtnSend = null;
-    private Button mBtnRecv = null;
-    private EditText mEditSend = null;
-    private EditText mEditRecv = null;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.nfc_software_stack_p2p_init_dect);
-
-        mBtnSend =
-            (Button) findViewById(R.id.NFC_SoftwareStack_P2P_InitDect_Send);
-        mBtnRecv =
-            (Button) findViewById(R.id.NFC_SoftwareStack_P2P_InitDect_Recv);
-        mEditSend =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_P2P_InitDect_In);
-        mEditRecv =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_P2P_InitDect_Out);
-        mBtnSend.setOnClickListener(this);
-        mBtnRecv.setOnClickListener(this);
-
-        mEditRecv
-            .setText("ddd\nddd\nddd\nddd\nddd\nddd\nddd\nddd\nddd\n\nddd\nddd\nddd\nddd\n");
-        mEditSend.setText(">");
-    }
-
-    /**
-     * on click the button set
-     * 
-     * @param arg0
-     *            : clicked which view
-     */
-    public void onClick(View arg0) {
-        if (arg0 == mBtnSend) {
-            Elog.e(TAG, "NfcSoftwareStackP2PInitDect mBtnSend");
-        } else if (arg0 == mBtnRecv) {
-            Elog.e(TAG, "NfcSoftwareStackP2PInitDect mBtnRecv");
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackRawCommand.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackRawCommand.java
deleted file mode 100644
index 9ac177a..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackRawCommand.java
+++ /dev/null
@@ -1,104 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.view.Window;
-import android.view.WindowManager;
-import android.widget.Button;
-import android.widget.EditText;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class NfcSoftwareStackRawCommand extends Activity
-        implements
-        OnClickListener {
-
-    public static final String TAG = "EM/nfc";
-
-    private Button mBtnSend;
-    private Button mBtnExample;
-    private EditText mEditCommand;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
-        setContentView(R.layout.nfc_software_stack_raw_command);
-        getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
-            WindowManager.LayoutParams.WRAP_CONTENT);
-        Elog.e(TAG, "NfcSoftwareStackRawCommand onCreate");
-        initUI();
-    }
-
-    private void initUI() {
-        mBtnSend =
-            (Button) findViewById(R.id.NFC_SoftwareStack_RawCommand_Send);
-        mBtnExample =
-            (Button) findViewById(R.id.NFC_SoftwareStack_RawCommand_Examp);
-        mEditCommand =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_RawCommand_String);
-        mBtnSend.setOnClickListener(this);
-        mBtnExample.setOnClickListener(this);
-    }
-
-    /**
-     * on click the button set
-     * 
-     * @param arg0
-     *            : clicked which view
-     */
-    public void onClick(View arg0) {
-        Elog.e(TAG, "NfcSoftwareStackRawCommand onClick");
-        if (arg0 == mBtnSend) {
-            onSend();
-        } else if (arg0 == mBtnExample) {
-            mEditCommand
-                .setText("00 A4 04 00 0E A0 00 00 00 18 30 80 05 00 65 63 68 6F 00 00");
-        }
-    }
-
-    private boolean onSend() {
-        final String strCommand = mEditCommand.getText().toString();
-        Elog.e(TAG, strCommand);
-        return true;
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackScan.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackScan.java
deleted file mode 100644
index 5532129..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackScan.java
+++ /dev/null
@@ -1,332 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.view.Window;
-import android.view.WindowManager;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class NfcSoftwareStackScan extends Activity implements OnClickListener {
-
-    public static final String TAG = "EM/nfc";
-    // because read / write will access these constants.
-    public static final int CARDTYPE_TAG_TYPE_DEFAULT_VAL =
-        NfcNativeCallClass.TAG_TYPE_DEFAULT;
-    public static final int CARDTYPE_MC1K_VAL =
-        NfcNativeCallClass.TAG_TYPE_MIFARE_UL;
-    public static final int CARDTYPE_MC4K_VAL =
-        NfcNativeCallClass.TAG_TYPE_MIFARE_STD;
-    public static final int CARDTYPE_NDEF_VAL =
-        NfcNativeCallClass.TAG_TYPE_NDEF;
-    // only support raw data.
-    public static final int CARDTYPE_TAG_TYPE_ISO1443_4A_VAL =
-        NfcNativeCallClass.TAG_TYPE_ISO1443_4A;
-    public static final int CARDTYPE_TAG_TYPE_ISO1443_4B_VAL =
-        NfcNativeCallClass.TAG_TYPE_ISO1443_4B;
-    public static final int CARDTYPE_TAG_TYPE_JEWWL_VAL =
-        NfcNativeCallClass.TAG_TYPE_JEWWL;
-    public static final int CARDTYPE_TAG_TYPE_FELICA_VAL =
-        NfcNativeCallClass.TAG_TYPE_FELICA;
-    // not support currently.
-    public static final int CARDTYPE_TAG_TYPE_NFC_VAL =
-        NfcNativeCallClass.TAG_TYPE_NFC;
-    public static final int CARDTYPE_TAG_TYPE_ISO15693_VAL =
-        NfcNativeCallClass.TAG_TYPE_ISO15693;
-
-    private static final int TAGTYPE_NORMAL = 1; // according to protocol
-    private static final int TAGTYPE_NDEF = 2; // according to protocol
-
-    private static final int FUNCTION_SUPPORT_RW = 1;
-    private static final int FUNCTION_SUPPORT_RAW = 2;
-    private static final int FUNCTION_SUPPORT_NONE = 3;
-
-    private static final String CARDTYPE_MC1K = "MIFARE_UL";
-    private static final String CARDTYPE_MC4K = "MIFARE_STD";
-    private static final String CARDTYPE_NDEF = "NDEF";
-    private static final String CARDTYPE_TAG_TYPE_ISO1443_4A = "ISO14443_4A";
-    private static final String CARDTYPE_TAG_TYPE_ISO1443_4B = "ISO14443_4B";
-    private static final String CARDTYPE_TAG_TYPE_JEWWL = "JEWEL";
-    private static final String CARDTYPE_TAG_TYPE_FELICA = "FELICA";
-    private static final String CARDTYPE_TAG_TYPE_NFC = "NFC";
-    private static final String CARDTYPE_TAG_TYPE_ISO15693 = "ISO15693";
-
-    private TextView mTextCardType;
-    private TextView mTextUid;
-    private TextView mTextSak;
-    private TextView mTextAtqA;
-    private TextView mTextAppData;
-    private TextView mTextMaxDataRate;
-    private Button mBtnRead;
-    private Button mBtnWrite;
-    private Button mBtnRawCmd;
-    private Button mBtnDisconnect;
-    private Button mBtnFormatNDEF;
-    private CheckBox mChkNormalTag;
-    private CheckBox mChkNDEFTag;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
-        setContentView(R.layout.nfc_software_stack_scan);
-        getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
-            WindowManager.LayoutParams.WRAP_CONTENT);
-        Elog.e(TAG, "NfcSoftwareStackScan onCreate");
-        initUI();
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        readTagInfo(); // depends on rsp init the UI, such as card type act.
-    }
-
-    @Override
-    protected void onDestroy() {
-        disconnectCard();
-        super.onDestroy();
-    }
-
-    private void readTagInfo() {
-        NfcNativeCallClass.nfc_tag_det_response resp;
-        resp =
-            (NfcNativeCallClass.nfc_tag_det_response) NfcRespMap.getInst()
-                .take(NfcRespMap.KEY_SS_TAG_DECT);
-        if (resp == null) {
-            Elog.e(TAG, "Take NfcRespMap.KEY_SS_TAG_DECT is null");
-            // assert
-            this.finish();
-            return;
-        }
-        resp.printMember();
-
-        if (resp.tag_type == TAGTYPE_NORMAL) {
-            mChkNormalTag.setChecked(true);
-            mChkNDEFTag.setChecked(false);
-        } else if (resp.tag_type == TAGTYPE_NDEF) {
-            mChkNormalTag.setChecked(false);
-            mChkNDEFTag.setChecked(true);
-        } else {
-            Elog.e(TAG, "Garbarge: tag_type" + resp.tag_type);
-        }
-        switch (resp.card_type) {
-        case CARDTYPE_MC1K_VAL:
-            mTextCardType.setText(CARDTYPE_MC1K);
-            setBtnSupportState(FUNCTION_SUPPORT_RW);
-            break;
-        case CARDTYPE_MC4K_VAL:
-            mTextCardType.setText(CARDTYPE_MC4K);
-            setBtnSupportState(FUNCTION_SUPPORT_RW);
-            break;
-        case CARDTYPE_NDEF_VAL:
-            mTextCardType.setText(CARDTYPE_NDEF);
-            setBtnSupportState(FUNCTION_SUPPORT_RW);
-            mBtnFormatNDEF.setEnabled(true);
-            break;
-        case CARDTYPE_TAG_TYPE_ISO1443_4A_VAL:
-            mTextCardType.setText(CARDTYPE_TAG_TYPE_ISO1443_4A);
-            setBtnSupportState(FUNCTION_SUPPORT_RAW);
-            break;
-        case CARDTYPE_TAG_TYPE_ISO1443_4B_VAL:
-            mTextCardType.setText(CARDTYPE_TAG_TYPE_ISO1443_4B);
-            setBtnSupportState(FUNCTION_SUPPORT_RAW);
-            break;
-        case CARDTYPE_TAG_TYPE_JEWWL_VAL:
-            mTextCardType.setText(CARDTYPE_TAG_TYPE_JEWWL);
-            setBtnSupportState(FUNCTION_SUPPORT_RAW);
-            break;
-        case CARDTYPE_TAG_TYPE_FELICA_VAL:
-            mTextCardType.setText(CARDTYPE_TAG_TYPE_FELICA);
-            setBtnSupportState(FUNCTION_SUPPORT_RAW);
-            break;
-        case CARDTYPE_TAG_TYPE_NFC_VAL:
-            mTextCardType.setText(CARDTYPE_TAG_TYPE_NFC);
-            setBtnSupportState(FUNCTION_SUPPORT_NONE);
-            break;
-        case CARDTYPE_TAG_TYPE_ISO15693_VAL:
-            mTextCardType.setText(CARDTYPE_TAG_TYPE_ISO15693);
-            setBtnSupportState(FUNCTION_SUPPORT_NONE);
-            break;
-        default:
-            mTextCardType.setText("Garbarge: card_type" + resp.card_type);
-            setBtnSupportState(FUNCTION_SUPPORT_NONE);
-        }
-
-        mTextUid.setText(NfcUtils.printArray(resp.uid));
-        mTextSak.setText(String.valueOf(resp.sak));
-        mTextAtqA.setText(String.valueOf(resp.atag));
-        mTextAppData.setText(String.valueOf(resp.appdata));
-        mTextMaxDataRate.setText(String.valueOf(resp.maxdatarate));
-    }
-
-    private void setBtnSupportState(int functionSupport) {
-
-        // because driver is not ready. Disable all button.
-        if (true) {
-            functionSupport = FUNCTION_SUPPORT_NONE;
-        }
-        switch (functionSupport) {
-        case FUNCTION_SUPPORT_RW:
-            mBtnRead.setEnabled(true);
-            mBtnWrite.setEnabled(true);
-            mBtnRawCmd.setEnabled(false);
-            mBtnDisconnect.setEnabled(true);
-            mBtnFormatNDEF.setEnabled(false);
-            break;
-        case FUNCTION_SUPPORT_RAW:
-            mBtnRead.setEnabled(false);
-            mBtnWrite.setEnabled(false);
-            mBtnRawCmd.setEnabled(true);
-            mBtnDisconnect.setEnabled(true);
-            mBtnFormatNDEF.setEnabled(false);
-            break;
-        case FUNCTION_SUPPORT_NONE:
-            mBtnRead.setEnabled(false);
-            mBtnWrite.setEnabled(false);
-            mBtnRawCmd.setEnabled(false);
-            mBtnDisconnect.setEnabled(false);
-            mBtnFormatNDEF.setEnabled(false);
-            break;
-        default:
-            break;
-
-        }
-    }
-
-    private void initUI() {
-        mTextCardType =
-            (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_CardType);
-        mTextUid = (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_Uid);
-        mTextSak = (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_Sak);
-        mTextAtqA = (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_AtqA);
-        mTextAppData =
-            (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_AppData);
-        mTextMaxDataRate =
-            (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_MaxDataRate);
-
-        mBtnRead = (Button) findViewById(R.id.NFC_SoftwareStack_Scan_BtnRead);
-        mBtnWrite = (Button) findViewById(R.id.NFC_SoftwareStack_Scan_BtnWrite);
-        mBtnRawCmd =
-            (Button) findViewById(R.id.NFC_SoftwareStack_Scan_BtnRawCommand);
-        mBtnDisconnect =
-            (Button) findViewById(R.id.NFC_SoftwareStack_Scan_BtnDisconnected);
-        mBtnFormatNDEF =
-            (Button) findViewById(R.id.NFC_SoftwareStack_Scan_BtnFormat);
-
-        mChkNormalTag =
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_Scan_TagDect);
-        mChkNDEFTag = (CheckBox) findViewById(R.id.NFC_SoftwareStack_Scan_NDEF);
-
-        mBtnRead.setOnClickListener(this);
-        mBtnWrite.setOnClickListener(this);
-        mBtnRawCmd.setOnClickListener(this);
-        mBtnDisconnect.setOnClickListener(this);
-        mBtnFormatNDEF.setOnClickListener(this);
-
-        OnClickListenerSpecial specListener = new OnClickListenerSpecial();
-        mChkNormalTag.setOnClickListener(specListener);
-        mChkNDEFTag.setOnClickListener(specListener);
-    }
-
-    /**
-     * on click the button set
-     *
-     * @param arg0
-     *            : clicked which view
-     */
-    public void onClick(View arg0) {
-        Elog.e(TAG, "NfcSoftwareStackScan onClick");
-        Intent intent = null;
-        if (arg0 == mBtnRead) {
-            intent = new Intent();
-            intent.setClassName(this,
-                "com.mediatek.engineermode.nfc.NfcSoftwareStackScanReadTag");
-        } else if (arg0 == mBtnWrite) {
-            intent = new Intent();
-            intent.setClassName(this,
-                "com.mediatek.engineermode.nfc.NfcSoftwareStackScanWriteTag"); // no
-                                                                               // support
-        } else if (arg0 == mBtnRawCmd) {
-            intent = new Intent();
-            intent.setClassName(this,
-                "com.mediatek.engineermode.nfc.NfcSoftwareStackRawCommand"); // no
-                                                                             // support
-        } else if (arg0.getId() == mBtnDisconnect.getId()) {
-            disconnectCard(); // no support
-        } else if (arg0.getId() == mBtnFormatNDEF.getId()) {
-            formatNdef(); // no support
-        } else {
-            Elog.e(TAG, "ghost button?");
-        }
-        if (intent != null) {
-            this.startActivity(intent);
-        }
-    }
-
-    private void disconnectCard() {
-        return;
-    }
-
-    private void formatNdef() {
-        return;
-    }
-
-    private class OnClickListenerSpecial implements OnClickListener {
-        // this function's purpose is making checkBox only display the status,
-        // and can not be set.
-        public void onClick(View arg0) {
-            if (arg0 instanceof CheckBox) {
-                CheckBox chk = (CheckBox) arg0;
-                if (chk.isChecked()) {
-                    chk.setChecked(false);
-                } else {
-                    chk.setChecked(true);
-                }
-            }
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackScanReadTag.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackScanReadTag.java
deleted file mode 100644
index 4baa319..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackScanReadTag.java
+++ /dev/null
@@ -1,348 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.view.Window;
-import android.view.WindowManager;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.EditText;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import java.util.ArrayList;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class NfcSoftwareStackScanReadTag extends Activity
-        implements
-        OnClickListener {
-
-    public static final String TAG = "EM/nfc";
-    public static final int TAG_TYPE_NONE = 0;
-    public static final int TAG_TYPE_NDEF = 1;
-    public static final int TAG_TYPE_MC1K = 2;
-    public static final int TAG_TYPE_MC4K = 3;
-    public static final int NUM_3 = 3;
-    private TextView mTextLang;
-    private TextView mTextRecFlags;
-    private TextView mTextRecId;
-    private TextView mTextRecTnf;
-    private TextView mTextPayloadLen;
-    private EditText mEditPayloadHex;
-    private EditText mEditPayloadASCII;
-    private EditText mEditPageAddress;
-    private EditText mEditPageI;
-    private EditText mEditPageII;
-    private EditText mEditPageIII;
-    private EditText mEditPageIV;
-    private EditText mEditSector;
-    private EditText mEditBlock;
-    private EditText mEditSectorInfo;
-
-    private Button mBtn1KOK;
-    private Button mBtn4KOK;
-    private int mCurrentTag = TAG_TYPE_NONE;
-    private ArrayList<ModeMap> mTagTypeArray = new ArrayList<ModeMap>();
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
-        Elog.i(TAG, "NfcSoftwareStackScanReadTag onCreate");
-        setContentView(R.layout.nfc_software_stack_scan_read_ndef);
-        getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
-            WindowManager.LayoutParams.WRAP_CONTENT);
-        initUI();
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        if (mCurrentTag == TAG_TYPE_NDEF) {
-            readNDEF();
-        }
-    }
-
-    /**
-     * on click the button ok
-     *
-     * @param arg0
-     *            : clicked which view
-     */
-    public void onClick(View arg0) {
-        Elog.e(TAG, "NfcSoftwareStackScanReadNDEF onClick");
-        if (arg0 == mBtn1KOK) {
-            String s = mEditPageAddress.getText().toString();
-            if (s == null || s.equals("")) {
-                Toast.makeText(getApplicationContext(), R.string.addr_need,
-                    Toast.LENGTH_LONG).show();
-                return;
-            }
-            readMC1K();
-        }
-        if (arg0 == mBtn4KOK) {
-            String s = mEditBlock.getText().toString();
-            String ss = mEditSector.getText().toString();
-            if (s == null || s.equals("") || ss == null || ss.equals("")) {
-                Toast.makeText(getApplicationContext(),
-                    R.string.block_sector_need, Toast.LENGTH_LONG).show();
-                return;
-            }
-            readMC4K();
-        }
-
-    }
-
-    private void initUI() {
-        mTextLang =
-            (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_Read_TEXT_Lang);
-        mTextRecFlags =
-            (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_Read_RecFlags);
-        mTextRecId =
-            (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_Read_RecId);
-        mTextRecTnf =
-            (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_Read_RecTnf);
-        mTextPayloadLen =
-            (TextView) findViewById(R.id.NFC_SoftwareStack_Scan_Read_PayloadLen);
-        mEditPayloadHex =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_Scan_Read_PayloadHex);
-        mEditPayloadASCII =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_Scan_Read_PayloadASCII);
-        mEditPageAddress =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_Scan_Read_PageAddr);
-        mEditPageI =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_Scan_Read_PageI);
-        mEditPageII =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_Scan_Read_PageII);
-        mEditPageIII =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_Scan_Read_PageIII);
-        mEditPageIV =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_Scan_Read_PageIV);
-        mEditSector =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_Scan_Read_SectorNo);
-        mEditBlock =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_Scan_Read_BlockNo);
-        mEditSectorInfo =
-            (EditText) findViewById(R.id.NFC_SoftwareStack_Scan_Read_SectorInfo);
-        mBtn1KOK =
-            (Button) findViewById(R.id.NFC_SoftwareStack_Scan_Read_Btn1KOK);
-        mBtn4KOK =
-            (Button) findViewById(R.id.NFC_SoftwareStack_Scan_Read_Btn4KOK);
-
-        mTagTypeArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_Scan_Read_URI), 0));
-        mTagTypeArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_Scan_Read_TEXT), 1));
-        mTagTypeArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_Scan_Read_SmartPos),
-            2));
-        mTagTypeArray.add(new ModeMap(
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_Scan_Read_Other),
-            NUM_3));
-
-        OnClickListenerSpecial specListener = new OnClickListenerSpecial();
-        for (ModeMap m : mTagTypeArray) {
-            m.mChkBox.setOnClickListener(specListener);
-        }
-
-        mBtn1KOK.setOnClickListener(this);
-
-        selectView();
-    }
-
-    private void selectView() {
-        View viewTag = (View) findViewById(R.id.View_Tag);
-        View viewPage = (View) findViewById(R.id.View_Page);
-        View viewSector = (View) findViewById(R.id.View_Sector);
-
-        NfcNativeCallClass.nfc_dis_notif_response resp;
-        resp =
-            (NfcNativeCallClass.nfc_dis_notif_response) NfcRespMap.getInst()
-                .take(NfcRespMap.KEY_SS_SCAN_COMPLETE);
-        if (resp == null) {
-            Elog.e(TAG,
-                "selectView(): Take NfcRespMap.KEY_SS_SCAN_COMPLETE is null");
-            // assert
-            NfcSoftwareStackScanReadTag.this.finish();
-            return;
-        }
-        int cardType =
-            ((NfcNativeCallClass.nfc_tag_det_response) resp.target).card_type;
-        switch (cardType) {
-        case NfcSoftwareStackScan.CARDTYPE_MC1K_VAL:
-            viewTag.setVisibility(View.GONE);
-            viewSector.setVisibility(View.GONE);
-            mCurrentTag = TAG_TYPE_MC1K;
-            break;
-        case NfcSoftwareStackScan.CARDTYPE_MC4K_VAL:
-            viewTag.setVisibility(View.GONE);
-            viewPage.setVisibility(View.GONE);
-            mCurrentTag = TAG_TYPE_MC4K;
-            break;
-        case NfcSoftwareStackScan.CARDTYPE_NDEF_VAL:
-            viewPage.setVisibility(View.GONE);
-            viewSector.setVisibility(View.GONE);
-            mCurrentTag = TAG_TYPE_NDEF;
-            break;
-        default:
-            Elog.e(TAG, "selectView() garbage card_type:" + cardType);
-            NfcSoftwareStackScanReadTag.this.finish();
-            break;
-        }
-    }
-
-    private int readMC1K() {
-        NfcNativeCallClass.nfc_tag_read_request req =
-            new NfcNativeCallClass.nfc_tag_read_request();
-        req.read_type = NfcSoftwareStackScan.CARDTYPE_MC1K_VAL;
-        req.address = Integer.valueOf(mEditPageAddress.getText().toString());
-
-        NfcNativeCallClass.nfc_tag_read_response resp;
-        resp = NfcNativeCallClass.readTag(req);
-        if (resp == null || resp.status != 0) {
-            return NfcCommonDef.ERROR_ERROR;
-        }
-        int address =
-            ((NfcNativeCallClass.nfc_tag_read_Mifare1K) (resp.target)).address;
-        mEditPageAddress.setText(String.valueOf(address));
-
-        short[] data =
-            ((NfcNativeCallClass.nfc_tag_read_Mifare1K) (resp.target)).data;
-        mEditPageI.setText(NfcUtils.printArray(data));
-
-        return NfcCommonDef.ERROR_OK;
-    }
-
-    private int readMC4K() {
-        NfcNativeCallClass.nfc_tag_read_request req =
-            new NfcNativeCallClass.nfc_tag_read_request();
-        req.read_type = NfcSoftwareStackScan.CARDTYPE_MC4K_VAL;
-        req.block = Integer.valueOf(mEditBlock.getText().toString());
-        req.sector = Integer.valueOf(mEditSector.getText().toString());
-
-        NfcNativeCallClass.nfc_tag_read_response resp;
-        resp = NfcNativeCallClass.readTag(req);
-        if (resp == null || resp.status != 0) {
-            return NfcCommonDef.ERROR_ERROR;
-        }
-
-        int block =
-            ((NfcNativeCallClass.nfc_tag_read_Mifare4K) (resp.target)).block;
-        mEditBlock.setText(String.valueOf(block));
-        int sector =
-            ((NfcNativeCallClass.nfc_tag_read_Mifare4K) (resp.target)).sector;
-        mEditSector.setText(String.valueOf(sector));
-
-        short[] data =
-            ((NfcNativeCallClass.nfc_tag_read_Mifare4K) (resp.target)).data;
-        mEditSectorInfo.setText(NfcUtils.printArray(data));
-
-        return NfcCommonDef.ERROR_OK;
-
-    }
-
-    private int readNDEF() {
-        NfcNativeCallClass.nfc_tag_read_request req =
-            new NfcNativeCallClass.nfc_tag_read_request();
-        req.read_type = NfcSoftwareStackScan.CARDTYPE_NDEF_VAL;
-
-        NfcNativeCallClass.nfc_tag_read_response resp;
-        resp = NfcNativeCallClass.readTag(req);
-        if (resp == null || resp.status != 0) {
-            return NfcCommonDef.ERROR_ERROR;
-        }
-
-        int ndefType =
-            ((NfcNativeCallClass.nfc_tag_read_ndef) (resp.target)).ndef_type;
-        int recordFlage =
-            ((NfcNativeCallClass.nfc_tag_read_ndef) (resp.target)).recordFlage;
-        int recordId =
-            ((NfcNativeCallClass.nfc_tag_read_ndef) (resp.target)).recordId;
-        int recordInfo =
-            ((NfcNativeCallClass.nfc_tag_read_ndef) (resp.target)).recordInfo;
-        int length =
-            ((NfcNativeCallClass.nfc_tag_read_ndef) (resp.target)).length;
-
-        setCurrentMode(ndefType);
-        mTextRecFlags.setText(String.valueOf(recordFlage));
-        mTextRecId.setText(String.valueOf(recordId));
-        mTextRecTnf.setText(String.valueOf(recordInfo));
-        mTextPayloadLen.setText(String.valueOf(length));
-
-        short[] dataHex =
-            ((NfcNativeCallClass.nfc_tag_read_ndef) (resp.target)).dataHex;
-        char[] dataAscii =
-            ((NfcNativeCallClass.nfc_tag_read_ndef) (resp.target)).dataAscii;
-        mEditPayloadASCII.setText(new String(dataAscii));
-        mEditPayloadHex.setText(NfcUtils.printArray(dataHex));
-        return NfcCommonDef.ERROR_OK;
-    }
-
-    private void setCurrentMode(int tagTypeVal) {
-        for (ModeMap m : mTagTypeArray) {
-            if ((tagTypeVal & (1 << m.mBit)) != 0) {
-                if (m.mChkBox.isEnabled()) {
-                    m.mChkBox.setChecked(true);
-                }
-            } else {
-                m.mChkBox.setChecked(false);
-            }
-        }
-
-    }
-
-    private class OnClickListenerSpecial implements OnClickListener {
-        // this function's purpose is making checkBox only display the status,
-        // and can not be set.
-        public void onClick(View arg0) {
-            if (arg0 instanceof CheckBox) {
-                CheckBox chk = (CheckBox) arg0;
-                if (chk.isChecked()) {
-                    chk.setChecked(false);
-                } else {
-                    chk.setChecked(true);
-                }
-            }
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackScanWriteTag.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackScanWriteTag.java
deleted file mode 100644
index 40d6a4b..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackScanWriteTag.java
+++ /dev/null
@@ -1,84 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.view.Window;
-import android.view.WindowManager;
-import android.widget.Button;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class NfcSoftwareStackScanWriteTag extends Activity
-        implements
-        OnClickListener {
-
-    public static final String TAG = "EM/nfc";
-
-    private Button mBtnOK;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
-        setContentView(R.layout.nfc_software_stack_scan_write_ndef);
-        getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
-            WindowManager.LayoutParams.WRAP_CONTENT);
-        Elog.e(TAG, "NfcSoftwareStackScanWriteNDEF onCreate");
-        mBtnOK = (Button) findViewById(R.id.NFC_SoftwareStack_Scan_Write_BtnOK);
-    }
-
-    /**
-     * on click the button ok
-     * 
-     * @param arg0
-     *            : clicked which view
-     */
-    public void onClick(View arg0) {
-        if (arg0 == mBtnOK) {
-            Elog.e(TAG, "NfcSoftwareStackScanReadNDEF onClick");
-            // Intent intent = new Intent();
-            // intent.setClassName(this,
-            // "com.mediatek.engineermode.nfc.NfcSoftwareStackScanReadNDEF");
-            // this.startActivity(intent);
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackSecure.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackSecure.java
deleted file mode 100644
index 8085691..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcSoftwareStackSecure.java
+++ /dev/null
@@ -1,369 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nfc;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.os.Bundle;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.view.Window;
-import android.view.WindowManager;
-import android.widget.Button;
-import android.widget.CheckBox;
-import android.widget.RadioButton;
-import android.widget.RadioGroup;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import java.util.ArrayList;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class NfcSoftwareStackSecure extends Activity implements OnClickListener {
-
-    public static final String TAG = "EM/nfc";
-    public static final int SE_MODE_NOTSUPPORT = 0;
-    public static final int SE_MODE_SE1 = 1;
-    public static final int SE_MODE_SE2 = 2;
-    public static final int SE_MODE_STATUS_OFF = 0;
-    public static final int SE_MODE_STATUS_VIRTUAL = 1;
-    public static final int SE_MODE_STATUS_WIRED = 2;
-    private static final int DIALOG_EXCEPTION = 0;
-
-    private TextView mEleInfo;
-    private CheckBox mDummyTag;
-    private Button mBtnSet;
-    private RadioGroup mGpSE1;
-    private RadioGroup mGpSE2;
-    private ArrayList<ModeMap> mDisplayChkBoxArray = new ArrayList<ModeMap>();
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
-        setContentView(R.layout.nfc_software_stack_secure);
-        getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
-            WindowManager.LayoutParams.WRAP_CONTENT);
-        Elog.d(TAG, "NfcSoftwareStackSecure onCreate");
-        initUI();
-        // Because driver is not ready. disable for temp.
-        mBtnSet.setEnabled(false);
-
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        readSecureEleInfo();
-    }
-
-    private void readSecureEleInfo() {
-        NfcNativeCallClass.nfc_reg_notif_response resp;
-        resp =
-            (NfcNativeCallClass.nfc_reg_notif_response) NfcRespMap.getInst()
-                .take(NfcRespMap.KEY_SS_REGISTER_NOTIF);
-        if (resp == null) {
-            Elog.e(TAG, "Take NfcRespMap.KEY_SS_REGISTER_NOTIF is null");
-            // assert
-            this.finish();
-            return;
-        }
-
-        Elog.d(TAG, "se " + resp.se + " se_status " + resp.se_status);
-        if (resp.se == SE_MODE_NOTSUPPORT) {
-            // not support, normally not happen.
-            Toast.makeText(getApplicationContext(),
-                R.string.secure_elem_nosupt, Toast.LENGTH_LONG).show();
-            this.finish();
-        } else if (resp.se == SE_MODE_SE1) {
-            // mGpSE1.setEnabled(true); //it does not work ?!!
-            setRadioGpEnable(mGpSE1);
-            setSEIdx(mGpSE1, resp.se_status);
-        } else if (resp.se == SE_MODE_SE2) {
-            // mGpSE2.setEnabled(true);
-            // mGpSE1.setEnabled(false);
-            setRadioGpEnable(mGpSE2);
-            setSEIdx(mGpSE2, resp.se_status);
-        }
-
-        if (resp.length == 0) {
-            mEleInfo.setText("No Info.");
-        } else {
-            if (resp.data != null) {
-                mEleInfo.setText(new String(resp.data));
-            } else {
-                mEleInfo.setText("Broken Info.");
-            }
-        }
-
-        Elog.d(TAG, "mask " + resp.se_type);
-        setCurrentSEEventMask(resp.se_type);
-
-        return;
-    }
-
-    private void setRadioGpEnable(RadioGroup gp) {
-        RadioButton gp11 =
-            (RadioButton) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_OFF);
-        RadioButton gp12 =
-            (RadioButton) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_Virtual);
-        RadioButton gp13 =
-            (RadioButton) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_Wired);
-        RadioButton gp21 =
-            (RadioButton) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_OFF);
-        RadioButton gp22 =
-            (RadioButton) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_Virtual);
-        RadioButton gp23 =
-            (RadioButton) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_Wired);
-
-        if (gp.getId() == mGpSE1.getId()) {
-            gp11.setEnabled(true);
-            gp12.setEnabled(true);
-            gp13.setEnabled(true);
-            gp21.setEnabled(false);
-            gp22.setEnabled(false);
-            gp23.setEnabled(false);
-        } else if (gp.getId() == mGpSE2.getId()) {
-            gp21.setEnabled(true);
-            gp22.setEnabled(true);
-            gp23.setEnabled(true);
-            gp11.setEnabled(false);
-            gp12.setEnabled(false);
-            gp13.setEnabled(false);
-        }
-    }
-
-    @Override
-    public void onClick(View v) {
-        if (v == mBtnSet) {
-            int seIdx = SE_MODE_STATUS_OFF;
-            if (mGpSE1.isEnabled()) {
-                seIdx = getSEIdx(mGpSE1.getCheckedRadioButtonId());
-            } else if (mGpSE2.isEnabled()) {
-                seIdx = getSEIdx(mGpSE2.getCheckedRadioButtonId());
-            } else {
-                return;
-            }
-            int setSeResult = setSEOption(seIdx);
-            if (NfcCommonDef.ERROR_OK == setSeResult) {
-                Toast.makeText(getApplicationContext(), android.R.string.ok,
-                    Toast.LENGTH_LONG).show();
-
-            } else if (NfcCommonDef.ERROR_ERROR == setSeResult) {
-                Toast.makeText(getApplicationContext(), "Response is null.",
-                    Toast.LENGTH_LONG).show();
-            } else {
-                // Set Error. return status != 0.
-                Toast.makeText(getApplicationContext(),
-                    "Response status is: " + setSeResult, Toast.LENGTH_LONG)
-                    .show();
-            }
-        }
-    }
-
-    private int setSEOption(int seIdx) {
-        NfcNativeCallClass.nfc_se_set_request req =
-            new NfcNativeCallClass.nfc_se_set_request();
-        req.set_SEtype = seIdx;
-
-        NfcNativeCallClass.nfc_se_set_response resp;
-        resp = NfcNativeCallClass.setSEOption(req);
-        if (resp == null) {
-            return NfcCommonDef.ERROR_ERROR;
-        } else if (resp.status == 0) {
-            return NfcCommonDef.ERROR_OK;
-        } else {
-            return resp.status;
-        }
-    }
-
-    private int getSEIdx(int radioId) {
-        int idx = SE_MODE_STATUS_OFF;
-        switch (radioId) {
-        case R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_OFF:
-        case R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_OFF:
-            idx = SE_MODE_STATUS_OFF;
-            break;
-        case R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_Virtual:
-        case R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_Virtual:
-            idx = SE_MODE_STATUS_VIRTUAL;
-            break;
-        case R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_Wired:
-        case R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_Wired:
-            idx = SE_MODE_STATUS_WIRED;
-            break;
-        default:
-            break;
-        }
-        return idx;
-    }
-
-    private void setSEIdx(RadioGroup gp, int status) {
-        if (gp.getId() == mGpSE1.getId()) {
-            switch (status) {
-            case SE_MODE_STATUS_OFF:
-                gp.check(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_OFF);
-                break;
-            case SE_MODE_STATUS_VIRTUAL:
-                gp
-                    .check(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_Virtual);
-                break;
-            case SE_MODE_STATUS_WIRED:
-                gp.check(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele1_Wired);
-                break;
-            default:
-                gp.clearCheck();
-                break;
-            }
-        } else {
-            switch (status) {
-            case SE_MODE_STATUS_OFF:
-                gp.check(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_OFF);
-                break;
-            case SE_MODE_STATUS_VIRTUAL:
-                gp
-                    .check(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_Virtual);
-                break;
-            case SE_MODE_STATUS_WIRED:
-                gp.check(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele2_Wired);
-                break;
-            default:
-                gp.clearCheck();
-                break;
-            }
-        }
-    }
-
-    private void initUI() {
-        mEleInfo =
-            (TextView) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_Info);
-        mDummyTag =
-            (CheckBox) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_Dect);
-        mBtnSet =
-            (Button) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Set);
-        mGpSE1 =
-            (RadioGroup) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele1);
-        mGpSE2 =
-            (RadioGroup) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_SetMode_Ele2);
-
-        mDisplayChkBoxArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_EventDect_StartTrans),
-                NfcNativeCallClass.BM_START_OF_TRANSACTION));
-        mDisplayChkBoxArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_EventDect_EndTrans),
-                NfcNativeCallClass.BM_END_OF_TRANSACTION));
-        mDisplayChkBoxArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_EventDect_Trans),
-                NfcNativeCallClass.BM_TRANSACTION));
-        mDisplayChkBoxArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_EventDect_RF_ON),
-                NfcNativeCallClass.BM_RF_FIELD_ON));
-
-        mDisplayChkBoxArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_EventDect_RF_OFF),
-                NfcNativeCallClass.BM_RF_FIELD_OFF));
-
-        mDisplayChkBoxArray
-            .add(new ModeMap(
-                (CheckBox) findViewById(R.id.NFC_SoftwareStack_Secure_Ele_EventDect_Conn),
-                NfcNativeCallClass.BM_CONNECTIVITY));
-
-        // =========================
-        mBtnSet.setOnClickListener(this);
-
-        OnClickListenerSpecial specListener = new OnClickListenerSpecial();
-        for (ModeMap m : mDisplayChkBoxArray) {
-            m.mChkBox.setOnClickListener(specListener);
-        }
-        mDummyTag.setOnClickListener(specListener);
-
-        mDummyTag.setChecked(true); // stupid check it.
-
-    }
-
-    private class OnClickListenerSpecial implements OnClickListener {
-        // this function's purpose is making checkBox only display the status,
-        // and can not be set.
-        public void onClick(View arg0) {
-            if (arg0 instanceof CheckBox) {
-                CheckBox chk = (CheckBox) arg0;
-                if (chk.isChecked()) {
-                    chk.setChecked(false);
-                } else {
-                    chk.setChecked(true);
-                }
-            }
-        }
-    }
-
-    private void setCurrentSEEventMask(int eventVal) {
-        for (ModeMap m : mDisplayChkBoxArray) {
-            if ((eventVal & (1 << m.mBit)) != 0) {
-                if (m.mChkBox.isEnabled()) {
-                    m.mChkBox.setChecked(true);
-                }
-            } else {
-                m.mChkBox.setChecked(false);
-            }
-        }
-
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Dialog dialog = null;
-        AlertDialog.Builder builder;
-        switch (id) {
-        case DIALOG_EXCEPTION:
-            builder = new AlertDialog.Builder(this);
-            builder.setTitle(R.string.dialog_error_title).setMessage(
-                R.string.jni_error_msg).setPositiveButton(android.R.string.ok,
-                null);
-            dialog = builder.create();
-            break;
-        default:
-            break;
-        }
-        return dialog;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcUtils.java b/EngineerMode/src/com/mediatek/engineermode/nfc/NfcUtils.java
deleted file mode 100644
index a2efe59..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nfc/NfcUtils.java
+++ /dev/null
@@ -1,36 +0,0 @@
-package com.mediatek.engineermode.nfc;
-
-public class NfcUtils {
-
-    private static final int NUM_4 = 4;
-    private NfcUtils() {
-    }
-    /**
-     * Used to debug
-     *
-     * @param array
-     *            print object
-     * @return print string
-     */
-    public static String printArray(Object array) {
-        String res = "";
-        if (array instanceof byte[]) {
-            for (int i = 0; i < ((byte[]) array).length; i++) {
-                if (i != 0 && i % NUM_4 == 0) {
-                    res += "\n";
-                }
-                res += String.format("0x%02X ", ((byte[]) array)[i]);
-            }
-        } else if (array instanceof short[]) {
-            for (int i = 0; i < ((short[]) array).length; i++) {
-                if (i != 0 && i % NUM_4 == 0) {
-                    res += "\n";
-                }
-                res += String.format("0x%04X ", ((short[]) array)[i]);
-            }
-        } else {
-            res = "UNSUPPORTED TYPE.";
-        }
-        return res;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nonsleep/EMWakeLockService.java b/EngineerMode/src/com/mediatek/engineermode/nonsleep/EMWakeLockService.java
deleted file mode 100644
index d6aef86..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nonsleep/EMWakeLockService.java
+++ /dev/null
@@ -1,91 +0,0 @@
-package com.mediatek.engineermode.nonsleep;
-
-import android.app.Activity;
-import android.app.Notification;
-import android.app.PendingIntent;
-import android.app.Service;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Binder;
-import android.os.IBinder;
-import android.os.PowerManager;
-import android.support.v4.app.NotificationCompat;
-import android.util.Log;
-
-
-public class EMWakeLockService extends Service {
-
-    private static final String TAG = "EMWakeLockService";
-    private static final int ID_FORE_GROUND_NOTIF = 11;
-
-    private final IBinder mBinder = new LocalBinder();
-    private PowerManager.WakeLock mWakeLock = null;
-
-
-    public class LocalBinder extends Binder {
-        EMWakeLockService getService() {
-            return EMWakeLockService.this;
-        }
-    }
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        Log.d("@M_" + TAG, "onCreate()");
-        mWakeLock = ((PowerManager) getSystemService(Context.POWER_SERVICE)).newWakeLock(
-                PowerManager.FULL_WAKE_LOCK |
-                PowerManager.ACQUIRE_CAUSES_WAKEUP, TAG);
-    }
-
-    @Override
-    public void onDestroy() {
-        Log.d("@M_" + TAG, "onDestroy()");
-        if (mWakeLock.isHeld()) {
-            mWakeLock.release();
-            mWakeLock = null;
-        }
-        super.onDestroy();
-    }
-
-    @Override
-    public IBinder onBind(Intent intent) {
-        return mBinder;
-    }
-
-    public boolean isHeld() {
-        return mWakeLock.isHeld();
-    }
-
-    public void release() {
-        if (mWakeLock.isHeld()) {
-            mWakeLock.release();
-            stopForeground(true);
-        }
-    }
-
-    public void acquire(Class<? extends Activity> targetClass) {
-        if (!mWakeLock.isHeld()) {
-            mWakeLock.acquire();
-            startForeground(ID_FORE_GROUND_NOTIF, buildNotification(targetClass));
-        }
-    }
-
-    public void acquire(Class<? extends Activity> targetClass, long milliSec) {
-        if (!mWakeLock.isHeld()) {
-            mWakeLock.acquire(milliSec);
-            startForeground(ID_FORE_GROUND_NOTIF, buildNotification(targetClass));
-        }
-    }
-
-    private Notification buildNotification(Class<? extends Activity> clazz) {
-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this);
-        builder.setSmallIcon(android.R.drawable.ic_dialog_alert).
-        setContentTitle("No Sleep Mode is Enabled").
-        setContentText("Click Here to Switch No Sleep Mode");
-        Intent intent = new Intent(this, clazz).addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP);
-        PendingIntent pi = PendingIntent.getActivity(this, 0, intent, 0);
-        builder.setContentIntent(pi);
-        return builder.build();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/nonsleep/NonSleepMode.java b/EngineerMode/src/com/mediatek/engineermode/nonsleep/NonSleepMode.java
deleted file mode 100644
index 89eeccd..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/nonsleep/NonSleepMode.java
+++ /dev/null
@@ -1,159 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.nonsleep;
-
-import android.app.Activity;
-import android.app.ActivityManager;
-import android.app.Service;
-import android.content.ComponentName;
-import android.content.Context;
-import android.content.Intent;
-import android.content.ServiceConnection;
-import android.os.Bundle;
-import android.os.IBinder;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-
-import com.mediatek.engineermode.R;
-
-import java.util.List;
-/**
- * Non sleep mode : keep display on when activity is up
- * @author mtk54040
- *
- */
-public class NonSleepMode extends Activity implements OnClickListener, ServiceConnection {
-
-    private static final String TAG = "EM/NonSleep";
-    private Button mSetButton;
-    private EMWakeLockService mWakeLockServ = null;
-
-    private static boolean isServiceRunning(Context context, Class<? extends Service> clazz) {
-        boolean isRunning = false;
-        ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
-        int maxCount = 100;
-        List<ActivityManager.RunningServiceInfo> runningServices = am.getRunningServices(maxCount);
-        while (runningServices.size() == maxCount) {
-            maxCount += 50;
-            runningServices = am.getRunningServices(maxCount);
-        }
-
-        for (int i = 0; i < runningServices.size(); i++) {
-            ActivityManager.RunningServiceInfo info = runningServices.get(i);
-            if (info.service.getClass().equals(clazz)) {
-                isRunning = true;
-                break;
-            }
-        }
-        return isRunning;
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.non_sleep_mode);
-        mSetButton = (Button) findViewById(R.id.non_sleep_switch);
-
-        mSetButton.setOnClickListener(this);
-        if (!isServiceRunning(this, EMWakeLockService.class)) {
-            startService(new Intent(this, EMWakeLockService.class));
-        }
-    }
-
-    @Override
-    protected void onStart() {
-        super.onStart();
-        mSetButton.setEnabled(false);
-        Intent intent = new Intent(this, EMWakeLockService.class);
-        bindService(intent, this, Context.BIND_AUTO_CREATE);
-    }
-
-    @Override
-    protected void onStop() {
-        unbindService(this);
-        super.onStop();
-    }
-
-    @Override
-    protected void onDestroy() {
-        if (isServiceRunning(this, EMWakeLockService.class) &&
-                mWakeLockServ != null && !mWakeLockServ.isHeld()) {
-            stopService(new Intent(this, EMWakeLockService.class));
-        }
-        super.onDestroy();
-    }
-
-    /**
-     * set flag value
-     * */
-    public void onClick(final View arg0) {
-
-        if (arg0 == mSetButton) {
-            if ((getString(R.string.non_sleep_enable)).equals(
-                    mSetButton.getText())) {
-                mSetButton.setText(R.string.non_sleep_disable);
-                if (!mWakeLockServ.isHeld()) {
-                    mWakeLockServ.acquire(NonSleepMode.class);
-                }
-            } else {
-                mSetButton.setText(R.string.non_sleep_enable);
-                if (mWakeLockServ.isHeld()) {
-                    mWakeLockServ.release();
-                }
-            }
-        }
-    }
-
-    @Override
-    public void onServiceConnected(ComponentName className, IBinder service) {
-        EMWakeLockService.LocalBinder binder = (EMWakeLockService.LocalBinder) service;
-        mWakeLockServ = binder.getService();
-        mSetButton.setEnabled(true);
-        if (mWakeLockServ.isHeld()) {
-            mSetButton.setText(R.string.non_sleep_disable);
-        } else {
-            mSetButton.setText(R.string.non_sleep_enable);
-        }
-    }
-
-    @Override
-    public void onServiceDisconnected(ComponentName className) {
-        Log.d("@M_" + TAG, "onServiceDisconnected");
-
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/pllcg/PllCgActivity.java b/EngineerMode/src/com/mediatek/engineermode/pllcg/PllCgActivity.java
deleted file mode 100644
index f8586d6..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/pllcg/PllCgActivity.java
+++ /dev/null
@@ -1,183 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.pllcg;
-
-import java.io.File;
-import java.io.IOException;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.os.Bundle;
-import android.text.TextUtils;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-public class PllCgActivity extends Activity implements OnClickListener {
-    private static final String TAG = "PllCg";
-    private static final String FS_CLK_TEST = "/proc/clkmgr/clk_test";
-    private static final String FS_PLL_TEST = "/proc/clkmgr/pll_test";
-    private static final String CMD_CLKMUX =
-            "echo clkmux %1$s %2$s EM > " + FS_CLK_TEST;
-    private static final String CMD_CGID_ENABLE =
-            "echo enable %1$s EM > " + FS_CLK_TEST;
-    private static final String CMD_CGID_DISABLE =
-            "echo disable %1$s EM > " + FS_CLK_TEST;
-    private static final String CAT = "cat ";
-    private Button mBtnClkmux;
-    private Button mBtnEnable;
-    private Button mBtnDisable;
-    private Button mBtnReadAll;
-    private EditText mEditClkmuxId;
-    private EditText mEditCgId;
-    @Override
-     protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.pll_cg);
-        mBtnClkmux = (Button) findViewById(R.id.pllcg_clkmux_btn);
-        mBtnClkmux.setOnClickListener(this);
-        mBtnEnable = (Button) findViewById(R.id.pllcg_enable_btn);
-        mBtnEnable.setOnClickListener(this);
-        mBtnDisable = (Button) findViewById(R.id.pllcg_disable_btn);
-        mBtnDisable.setOnClickListener(this);
-        mBtnReadAll = (Button) findViewById(R.id.pllcg_read_all_btn);
-        mBtnReadAll.setOnClickListener(this);
-        mEditClkmuxId = (EditText) findViewById(R.id.pllcg_clkmux_id_edit);
-        mEditCgId = (EditText) findViewById(R.id.pllcg_cg_id_edit);
-        if (!(new File(FS_CLK_TEST).exists())) {
-            Toast.makeText(this, "Don't Support This Feature!", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-    }
-    @Override
-    public void onClick(View view) {
-        String cmd;
-        StringBuilder output = new StringBuilder();
-        switch(view.getId()) {
-        case R.id.pllcg_clkmux_btn:
-            setClkmux();
-            break;
-        case R.id.pllcg_enable_btn:
-            controlCgId(true);
-            break;
-        case R.id.pllcg_disable_btn:
-            controlCgId(false);
-            break;
-        case R.id.pllcg_read_all_btn:
-            cmd = CAT + FS_CLK_TEST;
-            output.append(execCommand(cmd));
-            cmd = CAT + FS_PLL_TEST;
-            output.append(execCommand(cmd));
-            showDialog(getString(R.string.pllcg_all_info), output.toString());
-            break;
-        default:
-            Log.w("@M_" + TAG, "Unknown view id: " + view.getId());
-            break;
-        }
-    }
-
-    private void setClkmux() {
-        String clkmuxId;
-        String cgId;
-        String msg;
-        String cmd;
-
-        if (TextUtils.isEmpty(mEditClkmuxId.getText()) ||
-                TextUtils.isEmpty(mEditCgId.getText())) {
-            msg = getString(R.string.pllcg_no_enough_input);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return;
-        }
-        clkmuxId = mEditClkmuxId.getText().toString();
-        cgId = mEditCgId.getText().toString();
-        cmd = String.format(CMD_CLKMUX, clkmuxId, cgId);
-        execCommand(cmd);
-    }
-
-    private void controlCgId(boolean enabled) {
-        String clkmuxId;
-        String cgId;
-        String msg;
-        String cmd;
-        if (TextUtils.isEmpty(mEditCgId.getText())) {
-            msg = getString(R.string.pllcg_no_enough_input);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return;
-        }
-        cgId = mEditCgId.getText().toString();
-        if (enabled) {
-            cmd = String.format(CMD_CGID_ENABLE, cgId);
-        } else {
-            cmd = String.format(CMD_CGID_DISABLE, cgId);
-        }
-        execCommand(cmd);
-    }
-
-
-
-    private String execCommand(String cmd) {
-         int ret = -1;
-         Log.d("@M_" + TAG, "[cmd]:" + cmd);
-         try {
-             ret = ShellExe.execCommand(cmd);
-         } catch (IOException e) {
-             Log.e("@M_" + TAG, "IOException: " + e.getMessage());
-         }
-         if (ret == 0) {
-             String outStr = ShellExe.getOutput();
-             Log.d("@M_" + TAG, "[output]: " + outStr);
-             return outStr;
-         }
-         return null;
-     }
-
-    private void showDialog(String title, String msg) {
-        AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                false).setTitle(title).setMessage(msg).setCancelable(true).
-                setPositiveButton(android.R.string.ok, null).create();
-        dialog.show();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/power/ChargeBattery.java b/EngineerMode/src/com/mediatek/engineermode/power/ChargeBattery.java
deleted file mode 100644
index 52f2bc3..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/power/ChargeBattery.java
+++ /dev/null
@@ -1,268 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.power;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.ChipSupport;
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.BufferedReader;
-import java.io.FileReader;
-import java.io.IOException;
-
-public class ChargeBattery extends Activity {
-
-    private static final String TAG = "EM_BATTERY_CHARGE";
-
-    private TextView mInfo = null;
-    private String mCmdString = null;
-    private static final int EVENT_UPDATE = 1;
-    private static final float FORMART_TEN = 10.0f;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.battery_charge);
-
-        mInfo = (TextView) findViewById(R.id.battery_charge_info_text);
-
-        if (ChipSupport.getChip() == ChipSupport.MTK_6573_SUPPORT) {
-            mCmdString = "cat /sys/devices/platform/mt6573-battery/";
-        } else if (ChipSupport.getChip() == ChipSupport.MTK_6575_SUPPORT) {
-            // mCmdString = "cat /sys/devices/platform/mt6575-battery/";
-            // Jelly Bean (James Lo)
-            mCmdString = "cat /sys/devices/platform/mt6329-battery/";
-        } else if (ChipSupport.getChip() == ChipSupport.MTK_6577_SUPPORT) {
-            // 6577 branch
-            // Jelly Bean (James Lo)
-            // mCmdString = "cat /sys/devices/platform/mt6577-battery/";
-            mCmdString = "cat /sys/devices/platform/mt6329-battery/";
-        } else if (ChipSupport.getChip() == ChipSupport.MTK_6589_SUPPORT) {
-            mCmdString = "cat /sys/devices/platform/mt6320-battery/";
-        } else if (ChipSupport.getChip() > ChipSupport.MTK_6589_SUPPORT) {
-            mCmdString = "cat /sys/devices/platform/battery/";
-        } else {
-            mCmdString = "";
-        }
-    }
-
-    private String getInfo(String cmd) {
-        String result = null;
-        try {
-            String[] cmdx = { "/system/bin/sh", "-c", cmd }; // file must
-            // exist// or
-            // wait()
-            // return2
-            int ret = ShellExe.execCommand(cmdx);
-            if (0 == ret) {
-                result = ShellExe.getOutput();
-            } else {
-                // result = "ERROR";
-                result = ShellExe.getOutput();
-            }
-        } catch (IOException e) {
-            Elog.i(TAG, e.toString());
-            result = "ERR.JE";
-        }
-        return result;
-    }
-
-    private static final int UPDATE_INTERVAL = 500; // 0.5 sec
-
-    public Handler mUpdateHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case EVENT_UPDATE:
-                Bundle b = msg.getData();
-                mInfo.setText(b.getString("INFO"));
-                break;
-            default:
-                break;
-            }
-        }
-    };
-
-    private final String[][] mFiles = {
-
-    { "ADC_Charger_Voltage", "mV" }, { "Power_On_Voltage", "mV" }, { "Power_Off_Voltage", "mV" },
-            { "Charger_TopOff_Value", "mV" }, { "FG_Battery_CurrentConsumption", "mA" }, { "SEP", "" },
-            { "ADC_Channel_0_Slope", "" }, { "ADC_Channel_1_Slope", "" }, { "ADC_Channel_2_Slope", "" },
-            { "ADC_Channel_3_Slope", "" }, { "ADC_Channel_4_Slope", "" }, { "ADC_Channel_5_Slope", "" },
-            { "ADC_Channel_6_Slope", "" }, { "ADC_Channel_7_Slope", "" }, { "ADC_Channel_8_Slope", "" },
-            { "ADC_Channel_9_Slope", "" }, { "ADC_Channel_10_Slope", "" }, { "ADC_Channel_11_Slope", "" },
-            { "ADC_Channel_12_Slope", "" }, { "ADC_Channel_13_Slope", "" }, { "SEP", "" }, { "ADC_Channel_0_Offset", "" },
-            { "ADC_Channel_1_Offset", "" }, { "ADC_Channel_2_Offset", "" }, { "ADC_Channel_3_Offset", "" },
-            { "ADC_Channel_4_Offset", "" }, { "ADC_Channel_5_Offset", "" }, { "ADC_Channel_6_Offset", "" },
-            { "ADC_Channel_7_Offset", "" }, { "ADC_Channel_8_Offset", "" }, { "ADC_Channel_9_Offset", "" },
-            { "ADC_Channel_10_Offset", "" }, { "ADC_Channel_11_Offset", "" }, { "ADC_Channel_12_Offset", "" },
-            { "ADC_Channel_13_Offset", "" } };
-
-    private boolean mRun = false;
-
-    private float getMeanBatteryVal(String filePath, int totalCount, int intervalMs) {
-        float meanVal = 0.0f;
-        if (totalCount <= 0) {
-            return 0.0f;
-        }
-        for (int i = 0; i < totalCount; i++) {
-            try {
-                float f = Float.valueOf(getFileContent(filePath));
-                meanVal += f / totalCount;
-            } catch (NumberFormatException e) {
-                Elog.e("EM-PMU", "getMeanBatteryVal invalid result from cmd:" + filePath);
-            }
-            if (intervalMs <= 0) {
-                continue;
-            }
-            try {
-                Thread.sleep(intervalMs);
-            } catch (InterruptedException e) {
-                Elog.e(TAG, "Catch InterruptedException");
-            }
-        }
-        return meanVal;
-    }
-
-    private static String getFileContent(String filePath) {
-        if (filePath == null) {
-            return null;
-        }
-        StringBuilder builder = new StringBuilder();
-        BufferedReader reader = null;
-        try {
-            reader = new BufferedReader(new FileReader(filePath));
-            char[] buffer = new char[500];
-            int ret = -1;
-            while ((ret = reader.read(buffer)) != -1) {
-                builder.append(buffer, 0, ret);
-            }
-        } catch (IOException e) {
-            Elog.e(TAG, "IOException:" + e.getMessage());
-        } finally {
-            if (reader != null) {
-                try {
-                    reader.close();
-                } catch (IOException e) {
-                    Elog.e(TAG, "IOException:" + e.getMessage());
-                }
-            }
-        }
-        String result = builder.toString();
-        if (result != null) {
-            result = result.trim();
-        }
-        return result;
-    }
-
-    class FunctionThread extends Thread {
-
-        @Override
-        public void run() {
-            while (mRun) {
-                StringBuilder text = new StringBuilder("");
-                String cmd = "";
-                for (int i = 0; i < mFiles.length; i++) {
-                    if (mFiles[i][0].equalsIgnoreCase("SEP")) {
-                        text.append("- - - - - - - - -\n");
-                        continue;
-                    }
-                    cmd = mCmdString + mFiles[i][0];
-                    String filePath = cmd;
-                    if (filePath.startsWith("cat ")) {
-                        filePath = filePath.substring(3).trim();
-                    }
-                    if (mFiles[i][1].equalsIgnoreCase("mA")) {
-                        double f = 0.0f;
-                        if (mFiles[i][0].equalsIgnoreCase("FG_Battery_CurrentConsumption")) {
-                            f = getMeanBatteryVal(filePath, 5, 0) / FORMART_TEN;
-                        } else {
-                            try {
-                                f = Float.valueOf(getFileContent(filePath)) / FORMART_TEN;
-                            } catch (NumberFormatException e) {
-                                Elog.e("EM-PMU", "read file error " + mFiles[i][0]);
-                            }
-                        }
-                        text.append(String.format("%1$-28s:[ %2$-6s ]%3$s\n", mFiles[i][0], f, mFiles[i][1]));
-                    } else {
-                        text.append(String.format("%1$-28s: [ %2$-6s ]%3$s\n",
-                                mFiles[i][0], getFileContent(filePath), mFiles[i][1]));
-                    }
-                }
-
-                Bundle b = new Bundle();
-                b.putString("INFO", text.toString());
-
-                Message msg = new Message();
-                msg.what = EVENT_UPDATE;
-                msg.setData(b);
-
-                mUpdateHandler.sendMessage(msg);
-                try {
-                    sleep(UPDATE_INTERVAL);
-                } catch (InterruptedException e) {
-                    Elog.e(TAG, "Catch InterruptedException");
-                }
-            }
-        }
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-        mRun = false;
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        mRun = true;
-        new FunctionThread().start();
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/power/LowPowerDebug.java b/EngineerMode/src/com/mediatek/engineermode/power/LowPowerDebug.java
deleted file mode 100644
index 2c1721b..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/power/LowPowerDebug.java
+++ /dev/null
@@ -1,165 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.power;
-
-import android.app.Activity;
-//import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-//import android.widget.ArrayAdapter;
-import android.widget.Spinner;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.FeatureSupport;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.IOException;
-
-public class LowPowerDebug extends Activity {
-    private static final String TAG = "EM/LowPowerDebug";
-    private static final String[] STOP_STRS_ARRAY = {"0", "1"};
-    private static final String[] UT_STRS_ARRAY = {"0", "1", "2"};
-
-    private static final String LP_PROTECT_STOP = "/sys/devices/platform/mt-pmic/low_battery_protect_stop";
-    private static final String LP_PROTECT_UT = "/sys/devices/platform/mt-pmic/low_battery_protect_ut";
-
-    private Spinner mStopSpinner;
-    private Spinner mUtSpinner;
-
-    private final OnItemSelectedListener mSpinnerListener = new OnItemSelectedListener() {
-        public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,
-                long arg3) {
-            String cmd = null;
-            switch (arg0.getId()) {
-                case R.id.low_power_stop_select :
-                    cmd = "echo " + arg2 + " > " + LP_PROTECT_STOP;
-                    break;
-                case R.id.low_power_ut_select :
-                    cmd = "echo " + arg2 + " > " + LP_PROTECT_UT;
-                    break;
-                default:
-                    break;
-            }
-            if (cmd != null) {
-                if (setCommand(cmd) != 0) {
-                    Toast.makeText(LowPowerDebug.this, "Set failed!", Toast.LENGTH_LONG)
-                        .show();
-                }
-            }
-        }
-        public void onNothingSelected(AdapterView<?> arg0) {
-            Elog.v(TAG, "Spinner nothing selected");
-        }
-    };
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.low_power_debug);
-        if (!FeatureSupport.isSupportedEmSrv()) {
-            Toast.makeText(this, R.string.notice_wo_emsvr,
-                    Toast.LENGTH_LONG).show();
-            finish();
-            return;
-        }
-        mStopSpinner = (Spinner) findViewById(R.id.low_power_stop_select);
-        mUtSpinner = (Spinner) findViewById(R.id.low_power_ut_select);
-        mStopSpinner.setOnItemSelectedListener(mSpinnerListener);
-        mUtSpinner.setOnItemSelectedListener(mSpinnerListener);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        initSpinner();
-    }
-
-    private void initSpinner() {
-        String cmd = "cat " + LP_PROTECT_STOP;
-        String result = getCommand(cmd);
-        boolean getResult = true;
-        if (result != null) {
-            int index = Integer.valueOf(result);
-            mStopSpinner.setSelection(index);
-        } else {
-            getResult = false;
-        }
-        cmd = "cat " + LP_PROTECT_UT;
-        result = getCommand(cmd);
-        if (result != null) {
-            int index = Integer.valueOf(result);
-            mUtSpinner.setSelection(index);
-        } else {
-            getResult = false;
-        }
-        if (getResult == false) {
-            Toast.makeText(this, "Get status failed!", Toast.LENGTH_LONG)
-                        .show();
-        }
-    }
-
-    private String getCommand(String cmd) {
-         int ret = -1;
-         Elog.v(TAG, "[cmd]:" + cmd);
-         try {
-             ret = ShellExe.execCommand(cmd);
-         } catch (IOException e) {
-             Elog.e(TAG, "IOException: " + e.getMessage());
-         }
-         if (ret == 0) {
-             String outStr = ShellExe.getOutput();
-             Elog.d(TAG, "[output]: " + outStr);
-             return outStr;
-         }
-         return null;
-     }
-
-    private int setCommand(String cmd) {
-        int ret = -1;
-        Elog.v(TAG, "[cmd]:" + cmd);
-        try {
-            ret = ShellExe.execCommand(cmd);
-        } catch (IOException e) {
-            Elog.e(TAG, "IOException: " + e.getMessage());
-        }
-        return ret;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/power/PMU6575.java b/EngineerMode/src/com/mediatek/engineermode/power/PMU6575.java
deleted file mode 100644
index f2401b8..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/power/PMU6575.java
+++ /dev/null
@@ -1,1023 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.power;
-
-import android.app.TabActivity;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.text.InputFilter;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.Spinner;
-import android.widget.TabHost;
-import android.widget.TabHost.OnTabChangeListener;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.ChipSupport;
-import com.mediatek.engineermode.FeatureSupport;
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.File;
-import java.io.IOException;
-
-public class PMU6575 extends TabActivity implements OnClickListener {
-    private static final int TAB_REG = 1;
-    private static final int TAB_INFO = 2;
-    private static final int EVENT_UPDATE = 1;
-    private static final int MAX_LENGTH_89 = 4;
-
-    private static final int RADIX_HEX = 16;
-    private static final int UPDATE_INTERVAL = 1500;
-    private static final int WAIT_INTERVAL = 500;
-    private static final float MAGIC_TEN = 10.0f;
-
-    private static final String FS_MT6333_ACCESS = "/sys/devices/platform/mt6333-user/mt6333_access";
-    private static final String CMD_SET_MT6333_ACCESS =
-            "echo %1$s %2$s > " + FS_MT6333_ACCESS;
-    private static final String CMD_GET_MT6333_ACCESS =
-            "echo %1$s > " + FS_MT6333_ACCESS;
-
-    private static final String FS_MT6311_ACCESS = "/sys/devices/platform/mt6311-user/mt6311_access";
-    private static final String CMD_SET_MT6311_ACCESS =
-            "echo %1$s %2$s > " + FS_MT6311_ACCESS;
-    private static final String CMD_GET_MT6311_ACCESS =
-            "echo %1$s > " + FS_MT6311_ACCESS;
-    private static final int[] CHIPS_95_PMU_INFO_FILES = {
-        ChipSupport.MTK_6595_SUPPORT,
-        ChipSupport.MTK_6795_SUPPORT,
-    };
-
-    private int mWhichTab = TAB_INFO;
-    private TextView mInfo = null;
-    private Button mBtnGetRegister = null;
-    private Button mBtnSetRegister = null;
-    private EditText mEditAddr = null;
-    private EditText mEditVal = null;
-    private Spinner mBankSpinner;
-    private Button mBtnGetReg6333 = null;
-    private Button mBtnSetReg6333 = null;
-    private EditText mEditAddr6333 = null;
-    private EditText mEditVal6333 = null;
-
-    private ArrayAdapter<String> mBankAdatper;
-    private String[] mBankType = {"Bank0", "Bank1" };
-    private int mBankIndex = 0;
-    private String mFSAccessFile;
-    private String mGetAccessCmd;
-    private String mSetAccessCmd;
-    private boolean mRun = false;
-    private String mPromptSw = "0/1=off/on";
-    private String mPromptUnit = "mV";
-    private String mPromptUv = "uV";
-    private String[][] mFiles = { {"BUCK_VAPROC_STATUS", mPromptSw }, { "BUCK_VCORE_STATUS", mPromptSw },
-            {"BUCK_VIO18_STATUS", mPromptSw }, {"BUCK_VPA_STATUS", mPromptSw }, {"BUCK_VRF18_STATUS", mPromptSw },
-            {"SEP", "" }, {"LDO_VA1_STATUS", mPromptSw }, {"LDO_VA2_STATUS", mPromptSw },
-            {"LDO_VCAM_AF_STATUS", mPromptSw }, {"LDO_VCAM_IO_STATUS", mPromptSw }, {"LDO_VCAMA_STATUS", mPromptSw },
-            {"LDO_VCAMD_STATUS", mPromptSw }, {"LDO_VGP_STATUS", mPromptSw }, {"LDO_VGP2_STATUS", mPromptSw },
-            {"LDO_VIBR_STATUS", mPromptSw }, {"LDO_VIO28_STATUS", mPromptSw }, {"LDO_VM12_1_STATUS", mPromptSw },
-            {"LDO_VM12_2_STATUS", mPromptSw }, {"LDO_VM12_INT_STATUS", mPromptSw }, {"LDO_VMC_STATUS", mPromptSw },
-            {"LDO_VMCH_STATUS", mPromptSw }, {"LDO_VRF_STATUS", mPromptSw }, {"LDO_VRTC_STATUS", mPromptSw },
-            {"LDO_VSIM_STATUS", mPromptSw }, {"LDO_VSIM2_STATUS", mPromptSw }, {"LDO_VTCXO_STATUS", mPromptSw },
-            {"LDO_VUSB_STATUS", mPromptSw }, {"SEP", "" }, { "BUCK_VAPROC_VOLTAGE", mPromptUnit },
-            {"BUCK_VCORE_VOLTAGE", mPromptUnit }, {"BUCK_VIO18_VOLTAGE", mPromptUnit },
-            {"BUCK_VPA_VOLTAGE", mPromptUnit }, {"BUCK_VRF18_VOLTAGE", mPromptUnit }, {"SEP", "" },
-            {"LDO_VA1_VOLTAGE", mPromptUnit }, {"LDO_VA2_VOLTAGE", mPromptUnit }, {"LDO_VCAM_AF_VOLTAGE", mPromptUnit },
-            {"LDO_VCAM_IO_VOLTAGE", mPromptUnit }, {"LDO_VCAMA_VOLTAGE", mPromptUnit },
-            {"LDO_VCAMD_VOLTAGE", mPromptUnit }, {"LDO_VGP_VOLTAGE", mPromptUnit }, {"LDO_VGP2_VOLTAGE", mPromptUnit },
-            {"LDO_VIBR_VOLTAGE", mPromptUnit }, {"LDO_VIO28_VOLTAGE", mPromptUnit },
-            {"LDO_VM12_1_VOLTAGE", mPromptUnit }, {"LDO_VM12_2_VOLTAGE", mPromptUnit },
-            {"LDO_VM12_INT_VOLTAGE", mPromptUnit }, {"LDO_VMC_VOLTAGE", mPromptUnit },
-            {"LDO_VMCH_VOLTAGE", mPromptUnit }, {"LDO_VRF_VOLTAGE", mPromptUnit }, {"LDO_VRTC_VOLTAGE", mPromptUnit },
-            {"LDO_VSIM_VOLTAGE", mPromptUnit }, {"LDO_VSIM2_VOLTAGE", mPromptUnit }, {"LDO_VTCXO_VOLTAGE", mPromptUnit },
-            {"LDO_VUSB_VOLTAGE", mPromptUnit } };
-    private String[][] mFileFor6755 = {
-            {"BUCK_VCORE_STATUS", mPromptSw },
-            {"BUCK_VGPU_STATUS", mPromptSw },
-            {"BUCK_VSRAM_PROC_STATUS", mPromptSw },
-            {"BUCK_VMODEM_STATUS", mPromptSw },
-            {"BUCK_VMD1_STATUS", mPromptSw },
-            {"BUCK_VSRAM_MD_STATUS", mPromptSw },
-            {"BUCK_VS1_STATUS", mPromptSw },
-            {"BUCK_VS2_STATUS", mPromptSw },
-            {"BUCK_VPA_STATUS", mPromptSw },
-            {"SEP", "" },
-            {"LDO_va18_STATUS", mPromptSw },
-            {"LDO_vtcxo28_STATUS", mPromptSw },
-            {"LDO_vtcxo24_STATUS", mPromptSw },
-            {"LDO_vcn28_STATUS", mPromptSw },
-            {"LDO_vcama_STATUS", mPromptSw },
-            {"LDO_vcn33_bt_STATUS", mPromptSw},
-            {"LDO_vcn33_wifi_STATUS", mPromptSw},
-            {"LDO_vusb33_STATUS", mPromptSw },
-            {"LDO_vefuse_STATUS", mPromptSw },
-            {"LDO_vsim1_STATUS", mPromptSw },
-            {"LDO_vsim2_STATUS", mPromptSw },
-            {"LDO_vemc_STATUS", mPromptSw },
-            {"LDO_vmch_STATUS", mPromptSw },
-            {"LDO_vmc_STATUS", mPromptSw },
-            {"LDO_vio28_STATUS", mPromptSw },
-            {"LDO_vldo28_STATUS", mPromptSw },
-            {"LDO_vibr_STATUS", mPromptSw },
-            {"LDO_vcamd_STATUS", mPromptSw },
-            {"LDO_vrf18_STATUS ", mPromptSw },
-            {"LDO_vio18_STATUS ", mPromptSw },
-            {"LDO_vcn18_STATUS", mPromptSw },
-            {"LDO_vcamio_STATUS", mPromptSw },
-            {"LDO_vxo22_STATUS", mPromptSw },
-            {"LDO_vrf12_STATUS", mPromptSw },
-            {"LDO_va10_STATUS", mPromptSw },
-            {"LDO_vdram_STATUS ", mPromptSw },
-            {"LDO_vmipi_STATUS ", mPromptSw },
-            {"LDO_vgp3_STATUS", mPromptSw },
-            {"LDO_vbif28_STATUS", mPromptSw },
-            {"SEP", "" },
-            {"BUCK_VCORE_VOLTAGE", mPromptUnit },
-            {"BUCK_VGPU_VOLTAGE", mPromptUnit },
-            {"BUCK_VSRAM_PROC_VOLTAGE", mPromptUnit },
-            {"BUCK_VMODEM_VOLTAGE", mPromptUnit },
-            {"BUCK_VMD1_VOLTAGE", mPromptUnit },
-            {"BUCK_VSRAM_MD_VOLTAGE", mPromptUnit },
-            {"BUCK_VS1_VOLTAGE", mPromptUnit},
-            {"BUCK_VS2_VOLTAGE", mPromptUnit },
-            {"BUCK_VPA_VOLTAGE", mPromptUnit },
-            {"SEP", "" },
-            {"LDO_va18_VOLTAGE", mPromptUnit },
-            {"LDO_vtcxo28_VOLTAGE", mPromptUnit },
-            {"LDO_vtcxo24_VOLTAGE", mPromptUnit },
-            {"LDO_vcn28_VOLTAGE", mPromptUnit },
-            {"LDO_vcama_VOLTAGE",  mPromptUnit },
-            {"LDO_vcn33_bt_VOLTAGE", mPromptUnit },
-            {"LDO_vcn33_wifi_VOLTAGE", mPromptUnit },
-            {"LDO_vusb33_VOLTAGE", mPromptUnit },
-            {"LDO_vefuse_VOLTAGE", mPromptUnit },
-            {"LDO_vsim1_VOLTAGE", mPromptUnit },
-            {"LDO_vsim2_VOLTAGE", mPromptUnit },
-            {"LDO_vemc_VOLTAGE", mPromptUnit },
-            {"LDO_vmch_VOLTAGE", mPromptUnit },
-            {"LDO_vmc_VOLTAGE", mPromptUnit },
-            {"LDO_vio28_VOLTAGE", mPromptUnit },
-            {"LDO_vldo28_VOLTAGE", mPromptUnit },
-            {"LDO_vibr_VOLTAGE", mPromptUnit },
-            {"LDO_vcamd_VOLTAGE", mPromptUnit },
-            {"LDO_vrf18_VOLTAGE", mPromptUnit },
-            {"LDO_vio18_VOLTAGE", mPromptUnit },
-            {"LDO_vcn18_VOLTAGE", mPromptUnit},
-            {"LDO_vcamio_VOLTAGE", mPromptUnit },
-            {"LDO_vxo22_VOLTAGE", mPromptUnit},
-            {"LDO_vrf12_VOLTAGE", mPromptUnit },
-            {"LDO_va10_VOLTAGE", mPromptUnit },
-            {"LDO_vdram_VOLTAGE", mPromptUnit },
-            {"LDO_vmipi_VOLTAGE", mPromptUnit },
-            {"LDO_vgp3_VOLTAGE", mPromptUnit },
-            {"LDO_vbif28_VOLTAGE", mPromptUnit },
-    };
-    private String[][] mFilesFor89 = {
-            {"BUCK_VPROC_STATUS", mPromptSw },
-            {"BUCK_VSRAM_STATUS", mPromptSw },
-            {"BUCK_VCORE_STATUS", mPromptSw },
-            {"BUCK_VM_STATUS", mPromptSw },
-            {"BUCK_VIO18_STATUS", mPromptSw },
-            {"BUCK_VPA_STATUS", mPromptSw },
-            {"BUCK_VRF18_STATUS", mPromptSw },
-            {"BUCK_VRF18_2_STATUS", mPromptSw },
-            {"SEP", "" },
-            {"LDO_VIO28_STATUS", mPromptSw },
-            {"LDO_VUSB_STATUS", mPromptSw },
-            {"LDO_VMC1_STATUS", mPromptSw },
-            {"LDO_VMCH1_STATUS", mPromptSw },
-            {"LDO_VEMC_3V3_STATUS", mPromptSw },
-            {"LDO_VEMC_1V8_STATUS", mPromptSw },
-            {"LDO_VGP1_STATUS", mPromptSw },
-            {"LDO_VGP2_STATUS", mPromptSw },
-            {"LDO_VGP3_STATUS", mPromptSw },
-            {"LDO_VGP4_STATUS", mPromptSw },
-            {"LDO_VGP5_STATUS", mPromptSw },
-            {"LDO_VGP6_STATUS", mPromptSw },
-            {"LDO_VSIM1_STATUS", mPromptSw },
-            {"LDO_VSIM2_STATUS", mPromptSw },
-            {"LDO_VIBR_STATUS", mPromptSw },
-            {"LDO_VRTC_STATUS", mPromptSw },
-            {"LDO_VAST_STATUS", mPromptSw },
-            {"LDO_VRF28_STATUS ", mPromptSw },
-            {"LDO_VRF28_2_STATUS ", mPromptSw },
-            {"LDO_VTCXO_STATUS", mPromptSw },
-            {"LDO_VTCXO_2_STATUS", mPromptSw },
-            {"LDO_VA_STATUS", mPromptSw },
-            {"LDO_VA28_STATUS", mPromptSw },
-            {"LDO_VCAMA_STATUS", mPromptSw },
-            {"SEP", "" },
-            {"BUCK_VPROC_VOLTAGE", mPromptUnit },
-            {"BUCK_VSRAM_VOLTAGE", mPromptUnit },
-            {"BUCK_VCORE_VOLTAGE", mPromptUnit },
-            {"BUCK_VM_VOLTAGE", mPromptUnit },
-            {"BUCK_VIO18_VOLTAGE", mPromptUnit },
-            {"BUCK_VPA_VOLTAGE", mPromptUnit },
-            {"BUCK_VRF18_VOLTAGE", mPromptUnit },
-            {"BUCK_VRF18_2_VOLTAGE", mPromptUnit },
-            {"SEP", "" },
-            {"LDO_VIO28_VOLTAGE", mPromptUnit },
-            {"LDO_VUSB_VOLTAGE", mPromptUnit },
-            {"LDO_VMC1_VOLTAGE", mPromptUnit },
-            {"LDO_VMCH1_VOLTAGE", mPromptUnit },
-            {"LDO_VEMC_3V3_VOLTAGE", mPromptUnit },
-            {"LDO_VEMC_1V8_VOLTAGE", mPromptUnit },
-            {"LDO_VGP1_VOLTAGE", mPromptUnit },
-            {"LDO_VGP2_VOLTAGE", mPromptUnit },
-            {"LDO_VGP3_VOLTAGE", mPromptUnit },
-            {"LDO_VGP4_VOLTAGE", mPromptUnit },
-            {"LDO_VGP5_VOLTAGE", mPromptUnit },
-            {"LDO_VGP6_VOLTAGE", mPromptUnit },
-            {"LDO_VSIM1_VOLTAGE", mPromptUnit },
-            {"LDO_VSIM2_VOLTAGE", mPromptUnit },
-            {"LDO_VIBR_VOLTAGE", mPromptUnit },
-            {"LDO_VRTC_VOLTAGE", mPromptUnit },
-            {"LDO_VAST_VOLTAGE", mPromptUnit },
-            {"LDO_VRF28_VOLTAGE", mPromptUnit },
-            {"LDO_VRF28_2_VOLTAGE", mPromptUnit },
-            {"LDO_VTCXO_VOLTAGE", mPromptUnit },
-            {"LDO_VTCXO_2_VOLTAGE", mPromptUnit },
-            {"LDO_VA_VOLTAGE", mPromptUnit },
-            {"LDO_VA28_VOLTAGE", mPromptUnit },
-            {"LDO_VCAMA_VOLTAGE", mPromptUnit }
-    };
-
-    private String[][] mFilesFor7282 = {
-            {"BUCK_VPROC_STATUS", mPromptSw},
-            {"BUCK_VSYS_STATUS", mPromptSw},
-            {"BUCK_VPA_STATUS", mPromptSw},
-            {"SEP", ""},
-            {"LDO_VTCXO_STATUS", mPromptSw},
-            {"LDO_VA_STATUS", mPromptSw},
-            {"LDO_VCAMA_STATUS", mPromptSw},
-            {"LDO_VCN28_STATUS", mPromptSw},
-            {"LDO_VCN33_STATUS", mPromptSw},
-            {"LDO_VIO28_STATUS", mPromptSw},
-            {"LDO_VUSB_STATUS", mPromptSw},
-            {"LDO_VMC_STATUS", mPromptSw},
-            {"LDO_VMCH_STATUS", mPromptSw},
-            {"LDO_VEMC_3V3_STATUS", mPromptSw},
-            {"LDO_VGP1_STATUS", mPromptSw},
-            {"LDO_VGP2_STATUS", mPromptSw},
-            {"LDO_VGP3_STATUS", mPromptSw},
-            {"LDO_VCN_1V8_STATUS", mPromptSw},
-            {"LDO_VSIM1_STATUS", mPromptSw},
-            {"LDO_VSIM2_STATUS", mPromptSw},
-            {"LDO_VRTC_STATUS", mPromptSw},
-            {"LDO_VCAM_AF_STATUS", mPromptSw},
-            {"LDO_VIBR_STATUS", mPromptSw},
-            {"LDO_VM_STATUS", mPromptSw},
-            {"LDO_VRF18_STATUS", mPromptSw},
-            {"LDO_VIO18_STATUS", mPromptSw},
-            {"LDO_VCAMD_STATUS", mPromptSw},
-            {"LDO_VCAM_IO_STATUS", mPromptSw},
-            {"SEP", ""},
-            {"BUCK_VPROC_VOLTAGE", mPromptUnit},
-            {"BUCK_VSYS_VOLTAGE", mPromptUnit},
-            {"BUCK_VPA_VOLTAGE", mPromptUnit},
-            {"SEP", ""},
-            {"LDO_VMC_VOLTAGE", mPromptUnit},
-            {"LDO_VMCH_VOLTAGE", mPromptUnit},
-            {"LDO_VEMC_3V3_VOLTAGE", mPromptUnit},
-            {"LDO_VGP1_VOLTAGE", mPromptUnit},
-            {"LDO_VGP2_VOLTAGE", mPromptUnit},
-            {"LDO_VGP3_VOLTAGE", mPromptUnit},
-            {"LDO_VSIM1_VOLTAGE", mPromptUnit},
-            {"LDO_VSIM2_VOLTAGE", mPromptUnit},
-            {"LDO_VCAM_AF_VOLTAGE", mPromptUnit},
-            {"LDO_VIBR_VOLTAGE", mPromptUnit},
-            {"LDO_VM_VOLTAGE", mPromptUnit},
-            {"LDO_VCAMD_VOLTAGE", mPromptUnit},
-            {"LDO_VCAMA_VOLTAGE", mPromptUnit},
-            {"LDO_VCN33_VOLTAGE", mPromptUnit}
-    };
-    private String[][] mFilesFor95 = {
-            {"BUCK_VDVFS11_STATUS", mPromptSw},
-            {"BUCK_VDVFS12_STATUS", mPromptSw},
-            {"BUCK_VDVFS13_STATUS", mPromptSw},
-            {"BUCK_VDVFS14_STATUS", mPromptSw},
-            {"BUCK_VGPU_STATUS", mPromptSw},
-            {"BUCK_VCORE1_STATUS", mPromptSw},
-            {"BUCK_VCORE2_STATUS", mPromptSw},
-            {"BUCK_VIO18_STATUS", mPromptSw},
-            {"BUCK_VDRAM_STATUS", mPromptSw},
-            {"BUCK_VDVFS2_STATUS", mPromptSw},
-            {"BUCK_VRF1_STATUS", mPromptSw},
-            {"BUCK_VRF2_STATUS", mPromptSw},
-            {"BUCK_VPA_STATUS", mPromptSw},
-            {"BUCK_VSBST_STATUS", mPromptSw},
-            {"SEP", ""},
-            {"LDO_VTCXO1_STATUS", mPromptSw},
-            {"LDO_VTCXO2_STATUS", mPromptSw},
-            {"LDO_VAUD32_STATUS", mPromptSw},
-            {"LDO_VAUXA32_STATUS", mPromptSw},
-            {"LDO_VCAMA_STATUS", mPromptSw},
-            {"LDO_VMCH_STATUS", mPromptSw},
-            {"LDO_VEMC33_STATUS", mPromptSw},
-            {"LDO_VIO28_STATUS", mPromptSw},
-            {"LDO_VMC_STATUS", mPromptSw},
-            {"LDO_VCAM_AF_STATUS", mPromptSw},
-            {"LDO_VGP1_STATUS", mPromptSw},
-            {"LDO_VGP4_STATUS", mPromptSw},
-            {"LDO_VSIM1_STATUS", mPromptSw},
-            {"LDO_VSIM2_STATUS", mPromptSw},
-            {"LDO_VFBB_STATUS", mPromptSw},
-            {"LDO_VRTC_STATUS", mPromptSw},
-            {"LDO_VMIPI_STATUS", mPromptSw},
-            {"LDO_VIBR_STATUS", mPromptSw},
-            {"LDO_31_VDIG18_STATUS", mPromptSw},
-            {"LDO_32_VDIG18_STATUS", mPromptSw},
-            {"LDO_VCAMD_STATUS", mPromptSw},
-            {"LDO_VUSB10_STATUS", mPromptSw},
-            {"LDO_VCAM_IO_STATUS", mPromptSw},
-            {"LDO_VSRAM_DVFS1_STATUS", mPromptSw},
-            {"LDO_VGP2_STATUS", mPromptSw},
-            {"LDO_VGP3_STATUS", mPromptSw},
-            {"LDO_VBIASN_STATUS", mPromptSw},
-            {"LDO_VBIF28_STATUS", mPromptSw},
-            {"LDO_VAUXB32_STATUS", mPromptSw},
-            {"LDO_VUSB33_STATUS", mPromptSw},
-            {"LDO_VSRAM_DVFS2_STATUS", mPromptSw},
-            {"SEP", ""},
-            {"BUCK_VDVFS11_VOLTAGE", mPromptUv},
-            {"BUCK_VDVFS12_VOLTAGE", mPromptUv},
-            {"BUCK_VDVFS13_VOLTAGE", mPromptUv},
-            {"BUCK_VDVFS14_VOLTAGE", mPromptUv},
-            {"BUCK_VGPU_VOLTAGE", mPromptUv},
-            {"BUCK_VCORE1_VOLTAGE", mPromptUv},
-            {"BUCK_VCORE2_VOLTAGE", mPromptUv},
-            {"BUCK_VIO18_VOLTAGE", mPromptUv},
-            {"BUCK_VDRAM_VOLTAGE", mPromptUv},
-            {"BUCK_VDVFS2_VOLTAGE", mPromptUv},
-            {"BUCK_VRF1_VOLTAGE", mPromptUv},
-            {"BUCK_VRF2_VOLTAGE", mPromptUv},
-            {"BUCK_VPA_VOLTAGE", mPromptUv},
-            {"BUCK_VSBST_VOLTAGE", mPromptUv},
-            {"SEP", ""},
-            {"LDO_VTCXO1_VOLTAGE", mPromptUnit},
-            {"LDO_VTCXO2_VOLTAGE", mPromptUnit},
-            {"LDO_VAUD32_VOLTAGE", mPromptUnit},
-            {"LDO_VAUXA32_VOLTAGE", mPromptUnit},
-            {"LDO_VCAMA_VOLTAGE", mPromptUnit},
-            {"LDO_VMCH_VOLTAGE", mPromptUnit},
-            {"LDO_VEMC33_VOLTAGE", mPromptUnit},
-            {"LDO_VIO28_VOLTAGE", mPromptUnit},
-            {"LDO_VMC_VOLTAGE", mPromptUnit},
-            {"LDO_VCAM_AF_VOLTAGE", mPromptUnit},
-            {"LDO_VGP1_VOLTAGE", mPromptUnit},
-            {"LDO_VGP4_VOLTAGE", mPromptUnit},
-            {"LDO_VSIM1_VOLTAGE", mPromptUnit},
-            {"LDO_VSIM2_VOLTAGE", mPromptUnit},
-            {"LDO_VFBB_VOLTAGE", mPromptUnit},
-            {"LDO_VRTC_VOLTAGE", mPromptUnit},
-            {"LDO_VMIPI_VOLTAGE", mPromptUnit},
-            {"LDO_VIBR_VOLTAGE", mPromptUnit},
-            {"LDO_31_VDIG18_VOLTAGE", mPromptUnit},
-            {"LDO_32_VDIG18_VOLTAGE", mPromptUnit},
-            {"LDO_VCAMD_VOLTAGE", mPromptUnit},
-            {"LDO_VUSB10_VOLTAGE", mPromptUnit},
-            {"LDO_VCAM_IO_VOLTAGE", mPromptUnit},
-            {"LDO_VSRAM_DVFS1_VOLTAGE", mPromptUv},
-            {"LDO_VGP2_VOLTAGE", mPromptUnit},
-            {"LDO_VGP3_VOLTAGE", mPromptUnit},
-            {"LDO_VBIASN_VOLTAGE", mPromptUnit},
-            {"LDO_VBIF28_VOLTAGE", mPromptUnit},
-            {"LDO_VAUXB32_VOLTAGE", mPromptUnit},
-            {"LDO_VUSB33_VOLTAGE", mPromptUnit},
-            {"LDO_VSRAM_DVFS2_VOLTAGE", mPromptUv}
-    };
-    private String[][] mFilesFor52 = {
-            {"BUCK_11_VDVFS11_STATUS", mPromptSw},
-            {"BUCK_11_VDVFS12_STATUS", mPromptSw},
-            {"BUCK_VCORE1_STATUS", mPromptSw},
-            {"BUCK_VCORE2_STATUS", mPromptSw},
-            {"BUCK_VDRAM_STATUS", mPromptSw},
-            {"BUCK_VDVFS11_STATUS", mPromptSw},
-            {"BUCK_VDVFS12_STATUS", mPromptSw},
-            {"BUCK_VGPU_STATUS", mPromptSw},
-            {"BUCK_VIO18_STATUS", mPromptSw},
-            {"BUCK_VPA_STATUS", mPromptSw},
-            {"BUCK_VRF18_0_STATUS", mPromptSw},
-            {"SEP", ""},
-            {"LDO_VAUD28_STATUS", mPromptSw},
-            {"LDO_VAUXA28_STATUS", mPromptSw},
-            {"LDO_VBIASN_STATUS", mPromptSw},
-            {"LDO_VBIF28_STATUS", mPromptSw},
-            {"LDO_VCAMA_STATUS", mPromptSw},
-            {"LDO_VCAMD_STATUS", mPromptSw},
-            {"LDO_VCAM_AF_STATUS", mPromptSw},
-            {"LDO_VCAM_IO_STATUS", mPromptSw},
-            {"LDO_VCN18_STATUS", mPromptSw},
-            {"LDO_VCN28_STATUS", mPromptSw},
-            {"LDO_VCN33_STATUS", mPromptSw},
-            {"LDO_VEFUSE_STATUS", mPromptSw},
-            {"LDO_VEMC33_STATUS", mPromptSw},
-            {"LDO_VGP1_STATUS", mPromptSw},
-            {"LDO_VGP2_STATUS", mPromptSw},
-            {"LDO_VGP3_STATUS", mPromptSw},
-            {"LDO_VIO28_STATUS", mPromptSw},
-            {"LDO_VMCH_STATUS", mPromptSw},
-            {"LDO_VMC_STATUS", mPromptSw},
-            {"LDO_VMIPI_STATUS", mPromptSw},
-            {"LDO_VRF18_1_STATUS", mPromptSw},
-            {"LDO_VRTC_STATUS", mPromptSw},
-            {"LDO_VSIM1_STATUS", mPromptSw},
-            {"LDO_VSIM2_STATUS", mPromptSw},
-            {"LDO_VSRAM_DVFS1_STATUS", mPromptSw},
-            {"LDO_VTCXO0_STATUS", mPromptSw},
-            {"LDO_VTCXO1_STATUS", mPromptSw},
-            {"LDO_VUSB33_STATUS", mPromptSw},
-            {"SEP", ""},
-            {"BUCK_11_VDVFS11_VOLTAGE", mPromptUv},
-            {"BUCK_11_VDVFS12_VOLTAGE", mPromptUv},
-            {"BUCK_VCORE1_VOLTAGE", mPromptUv},
-            {"BUCK_VCORE2_VOLTAGE", mPromptUv},
-            {"BUCK_VDRAM_VOLTAGE", mPromptUv},
-            {"BUCK_VDVFS11_VOLTAGE", mPromptUv},
-            {"BUCK_VDVFS12_VOLTAGE", mPromptUv},
-            {"BUCK_VGPU_VOLTAGE", mPromptUv},
-            {"BUCK_VIO18_VOLTAGE", mPromptUv},
-            {"BUCK_VPA_VOLTAGE", mPromptUv},
-            {"BUCK_VRF18_0_VOLTAGE", mPromptUv},
-            {"SEP", ""},
-            {"LDO_VAUD28_VOLTAGE", mPromptUnit},
-            {"LDO_VAUXA28_VOLTAGE", mPromptUnit},
-            {"LDO_VBIASN_VOLTAGE", mPromptUnit},
-            {"LDO_VBIF28_VOLTAGE", mPromptUnit},
-            {"LDO_VCAMA_VOLTAGE", mPromptUnit},
-            {"LDO_VCAMD_VOLTAGE", mPromptUnit},
-            {"LDO_VCAM_AF_VOLTAGE", mPromptUnit},
-            {"LDO_VCAM_IO_VOLTAGE", mPromptUnit},
-            {"LDO_VCN18_VOLTAGE", mPromptUnit},
-            {"LDO_VCN28_VOLTAGE", mPromptUnit},
-            {"LDO_VCN33_VOLTAGE", mPromptUnit},
-            {"LDO_VEFUSE_VOLTAGE", mPromptUnit},
-            {"LDO_VEMC33_VOLTAGE", mPromptUnit},
-            {"LDO_VGP1_VOLTAGE", mPromptUnit},
-            {"LDO_VGP2_VOLTAGE", mPromptUnit},
-            {"LDO_VGP3_VOLTAGE", mPromptUnit},
-            {"LDO_VIO28_VOLTAGE", mPromptUnit},
-            {"LDO_VMCH_VOLTAGE", mPromptUnit},
-            {"LDO_VMC_VOLTAGE", mPromptUnit},
-            {"LDO_VMIPI_VOLTAGE", mPromptUnit},
-            {"LDO_VRF18_1_VOLTAGE", mPromptUnit},
-            {"LDO_VRTC_VOLTAGE", mPromptUnit},
-            {"LDO_VSIM1_VOLTAGE", mPromptUnit},
-            {"LDO_VSIM2_VOLTAGE", mPromptUnit},
-            {"LDO_VSRAM_DVFS1_VOLTAGE", mPromptUv},
-            {"LDO_VTCXO0_VOLTAGE", mPromptUnit},
-            {"LDO_VTCXO1_VOLTAGE", mPromptUnit},
-            {"LDO_VUSB33_VOLTAGE", mPromptUnit},
-    };
-    private String[][] mFileFor35 = {
-            {"BUCK_VCORE1_STATUS", mPromptSw},
-            {"BUCK_VLTE_STATUS", mPromptSw},
-            {"BUCK_VPA_STATUS", mPromptSw},
-            {"BUCK_VPROC_STATUS", mPromptSw},
-            {"BUCK_VSYS22_STATUS", mPromptSw},
-            {"SEP", ""},
-            {"LDO_TREF_STATUS", mPromptSw},
-            {"LDO_VAUD28_STATUS", mPromptSw},
-            {"LDO_VAUX18_STATUS", mPromptSw},
-            {"LDO_VCAMAF_STATUS", mPromptSw},
-            {"LDO_VCAMA_STATUS", mPromptSw},
-            {"LDO_VCAMD_STATUS", mPromptSw},
-            {"LDO_VCAMIO_STATUS", mPromptSw},
-            {"LDO_VCN18_STATUS", mPromptSw},
-            {"LDO_VCN28_STATUS", mPromptSw},
-            {"LDO_VCN33_BT_STATUS", mPromptSw},
-            {"LDO_VCN33_WIFI_STATUS", mPromptSw},
-            {"LDO_VEFUSE_STATUS", mPromptSw},
-            {"LDO_VEMC_3V3_STATUS", mPromptSw},
-            {"LDO_VGP1_STATUS", mPromptSw},
-            {"LDO_VIBR_STATUS", mPromptSw},
-            {"LDO_VIO18_STATUS", mPromptSw},
-            {"LDO_VIO28_STATUS", mPromptSw},
-            {"LDO_VMCH_STATUS", mPromptSw},
-            {"LDO_VMC_STATUS", mPromptSw},
-            {"LDO_VM_STATUS", mPromptSw},
-            {"LDO_VRF18_0_STATUS", mPromptSw},
-            {"LDO_VRF18_1_STATUS", mPromptSw},
-            {"LDO_VSIM1_STATUS", mPromptSw},
-            {"LDO_VSIM2_STATUS", mPromptSw},
-            {"LDO_VSRAM_STATUS", mPromptSw},
-            {"LDO_VTCXO_0_STATUS", mPromptSw},
-            {"LDO_VTCXO_1_STATUS", mPromptSw},
-            {"LDO_VUSB33_STATUS", mPromptSw},
-            {"SEP", ""},
-            {"BUCK_VCORE1_VOLTAGE", mPromptUv},
-            {"BUCK_VLTE_VOLTAGE", mPromptUv},
-            {"BUCK_VPA_VOLTAGE", mPromptUv},
-            {"BUCK_VPROC_VOLTAGE", mPromptUv},
-            {"BUCK_VSYS22_VOLTAGE", mPromptUv},
-            {"SEP", ""},
-            {"LDO_TREF_VOLTAGE", mPromptUnit},
-            {"LDO_VAUD28_VOLTAGE", mPromptUnit},
-            {"LDO_VAUX18_VOLTAGE", mPromptUnit},
-            {"LDO_VCAMAF_VOLTAGE", mPromptUnit},
-            {"LDO_VCAMA_VOLTAGE", mPromptUnit},
-            {"LDO_VCAMD_VOLTAGE", mPromptUnit},
-            {"LDO_VCAMIO_VOLTAGE", mPromptUnit},
-            {"LDO_VCN18_VOLTAGE", mPromptUnit},
-            {"LDO_VCN28_VOLTAGE", mPromptUnit},
-            {"LDO_VCN33_BT_VOLTAGE", mPromptUnit},
-            {"LDO_VCN33_WIFI_VOLTAGE", mPromptUnit},
-            {"LDO_VEFUSE_VOLTAGE", mPromptUnit},
-            {"LDO_VEMC_3V3_VOLTAGE", mPromptUnit},
-            {"LDO_VGP1_VOLTAGE", mPromptUnit},
-            {"LDO_VIBR_VOLTAGE", mPromptUnit},
-            {"LDO_VIO18_VOLTAGE", mPromptUnit},
-            {"LDO_VIO28_VOLTAGE", mPromptUnit},
-            {"LDO_VMCH_VOLTAGE", mPromptUnit},
-            {"LDO_VMC_VOLTAGE", mPromptUnit},
-            {"LDO_VM_VOLTAGE", mPromptUnit},
-            {"LDO_VRF18_0_VOLTAGE", mPromptUnit},
-            {"LDO_VRF18_1_VOLTAGE", mPromptUnit},
-            {"LDO_VSIM1_VOLTAGE", mPromptUnit},
-            {"LDO_VSIM2_VOLTAGE", mPromptUnit},
-            {"LDO_VSRAM_VOLTAGE", mPromptUnit},
-            {"LDO_VTCXO_0_VOLTAGE", mPromptUnit},
-            {"LDO_VTCXO_1_VOLTAGE", mPromptUnit},
-            {"LDO_VUSB33_VOLTAGE", mPromptUnit},
-    };
-    private String[][] mFileFor80 = {
-                {"BUCK_VPA_STATUS", mPromptSw},
-                {"BUCK_VPROC_STATUS", mPromptSw},
-                {"SEP", ""},
-                {"LDO_VCN28_STATUS", mPromptSw},
-                {"LDO_VTCXO_STATUS", mPromptSw},
-                {"LDO_VA_STATUS", mPromptSw},
-                {"LDO_VCAMA_STATUS", mPromptSw},
-                {"LDO_VCN33_BT_STATUS", mPromptSw},
-                {"LDO_VCN33_WIFI_STATUS", mPromptSw},
-                {"LDO_VIO28_STATUS", mPromptSw},
-                {"LDO_VSIM1_STATUS", mPromptSw},
-                {"LDO_VSIM2_STATUS", mPromptSw},
-                {"LDO_VUSB_STATUS", mPromptSw},
-                {"LDO_VGP1_STATUS", mPromptSw},
-                {"LDO_VGP2_STATUS", mPromptSw},
-                {"LDO_VEMC_3V3_STATUS", mPromptSw},
-                {"LDO_VCAMAF_STATUS", mPromptSw},
-                {"LDO_VMC_STATUS", mPromptSw},
-                {"LDO_VMCH_STATUS", mPromptSw},
-                {"LDO_VIBR_STATUS", mPromptSw},
-                {"LDO_VRTC_STATUS", mPromptSw},
-                {"LDO_VM_STATUS", mPromptSw},
-                {"LDO_VRF18_STATUS", mPromptSw},
-                {"LDO_VIO18_STATUS", mPromptSw},
-                {"LDO_VCAMD_STATUS", mPromptSw},
-                {"LDO_VCAMIO_STATUS", mPromptSw},
-                {"LDO_VGP3_STATUS", mPromptSw},
-                {"LDO_VCN_1V8_STATUS", mPromptSw},
-                {"SEP", ""},
-                {"BUCK_VPA_VOLTAGE", mPromptUv},
-                {"BUCK_VPROC_VOLTAGE", mPromptUv},
-                {"SEP", ""},
-                {"LDO_VCN28_VOLTAGE", mPromptUnit},
-                {"LDO_VTCXO_VOLTAGE", mPromptUnit},
-                {"LDO_VA_VOLTAGE", mPromptUnit},
-                {"LDO_VCAMA_VOLTAGE", mPromptUnit},
-                {"LDO_VCN33_BT_VOLTAGE", mPromptUnit},
-                {"LDO_VCN33_WIFI_VOLTAGE", mPromptUnit},
-                {"LDO_VIO28_VOLTAGE", mPromptUnit},
-                {"LDO_VSIM1_VOLTAGE", mPromptUnit},
-                {"LDO_VSIM2_VOLTAGE", mPromptUnit},
-                {"LDO_VUSB_VOLTAGE", mPromptUnit},
-                {"LDO_VGP1_VOLTAGE", mPromptUnit},
-                {"LDO_VGP2_VOLTAGE", mPromptUnit},
-                {"LDO_VEMC_3V3_VOLTAGE", mPromptUnit},
-                {"LDO_VCAMAF_VOLTAGE", mPromptUnit},
-                {"LDO_VMC_VOLTAGE", mPromptUnit},
-                {"LDO_VMCH_VOLTAGE", mPromptUnit},
-                {"LDO_VIBR_VOLTAGE", mPromptUnit},
-                {"LDO_VRTC_VOLTAGE", mPromptUnit},
-                {"LDO_VM_VOLTAGE", mPromptUnit},
-                {"LDO_VRF18_VOLTAGE", mPromptUnit},
-                {"LDO_VIO18_VOLTAGE", mPromptUnit},
-                {"LDO_VCAMD_VOLTAGE", mPromptUnit},
-                {"LDO_VCAMIO_VOLTAGE", mPromptUnit},
-                {"LDO_VGP3_VOLTAGE", mPromptUnit},
-                {"LDO_VCN_1V8_VOLTAGE", mPromptUnit},
-        };
-
-    // private int mUpdateInterval = 1500; // 1.5 sec
-    private Handler mUpdateHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case EVENT_UPDATE:
-                Bundle b = msg.getData();
-                mInfo.setText(b.getString("INFO"));
-                break;
-            default:
-                break;
-            }
-        }
-    };
-    private void setLayout() {
-        mInfo = (TextView) findViewById(R.id.pmu_info_text);
-        mBtnGetRegister = (Button) findViewById(R.id.pmu_btn_get);
-        mBtnSetRegister = (Button) findViewById(R.id.pmu_btn_set);
-        mEditAddr = (EditText) findViewById(R.id.pmu_edit_addr);
-        mEditVal = (EditText) findViewById(R.id.pmu_edit_val);
-        mBankSpinner = (Spinner) findViewById(R.id.pmu_bank_spinner);
-
-        mBtnGetReg6333 = (Button) findViewById(R.id.pmu_btn_get_mt6333);
-        mBtnSetReg6333 = (Button) findViewById(R.id.pmu_btn_set_mt6333);
-        mBtnGetReg6333.setOnClickListener(this);
-        mBtnSetReg6333.setOnClickListener(this);
-        mEditAddr6333 = (EditText) findViewById(R.id.pmu_edit_addr_mt6333);
-        mEditVal6333 = (EditText) findViewById(R.id.pmu_edit_val_mt6333);
-
-        if (mInfo == null || mBtnGetRegister == null || mBtnSetRegister == null || mEditAddr == null || mEditVal == null
-                || mBankSpinner == null) {
-            Elog.e("PMU", "clocwork worked...");
-            return;
-        }
-
-        mBtnGetRegister.setOnClickListener(this);
-        mBtnSetRegister.setOnClickListener(this);
-
-        mBankAdatper = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item);
-        mBankAdatper.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        for (int i = 0; i < mBankType.length; i++) {
-            mBankAdatper.add(mBankType[i]);
-        }
-        mBankSpinner.setAdapter(mBankAdatper);
-        mBankSpinner.setOnItemSelectedListener(new OnItemSelectedListener() {
-
-            public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-                mBankIndex = arg2;
-            }
-
-            public void onNothingSelected(AdapterView<?> arg0) {
-
-            }
-        });
-        if (ChipSupport.MTK_6589_SUPPORT <= ChipSupport.getChip()) {
-            mBankSpinner.setVisibility(View.GONE);
-            TextView updateView = (TextView) findViewById(R.id.address6575_text);
-            updateView.setText(R.string.address6589_text);
-            updateView = (TextView) findViewById(R.id.value6575_text);
-            updateView.setText(R.string.value6589_text);
-            mEditAddr
-                    .setFilters(new InputFilter[] { new InputFilter.LengthFilter(
-                            MAX_LENGTH_89) });
-            mEditVal
-                    .setFilters(new InputFilter[] { new InputFilter.LengthFilter(
-                            MAX_LENGTH_89) });
-        }
-        if (new File(FS_MT6333_ACCESS).exists()) {
-            mFSAccessFile = FS_MT6333_ACCESS;
-            mGetAccessCmd = CMD_GET_MT6333_ACCESS;
-            mSetAccessCmd = CMD_SET_MT6333_ACCESS;
-        } else if (new File(FS_MT6311_ACCESS).exists()) {
-            mFSAccessFile = FS_MT6311_ACCESS;
-            mGetAccessCmd = CMD_GET_MT6311_ACCESS;
-            mSetAccessCmd = CMD_SET_MT6311_ACCESS;
-        } else {
-            ((LinearLayout) findViewById(R.id.mt6333_layout_controler)).setVisibility(View.GONE);
-        }
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (!FeatureSupport.isSupportedEmSrv()) {
-            Toast.makeText(this, R.string.notice_wo_emsvr,
-                    Toast.LENGTH_LONG).show();
-            finish();
-            return;
-        }
-        TabHost tabHost = getTabHost();
-
-        LayoutInflater.from(this).inflate(R.layout.power_pmu6575_tabs, tabHost.getTabContentView(), true);
-
-        // tab1
-        tabHost.addTab(tabHost.newTabSpec(this.getString(R.string.pmu_info_text)).setIndicator(
-                this.getString(R.string.pmu_info_text)).setContent(R.id.LinerLayout_pmu_info_text));
-
-        // tab2
-        tabHost.addTab(tabHost.newTabSpec(this.getString(R.string.pmu_reg)).setIndicator(this.getString(R.string.pmu_reg))
-                .setContent(R.id.LinerLayout_pmu_reg));
-
-        setLayout();
-        tabHost.setOnTabChangedListener(new OnTabChangeListener() {
-            public void onTabChanged(String tabId) {
-                String pmuInfoText = PMU6575.this.getString(R.string.pmu_info_text);
-                String pmuReg = PMU6575.this.getString(R.string.pmu_reg);
-                if (tabId.equals(pmuInfoText)) {
-                    onTabInfo();
-                } else if (tabId.equals(pmuReg)) {
-                    onTabReg();
-                }
-            }
-        });
-        // init
-    }
-
-    private void onTabReg() {
-        mWhichTab = TAB_REG;
-    }
-
-    private void onTabInfo() {
-        mWhichTab = TAB_INFO;
-    }
-
-    private void handleGetClick(String addr, String[] cmds, EditText toSetTxt) {
-        getInfo(cmds[0]);
-        String out = getInfo(cmds[1]);
-        try {
-            String text = Integer.toHexString(Integer.parseInt(out));
-            Elog.i("EM-PMU", "addr:" + addr + "out :" + out);
-            Elog.i("EM-PMU", "addr:" + addr + "text :" + text);
-            toSetTxt.setText(text);
-        } catch (NumberFormatException e) {
-            e.printStackTrace();
-            Toast.makeText(this, "Please check return value :" + out, Toast.LENGTH_LONG).show();
-        }
-    }
-
-    private void handleSetClick(String addr, String val, String[] cmds) {
-
-        String out = getInfo(cmds[0]);
-        Elog.i("EM-PMU", "addr:" + addr + "val:" + val + "out :" + out);
-        if (null != out && out.length() != 0) {
-            Toast.makeText(this, out, Toast.LENGTH_LONG).show();
-        }
-    }
-
-    @Override
-    public void onClick(View arg0) {
-        String regFile = null;
-        if (ChipSupport.MTK_6589_SUPPORT <= ChipSupport.getChip()) {
-            regFile = "/sys/devices/platform/mt-pmic/pmic_access";
-        } else {
-            if (mBankIndex == 0) {
-                regFile = "/sys/devices/platform/mt-pmic/pmic_access_bank0";
-            } else if (mBankIndex == 1) {
-                regFile = "/sys/devices/platform/mt-pmic/pmic_access_bank1";
-            } else {
-                Toast.makeText(this, "Internal error. bankX too large.",
-                        Toast.LENGTH_LONG).show();
-                return;
-            }
-        }
-        if (arg0.getId() == mBtnGetRegister.getId()) {
-            String addr = mEditAddr.getText().toString();
-            if (checkAddr(addr)) {
-                String cmd = "echo " + addr + " > " + regFile;
-                getInfo(cmd);
-                cmd = "cat " + regFile;
-                String out = getInfo(cmd);
-                try {
-                    String text = Integer.toHexString(Integer.parseInt(out));
-                    Elog.i("EM-PMU", "addr:" + addr + "out :" + out);
-                    Elog.i("EM-PMU", "addr:" + addr + "text :" + text);
-                    mEditVal.setText(text);
-                } catch (NumberFormatException e) {
-                    e.printStackTrace();
-                    Toast.makeText(this, "Please check return value :" + out, Toast.LENGTH_LONG).show();
-                }
-            } else {
-                Toast.makeText(this, "Please check address.", Toast.LENGTH_LONG).show();
-            }
-        } else if (arg0.getId() == mBtnSetRegister.getId()) {
-            String addr = mEditAddr.getText().toString();
-            String val = mEditVal.getText().toString();
-            if (checkAddr(addr.trim()) && checkVal(val.trim())) {
-                String cmd = "echo " + addr + " " + val + " > " + regFile;
-                String out = getInfo(cmd);
-                Elog.i("EM-PMU", "addr:" + addr + "val:" + val + "out :" + out);
-                if (null != out && out.length() != 0) {
-                    Toast.makeText(this, out, Toast.LENGTH_LONG).show();
-                }
-            } else {
-                Toast.makeText(this, "Please check address or value.", Toast.LENGTH_LONG).show();
-            }
-        } else if (arg0.getId() == mBtnGetReg6333.getId()) {
-            String addr = mEditAddr6333.getText().toString();
-            if (checkAddr(addr)) {
-                String[] cmds = new String[2];
-                cmds[0] = String.format(mGetAccessCmd, addr);
-                cmds[1] = "cat " + mFSAccessFile;
-                handleGetClick(addr, cmds, mEditVal6333);
-            } else {
-                Toast.makeText(this, "Please check address.", Toast.LENGTH_LONG).show();
-            }
-        } else if (arg0.getId() == mBtnSetReg6333.getId()) {
-            String addr = mEditAddr6333.getText().toString();
-            String val = mEditVal6333.getText().toString();
-            if (checkAddr(addr.trim()) && checkVal(val.trim())) {
-                String[] cmds = new String[]{String.format(mSetAccessCmd, addr, val)};
-                handleSetClick(addr, val, cmds);
-            } else {
-                Toast.makeText(this, "Please check address or value.", Toast.LENGTH_LONG).show();
-            }
-
-        }
-    }
-
-    private boolean checkAddr(String s) {
-        if (s == null || s.length() < 1) {
-            return false;
-        }
-        String temp = s;
-        try {
-            Integer.parseInt(temp, RADIX_HEX);
-        } catch (NumberFormatException e) {
-            return false;
-        }
-        return true;
-    }
-
-    private boolean checkVal(String s) {
-        if (s == null || s.length() < 1) {
-            if (s != null) {
-                Elog.w("EM-PMU", "s.length() is wrong!" + s.length());
-            }
-            return false;
-        }
-        if (ChipSupport.MTK_6589_SUPPORT <= ChipSupport.getChip()) {
-            if (s.length() > MAX_LENGTH_89) {
-                Elog.w("EM-PMU", "s.length() is too long: " + s.length());
-                return false;
-            }
-        } else {
-            if (s.length() > 2) {
-                Elog.w("EM-PMU", "s.length() is too long: " + s.length());
-                return false;
-            }
-        }
-        String temp = s;
-        try {
-            Integer.parseInt(temp, RADIX_HEX);
-        } catch (NumberFormatException e) {
-            return false;
-        }
-        return true;
-    }
-
-    private String getInfo(String cmd) {
-        String result = null;
-        try {
-            String[] cmdx = { "/system/bin/sh", "-c", cmd }; // file must
-            // exist// or
-            // wait()
-            // return2
-            int ret = 0;
-            String backup = cmd.trim();
-            if (backup.startsWith("echo")) {
-                ret = ShellExe.execCommand(cmdx);;
-            } else {
-                ret = ShellExe.execCommand(cmdx, true);
-            }
-            if (0 == ret) {
-                result = ShellExe.getOutput();
-            } else {
-                // result = "ERROR";
-                result = ShellExe.getOutput();
-            }
-
-        } catch (IOException e) {
-            Elog.i("EM-PMU", e.toString());
-            result = "ERR.JE";
-        }
-        return result;
-    }
-
-    class RunThread extends Thread {
-
-        public void run() {
-            while (mRun) {
-                StringBuilder text = new StringBuilder("");
-                String cmd = "";
-                String[][] fileArray = null;
-                if (ChipSupport.MTK_6589_SUPPORT <= ChipSupport.getChip()) {
-                    fileArray = mFilesFor89;
-                    if (ChipSupport.isCurrentChipHigher(ChipSupport.MTK_6589_SUPPORT, false)) {
-                        fileArray = mFilesFor7282;
-                    }
-                    if (ChipSupport.isChipInSet(CHIPS_95_PMU_INFO_FILES)) {
-                        fileArray = mFilesFor95;
-                    }
-                    if (ChipSupport.MTK_6752_SUPPORT == ChipSupport.getChip()) {
-                        fileArray = mFilesFor52;
-                    }
-                    if (ChipSupport.isCurrentChipEquals(ChipSupport.MTK_6735_SUPPORT)) {
-                        fileArray = mFileFor35;
-                    }
-                    if (ChipSupport.isCurrentChipEquals(ChipSupport.MTK_6580_SUPPORT)) {
-                        fileArray = mFileFor80;
-                    }
-
-                    if (ChipSupport.isCurrentChipEquals(ChipSupport.MTK_6755_SUPPORT)
-                            || ChipSupport.isCurrentChipEquals(ChipSupport.MTK_6797_SUPPORT)) {
-                        fileArray = mFileFor6755;
-                    }
-
-                } else {
-                    fileArray = mFiles;
-                }
-                for (int i = 0; i < fileArray.length; i++) {
-                    if (fileArray[i][0].equalsIgnoreCase("SEP")) {
-                        text.append("- - - - - - - - - -\n");
-                        continue;
-                    }
-                    cmd = "cat /sys/devices/platform/mt-pmic/" + fileArray[i][0];
-
-                    if (fileArray[i][1].equalsIgnoreCase("mA")) {
-                        double f = 0.0f;
-                        try {
-                            f = Float.valueOf(getInfo(cmd)) / MAGIC_TEN;
-                        } catch (NumberFormatException e) {
-                            Elog.e("EM-PMU", "read file error " + fileArray[i][0]);
-                        }
-                        text.append(String.format("%1$-28s:[%2$-6s]%3$s\n", fileArray[i][0], f, fileArray[i][1]));
-                    } else {
-                        text.append(String.format("%1$-28s:[%2$-6s]%3$s\n", fileArray[i][0], getInfo(cmd), fileArray[i][1]));
-                    }
-                }
-
-                Bundle b = new Bundle();
-                b.putString("INFO", text.toString());
-
-                Message msg = new Message();
-                msg.what = EVENT_UPDATE;
-                msg.setData(b);
-                mUpdateHandler.sendMessage(msg);
-                try {
-                    sleep(UPDATE_INTERVAL);
-                    while (mWhichTab == TAB_REG && mRun) {
-                        sleep(WAIT_INTERVAL);
-                    }
-                } catch (InterruptedException e) {
-                    e.printStackTrace();
-                }
-            }
-        }
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-        mRun = false;
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        mRun = true;
-        new RunThread().start();
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/power/Power.java b/EngineerMode/src/com/mediatek/engineermode/power/Power.java
deleted file mode 100644
index 820cf9d..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/power/Power.java
+++ /dev/null
@@ -1,106 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.power;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ChipSupport;
-import java.util.ArrayList;
-import java.util.List;
-
-public class Power extends Activity implements OnItemClickListener {
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.power);
-
-        ListView tpListView = (ListView) findViewById(R.id.ListView_Power);
-
-        if (tpListView == null) {
-            Elog.e("Power", "clocwork worked...");
-            return;
-        }
-        List<String> items = new ArrayList<String>();
-        items.add("Charge Battery");
-        items.add("PMU");
-        if (isSupportLPDebug()) {
-            items.add("Low Power Protect Debug");
-        }
-
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, items);
-        tpListView.setAdapter(adapter);
-        tpListView.setOnItemClickListener(this);
-    }
-
-    @Override
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-
-        Intent intent = new Intent();
-        switch (arg2) {
-        case 0:
-            intent.setClass(this, ChargeBattery.class);
-            break;
-        case 1:
-            intent.setClass(this, PMU6575.class);
-            break;
-        case 2:
-            intent.setClass(this, LowPowerDebug.class);
-        default:
-            break;
-        }
-        this.startActivity(intent);
-    }
-    private boolean isSupportLPDebug() {
-        if (ChipSupport.getChip() >= ChipSupport.MTK_6592_SUPPORT ||
-            ChipSupport.getChip() == ChipSupport.MTK_6582_SUPPORT) {
-            return true;
-        }
-        return false;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/ptp/Ptp1Activity.java b/EngineerMode/src/com/mediatek/engineermode/ptp/Ptp1Activity.java
deleted file mode 100644
index 9f2750d..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/ptp/Ptp1Activity.java
+++ /dev/null
@@ -1,83 +0,0 @@
-package com.mediatek.engineermode.ptp;
-
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.List;
-
-import android.os.Bundle;
-import android.view.View;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-
-import com.mediatek.engineermode.vcmd.AbstrViewCmdActivity;
-import com.mediatek.engineermode.vcmd.CheckBoxCmdAdapter;
-import com.mediatek.engineermode.vcmd.ViewCommand;
-import com.mediatek.engineermode.R;
-
-public class Ptp1Activity extends AbstrViewCmdActivity {
-    private static final String TAG = "EM_PTP1";
-    private static final String PATH_PTP1 = "/proc/ptp/ptp_debug";
-    private static final String PATH_PTP1_BIG_CORE = "/proc/ptp/PTP_DET_BIG/ptp_debug";
-    private static final String PATH_PTP1_LITTLE_CORE = "/proc/ptp/PTP_DET_LITTLE/ptp_debug";
-    private static final String PATH_PTP1_GPU = "/proc/ptp/PTP_DET_GPU/ptp_debug";
-    private static final String PATH_PTP1_VCORE_AO = "/proc/ptp/PTP_DET_VCORE_AO/ptp_debug";
-    private static final String PATH_PTP1_VCORE_PDN = "/proc/ptp/PTP_DET_VCORE_PDN/ptp_debug";
-
-    private int mPtpSupport = 0;
-    private boolean mIsBigLittle;
-
-    @Override
-    protected List<ViewCommand> initViewCmds() {
-        List<ViewCommand> list = new ArrayList<ViewCommand>();
-        CheckBoxCmdAdapter cbAdapter = new CheckBoxCmdAdapter();
-        if (mIsBigLittle) {
-            list.add(new ViewCommand(R.id.ptp1_enable_big_core_cb, PATH_PTP1_BIG_CORE, cbAdapter));
-            list.add(new ViewCommand(R.id.ptp1_enable_little_core_cb, PATH_PTP1_LITTLE_CORE, cbAdapter));
-            list.add(new ViewCommand(R.id.ptp1_enable_gpu_cb, PATH_PTP1_GPU, cbAdapter));
-            list.add(new ViewCommand(R.id.ptp1_enable_vcore_ao_cb, PATH_PTP1_VCORE_AO, cbAdapter));
-            list.add(new ViewCommand(R.id.ptp1_enable_vcore_pdn_cb, PATH_PTP1_VCORE_PDN, cbAdapter));
-        } else {
-            list.add(new ViewCommand(R.id.ptp1_enable_ptp_cb, PATH_PTP1, cbAdapter));
-        }
-        return list;
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        mPtpSupport = PtpList.getPtpSupport();
-        mIsBigLittle = (mPtpSupport & PtpList.PTP_BIG_LITTLE_CORE) > 0;
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.ptp_ptp1);
-        registListeners();
-        if (mIsBigLittle) {
-            findViewById(R.id.ptp1_setting).setVisibility(View.GONE);
-        } else {
-            findViewById(R.id.ptp1_setting_ext).setVisibility(View.GONE);
-        }
-    }
-
-    @Override
-    protected void onStart() {
-        super.onStart();
-        setPtpView(-1);
-    }
-
-    @Override
-    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-        super.onCheckedChanged(buttonView, isChecked);
-        setPtpView(buttonView.getId());
-    }
-
-    private void setPtpView(int id) {
-        Collection<ViewCommand> vcmds = getViewCommandManager().getViewCommandSet();
-        for (ViewCommand vc : vcmds) {
-            if (vc.adapter != null && vc.adapter.getViewType() == CheckBox.class) {
-                CheckBox cb = (CheckBox) findViewById(vc.rid);
-                if (cb != null && !cb.isChecked() && (id < 0 || id == cb.getId())) {
-                    cb.setEnabled(false);
-                }
-            }
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/ptp/Ptp2Activity.java b/EngineerMode/src/com/mediatek/engineermode/ptp/Ptp2Activity.java
deleted file mode 100644
index 05886f9..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/ptp/Ptp2Activity.java
+++ /dev/null
@@ -1,37 +0,0 @@
-package com.mediatek.engineermode.ptp;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import android.os.Bundle;
-
-import com.mediatek.engineermode.vcmd.AbstrViewCmdActivity;
-import com.mediatek.engineermode.vcmd.CheckBoxCmdAdapter;
-import com.mediatek.engineermode.vcmd.TextViewCmdAdapter;
-import com.mediatek.engineermode.vcmd.ViewCommand;
-import com.mediatek.engineermode.R;
-
-public class Ptp2Activity extends AbstrViewCmdActivity {
-
-    private static final String TAG = "EM_PTP2";
-    private static final String PATH_PTP2_SPARK = "/proc/ptp2/ptp2_spark_enable";
-    private static final String PATH_PTP2_FBB = "/proc/ptp2/ptp2_fbb_enable";
-    private static final String PATH_PTP2_STATUS = "/proc/ptp2/ptp2_dump";
-    @Override
-    protected List<ViewCommand> initViewCmds() {
-        List<ViewCommand> list = new ArrayList<ViewCommand>();
-        CheckBoxCmdAdapter cbAdapter = new CheckBoxCmdAdapter();
-        list.add(new ViewCommand(R.id.ptp2_enable_spark_cb, PATH_PTP2_SPARK, cbAdapter));
-        list.add(new ViewCommand(R.id.ptp2_enable_fbb_cb, PATH_PTP2_FBB, cbAdapter));
-        list.add(new ViewCommand(R.id.ptp2_status_content_tv, PATH_PTP2_STATUS, new TextViewCmdAdapter()));
-        return list;
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.ptp_ptp2);
-        registListeners();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/ptp/PtpList.java b/EngineerMode/src/com/mediatek/engineermode/ptp/PtpList.java
deleted file mode 100644
index ecbc16b..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/ptp/PtpList.java
+++ /dev/null
@@ -1,95 +0,0 @@
-package com.mediatek.engineermode.ptp;
-
-import java.io.File;
-import java.util.ArrayList;
-
-import android.app.ListActivity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.ChipSupport;
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-public class PtpList extends ListActivity {
-
-    private static final String TAG = "PtpList";
-    private ArrayList<String> mItemList = null;
-    static final int PTP_UNSUPPORTED = -1;
-    static final int PTP_UNKNOWN = 0;
-    static final int PTP_NORMAL = 1;
-    static final int PTP_BIG_LITTLE_CORE = 2;
-    static final int PTP_PTP2_SUPPORTED = 8;
-    private static final String DIR_PTP = "/proc/ptp";
-    private static final String DIR_PTP2 = "/proc/ptp2";
-    private static final String DIR_PTP_BIG_LITTLE = "/proc/ptp/PTP_DET_BIG";
-    private static int sPtpSupport = PTP_UNKNOWN;
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        int ptpSupport = getPtpSupport();
-        if (ptpSupport == PTP_UNSUPPORTED) {
-            Toast.makeText(this, "PTP was not supported", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        mItemList = new ArrayList<String>();
-        mItemList.add(getString(R.string.ptp_ptp1));
-        if ((ptpSupport & PTP_PTP2_SUPPORTED) > 0) {
-            mItemList.add(getString(R.string.ptp_ptp2));
-        }
-
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mItemList);
-
-        setListAdapter(adapter);
-
-    }
-
-    @Override
-    protected void onListItemClick(ListView listView, View view, int position, long id) {
-        String item = mItemList.get(position);
-        if (item.equals(getString(R.string.ptp_ptp1))) {
-            startActivity(new Intent(this, Ptp1Activity.class));
-        } else if (item.equals(getString(R.string.ptp_ptp2))) {
-            startActivity(new Intent(this, Ptp2Activity.class));
-        } else {
-            Elog.d(TAG, "Unhandle List Item:" + item);
-        }
-    }
-
-    static int getPtpSupport() {
-        if (sPtpSupport != PTP_UNKNOWN) {
-            return sPtpSupport;
-        }
-        int result = PTP_UNSUPPORTED;
-        if (ChipSupport.isCurrentChipEquals(ChipSupport.MTK_6592_SUPPORT) ||
-                ChipSupport.isCurrentChipEquals(ChipSupport.MTK_6595_SUPPORT)) {
-            if (new File(DIR_PTP).exists()) {
-                result = 0;
-                if (new File(DIR_PTP_BIG_LITTLE).exists()) {
-                    result |= PTP_BIG_LITTLE_CORE;
-                } else {
-                    result |= PTP_NORMAL;
-                }
-                if (new File(DIR_PTP2).exists()) {
-                    result |= PTP_PTP2_SUPPORTED;
-                }
-            }
-        }
-        sPtpSupport = result;
-        return result;
-    }
-
-    public static boolean isPtpSupported() {
-        int ptpSupport = getPtpSupport();
-        if (ptpSupport == PTP_UNSUPPORTED) {
-            return false;
-        }
-        return true;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sbp/SbpActivity.java b/EngineerMode/src/com/mediatek/engineermode/sbp/SbpActivity.java
deleted file mode 100644
index 37bcbc5..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sbp/SbpActivity.java
+++ /dev/null
@@ -1,128 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sbp;
-
-import android.app.Activity;
-import android.os.AsyncResult;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.telephony.TelephonyManager;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.android.internal.telephony.Phone;
-import com.android.internal.telephony.PhoneConstants;
-import com.android.internal.telephony.PhoneFactory;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.FeatureSupport;
-import com.mediatek.engineermode.R;
-
-/**
- * Display SBP info.
- */
-public class SbpActivity extends Activity {
-    private static final String TAG = "SbpActivity";
-    private static final int TEXT_COUNT = 3;
-    private static final int MSG_SBP_INFO = 1;
-    private static final String QUERY_CMD = "AT+ESBP?";
-    private static final String RESPONSE_CMD = "+ESBP: ";
-
-    private Phone mPhone = null;
-    private TextView[] mTextViews = new TextView[TEXT_COUNT];
-
-    private Handler mATCmdHander = new Handler() {
-        public void handleMessage(Message msg) {
-            AsyncResult ar;
-            switch (msg.what) {
-            case MSG_SBP_INFO:
-                ar = (AsyncResult) msg.obj;
-                if (ar != null && ar.exception == null) {
-                    handleQuery((String[]) ar.result);
-                } else {
-                    Toast.makeText(SbpActivity.this, "Send AT command failed", Toast.LENGTH_SHORT);
-                }
-                break;
-            default:
-                break;
-            }
-        }
-    };
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sbp);
-        mTextViews[0] = (TextView) findViewById(R.id.sbp_id);
-        mTextViews[1] = (TextView) findViewById(R.id.sbp_feature);
-        mTextViews[2] = (TextView) findViewById(R.id.sbp_data);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        String[] cmd = new String[2];
-        cmd[0] = QUERY_CMD;
-        cmd[1] = RESPONSE_CMD;
-        if (TelephonyManager.getDefault().getPhoneCount() > 1) {
-            mPhone = PhoneFactory.getPhone(PhoneConstants.SIM_ID_1);
-        } else {
-            mPhone = PhoneFactory.getDefaultPhone();
-        }
-
-
-
-        if (mPhone != null) {
-            mPhone.invokeOemRilRequestStrings(cmd, mATCmdHander.obtainMessage(MSG_SBP_INFO));
-        }
-    }
-
-    private void handleQuery(String[] result) {
-        if (result != null && result.length > 0) {
-            Elog.v(TAG, "Modem return: " + result[0]);
-            String[] values = result[0]
-                    .substring(RESPONSE_CMD.length(), result[0].length()).trim().split(",");
-            if (values != null && values.length > 0) {
-                for (int i = 0; i < values.length; i++) {
-                    mTextViews[i].setText(values[i]);
-                }
-            }
-        } else {
-            Elog.e(TAG, "Modem return null");
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sdtest/SDLogActivity.java b/EngineerMode/src/com/mediatek/engineermode/sdtest/SDLogActivity.java
deleted file mode 100644
index bcb582a..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sdtest/SDLogActivity.java
+++ /dev/null
@@ -1,580 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sdtest;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.os.Environment;
-import android.os.StatFs;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.ListAdapter;
-import android.widget.ListView;
-import android.widget.SimpleAdapter;
-import android.widget.Toast;
-import android.widget.ToggleButton;
-import android.widget.AdapterView.OnItemClickListener;
-import android.os.storage.StorageManager;
-import android.os.storage.StorageVolume;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-import java.io.File;
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.FileOutputStream;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Random;
-import java.util.Vector;
-
-/**
- * Description: Test SD card by constantly reading and writing,
- *
- * @author mtk54043
- *
- */
-public class SDLogActivity extends Activity implements OnItemClickListener, DialogInterface.OnClickListener {
-
-    private static final String TAG = "SD Log";
-
-    private boolean mState;
-    private boolean mThreadState = true;
-    private int mFileCount = 0;
-
-    private Vector<String> mFileList;
-    private Random mRandom;
-    private ToggleButton mToggleButton;
-    private ActionThread mThread;
-    private ListView mLVChooseStorage;
-    private StorageManager mStorageManager;
-    private int mSelectedIndex;
-
-    private static final int FILECOUNT_MAX = 200;
-    private static final int OPERATOR_TYPE = 3;
-    private static final int AVAILABLESPACE = 4193304;
-    private static final int COUNT = 10;
-    private static final int PRE_FILE_SIZE = 256;
-
-    private static final int SHORT_TIME = 50;
-    private static final int LONG_TIME = 500;
-
-    private static final String FODERNAME = "EM_SDLog";
-    private static final String FILENAME = "EM_SDLOG_TESTFILE";
-    private static final String MAP_KEY_ITEM_TITLE = "item_title";
-    private static final String MAP_KEY_ITEM_DESCR = "item_descr";
-    private static final String NO_AVAILABLE_STORAGE = "No Available Storage";
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.desense_sdlog_activity);
-        mToggleButton = (ToggleButton) findViewById(R.id.desense_sdlog_toggle_btn);
-        mToggleButton.setOnClickListener(new ButtonClickListener());
-        mStorageManager = (StorageManager) getSystemService(Context.STORAGE_SERVICE);
-        String firstStorageTag = getFirstAvailStorageTag();
-        if (NO_AVAILABLE_STORAGE.equals(firstStorageTag)) {
-            Toast.makeText(this, NO_AVAILABLE_STORAGE, Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        mSelectedIndex = 0;
-        mLVChooseStorage = (ListView) findViewById(R.id.sdtest_choose_storage);
-        mLVChooseStorage.setAdapter(constructAdapter(firstStorageTag));
-        mLVChooseStorage.setOnItemClickListener(this);
-        mFileList = new Vector<String>();
-        mRandom = new Random();
-        checkSDCard();
-        createFileForder();
-        mThread = new ActionThread();
-    }
-
-    private String getFirstAvailStorageTag() {
-        List<String> list = getAvailStorageTags();
-        if (list.size() > 0) {
-            return list.get(0);
-        } else {
-            return NO_AVAILABLE_STORAGE;
-        }
-    }
-
-    private List<String> getAvailStorageTags() {
-        List<String> list = new ArrayList<String>();
-        StorageVolume[] volumes = mStorageManager.getVolumeList();
-        for (int i = 0; i < volumes.length; i++) {
-            String path = volumes[i].getPath();
-            String state = mStorageManager.getVolumeState(path);
-            //Elog.d(TAG, "getFirstAvailStorage - Path: " + path + " State: " + state);
-            if (state.equals(Environment.MEDIA_MOUNTED)) {
-                list.add(volumes[i].getDescription(this));
-            }
-        }
-        return list;
-    }
-
-    private StorageVolume getMountedVolumeById(int index) {
-        StorageVolume[] volumes = mStorageManager.getVolumeList();
-        int mountedIndx = 0;
-        for (int i = 0; i < volumes.length; i++) {
-            String path = volumes[i].getPath();
-            String state = mStorageManager.getVolumeState(path);
-            if (state.equals(Environment.MEDIA_MOUNTED)) {
-                if (mountedIndx == index) {
-                    return volumes[i];
-                }
-                mountedIndx++;
-            }
-        }
-        return null;
-    }
-
-    @Override
-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-        switch (parent.getId()) {
-        case R.id.sdtest_choose_storage:
-            if (position == 0) {
-                if (mToggleButton.isChecked()) {
-                    Toast.makeText(this, getString(R.string.sd_test_stop_test_first),
-                            Toast.LENGTH_SHORT).show();
-                    return;
-                }
-                showSingleChoiceDialog(getString(R.string.sd_test_choose_storage),
-                        getAvailStorageTags(),
-                        mSelectedIndex,
-                        this);
-            }
-            break;
-        default:
-            Elog.w(TAG, "Unknown view id:" + view.getId());
-        }
-    }
-
-    @Override
-    public void onClick(DialogInterface dialog, int which) {
-        mSelectedIndex = which;
-        mLVChooseStorage.setAdapter(constructAdapter(getAvailStorageTags().get(mSelectedIndex)));
-        dialog.dismiss();
-    }
-
-    private void showSingleChoiceDialog(String title, List<String> itemList,
-            int checkedId, DialogInterface.OnClickListener listener) {
-        CharSequence[] items = new CharSequence[itemList.size()];
-        for (int i = 0; i < items.length; i++) {
-            items[i] = itemList.get(i);
-        }
-        AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                false).setTitle(title).setSingleChoiceItems(items, checkedId, listener).
-                setNegativeButton(android.R.string.cancel, null).create();
-        dialog.show();
-    }
-
-    private ListAdapter constructAdapter(String descr) {
-        List<Map<String, String>> list = new ArrayList<Map<String, String>>();
-        Map<String, String> itemMap = new HashMap<String, String>();
-        itemMap.put(MAP_KEY_ITEM_TITLE, getString(R.string.sd_test_choose_storage));
-        itemMap.put(MAP_KEY_ITEM_DESCR, descr);
-        list.add(itemMap);
-        SimpleAdapter adapter = new SimpleAdapter(this, list,
-                R.layout.em_simple_list_item_layout,
-                new String[]{MAP_KEY_ITEM_TITLE, MAP_KEY_ITEM_DESCR},
-                new int[]{R.id.em_list_item_title, R.id.em_list_item_descr});
-        return adapter;
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-        Elog.i(TAG, "DesenceSDLogActivity onStop()");
-    }
-
-    @Override
-    protected void onRestart() {
-        super.onRestart();
-        init();
-    }
-
-    @Override
-    protected void onDestroy() {
-        mState = false;
-        mThreadState = false;
-        emptyForder(true);
-        Elog.i(TAG, "DesenceSDLogActivity onDestroy()");
-        super.onDestroy();
-    }
-
-    private void init() {
-        mState = false;
-        mThreadState = true;
-        mFileCount = 0;
-        mFileList.clear();
-        mFileList = new Vector<String>();
-        mRandom = new Random();
-        mThread = new ActionThread();
-    }
-
-    private class ButtonClickListener implements View.OnClickListener {
-
-        public void onClick(View v) {
-            if (v.getId() == mToggleButton.getId()) {
-                mToggleButton.setEnabled(false);
-                if (mToggleButton.isChecked()) {
-                    mState = true;
-                    createFileForder();
-                    if (!mThread.isAlive()) {
-                        mThread.start();
-                    }
-                    Elog.i(TAG, "mSDLogToggleButton is checked");
-                } else {
-                    mState = false;
-                    Elog.i(TAG, "mSDLogToggleButton is unchecked");
-                }
-                mToggleButton.setEnabled(true);
-            }
-        }
-    }
-
-    private void checkSDCard() {
-        if (!isSdMounted()) {
-            new AlertDialog.Builder(this).setTitle("Warning!").setMessage("Please insert SD card!").setPositiveButton("OK",
-                    new DialogInterface.OnClickListener() {
-
-                        public void onClick(DialogInterface dialog, int which) {
-                            dialog.dismiss();
-                            finish();
-                        }
-                    }).create().show();
-        } else if (!isSdWriteable()) {
-            new AlertDialog.Builder(this).setTitle("Warning!").setMessage("SD card isn't writeable!").setPositiveButton(
-                    "OK", new DialogInterface.OnClickListener() {
-
-                        public void onClick(DialogInterface dialog, int which) {
-                            dialog.dismiss();
-                            finish();
-                        }
-                    }).create().show();
-        } else if (getSdAvailableSpace() < AVAILABLESPACE) {
-            new AlertDialog.Builder(this).setTitle("Warning!").setMessage("SD card space < 4M!").setPositiveButton("OK",
-                    new DialogInterface.OnClickListener() {
-
-                        public void onClick(DialogInterface dialog, int which) {
-                            dialog.dismiss();
-                            finish();
-                        }
-                    }).create().show();
-        }
-    }
-
-    private void emptyForder(boolean isDeleteForder) {
-        File testForder = new File(getSdPath() + File.separator + FODERNAME);
-        if (testForder.exists() && testForder.isDirectory()) {
-            File[] fileList = testForder.listFiles();
-            if (null != fileList) {
-                for (File file : fileList) {
-                    if (file.exists()) {
-                        file.delete();
-                        Elog.v(TAG, "Delete File :" + file.getPath());
-                    }
-                }
-            }
-            if (isDeleteForder) {
-                testForder.delete();
-            }
-        }
-    }
-
-    private void createFileForder() {
-        if (isSdMounted()) {
-            File testForder = new File(getSdPath() + File.separator + FODERNAME);
-            if (!testForder.exists()) {
-                testForder.mkdir();
-                Elog.i(TAG, "createFileForder: " + testForder.getPath());
-            }
-        }
-    }
-
-    private class ActionThread extends Thread {
-
-        @Override
-        public void run() {
-            createAndWriteFile();
-            while (true) {
-                if (!mThreadState) {
-                    break;
-                }
-
-                if (!isSdMounted()) {
-                    SDLogActivity.this.runOnUiThread(new Runnable() {
-                        @Override
-                        public void run() {
-                            mToggleButton.setChecked(false);
-                            mSelectedIndex = 0;
-                            mLVChooseStorage.setAdapter(constructAdapter(getAvailStorageTags().get(mSelectedIndex)));
-                            Toast.makeText(SDLogActivity.this,
-                                    getString(R.string.sd_test_sd_removed),
-                                    Toast.LENGTH_SHORT).show();
-                        }
-                    });
-                    mState = false;
-                }
-
-                if (mFileCount >= FILECOUNT_MAX) {
-                    emptyForder(false);
-                    mFileList.clear();
-                    mFileCount = 0;
-                    createAndWriteFile();
-                    Elog.w(TAG, "mFileCount > 200 , empty forder.");
-                }
-
-                if (mState) {
-                    switch (getRandom(OPERATOR_TYPE)) {
-                    case 0:
-                        createAndWriteFile();
-                        break;
-                    case 1:
-                        readFile();
-                        break;
-                    case 2:
-                        deleteFile();
-                        break;
-                    default:
-                        break;
-                    }
-                    try {
-                        Thread.sleep(SHORT_TIME);
-                    } catch (InterruptedException e) {
-                        e.printStackTrace();
-                    }
-                } else {
-                    Elog.i(TAG, "mThread : mState == false");
-                    try {
-                        Thread.sleep(LONG_TIME);
-                    } catch (InterruptedException e) {
-                        e.printStackTrace();
-                    }
-                }
-            }
-        }
-    }
-
-    private void createAndWriteFile() {
-        if (getSdAvailableSpace() < AVAILABLESPACE) {
-            emptyForder(false);
-        }
-        if (isSdWriteable()) {
-            File testFile = new File(getSdPath() + File.separator + FODERNAME + File.separator + FILENAME + mFileCount);
-            if (!testFile.exists()) {
-                try {
-                    testFile.createNewFile();
-                    Elog.i(TAG, "CreateAndWriteFile :" + testFile.getPath());
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-            }
-            mFileList.add(FILENAME + mFileCount);
-            mFileCount++;
-            FileOutputStream outputStream = null;
-            try {
-                outputStream = new FileOutputStream(testFile);
-                try {
-                    for (int i = 0; i < COUNT; i++) {
-                        outputStream.write(SDLOG_TEXT.getBytes());
-                    }
-                    outputStream.flush();
-                } catch (IOException e) {
-                    e.printStackTrace();
-                } finally {
-                    try {
-                        if (null != outputStream) {
-                            outputStream.close();
-                        }
-                    } catch (IOException e) {
-                        e.printStackTrace();
-                    }
-                }
-            } catch (FileNotFoundException e) {
-                e.printStackTrace();
-            }
-        }
-    }
-
-    private void deleteFile() {
-        if (mFileList.size() > 0) {
-            File deleteFile = new File(getSdPath() + File.separator + FODERNAME + File.separator
-                    + mFileList.get(getRandom(mFileList.size())));
-            Elog.i(TAG, "deleteFile: " + deleteFile.getPath());
-            if (deleteFile.exists()) {
-                deleteFile.delete();
-                mFileList.remove(deleteFile.getName());
-            } else {
-                Elog.w(TAG, "deleteFile doesn't exist!");
-            }
-        } else {
-            createAndWriteFile();
-        }
-    }
-
-    private void readFile() {
-        if (mFileList.size() > 0) {
-            File readFile = new File(getSdPath() + File.separator + FODERNAME + File.separator
-                    + mFileList.get(getRandom(mFileList.size())));
-            Elog.i(TAG, "readFile: " + readFile.getPath());
-            if (readFile.exists()) {
-                FileInputStream inputStream = null;
-                try {
-                    inputStream = new FileInputStream(readFile);
-                    byte[] buffer = new byte[PRE_FILE_SIZE];
-                    try {
-                        int len = inputStream.read(buffer);
-                        while (len != -1) {
-                            len = inputStream.read(buffer);
-                        }
-                    } catch (IOException e) {
-                        e.printStackTrace();
-                    } finally {
-                        try {
-                            if (null != inputStream) {
-                                inputStream.close();
-                            }
-                        } catch (IOException e) {
-                            e.printStackTrace();
-                        }
-                    }
-                } catch (FileNotFoundException e) {
-                    e.printStackTrace();
-                }
-            } else {
-                Elog.w(TAG, "readFile doesn't exist!");
-            }
-        } else {
-            createAndWriteFile();
-        }
-    }
-
-    private int getRandom(int count) {
-        if (count <= 0) {
-            return 0;
-        }
-
-        return mRandom.nextInt(count);
-    }
-
-    private boolean isSdMounted() {
-        // if (Environment.MEDIA_MOUNTED.equals(Environment
-        // .getExternalStorageState())
-        // || Environment.MEDIA_MOUNTED_READ_ONLY.equals(Environment
-        // .getExternalStorageState())) {
-        // return true;
-        // } else {
-        // return false;
-        // }
-
-        //return (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())
-        //        || Environment.MEDIA_MOUNTED_READ_ONLY.equals(Environment.getExternalStorageState()));
-        String state;
-        state = mStorageManager.getVolumeState(getMountedVolumeById(mSelectedIndex).getPath());
-        return (Environment.MEDIA_MOUNTED.equals(state)
-                        || Environment.MEDIA_MOUNTED_READ_ONLY.equals(state));
-    }
-
-    // private static boolean isSdReadable() {
-    // return isSdMounted();
-    // }
-
-    private boolean isSdWriteable() {
-        //return Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED);
-        String state;
-        state = mStorageManager.getVolumeState(getMountedVolumeById(mSelectedIndex).getPath());
-        return Environment.MEDIA_MOUNTED.equals(state);
-    }
-
-    private String getSdPath() {
-        //return Environment.getExternalStorageDirectory().getPath();
-        StorageVolume sv = getMountedVolumeById(mSelectedIndex);
-        if (sv != null) {
-            return sv.getPath();
-        }
-        return null;
-    }
-
-    private long getSdAvailableSpace() {
-        if (isSdMounted()) {
-            String sdcard = getSdPath();
-            StatFs statFs = new StatFs(sdcard);
-            long availableSpace = (long) statFs.getBlockSize() * statFs.getAvailableBlocks();
-
-            return availableSpace;
-        } else {
-            return -1;
-        }
-    }
-
-    private static final String SDLOG_TEXT = "Copyright Statement:This software/firmware"
-            + " and related documentation MediaTek Softwareare* protected under relevant "
-            + "copyright laws. The information contained herein* is confidential and proprietary"
-            + " to MediaTek Inc. and/or its licensors.* Without the prior written permission of "
-            + "MediaTek inc. and/or its licensors,* any reproduction, modification, use or "
-            + "disclosure of MediaTek Software,* and information contained herein, in whole "
-            + "or in part, shall be strictly prohibited. MediaTek Inc. (C) 2010. All rights "
-            + "reserved** BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES "
-            + "AND AGREES* THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS (MEDIATEK SOFTWARE)"
-            + "* RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON* "
-            + "AN AS-IS BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,* EXPRESS"
-            + " OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED OF* MERCHANTABILITY,"
-            + " FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.* NEITHER DOES MEDIATEK PROVIDE"
-            + " ANY WARRANTY WHATSOEVER WITH RESPECT TO THE* SOFTWARE OF ANY THIRD PARTY WHICH MAY "
-            + "BE USED BY, INCORPORATED IN, OR* SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER "
-            + "AGREES TO LOOK ONLY TO SUCH* THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. "
-            + "RECEIVER EXPRESSLY ACKNOWLEDGES* THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN"
-            + " FROM ANY THIRD PARTY ALL PROPER LICENSES* CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK "
-            + "SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEKSOFTWARE RELEASES MADE TO RECEIVER'S "
-            + "SPECIFICATION OR TO CONFORM TO A PARTICULARSTANDARD OR OPEN FORUM. RECEIVER'S SOLE "
-            + "AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE ANCUMULATIVE LIABILITY WITH RESPECT TO "
-            + "THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,AT MEDIATEK'S OPTION, TO REVISE OR "
-            + "REPLACE THE MEDIATEK SOFTWARE AT ISSUE,OR REFUND ANY LICENSE FEES OR SERVICE"
-            + " CHARGE PAID BY RECEIVER TOMEDIATEK FOR SUCH MEDIATEK  AT ISSUE.The following"
-            + " software/firmware and/or related documentation have been modified"
-            + " by MediaTek Inc. All revisions are subject to any receiver'sapplicable license "
-            + "agreements with MediaTek Inc.";
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/CollectionCurveView.java b/EngineerMode/src/com/mediatek/engineermode/sensor/CollectionCurveView.java
deleted file mode 100644
index ae654ad..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/CollectionCurveView.java
+++ /dev/null
@@ -1,166 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
- package com.mediatek.engineermode.sensor;
-
- import com.mediatek.engineermode.Elog;
-
- import android.content.Context;
- import android.view.View;
- import android.graphics.Canvas;
- import android.graphics.Paint;
- import android.graphics.Color;
- import android.util.AttributeSet;
-
-
- public class CollectionCurveView extends View {
-    private static final int COUNT = 22;
-    private static final int MAX_DIS = 200;
-    private static final String TAG = "CollectionCurveView";
-
-    //coordinate
-    private static final int TOP_GAP = 20;
-    private static final int BOTTOM_GAP = 30;
-    private static final int LEFT_GAP = 1;
-    private static final int LINE_LENGTH = 5;
-    private static final int FONT_SIZE = 8;
-    private static final int TEXT_HEIGHT = 10;
-    private static final int Y_COUNT = 10;
-
-    private static final float[] DATA = {0.5f, 1f, 1.5f, 2f, 2.5f, 3f, 3.5f, 4f, 4.5f, 5f,
-                        5.5f, 6f, 6.5f, 7f, 7.5f, 8f, 8.5f, 9f, 9.5f, 10f, 10.5f, 11f};
-    private int[] mDis = new int[COUNT];
-
-    private boolean mIsEmpty = true;
-
-    public CollectionCurveView(Context context) {
-        super(context);
-    }
-    public CollectionCurveView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-    public void setDistance(int[] distance) {
-        if (distance == null) {
-            for (int i = 0; i < COUNT; i++) {
-                mDis[i] = 0;
-            }
-            mIsEmpty = true;
-        } else {
-            mIsEmpty = false;
-            System.arraycopy(distance, 0, mDis, 0, COUNT);
-        }
-    }
-    @Override
-    protected void onDraw(Canvas canvas) {
-        super.onDraw(canvas);
-        final int width = getWidth();
-        final int height = getHeight();
-
-        int x1;
-        int x2;
-        float y1;
-        float y2;
-
-        int x;
-        int y;
-
-        Elog.v(TAG, "width = " + width);
-        Elog.v(TAG, "height = " + height);
-        Paint paint = new Paint();
-        paint.setStyle(Paint.Style.STROKE);
-        paint.setAntiAlias(true);
-
-        // draw background as white
-        canvas.drawColor(Color.WHITE);
-
-        paint.setColor(Color.BLACK);
-        // Axis - x
-        canvas.drawLine(LEFT_GAP, height - BOTTOM_GAP, width - 1, height - BOTTOM_GAP, paint);
-        for (int i = 1; i < COUNT + 1; i++) {
-            x = LEFT_GAP + (width - LEFT_GAP) / COUNT * i;
-            y1 = height - BOTTOM_GAP - LINE_LENGTH;
-            y2 = height - BOTTOM_GAP;
-            canvas.drawLine(x, y1, x, y2, paint);
-        }
-        paint.setTextSize(FONT_SIZE);
-        for (int i = 1; i < COUNT + 1; i++) {
-            x = LEFT_GAP + (width - LEFT_GAP) / COUNT * i - 2;
-            y = height - BOTTOM_GAP + TEXT_HEIGHT;
-            canvas.drawText(Float.toString(DATA[i - 1]), x, y, paint);
-
-        }
-        // Axis - y
-        canvas.drawLine(LEFT_GAP, 0, LEFT_GAP, height - BOTTOM_GAP, paint);
-        for (int i = 0; i < Y_COUNT; i++) {
-            x1 = LEFT_GAP;
-            x2 = width - 1; //LEFT_GAP + LINE_LENGTH;
-            y = TOP_GAP + (height - BOTTOM_GAP - TOP_GAP) * i / Y_COUNT;
-            canvas.drawLine(x1, y, x2, y, paint);
-        }
-
-        if (mIsEmpty) {
-            return;
-        }
-        float max = 0;
-        for (int i = 0; i < COUNT; i++) {
-            if (max < mDis[i]) {
-                max = mDis[i];
-            }
-
-        }
-        float disString = 0;
-        for (int i = 1; i < Y_COUNT + 1; i++) {
-            x = LEFT_GAP + LINE_LENGTH;
-            y = TOP_GAP + (height - BOTTOM_GAP - TOP_GAP) * (Y_COUNT - i) / Y_COUNT - 2;
-            disString = max * i / Y_COUNT;
-
-            canvas.drawText(Integer.toString((int) disString), x, y, paint);
-        }
-
-        //Curve
-        paint.setColor(Color.BLUE);
-        for (int i = 1; i < COUNT; i++) {
-            x1 = width / COUNT * i;
-            y1 = TOP_GAP + (height - BOTTOM_GAP - TOP_GAP) * (1 - mDis[i - 1] / max);
-
-            x2 = (width / COUNT) * (i + 1);
-            y2 = TOP_GAP + (height - BOTTOM_GAP - TOP_GAP) * (1 - mDis[i] / max);
-
-            Elog.v(TAG, "x1 = " + x1 + "x2=" + x2);
-            Elog.v(TAG, "y1=" + y1 + "y2=" + y2);
-            canvas.drawLine(x1, y1, x2, y2, paint);
-        }
-    }
-}
\ No newline at end of file
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/EmSensor.java b/EngineerMode/src/com/mediatek/engineermode/sensor/EmSensor.java
deleted file mode 100644
index 2252198..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/EmSensor.java
+++ /dev/null
@@ -1,194 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import com.mediatek.engineermode.emsvr.AFMFunctionCallEx;
-import com.mediatek.engineermode.emsvr.FunctionReturn;
-import android.util.Log;
-import java.util.ArrayList;
-
-public class EmSensor {
-    private static final String TAG = "EmSensor";
-    public static final int RET_SUCCESS = 1;
-    public static final int RET_FAILED = 0;
-
-    public static int doGsensorCalibration(int tolerance) {
-        String[] ret = runCmdInEmSvr(
-                AFMFunctionCallEx.FUNCTION_EM_SENSOR_DO_GSENSOR_CALIBRATION, 1,
-                tolerance);
-        if (ret.length > 0 && String.valueOf(RET_SUCCESS).equals(ret[0])) {
-            return RET_SUCCESS;
-        }
-        return RET_FAILED;
-    }
-
-    public static int getGsensorCalibration(float[] result) {
-        String[] ret = runCmdInEmSvr(
-                AFMFunctionCallEx.FUNCTION_EM_SENSOR_GET_GSENSOR_CALIBRATION, 0);
-        if (ret.length >= 4 && String.valueOf(RET_SUCCESS).equals(ret[0])) {
-            try {
-                result[0] = Float.parseFloat(ret[1]);
-                result[1] = Float.parseFloat(ret[2]);
-                result[2] = Float.parseFloat(ret[3]);
-                return RET_SUCCESS;
-            } catch (NumberFormatException e) {
-                return RET_FAILED;
-            }
-        }
-        return RET_FAILED;
-    }
-
-    public static int clearGsensorCalibration() {
-        String[] ret = runCmdInEmSvr(
-                AFMFunctionCallEx.FUNCTION_EM_SENSOR_CLEAR_GSENSOR_CALIBRATION, 0);
-        if (ret.length > 0 && String.valueOf(RET_SUCCESS).equals(ret[0])) {
-            return RET_SUCCESS;
-        }
-        return RET_FAILED;
-    }
-
-    public static int doGyroscopeCalibration(int tolerance) {
-        String[] ret = runCmdInEmSvr(
-                AFMFunctionCallEx.FUNCTION_EM_SENSOR_DO_GYROSCOPE_CALIBRATION, 1,
-                tolerance);
-        if (ret.length > 0 && String.valueOf(RET_SUCCESS).equals(ret[0])) {
-            return RET_SUCCESS;
-        }
-        return RET_FAILED;
-    }
-
-    public static int getGyroscopeCalibration(float[] result) {
-        String[] ret = runCmdInEmSvr(
-                AFMFunctionCallEx.FUNCTION_EM_SENSOR_GET_GYROSCOPE_CALIBRATION, 0);
-        if (ret.length >= 4 && String.valueOf(RET_SUCCESS).equals(ret[0])) {
-            try {
-                result[0] = Float.parseFloat(ret[1]);
-                result[1] = Float.parseFloat(ret[2]);
-                result[2] = Float.parseFloat(ret[3]);
-                return RET_SUCCESS;
-            } catch (NumberFormatException e) {
-                return RET_FAILED;
-            }
-        }
-        return RET_FAILED;
-    }
-
-    public static int clearGyroscopeCalibration() {
-        String[] ret = runCmdInEmSvr(
-                AFMFunctionCallEx.FUNCTION_EM_SENSOR_CLEAR_GYROSCOPE_CALIBRATION, 0);
-        if (ret.length > 0 && String.valueOf(RET_SUCCESS).equals(ret[0])) {
-            return RET_SUCCESS;
-        }
-        return RET_FAILED;
-    }
-
-    public static int doPsensorCalibration(int min, int max) {
-        String[] ret = runCmdInEmSvr(
-                AFMFunctionCallEx.FUNCTION_EM_SENSOR_DO_CALIBRATION, 2,
-                min, max);
-        if (ret.length > 0 && String.valueOf(RET_SUCCESS).equals(ret[0])) {
-            return RET_SUCCESS;
-        }
-        return RET_FAILED;
-    }
-
-    public static int clearPsensorCalibration() {
-        String[] ret = runCmdInEmSvr(
-                AFMFunctionCallEx.FUNCTION_EM_SENSOR_CLEAR_CALIBRATION, 0);
-        if (ret.length > 0 && String.valueOf(RET_SUCCESS).equals(ret[0])) {
-            return RET_SUCCESS;
-        }
-        return RET_FAILED;
-    }
-
-    public static int setPsensorThreshold(int high, int low) {
-        String[] ret = runCmdInEmSvr(
-                AFMFunctionCallEx.FUNCTION_EM_SENSOR_SET_THRESHOLD, 2,
-                high, low);
-        if (ret.length > 0 && String.valueOf(RET_SUCCESS).equals(ret[0])) {
-            return RET_SUCCESS;
-        }
-        return RET_FAILED;
-    }
-
-    public static native int getPsensorData();
-
-    public static native int getPsensorThreshold(int[] result);
-
-    public static native int calculatePsensorMinValue();
-
-    public static native int getPsensorMinValue();
-
-    public static native int calculatePsensorMaxValue();
-
-    public static native int getPsensorMaxValue();
-
-    public static String[] runCmdInEmSvr(int index, int paramNum, int... param) {
-        ArrayList<String> arrayList = new ArrayList<String>();
-        AFMFunctionCallEx functionCall = new AFMFunctionCallEx();
-        boolean result = functionCall.startCallFunctionStringReturn(index);
-        functionCall.writeParamNo(paramNum);
-        for (int i : param) {
-            functionCall.writeParamInt(i);
-        }
-        if (result) {
-            FunctionReturn r;
-            do {
-                r = functionCall.getNextResult();
-                if (r.mReturnString.isEmpty()) {
-                    break;
-                }
-                arrayList.add(r.mReturnString);
-            } while (r.mReturnCode == AFMFunctionCallEx.RESULT_CONTINUE);
-            if (r.mReturnCode == AFMFunctionCallEx.RESULT_IO_ERR) {
-                Log.d("@M_" + TAG, "AFMFunctionCallEx: RESULT_IO_ERR");
-                arrayList.clear();
-                arrayList.add("ERROR");
-            }
-        } else {
-            Log.d("@M_" + TAG, "AFMFunctionCallEx return false");
-            arrayList.clear();
-            arrayList.add("ERROR");
-        }
-        return arrayList.toArray(new String[arrayList.size()]);
-    }
-
-    static {
-        System.loadLibrary("em_sensor_jni");
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/MSensor.java b/EngineerMode/src/com/mediatek/engineermode/sensor/MSensor.java
deleted file mode 100644
index 0f15f0d..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/MSensor.java
+++ /dev/null
@@ -1,76 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class MSensor extends Activity implements OnItemClickListener {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sensor_calibration_select);
-
-        ListView list = (ListView) findViewById(R.id.list_view_calibration);
-
-        ArrayList<String> items = new ArrayList<String>();
-        items.add(getString(R.string.msensor_current_data));
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, items);
-        list.setAdapter(adapter);
-        list.setOnItemClickListener(this);
-    }
-
-    @Override
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        Intent intent = new Intent();
-        if (0 == arg2) {
-            intent.setClass(this, MSensorCurrentActivity.class);
-            this.startActivity(intent);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/MSensorCurrentActivity.java b/EngineerMode/src/com/mediatek/engineermode/sensor/MSensorCurrentActivity.java
deleted file mode 100644
index 56353bf..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/MSensorCurrentActivity.java
+++ /dev/null
@@ -1,326 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.Elog;
-
-import java.util.concurrent.TimeUnit;
-import android.app.Activity;
-import android.content.pm.ActivityInfo;
-import android.graphics.Canvas;
-import android.graphics.Color;
-import android.graphics.Paint;
-import android.hardware.SensorEventListener;
-import android.hardware.Sensor;
-import android.hardware.SensorEvent;
-import android.hardware.SensorManager;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.SurfaceHolder;
-import android.view.SurfaceView;
-import android.view.SurfaceHolder.Callback;
-import android.widget.TextView;
-import android.widget.Toast;
-
-public class MSensorCurrentActivity extends Activity implements Callback {
-    public static final String TAG = "MSensorCurrentActivity";
-    private static final int MAX_NUM = 800;
-    private static final int DATA_MAG = 0;
-    private static final int DATA_ACC = 1;
-    private static final int BALL_RADIUS = 1;
-    private final Object LOCK = new Object();
-    private SurfaceView mSurface;
-    private SurfaceHolder mHolder;
-    private Paint mBackPaint;
-    private Paint mPaintAls;
-    private Paint mPaintPs;
-    private Paint mPaintLine;
-    private SensorManager mSensorManager = null;
-    private Sensor mMagSensor = null;
-    private int mRate = SensorManager.SENSOR_DELAY_UI;
-    private int mSampleNum = 0;
-    private int mSampleIdx = 0;
-    private float[] mLastValue;
-    private float[] mSampleData;
-    private float[] mSampleAcc;
-    private GameLoop mGameLoop;
-    private boolean mShowLog = false;
-    private boolean mReady = false;
-    private boolean mDataReady = false;
-    private boolean mAccReady = false;
-    private TextView mRawOutput;
-    private int mColorData = Color.RED;
-    private int mColorAcc = Color.GREEN;
-    private int mSampleMax = MAX_NUM;
-
-    public final SensorEventListener mSensorEventListener = new SensorEventListener() {
-
-        // from the android.hardware.SensorEventListener interface
-        @Override
-        public void onSensorChanged(SensorEvent event) {
-            int type = event.sensor.getType();
-            if (type == Sensor.TYPE_MAGNETIC_FIELD) {
-                if (mShowLog) {
-                    Log.d(TAG, "(" + type + ")" + event.values[0]);
-                }
-                synchronized (LOCK) {
-                    mLastValue[DATA_ACC] = event.accuracy;
-                    mAccReady = true;
-
-                    float x = event.values[0];
-                    float y = event.values[1];
-                    float z = event.values[2];
-                    float result = (float) Math
-                            .sqrt((double) (x * x + y * y + z * z));
-                    mLastValue[DATA_MAG] = result;
-                    mDataReady = true;
-                }
-            }
-            String notifyStr = "MSENSOR DATA IS GOOD!";
-            if (event.accuracy != 3) {
-                notifyStr = "MSENSOR DATA IS NOT GOOD!";
-            }
-            mBuffer = "MSensor Data: " + mLastValue[DATA_MAG] + "\n" + "MSensor Accuracy: "
-                    + mLastValue[DATA_ACC] + "\n" + notifyStr;
-            mRawOutput.setText(mBuffer);
-        }
-
-        // from the android.hardware.SensorListener interface
-        @Override
-        public void onAccuracyChanged(Sensor sensor, int accuracy) {
-
-        }
-
-    };
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.sensor_mag_curve);
-
-        mSurface = (SurfaceView) findViewById(R.id.mag_curve_surface);
-        mHolder = mSurface.getHolder();
-        mSurface.getHolder().addCallback(this);
-
-        mBackPaint = new Paint();
-        mBackPaint.setColor(Color.BLACK);
-        mPaintAls = new Paint();
-        mPaintAls.setColor(mColorData);
-        mPaintPs = new Paint();
-        mPaintPs.setColor(mColorAcc);
-        mPaintLine = new Paint();
-
-        mSampleData = new float[mSampleMax];
-        mSampleAcc = new float[mSampleMax];
-        mLastValue = new float[] {0.0f, 0.0f, 0.0f };
-
-        mRawOutput = (TextView) findViewById(R.id.label_mag_curve);
-        // always portrait
-        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
-    }
-
-    @Override
-    protected void onPause() {
-        super.onPause();
-        mSensorManager.unregisterListener(mSensorEventListener);
-        mSensorManager = null;
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-
-        mSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
-        /*
-         * TYPE_MAGNETIC-FIELD : describe a magnetic filed sensor type
-         */
-        mMagSensor = mSensorManager
-                .getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);
-        /*
-         * SENSOR_DELAY_UI : rate suitable for the user interface
-         */
-        if (mMagSensor != null) {
-            mSensorManager.registerListener(mSensorEventListener, mMagSensor,
-                    mRate);
-            mReady = true;
-        } else {
-            mReady = false;
-        }
-    }
-
-    @Override
-    public void surfaceChanged(SurfaceHolder holder, int format, int width,
-            int height) {
-        if (mReady) {
-            mGameLoop = new GameLoop();
-            mGameLoop.start();
-        } else {
-            Toast.makeText(this, "Sensor Not found", Toast.LENGTH_SHORT).show();
-        }
-    }
-
-    @Override
-    public void surfaceCreated(SurfaceHolder holder) {
-        // gameLoop = new GameLoop();
-        // gameLoop.start();
-    }
-
-    private void draw() {
-        // TODO thread safety - the SurfaceView could go away while we are
-        // drawing
-        Canvas c = null;
-        try {
-            // NOTE: in the LunarLander they don't have any synchronization
-            // here,
-            // so I guess this is OK. It will return null if the holder is not
-            // ready
-            c = mHolder.lockCanvas();
-
-            // TODO this needs to synchronize on something
-            if (c != null) {
-                doDraw(c);
-            }
-        } finally {
-            if (c != null) {
-                mHolder.unlockCanvasAndPost(c);
-            }
-        }
-    }
-
-    private String mBuffer;
-
-    private void doDraw(Canvas c) {
-        int top = mSurface.getTop();
-        int width = mSurface.getWidth();
-        int height = mSurface.getHeight();
-        int idx;
-        float ballX, prevX = 0;
-        float[] ballY = new float[3];
-        float[] prevY = new float[3];
-        int offset = 1;
-        int base = 20;
-        float unit_ps = (height - base) / 4.0f;
-        float unit_als = (height - base) / 1088.0f;
-        int font_size = 12;
-        int num;
-        int fst;
-
-        if (width < mSampleMax) {
-            mSampleMax = width - 10;
-        }
-        c.drawRect(0, 0, width, height, mBackPaint);
-        mPaintLine.setColor(Color.WHITE);
-        c.drawLine(0, height - base, width, height - base, mPaintLine);
-        mPaintLine.setTextSize(font_size);
-        mPaintLine.setColor(mColorData);
-        c.drawText("DATA", 2, (height - base) + font_size, mPaintLine);
-        mPaintLine.setColor(mColorAcc);
-        c.drawText("ACC", 40, (height - base) + font_size, mPaintLine);
-
-        // Log.d(TAG, "dimension: "+top+","+width+","+height+","+base);
-
-        synchronized (LOCK) {
-            mSampleData[mSampleIdx] = mLastValue[DATA_MAG];
-            mSampleAcc[mSampleIdx] = mLastValue[DATA_ACC];
-            mSampleIdx = (mSampleIdx + 1) % mSampleMax;
-            if (mAccReady && mDataReady && (mSampleNum < mSampleMax)) {
-                mSampleNum++;
-            }
-            num = Math.min(width / offset, mSampleNum);
-            fst = mSampleIdx - num;
-        }
-        int pos;
-
-        if (fst < 0) {
-            fst += mSampleMax;
-        }
-        for (idx = 0; idx < num; idx += offset) {
-            pos = (fst + idx) % mSampleMax;
-            ballX = idx;
-
-            ballY[DATA_MAG] = height - base - mSampleData[pos] * unit_als;
-            ballY[DATA_ACC] = height - base - mSampleAcc[pos] * unit_ps;
-            if (ballY[DATA_MAG] < 0) {
-                ballY[DATA_MAG] = 0;
-                Elog.w(TAG, " Data value is larger than 1088");
-            }
-            c.drawCircle(ballX, ballY[DATA_MAG], BALL_RADIUS, mPaintAls);
-            c.drawCircle(ballX, ballY[DATA_ACC], BALL_RADIUS, mPaintPs);
-            if (idx != 0) {
-                c.drawLine(prevX, prevY[DATA_MAG], ballX, ballY[DATA_MAG],
-                        mPaintAls);
-                c.drawLine(prevX, prevY[DATA_ACC], ballX, ballY[DATA_ACC],
-                        mPaintPs);
-            }
-            prevX = ballX;
-            prevY[DATA_MAG] = ballY[DATA_MAG];
-            prevY[DATA_ACC] = ballY[DATA_ACC];
-        }
-    }
-
-    @Override
-    public void surfaceDestroyed(SurfaceHolder holder) {
-        try {
-            if (mGameLoop != null) {
-                mGameLoop.safeStop();
-            }
-        } finally {
-            mGameLoop = null;
-        }
-    }
-
-    private class GameLoop extends Thread {
-        private volatile boolean running = true;
-
-        @Override
-        public void run() {
-            while (running) {
-                try {
-                    TimeUnit.MILLISECONDS.sleep(100);
-                    draw();
-                } catch (InterruptedException ie) {
-                    running = false;
-                }
-            }
-        }
-
-        public void safeStop() {
-            running = false;
-            interrupt();
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/PSensor.java b/EngineerMode/src/com/mediatek/engineermode/sensor/PSensor.java
deleted file mode 100644
index 5603855..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/PSensor.java
+++ /dev/null
@@ -1,80 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class PSensor extends Activity implements OnItemClickListener {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sensor_calibration_select);
-
-        ListView list = (ListView) findViewById(R.id.list_view_calibration);
-
-        ArrayList<String> items = new ArrayList<String>();
-        items.add(getString(R.string.psensor_calibration_select));
-        items.add(getString(R.string.psensor_data_collection));
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, items);
-        list.setAdapter(adapter);
-        list.setOnItemClickListener(this);
-    }
-
-    @Override
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        Intent intent = new Intent();
-        if (0 == arg2) {
-            intent.setClass(this, PSensorCalibrationSelect.class);
-            this.startActivity(intent);
-        } else if (1 == arg2) {
-            intent.setClass(this, PSensorCollection.class);
-            this.startActivity(intent);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorCalibration.java b/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorCalibration.java
deleted file mode 100644
index 8429301..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorCalibration.java
+++ /dev/null
@@ -1,334 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import android.app.Activity;
-import android.hardware.SensorEventListener;
-import android.hardware.Sensor;
-import android.hardware.SensorEvent;
-import android.hardware.SensorManager;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Message;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-
-import java.util.Locale;
-
-public class PSensorCalibration extends Activity implements OnClickListener {
-    private static final String TAG = "PSensorCalibration";
-    private static final int UPDATE_INTERVAL = 50;
-
-    private static final int MSG_CALCULATE_MIN_VALUE = 0;
-    private static final int MSG_CALCULATE_MAX_VALUE = 1;
-    private static final int MSG_DO_CALIBRARION = 2;
-    private static final int MSG_CLEAR_CALIBRARION = 3;
-    private static final int MSG_GET_DATA = 4;
-    private static final int MSG_UPDATE_DATA = 5;
-
-    private static final int MSG_CALCULATE_SUCCESS = 6;
-    private static final int MSG_CALCULATE_FAILURE = 7;
-    private static final int MSG_GET_DATA_SUCCESS = 8;
-    private static final int MSG_GET_DATA_FAILURE = 9;
-    private static final int MSG_CALIBRARION_SUCCESS = 10;
-    private static final int MSG_CALIBRARION_FAILURE = 11;
-    private static final int MSG_CLEAR_SUCCESS = 12;
-    private static final int MSG_CLEAR_FAILURE = 13;
-
-    private Button mGetMin;
-    private Button mGetMax;
-    private Button mDoCalibration;
-    private Button mClearCalibration;
-    private TextView mCurrentData;
-    private TextView mMinValue;
-    private TextView mMaxValue;
-    private TextView mResult;
-    private Toast mToast;
-
-    private int mData = 0;
-    private int mHigh = 0;
-    private int mLow = 0;
-    private int mMin = 0;
-    private int mMax = 0;
-
-    private final HandlerThread mHandlerThread = new HandlerThread("async_handler");
-    private Handler mHandler;
-    private Handler mUiHandler;
-
-    private SensorManager mSensorManager = null;
-    private Sensor mSensor = null;
-    private SensorEventListener mSensorEventListener = new SensorEventListener() {
-        @Override
-        public void onSensorChanged(SensorEvent event) {
-            // Do nothing
-        }
-
-        @Override
-        public void onAccuracyChanged(Sensor sensor, int accuracy) {
-            // Do nothing
-        }
-    };
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sensor_ps_calibration);
-
-        mGetMin = (Button) findViewById(R.id.button_sensor_ps_calibration_get_min);
-        mGetMax = (Button) findViewById(R.id.button_sensor_ps_calibration_get_max);
-        mDoCalibration = (Button) findViewById(R.id.button_sensor_ps_calibration_do_cali);
-        mClearCalibration = (Button) findViewById(R.id.button_sensor_ps_calibration_clear_cali);
-
-        mGetMin.setOnClickListener(this);
-        mGetMax.setOnClickListener(this);
-        mDoCalibration.setOnClickListener(this);
-        mClearCalibration.setOnClickListener(this);
-
-        mCurrentData = (TextView) findViewById(R.id.text_sensor_ps_calibration_current_data);
-        mMinValue = (TextView) findViewById(R.id.text_sensor_ps_calibration_min_value);
-        mMaxValue = (TextView) findViewById(R.id.text_sensor_ps_calibration_max_value);
-        mResult = (TextView) findViewById(R.id.text_sensor_ps_calibration_result);
-
-        mUiHandler = new Handler() {
-            public void handleMessage(Message msg) {
-                switch (msg.what) {
-                case MSG_CALCULATE_SUCCESS:
-                    Log.d("@M_" + TAG, "set success");
-                    enableButtons(true);
-                    mMinValue.setText(String.valueOf(mMin));
-                    mMaxValue.setText(String.valueOf(mMax));
-                    showToast("Calculate succeed");
-                    break;
-                case MSG_CALCULATE_FAILURE:
-                    Log.d("@M_" + TAG, "set fail");
-                    enableButtons(true);
-                    showToast("Calculate failed");
-                    break;
-                case MSG_GET_DATA_SUCCESS:
-                    enableButtons(true);
-                    mCurrentData.setText(String.format(Locale.ENGLISH,
-                            getString(R.string.sensor_ps_calibration_current_data_format),
-                            mData, mHigh, mLow));
-                    mMinValue.setText(String.valueOf(mMin));
-                    mMaxValue.setText(String.valueOf(mMax));
-                    break;
-                case MSG_GET_DATA_FAILURE:
-                    Log.d("@M_" + TAG, "get fail");
-                    enableButtons(true);
-                    showToast("Get PS data failed");
-                    break;
-                case MSG_CALIBRARION_FAILURE:
-                    Log.d("@M_" + TAG, "cali fail");
-                    enableButtons(true);
-                    showToast("Calibration failed");
-                    mResult.setText("FAIL");
-                    break;
-                case MSG_CALIBRARION_SUCCESS:
-                    Log.d("@M_" + TAG, "cali success");
-                    enableButtons(true);
-                    showToast("Calibration succeed");
-                    mResult.setText("PASS");
-                    break;
-                case MSG_CLEAR_FAILURE:
-                    Log.d("@M_" + TAG, "clear fail");
-                    enableButtons(true);
-                    showToast("Clear failed");
-                    mResult.setText("");
-                    break;
-                case MSG_CLEAR_SUCCESS:
-                    Log.d("@M_" + TAG, "clear success");
-                    enableButtons(true);
-                    showToast("Clear succeed");
-                    mResult.setText("");
-                    break;
-                default:
-                }
-            }
-        };
-
-        mHandlerThread.start();
-        mHandler = new Handler(mHandlerThread.getLooper()) {
-            public void handleMessage(Message msg) {
-                calibration(msg.what);
-            }
-        };
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        Log.d("@M_" + TAG, "onResume()");
-        mSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
-        mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_PROXIMITY);
-        mSensorManager.registerListener(mSensorEventListener, mSensor, SensorManager.SENSOR_DELAY_UI);
-
-        mHandler.sendEmptyMessage(MSG_GET_DATA);
-    }
-
-    @Override
-    protected void onPause() {
-        Log.d("@M_" + TAG, "onPause()");
-        mSensorManager.unregisterListener(mSensorEventListener);
-        mSensorManager = null;
-
-        mHandler.removeMessages(MSG_UPDATE_DATA);
-        super.onPause();
-    }
-
-    @Override
-    public void onClick(View arg0) {
-        if (arg0.getId() == mGetMin.getId()) {
-            Log.d("@M_" + TAG, "get min");
-            mHandler.sendEmptyMessage(MSG_CALCULATE_MIN_VALUE);
-        } else if (arg0.getId() == mGetMax.getId()) {
-            Log.d("@M_" + TAG, "get max");
-            mHandler.sendEmptyMessage(MSG_CALCULATE_MAX_VALUE);
-        } else if (arg0.getId() == mDoCalibration.getId()) {
-            Log.d("@M_" + TAG, "do calibration");
-            mHandler.sendEmptyMessage(MSG_DO_CALIBRARION);
-        } else if (arg0.getId() == mClearCalibration.getId()) {
-            Log.d("@M_" + TAG, "clear calibration");
-            mHandler.sendEmptyMessage(MSG_CLEAR_CALIBRARION);
-        }
-        enableButtons(false);
-    }
-
-    private void getCurrentData() {
-        Log.d("@M_" + TAG, "getCurrentData()");
-        mData = EmSensor.getPsensorData();
-        Log.d("@M_" + TAG, String.format("getPsensorData(), ret %d", mData));
-
-        mMin = EmSensor.getPsensorMinValue();
-        Log.d("@M_" + TAG, String.format("getPsensorMinValue(), ret %d", mMin));
-
-        mMax = EmSensor.getPsensorMaxValue();
-        Log.d("@M_" + TAG, String.format("getPsensorMaxValue(), ret %d", mMax));
-
-        int[] result = new int[2];
-        EmSensor.getPsensorThreshold(result);
-        Log.d("@M_" + TAG, String.format("getPsensorThreshold(), ret %d, %d", result[0], result[1]));
-        mHigh = result[0];
-        mLow = result[1];
-
-        mUiHandler.sendEmptyMessage(MSG_GET_DATA_SUCCESS);
-    }
-
-    private void calibration(int what) {
-        int result = 0;
-        if (what != MSG_UPDATE_DATA) {
-            Log.d("@M_" + TAG, String.format("calibration(), operation %d", what));
-        }
-
-        switch (what) {
-        case MSG_GET_DATA:
-            getCurrentData();
-            mHandler.sendEmptyMessageDelayed(MSG_UPDATE_DATA, UPDATE_INTERVAL);
-            break;
-        case MSG_UPDATE_DATA:
-            mData = EmSensor.getPsensorData();
-            mUiHandler.sendEmptyMessage(MSG_GET_DATA_SUCCESS);
-            mHandler.sendEmptyMessageDelayed(MSG_UPDATE_DATA, UPDATE_INTERVAL);
-            break;
-        case MSG_DO_CALIBRARION:
-            result = EmSensor.doPsensorCalibration(mMin, mMax);
-            if (result == EmSensor.RET_SUCCESS) {
-                getCurrentData();
-                mUiHandler.sendEmptyMessage(MSG_CALIBRARION_SUCCESS);
-            } else {
-                mUiHandler.sendEmptyMessage(MSG_CALIBRARION_FAILURE);
-            }
-            break;
-        case MSG_CLEAR_CALIBRARION:
-            result = EmSensor.clearPsensorCalibration();
-            if (result == EmSensor.RET_SUCCESS) {
-                getCurrentData();
-                mUiHandler.sendEmptyMessage(MSG_CLEAR_SUCCESS);
-            } else {
-                mUiHandler.sendEmptyMessage(MSG_CLEAR_FAILURE);
-            }
-            break;
-        case MSG_CALCULATE_MIN_VALUE:
-            result = EmSensor.calculatePsensorMinValue();
-            if (result == EmSensor.RET_SUCCESS) {
-                mMin = EmSensor.getPsensorMinValue();
-                Log.d("@M_" + TAG, String.format("getPsensorMinValue(), ret %d", mMin));
-                mUiHandler.sendEmptyMessage(MSG_CALCULATE_SUCCESS);
-            } else {
-                mUiHandler.sendEmptyMessage(MSG_CALCULATE_FAILURE);
-            }
-            break;
-        case MSG_CALCULATE_MAX_VALUE:
-            result = EmSensor.calculatePsensorMaxValue();
-            if (result == EmSensor.RET_SUCCESS) {
-                mMax = EmSensor.getPsensorMaxValue();
-                Log.d("@M_" + TAG, String.format("getPsensorMaxValue(), ret %d", mMax));
-                mUiHandler.sendEmptyMessage(MSG_CALCULATE_SUCCESS);
-            } else {
-                mUiHandler.sendEmptyMessage(MSG_CALCULATE_FAILURE);
-            }
-            break;
-        default:
-            break;
-        }
-        if (what != MSG_UPDATE_DATA) {
-            Log.d("@M_" + TAG, String.format("calibration(), ret %d", result));
-        }
-    }
-
-    private void enableButtons(boolean enable) {
-        mGetMin.setClickable(enable);
-        mGetMax.setClickable(enable);
-        mDoCalibration.setClickable(enable);
-    }
-
-    private void showToast(String msg) {
-        if (mToast != null) {
-            mToast.cancel();
-        }
-        mToast = Toast.makeText(this, msg, Toast.LENGTH_SHORT);
-        mToast.show();
-    }
-}
-
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorCalibrationSelect.java b/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorCalibrationSelect.java
deleted file mode 100644
index 0ff093e..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorCalibrationSelect.java
+++ /dev/null
@@ -1,80 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class PSensorCalibrationSelect extends Activity implements OnItemClickListener {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sensor_calibration_select);
-
-        ListView list = (ListView) findViewById(R.id.list_view_calibration);
-
-        ArrayList<String> items = new ArrayList<String>();
-        items.add(getString(R.string.psensor_calibration));
-        items.add(getString(R.string.psensor_change_threshold));
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, items);
-        list.setAdapter(adapter);
-        list.setOnItemClickListener(this);
-    }
-
-    @Override
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        Intent intent = new Intent();
-        if (0 == arg2) {
-            intent.setClass(this, PSensorCalibration.class);
-            this.startActivity(intent);
-        } else if (1 == arg2) {
-            intent.setClass(this, PSensorChangeThreshold.class);
-            this.startActivity(intent);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorChangeThreshold.java b/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorChangeThreshold.java
deleted file mode 100644
index 5e8d1dc..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorChangeThreshold.java
+++ /dev/null
@@ -1,186 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import android.app.Activity;
-import android.hardware.SensorEventListener;
-import android.hardware.Sensor;
-import android.hardware.SensorEvent;
-import android.hardware.SensorManager;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Message;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-
-
-public class PSensorChangeThreshold extends Activity implements OnClickListener {
-    private static final String TAG = "PSensorChangeThreshold";
-    private static final int MSG_CHANGE_THRESHOLD = 0;
-    private static final int MSG_SET_SUCCESS = 1;
-    private static final int MSG_SET_FAILURE = 2;
-    private static final int MSG_INVALID_NUMBER = 3;
-    private static final int THRESHOLD_MIN = 0;
-    private static final int THRESHOLD_MAX = 65535;
-
-    private Button mBtnSet;
-    private EditText mEtHigh;
-    private EditText mEtLow;
-    private Toast mToast;
-
-    private final HandlerThread mHandlerThread = new HandlerThread("async_handler");
-    private Handler mHandler;
-    private Handler mUiHandler;
-
-    private SensorManager mSensorManager = null;
-    private Sensor mSensor = null;
-    private SensorEventListener mSensorEventListener = new SensorEventListener() {
-        @Override
-        public void onSensorChanged(SensorEvent event) {
-            // Do nothing
-        }
-
-        @Override
-        public void onAccuracyChanged(Sensor sensor, int accuracy) {
-            // Do nothing
-        }
-    };
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sensor_ps_change_threshold);
-
-        mBtnSet = (Button) findViewById(R.id.button_sensor_ps_change_threshold);
-        mBtnSet.setOnClickListener(this);
-
-        mEtHigh = (EditText) findViewById(R.id.edit_sensor_ps_threshold_high);
-        mEtLow = (EditText) findViewById(R.id.edit_sensor_ps_threshold_low);
-
-        mUiHandler = new Handler() {
-            public void handleMessage(Message msg) {
-                switch (msg.what) {
-                case MSG_SET_SUCCESS:
-                    Log.d("@M_" + TAG, "set success");
-                    mBtnSet.setClickable(true);
-                    showToast("Set threshold succeed");
-                    break;
-                case MSG_SET_FAILURE:
-                    Log.d("@M_" + TAG, "set fail");
-                    mBtnSet.setClickable(true);
-                    showToast("Set threshold failed");
-                    break;
-                case MSG_INVALID_NUMBER:
-                    Log.d("@M_" + TAG, "set fail");
-                    mBtnSet.setClickable(true);
-                    showToast("Invalid value");
-                    break;
-                default:
-                }
-            }
-        };
-
-        mHandlerThread.start();
-        mHandler = new Handler(mHandlerThread.getLooper()) {
-            public void handleMessage(Message msg) {
-                if (MSG_CHANGE_THRESHOLD == msg.what) {
-                    Log.d("@M_" + TAG, String.format("MSG_CHANGE_THRESHOLD"));
-                    int high = 0, low = 0;
-                    try {
-                        high = Integer.parseInt(mEtHigh.getText().toString());
-                        low = Integer.parseInt(mEtLow.getText().toString());
-                        if (high < THRESHOLD_MIN || high > THRESHOLD_MAX || low < THRESHOLD_MIN || low > THRESHOLD_MAX) {
-                            throw new NumberFormatException("");
-                        }
-                    } catch (NumberFormatException e) {
-                        mUiHandler.sendEmptyMessage(MSG_INVALID_NUMBER);
-                        return;
-                    }
-
-                    if (EmSensor.RET_SUCCESS == EmSensor.setPsensorThreshold(high, low)) {
-                        mUiHandler.sendEmptyMessage(MSG_SET_SUCCESS);
-                    } else {
-                        mUiHandler.sendEmptyMessage(MSG_SET_FAILURE);
-                    }
-                }
-            }
-        };
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        Log.d("@M_" + TAG, "onResume()");
-        mSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
-        mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_PROXIMITY);
-        mSensorManager.registerListener(mSensorEventListener, mSensor, SensorManager.SENSOR_DELAY_UI);
-    }
-
-    @Override
-    protected void onPause() {
-        Log.d("@M_" + TAG, "onPause()");
-        mSensorManager.unregisterListener(mSensorEventListener);
-        mSensorManager = null;
-        super.onPause();
-    }
-
-    @Override
-    public void onClick(View arg0) {
-        if (arg0.getId() == mBtnSet.getId()) {
-            Log.d("@M_" + TAG, "change threshold");
-            mHandler.sendEmptyMessage(MSG_CHANGE_THRESHOLD);
-        }
-        mBtnSet.setClickable(false);
-    }
-
-    private void showToast(String msg) {
-        if (mToast != null) {
-            mToast.cancel();
-        }
-        mToast = Toast.makeText(this, msg, Toast.LENGTH_SHORT);
-        mToast.show();
-    }
-}
-
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorCollection.java b/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorCollection.java
deleted file mode 100644
index 2fc6a9b..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/PSensorCollection.java
+++ /dev/null
@@ -1,172 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.Elog;
-import android.app.Activity;
-import android.hardware.SensorEventListener;
-import android.hardware.Sensor;
-import android.hardware.SensorEvent;
-import android.hardware.SensorManager;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.TextView;
-import android.widget.Button;
-
-public class PSensorCollection extends Activity {
-    public static final String TAG = "PSensorCollectionLog";
-    private static final int COUNT = 22;
-    private static final float[] data = {0.5f, 1f, 1.5f, 2f, 2.5f, 3f, 3.5f, 4f, 4.5f, 5f,
-                        5.5f, 6f, 6.5f, 7f, 7.5f, 8f, 8.5f, 9f, 9.5f, 10f, 10.5f, 11f}; //new float[COUNT];
-
-    private int[] dis = new int[COUNT];
-    private CollectionCurveView mCurveView = null;
-    private TextView[] mText = new TextView[COUNT];
-    private TextView[] mDataText = new TextView[COUNT];
-
-    private Button mClearButton = null;
-    private Button mGetButton = null;
-    private int mCurrentIndex = -1;
-
-    private SensorManager mSensorManager = null;
-    private Sensor mSensor = null;
-    private SensorEventListener mSensorEventListener = new SensorEventListener() {
-        @Override
-        public void onSensorChanged(SensorEvent event) {
-            // Do nothing
-        }
-
-        @Override
-        public void onAccuracyChanged(Sensor sensor, int accuracy) {
-            // Do nothing
-        }
-    };
-   private final Button.OnClickListener mClickListener = new Button.OnClickListener() {
-        @Override
-        public void onClick(View arg0) {
-            Elog.v(TAG, "onClick button view is "
-                    + ((Button) arg0).getText());
-            if (arg0.equals(mClearButton)) {
-                clearData();
-                if (mCurrentIndex == -1) {
-                    mClearButton.setEnabled(false);
-                }
-            } else if (arg0.equals(mGetButton)) {
-                getData();
-                mClearButton.setEnabled(true);
-            }
-        }
-    };
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sensor_ps_collection);
-        mCurveView = (CollectionCurveView) findViewById(R.id.curve_view);
-        mClearButton = (Button) findViewById(R.id.btn_clear);
-        mGetButton = (Button) findViewById(R.id.btn_get);
-        mClearButton.setOnClickListener(mClickListener);
-        mGetButton.setOnClickListener(mClickListener);
-
-        int[] tx_id = {R.id.tx_1, R.id.tx_2, R.id.tx_3, R.id.tx_4, R.id.tx_5, R.id.tx_6, R.id.tx_7, R.id.tx_8, R.id.tx_9,
-                        R.id.tx_10, R.id.tx_11, R.id.tx_12, R.id.tx_13, R.id.tx_14, R.id.tx_15, R.id.tx_16, R.id.tx_17,
-                    R.id.tx_18, R.id.tx_19, R.id.tx_20, R.id.tx_21, R.id.tx_22};
-        int[] data_tx_id = {R.id.data_tx_1, R.id.data_tx_2, R.id.data_tx_3, R.id.data_tx_4, R.id.data_tx_5, R.id.data_tx_6,
-                            R.id.data_tx_7, R.id.data_tx_8, R.id.data_tx_9, R.id.data_tx_10, R.id.data_tx_11, R.id.data_tx_12,
-                            R.id.data_tx_13, R.id.data_tx_14, R.id.data_tx_15, R.id.data_tx_16, R.id.data_tx_17, R.id.data_tx_18,
-                        R.id.data_tx_19, R.id.data_tx_20, R.id.data_tx_21, R.id.data_tx_22};
-        for (int i = 0; i < COUNT; i++) {
-            mText[i] = (TextView) findViewById(tx_id[i]);
-            mDataText[i] = (TextView) findViewById(data_tx_id[i]);
-        }
-
-        for (int i = 0; i < COUNT; i++) {
-            mText[i].setText(Float.toString(data[i]) + " ");
-        }
-
-        for (int i = 0; i < COUNT; i++) {
-            mDataText[i].setText("    ");
-        }
-        mCurveView.setDistance(null);
-        mClearButton.setEnabled(false);
-    }
-
-    private void clearData() {
-        Elog.v(TAG, "Clear psensor data: ");
-        if (mCurrentIndex == -1) {
-            return;
-        }
-
-        mDataText[mCurrentIndex].setText(" ");
-        mCurrentIndex--;
-
-        mCurveView.setDistance(null);
-        mCurveView.postInvalidate();
-    }
-
-    private void getData() {
-        Elog.v(TAG, "Get psensor data: ");
-
-        if (mCurrentIndex == COUNT - 1) {
-            return;
-        }
-        mCurrentIndex++;
-        dis[mCurrentIndex] = EmSensor.getPsensorData();
-        Elog.v(TAG, "Get " + mCurrentIndex + " data :" + Integer.toString(dis[mCurrentIndex]));
-
-        mDataText[mCurrentIndex].setText(Integer.toString(dis[mCurrentIndex]) + " ");
-
-        if (mCurrentIndex == COUNT - 1) { // Update curve when data is full.
-            mCurveView.setDistance(dis);
-            mCurveView.postInvalidate();
-        }
-    }
-    @Override
-    protected void onPause() {
-        mSensorManager.unregisterListener(mSensorEventListener);
-        mSensorManager = null;
-        super.onPause();
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        mSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
-        mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_PROXIMITY);
-        mSensorManager.registerListener(mSensorEventListener, mSensor, SensorManager.SENSOR_DELAY_UI);
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/Sensor.java b/EngineerMode/src/com/mediatek/engineermode/sensor/Sensor.java
deleted file mode 100644
index 4efced7..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/Sensor.java
+++ /dev/null
@@ -1,88 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.FeatureSupport;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class Sensor extends Activity implements OnItemClickListener {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sensor_calibration_select);
-
-        ListView list = (ListView) findViewById(R.id.list_view_calibration);
-
-        ArrayList<String> items = new ArrayList<String>();
-        items.add(getString(R.string.sensor_data));
-        if (!FeatureSupport.isSupported(FeatureSupport.FK_MTK_WEARABLE_PLATFORM)) {
-            items.add(getString(R.string.sensor_ps));
-        }
-        items.add("Sensors Calibration");
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, items);
-        list.setAdapter(adapter);
-        list.setOnItemClickListener(this);
-    }
-
-    @Override
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        Intent intent = new Intent();
-        if (0 == arg2) {
-            intent.setClass(this, MSensor.class);
-            this.startActivity(intent);
-        } else if (1 == arg2) {
-            intent.setClass(this, PSensor.class);
-            this.startActivity(intent);
-        }
-        else if (2 == arg2) {
-            intent.setClass(this, SensorCalibrationSelect.class);
-            this.startActivity(intent);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/SensorCalibration.java b/EngineerMode/src/com/mediatek/engineermode/sensor/SensorCalibration.java
deleted file mode 100644
index 1ae63af..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/SensorCalibration.java
+++ /dev/null
@@ -1,293 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import android.app.Activity;
-import android.hardware.SensorEventListener;
-import android.hardware.Sensor;
-import android.hardware.SensorEvent;
-import android.hardware.SensorManager;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Message;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.TextView;
-import android.widget.Toast;
-import com.mediatek.engineermode.R;
-import java.util.Locale;
-
-public class SensorCalibration extends Activity implements OnClickListener {
-    public static final String CALIBRAION_TYPE = "type";
-    public static final int GSENSOR = 0;
-    public static final int GYROSCOPE = 1;
-    private static final String TAG = "SensorCalibration";
-    private static final int MSG_DO_CALIBRARION_20 = 0;
-    private static final int MSG_DO_CALIBRARION_40 = 1;
-    private static final int MSG_CLEAR_CALIBRARION = 2;
-    private static final int MSG_GET_CALIBRARION = 3;
-    private static final int MSG_SET_SUCCESS = 4;
-    private static final int MSG_GET_SUCCESS = 5;
-    private static final int MSG_SET_FAILURE = 6;
-    private static final int MSG_GET_FAILURE = 7;
-    private static final int TOLERANCE_20 = 2;
-    private static final int TOLERANCE_40 = 4;
-    private static final String[] SENSOR_NAME = {"GSENSOR", "GYROSCOPE"};
-
-    private Button mSetCalibration20;
-    private Button mSetCalibration40;
-    private Button mClearCalibration;
-    private TextView mCaliData;
-    private TextView mCurrentData;
-    private Toast mToast;
-
-    private int mType;
-    private int mSensorType;
-    private String mData;
-
-    private final HandlerThread mHandlerThread = new HandlerThread("async_handler");
-    private Handler mHandler;
-    private Handler mUiHandler;
-
-    private SensorManager mSensorManager = null;
-    private Sensor mSensor = null;
-    private SensorEventListener mSensorEventListener = new SensorEventListener() {
-        @Override
-        public void onSensorChanged(SensorEvent event) {
-            if (event.sensor.getType() == mSensorType) {
-                Log.d("@M_" + TAG, String.format("onSensorChanged(), type %d, values %f, %f, %f",
-                        event.sensor.getType(), event.values[0], event.values[1], event.values[2]));
-                mCurrentData.setText(String.format(Locale.ENGLISH, "%+8.4f,%+8.4f,%+8.4f",
-                        event.values[0], event.values[1], event.values[2]));
-            }
-        }
-
-        @Override
-        public void onAccuracyChanged(Sensor sensor, int accuracy) {
-            // Do nothing
-        }
-    };
-
-    private String getSensorName(int type) {
-        if (type < 0 || type >= SENSOR_NAME.length) {
-            return "Sensor";
-        }
-        return SENSOR_NAME[type];
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sensor_calibration);
-
-        mType = getIntent().getIntExtra(CALIBRAION_TYPE, GSENSOR);
-        Log.d("@M_" + TAG, String.format("onCreate(), type %d", mType));
-        if (mType == GSENSOR) {
-            mSensorType = Sensor.TYPE_ACCELEROMETER;
-            setTitle(R.string.sensor_calibration_gsensor);
-        } else {
-            mSensorType = Sensor.TYPE_GYROSCOPE;
-            setTitle(R.string.sensor_calibration_gyroscope);
-        }
-
-        mSetCalibration20 = (Button) findViewById(R.id.button_sensor_calibration_do_20);
-        mSetCalibration40 = (Button) findViewById(R.id.button_sensor_calibration_do_40);
-        mClearCalibration = (Button) findViewById(R.id.button_sensor_calibration_clear);
-
-        mSetCalibration20.setOnClickListener(this);
-        mSetCalibration40.setOnClickListener(this);
-        mClearCalibration.setOnClickListener(this);
-
-        mCurrentData = (TextView) findViewById(R.id.text_sensor_calibration_current_data);
-        mCurrentData.setText("");
-        mCaliData = (TextView) findViewById(R.id.text_sensor_calibration_cali_data);
-        mCaliData.setText("");
-
-        mUiHandler = new Handler() {
-            public void handleMessage(Message msg) {
-                switch (msg.what) {
-                case MSG_SET_SUCCESS:
-                    Log.d("@M_" + TAG, "set success");
-                    enableButtons(true);
-                    showToast("Operation succeed");
-                    break;
-                case MSG_GET_SUCCESS:
-                    Log.d("@M_" + TAG, "get success");
-                    mCaliData.setText(mData);
-                    break;
-                case MSG_SET_FAILURE:
-                    Log.d("@M_" + TAG, "set fail");
-                    enableButtons(true);
-                    showToast("Operation failed");
-                    break;
-                case MSG_GET_FAILURE:
-                    Log.d("@M_" + TAG, "get fail");
-                    enableButtons(true);
-                    showToast("Get calibration failed");
-                    break;
-                default:
-                }
-            }
-        };
-
-        mHandlerThread.start();
-        mHandler = new Handler(mHandlerThread.getLooper()) {
-            public void handleMessage(Message msg) {
-                if (MSG_GET_CALIBRARION == msg.what) {
-                    getCalibration();
-                } else {
-                    setCalibration(msg.what);
-                }
-            }
-        };
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        Log.d("@M_" + TAG, String.format("onResume(), type %d", mType));
-        mSensorManager = (SensorManager) getSystemService(SENSOR_SERVICE);
-        mSensor = mSensorManager.getDefaultSensor(mSensorType);
-        if (mSensor != null) {
-            Log.d("@M_" + TAG, "registerListener");
-            mSensorManager.registerListener(mSensorEventListener, mSensor, SensorManager.SENSOR_DELAY_UI);
-        } else {
-            Toast.makeText(this, getSensorName(mType) + " was not supported.",
-                    Toast.LENGTH_SHORT).show();
-            finish();
-        }
-        mHandler.sendEmptyMessage(MSG_GET_CALIBRARION);
-    }
-
-    @Override
-    public void onPause() {
-        Log.d("@M_" + TAG, String.format("onPause(), type %d", mType));
-        Log.d("@M_" + TAG, "unregisterListener");
-        mSensorManager.unregisterListener(mSensorEventListener);
-        mSensorManager = null;
-        super.onPause();
-    }
-
-    @Override
-    public void onClick(View arg0) {
-        if (arg0.getId() == mSetCalibration20.getId()) {
-            Log.d("@M_" + TAG, "do calibration 20");
-            mHandler.sendEmptyMessage(MSG_DO_CALIBRARION_20);
-        } else if (arg0.getId() == mSetCalibration40.getId()) {
-            Log.d("@M_" + TAG, "do calibration 40");
-            mHandler.sendEmptyMessage(MSG_DO_CALIBRARION_40);
-        } else if (arg0.getId() == mClearCalibration.getId()) {
-            Log.d("@M_" + TAG, "clear calibration");
-            mHandler.sendEmptyMessage(MSG_CLEAR_CALIBRARION);
-        }
-        enableButtons(false);
-    }
-
-    private boolean getCalibration() {
-        Log.d("@M_" + TAG, "getGsensorCalibration()");
-        float[] result = new float[3];
-        int ret = 0;
-        if (mType == GSENSOR) {
-            ret = EmSensor.getGsensorCalibration(result);
-        } else {
-            ret = EmSensor.getGyroscopeCalibration(result);
-        }
-        Log.d("@M_" + TAG, String.format("getGsensorCalibration(), ret %d, values %f, %f, %f",
-                ret, result[0], result[1], result[2]));
-
-        if (ret == EmSensor.RET_SUCCESS) {
-            mData = String.format(Locale.ENGLISH, "%+8.4f,%+8.4f,%+8.4f",
-                    result[0], result[1], result[2]);
-            mUiHandler.sendEmptyMessage(MSG_GET_SUCCESS);
-            return true;
-        } else {
-            mData = "";
-            mUiHandler.sendEmptyMessage(MSG_GET_FAILURE);
-            return false;
-        }
-    }
-
-    private void setCalibration(int what) {
-        int result = 0;
-        Log.d("@M_" + TAG, String.format("setCalibration(), operation %d", what));
-        if (mType == GSENSOR) {
-            if (MSG_DO_CALIBRARION_20 == what) {
-                result = EmSensor.doGsensorCalibration(TOLERANCE_20);
-            } else if (MSG_DO_CALIBRARION_40 == what) {
-                result = EmSensor.doGsensorCalibration(TOLERANCE_40);
-            } else if (MSG_CLEAR_CALIBRARION == what) {
-                result = EmSensor.clearGsensorCalibration();
-            }
-        } else if (mType == GYROSCOPE) {
-            if (MSG_DO_CALIBRARION_20 == what) {
-                result = EmSensor.doGyroscopeCalibration(TOLERANCE_20);
-            } else if (MSG_DO_CALIBRARION_40 == what) {
-                result = EmSensor.doGyroscopeCalibration(TOLERANCE_40);
-            } else if (MSG_CLEAR_CALIBRARION == what) {
-                result = EmSensor.clearGyroscopeCalibration();
-            }
-        }
-        Log.d("@M_" + TAG, String.format("setCalibration(), ret %d", result));
-
-        if (result == EmSensor.RET_SUCCESS) {
-            if (getCalibration()) {
-                mUiHandler.sendEmptyMessage(MSG_SET_SUCCESS);
-            }
-        } else {
-            mUiHandler.sendEmptyMessage(MSG_SET_FAILURE);
-        }
-    }
-
-    private void enableButtons(boolean enable) {
-        mSetCalibration20.setClickable(enable);
-        mSetCalibration40.setClickable(enable);
-        mClearCalibration.setClickable(enable);
-    }
-
-    private void showToast(String msg) {
-        if (mToast != null) {
-            mToast.cancel();
-        }
-        mToast = Toast.makeText(this, msg, Toast.LENGTH_SHORT);
-        mToast.show();
-    }
-}
-
diff --git a/EngineerMode/src/com/mediatek/engineermode/sensor/SensorCalibrationSelect.java b/EngineerMode/src/com/mediatek/engineermode/sensor/SensorCalibrationSelect.java
deleted file mode 100644
index 0898ec1..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sensor/SensorCalibrationSelect.java
+++ /dev/null
@@ -1,82 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sensor;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class SensorCalibrationSelect extends Activity implements OnItemClickListener {
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sensor_calibration_select);
-
-        ListView list = (ListView) findViewById(R.id.list_view_calibration);
-
-        ArrayList<String> items = new ArrayList<String>();
-        items.add(getString(R.string.sensor_calibration_gsensor));
-        items.add(getString(R.string.sensor_calibration_gyroscope));
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, items);
-        list.setAdapter(adapter);
-        list.setOnItemClickListener(this);
-    }
-
-    @Override
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        Intent intent = new Intent();
-        if (0 == arg2) {
-            intent.setClass(this, SensorCalibration.class);
-            intent.putExtra(SensorCalibration.CALIBRAION_TYPE, SensorCalibration.GSENSOR);
-            this.startActivity(intent);
-        } else if (1 == arg2) {
-            intent.setClass(this, SensorCalibration.class);
-            intent.putExtra(SensorCalibration.CALIBRAION_TYPE, SensorCalibration.GYROSCOPE);
-            this.startActivity(intent);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/settingsfontsize/SettingsFontSize.java b/EngineerMode/src/com/mediatek/engineermode/settingsfontsize/SettingsFontSize.java
deleted file mode 100644
index 3e0a4cc..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/settingsfontsize/SettingsFontSize.java
+++ /dev/null
@@ -1,195 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.settingsfontsize;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.os.Bundle;
-import android.provider.Settings;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-
-public class SettingsFontSize extends Activity {
-
-    private static final String TAG = "EM_SetFontSize";
-
-    private static final String SMALL = "settings_fontsize_small";
-    private static final String LARGE = "settings_fontsize_large";
-    private static final String EXTRALARGE = "settings_fontsize_extralarge";
-
-    private EditText mEditSmall;
-    private EditText mEditLarge;
-    private EditText mEditExtraLarge;
-    private Button mButton;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.settings_fontsize);
-
-        mEditSmall = (EditText) findViewById(R.id.settings_fs_small_edit);
-        mEditLarge = (EditText) findViewById(R.id.settings_fs_large_edit);
-        mEditExtraLarge = (EditText) findViewById(R.id.settings_fs_extralarge_edit);
-        mButton = (Button) findViewById(R.id.settings_fs_ok);
-
-        float readSmall = Settings.System.getFloat(getContentResolver(), SMALL,
-                -1);
-        float readLarge = Settings.System.getFloat(getContentResolver(), LARGE,
-                -1);
-        float readExtra = Settings.System.getFloat(getContentResolver(),
-                EXTRALARGE, -1);
-
-        if (readSmall != -1) {
-            mEditSmall.setText(readSmall + "");
-        }
-        if (readLarge != -1) {
-            mEditLarge.setText(readLarge + "");
-        }
-        if (readExtra != -1) {
-            mEditExtraLarge.setText(readExtra + "");
-        }
-
-        mEditSmall.setSelection(mEditSmall.getText().length());
-
-        mButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-
-                float smallValue = 1;
-                float largeValue = 1;
-                float extraLargeValue = 1;
-                String small = mEditSmall.getText().toString().trim();
-                String large = mEditLarge.getText().toString().trim();
-                String extralarge = mEditExtraLarge.getText().toString().trim();
-
-                if (small.equals("") && large.equals("")
-                        && extralarge.equals("")) {
-                    return;
-                }
-
-                if (!small.equals("")) {
-                    try {
-                        smallValue = Float.valueOf(small);
-                        Elog.e(TAG, "small : " + small);
-                    } catch (NumberFormatException e) {
-                        // Dialog
-                        new AlertDialog.Builder(SettingsFontSize.this)
-                                .setTitle("Warning").setMessage(
-                                        "Please input right value!")
-                                .setPositiveButton("OK", null).create().show();
-                        Elog.e(TAG, "--NumberFormatException");
-                        return;
-                    }
-                }
-                if (!large.equals("")) {
-                    try {
-                        largeValue = Float.valueOf(large);
-                    } catch (NumberFormatException e) {
-                        // Dialog
-                        new AlertDialog.Builder(SettingsFontSize.this)
-                                .setTitle("Warning").setMessage(
-                                        "Please input right value!")
-                                .setPositiveButton("OK", null).create().show();
-                        Elog.e(TAG, "--NumberFormatException");
-                        return;
-                    }
-                }
-                if (!extralarge.equals("")) {
-                    try {
-                        extraLargeValue = Float.valueOf(extralarge);
-                    } catch (NumberFormatException e) {
-                        // Dialog
-                        new AlertDialog.Builder(SettingsFontSize.this)
-                                .setTitle("Warning").setMessage(
-                                        "Please input right value!")
-                                .setPositiveButton("OK", null).create().show();
-                        Elog.e(TAG, "--NumberFormatException");
-                        return;
-                    }
-                }
-
-                if (smallValue <= 0 || largeValue <= 0 || extraLargeValue <= 0) {
-                    new AlertDialog.Builder(SettingsFontSize.this).setTitle(
-                            "Warning").setMessage("Please input right value!")
-                            .setPositiveButton("OK", null).create().show();
-                    return;
-                }
-
-                boolean isSuccessSm;
-                boolean isSuccessLa;
-                boolean isSuccessEx;
-                if (!small.equals("")) {
-                    isSuccessSm = Settings.System.putFloat(
-                            getContentResolver(), SMALL, smallValue);
-                } else {
-                    isSuccessSm = true;
-                }
-                if (!large.equals("")) {
-                    isSuccessLa = Settings.System.putFloat(
-                            getContentResolver(), LARGE, largeValue);
-                } else {
-                    isSuccessLa = true;
-                }
-                if (!extralarge.equals("")) {
-                    isSuccessEx = Settings.System.putFloat(
-                            getContentResolver(), EXTRALARGE, extraLargeValue);
-                } else {
-                    isSuccessEx = true;
-                }
-
-                Elog.d(TAG, " Set font size -- SMALL :" + smallValue
-                        + "LARGE :" + largeValue + "EXTRALARGE :"
-                        + extraLargeValue);
-
-                if (isSuccessSm && isSuccessLa && isSuccessEx) {
-                    Toast.makeText(SettingsFontSize.this, "Success!",
-                            Toast.LENGTH_SHORT).show();
-                } else {
-                    Toast.makeText(SettingsFontSize.this, "Fail!",
-                            Toast.LENGTH_SHORT).show();
-                }
-            }
-        });
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/simswitch/SimSwitch.java b/EngineerMode/src/com/mediatek/engineermode/simswitch/SimSwitch.java
deleted file mode 100644
index 296c023..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/simswitch/SimSwitch.java
+++ /dev/null
@@ -1,86 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.simswitch;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.os.SystemProperties;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-
-import com.mediatek.engineermode.R;
-
-public class SimSwitch extends Activity implements OnClickListener {
-
-    private static final String TAG = "EM/SimSwitch";
-    private static final String BUTTON_FLAG = "flag";
-    private static final String PROPERTY = "persist.radio.simswitch.emmode";
-    private Button mSetButton;
-    private static boolean mSimSwitch = false;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sim_switch);
-        mSetButton = (Button) findViewById(R.id.sim_switch);
-        mSetButton.setOnClickListener(this);
-        String property = SystemProperties.get(PROPERTY);
-        if (property == null) {
-            mSimSwitch = true;
-        } else {
-            mSimSwitch = property.equals("0") ? false : true;
-        }
-
-        setButtonText(mSimSwitch);
-    }
-
-    @Override
-    public void onClick(final View arg0) {
-        SystemProperties.set(PROPERTY,
-                (getString(R.string.sim_switch_on)).equals(mSetButton.getText()) ? "1" : "0");
-        mSimSwitch = SystemProperties.get(PROPERTY).equals("0") ? false : true;
-        setButtonText(mSimSwitch);
-    }
-
-    private void setButtonText(boolean mSimSwitch) {
-        if (mSimSwitch) {
-            mSetButton.setText(R.string.sim_switch_off);
-        } else {
-            mSetButton.setText(R.string.sim_switch_on);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/sleepmode/SleepModeActivity.java b/EngineerMode/src/com/mediatek/engineermode/sleepmode/SleepModeActivity.java
deleted file mode 100644
index 73220c8..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/sleepmode/SleepModeActivity.java
+++ /dev/null
@@ -1,399 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.sleepmode;
-
-import java.io.IOException;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.Context;
-import android.os.Bundle;
-import android.os.PowerManager;
-import android.text.TextUtils;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.CompoundButton;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.RadioButton;
-import android.widget.Toast;
-import android.widget.CompoundButton.OnCheckedChangeListener;
-
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-public class SleepModeActivity extends Activity implements OnClickListener,
-        OnCheckedChangeListener  {
-
-    private static final String TAG = "EM/SleepMode";
-    private static final String FS_SUSPEND_MODE = "/proc/spm_fs/suspend_mode";
-    private static final String FS_SUSPEND = "/proc/spm_fs/suspend";
-    private static final String FS_SUSPEND_TIMER = "/proc/spm_fs/suspend_timer";
-    private static final String FS_WAKE_LOCK = "/sys/power/wake_lock";
-    private static final String CAT = "cat ";
-    private static final String CMD_CPU_PDN =
-            "echo \"%1$d cpu_pdn\" > " + FS_SUSPEND;
-    private static final String CMD_INFRA_PDN =
-            "echo \"%1$d infra_pdn\" > " + FS_SUSPEND;
-    private static final String CMD_FGAUGE =
-            "echo \"%1$d fgauge\"  > " + FS_SUSPEND;
-    private static final String CMD_TIMER_VAL =
-            "echo \"%1$s timer_val_ms\"  > " + FS_SUSPEND;
-    private static final String CMD_WAKE_LOCK =
-            "echo nosleep > " + FS_WAKE_LOCK;
-    private static final String CMD_WAKE_UNLOCK =
-            "echo nosleep > /sys/power/wake_unlock";
-    private static final String TAG_NOSLEEP = "nosleep";
-    private static final int SLEEP_MODE_DISABLE = 0;
-    private static final int SLEEP_MODE_LEGACY_SLEEP = 1;
-    private static final int SLEEP_MODE_SHUT_DOWN = 2;
-
-    private RadioButton mRBModeDisable;
-    private RadioButton mRBLagacySleep;
-    private RadioButton mRBShutDown;
-    private RadioButton mRBTimerDisable;
-    private RadioButton mRBFuelGauge;
-    private RadioButton mRBTimerValSet;
-    private RadioButton[] mRBSleepModes;
-    private RadioButton[] mRBWakeupTimers;
-
-    private Button mBtnStartTimer;
-    private Button mBtnGetSetting;
-    private EditText mEditTimerVal;
-    private LinearLayout mLVTimerControler;
-    private PowerManager mPowerManager;
-    private PowerManager.WakeLock mWakeLock;
-
-    private int mSleepMode = -1;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.sleep_mode_6572);
-        mRBModeDisable = (RadioButton) findViewById(R.id.sleep_mode_disable);
-        mRBModeDisable.setOnCheckedChangeListener(this);
-        mRBLagacySleep = (RadioButton) findViewById(R.id.sleep_mode_legacy_sleep);
-        mRBLagacySleep.setOnCheckedChangeListener(this);
-        mRBShutDown = (RadioButton) findViewById(R.id.sleep_mode_shutdown);
-        mRBShutDown.setOnCheckedChangeListener(this);
-        mRBSleepModes = new RadioButton[3];
-        mRBSleepModes[0] = mRBModeDisable;
-        mRBSleepModes[1] = mRBLagacySleep;
-        mRBSleepModes[2] = mRBShutDown;
-
-        mRBTimerDisable = (RadioButton) findViewById(R.id.sleep_mode_timer_disable);
-        mRBTimerDisable.setOnCheckedChangeListener(this);
-        mRBFuelGauge = (RadioButton) findViewById(R.id.sleep_mode_timer_fuel_gauge);
-        mRBFuelGauge.setOnCheckedChangeListener(this);
-        mRBTimerValSet = (RadioButton) findViewById(R.id.sleep_mode_timer_val_set);
-        mRBTimerValSet.setOnCheckedChangeListener(this);
-        mRBWakeupTimers = new RadioButton[3];
-        mRBWakeupTimers[0] = mRBTimerDisable;
-        mRBWakeupTimers[1] = mRBFuelGauge;
-        mRBWakeupTimers[2] = mRBTimerValSet;
-
-        mBtnStartTimer = (Button) findViewById(R.id.sleep_mode_start_timer);
-        mBtnStartTimer.setOnClickListener(this);
-        mBtnGetSetting = (Button) findViewById(R.id.sleep_mode_get_setting);
-        mBtnGetSetting.setOnClickListener(this);
-        mEditTimerVal = (EditText) findViewById(R.id.sleep_mode_timer_val);
-        mLVTimerControler = (LinearLayout) findViewById(R.id.sleep_mode_wake_timer_contrl);
-        mPowerManager = (PowerManager) getSystemService(Context.POWER_SERVICE);
-        mWakeLock = mPowerManager.newWakeLock(PowerManager.FULL_WAKE_LOCK, TAG);
-        initUIByData();
-    }
-
-    private void initUIByData() {
-        String cmd;
-        String output;
-        // init sleep mode ui
-        cmd = CAT + FS_WAKE_LOCK;
-        output = execCommand(cmd);
-        if (output == null) {
-            Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        if (output.contains(TAG_NOSLEEP)) {
-            mRBModeDisable.setChecked(true);
-            mSleepMode = SLEEP_MODE_DISABLE;
-        } else {
-            cmd = CAT + FS_SUSPEND_MODE;
-            output = execCommand(cmd);
-            //output = " 1";
-            if (output == null) {
-                Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-                finish();
-                return;
-            }
-            output = output.trim();
-            if ("0".equals(output)) {
-                mRBLagacySleep.setChecked(true);
-                mSleepMode = SLEEP_MODE_LEGACY_SLEEP;
-            } else if ("1".equals(output)) {
-                mRBShutDown.setChecked(true);
-                mSleepMode = SLEEP_MODE_SHUT_DOWN;
-            } else {
-                mSleepMode = -1;
-                Log.d("@M_" + TAG, "cat suspend_mode:" + output);
-            }
-        }
-
-        // init wakeup Timer ui
-        cmd = CAT + FS_SUSPEND_TIMER;
-        output = execCommand(cmd);
-        //output = "0  0";
-        if (output == null) {
-            Toast.makeText(this, "Feature Fail or Don't Support!", Toast.LENGTH_SHORT).show();
-            finish();
-            return;
-        }
-        output = output.trim();
-        String[] vals = output.split(" +");
-        if ("1".equals(vals[0])) {
-            checkOneRadio(mRBWakeupTimers, mRBFuelGauge, true);
-        } else if ("0".equals(vals[1])) {
-            checkOneRadio(mRBWakeupTimers, mRBTimerDisable, true);
-        } else {
-            checkOneRadio(mRBWakeupTimers, mRBTimerValSet, true);
-            mEditTimerVal.setText(vals[1]);
-        }
-    }
-
-    private void enableInputTimerUI(boolean enabled) {
-        mBtnStartTimer.setEnabled(enabled);
-        mEditTimerVal.setEnabled(enabled);
-    }
-
-    private boolean setCpuPdn(int input) {
-        String cmd;
-        cmd = String.format(CMD_CPU_PDN, input);
-        return null != execCommand(cmd);
-    }
-
-    private boolean setInfraPdn(int input) {
-        String cmd;
-        cmd = String.format(CMD_INFRA_PDN, input);
-        return null != execCommand(cmd);
-    }
-
-    private boolean setFgauge(int input) {
-        String cmd;
-        cmd = String.format(CMD_FGAUGE, input);
-        return null != execCommand(cmd);
-    }
-
-    private boolean setTimerVal(String timerVal) {
-        String cmd;
-        cmd = String.format(CMD_TIMER_VAL, timerVal);
-        return null != execCommand(cmd);
-    }
-
-    private boolean acquireWakeLock() {
-        String cmd;
-        cmd = CMD_WAKE_LOCK;
-        return null != execCommand(cmd);
-    }
-
-    private boolean releaseWakeLock() {
-        String cmd;
-        cmd = CMD_WAKE_UNLOCK;
-        return null != execCommand(cmd);
-    }
-
-    @Override
-    public void onCheckedChanged(CompoundButton btnView, boolean isChecked) {
-        int id = btnView.getId();
-        switch(id) {
-        case R.id.sleep_mode_disable:
-            if (isChecked) {
-                mSleepMode = SLEEP_MODE_DISABLE;
-                checkOneRadio(mRBSleepModes, mRBModeDisable, true);
-                mLVTimerControler.setVisibility(View.GONE);
-                acquireWakeLock();
-            }
-            break;
-        case R.id.sleep_mode_legacy_sleep:
-            if (isChecked) {
-                checkOneRadio(mRBSleepModes, mRBLagacySleep, true);
-                mLVTimerControler.setVisibility(View.VISIBLE);
-                if (mSleepMode == SLEEP_MODE_DISABLE) {
-                    releaseWakeLock();
-                }
-                mSleepMode = SLEEP_MODE_LEGACY_SLEEP;
-                setCpuPdn(0);
-                setInfraPdn(0);
-            }
-            break;
-        case R.id.sleep_mode_shutdown:
-            if (isChecked) {
-                checkOneRadio(mRBSleepModes, mRBShutDown, true);
-                mLVTimerControler.setVisibility(View.VISIBLE);
-                if (mSleepMode == SLEEP_MODE_DISABLE) {
-                    releaseWakeLock();
-                }
-                mSleepMode = SLEEP_MODE_SHUT_DOWN;
-                setCpuPdn(1);
-                setInfraPdn(1);
-            }
-            break;
-        case R.id.sleep_mode_timer_disable:
-            if (isChecked) {
-                checkOneRadio(mRBWakeupTimers, mRBTimerDisable, true);
-                setFgauge(0);
-                setTimerVal("0");
-                enableInputTimerUI(false);
-            }
-            break;
-        case R.id.sleep_mode_timer_fuel_gauge:
-            if (isChecked) {
-                checkOneRadio(mRBWakeupTimers, mRBFuelGauge, true);
-                setFgauge(1);
-                enableInputTimerUI(false);
-            }
-            break;
-        case R.id.sleep_mode_timer_val_set:
-            if (isChecked) {
-                checkOneRadio(mRBWakeupTimers, mRBTimerValSet, true);
-                enableInputTimerUI(true);
-            }
-            break;
-        default:
-            Log.w("@M_" + TAG, "unknown view id: " + id);
-            break;
-        }
-    }
-
-    @Override
-    protected void onDestroy() {
-        if (mWakeLock.isHeld()) {
-            mWakeLock.release();
-        }
-        mWakeLock = null;
-        super.onDestroy();
-    }
-
-    private void checkOneRadio(RadioButton[] array, RadioButton target, boolean checked) {
-         for (int i = 0; i < array.length; i++) {
-             if (target == array[i]) {
-                 array[i].setChecked(checked);
-             } else {
-                 array[i].setChecked(!checked);
-             }
-         }
-     }
-
-    private String execCommand(String cmd) {
-         int ret = -1;
-         Log.d("@M_" + TAG, "[cmd]:" + cmd);
-         //Toast.makeText(this, cmd, Toast.LENGTH_SHORT).show();
-         try {
-             ret = ShellExe.execCommand(cmd);
-         } catch (IOException e) {
-             Log.e("@M_" + TAG, "IOException: " + e.getMessage());
-         }
-         if (ret == 0) {
-             String outStr = ShellExe.getOutput();
-             Log.d("@M_" + TAG, "[output]: " + outStr);
-             return outStr;
-         }
-         return null;
-     }
-
-    private void showDialog(String title, String msg) {
-        AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                false).setTitle(title).setMessage(msg).setCancelable(true).
-                setPositiveButton(android.R.string.ok, null).create();
-        dialog.show();
-    }
-
-    private boolean validateInput() {
-        String timerValStr;
-        String msg;
-        if (TextUtils.isEmpty(mEditTimerVal.getText())) {
-            msg = getString(R.string.sleep_mode_invalid_timer_val);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return false;
-        }
-        timerValStr = mEditTimerVal.getText().toString();
-        int timerVal;
-        try {
-            timerVal = Integer.parseInt(timerValStr);
-        } catch (NumberFormatException e) {
-            Log.d("@M_" + TAG, "NumberFormatException: parse timerVal fail");
-            msg = getString(R.string.sleep_mode_invalid_timer_val);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return false;
-        }
-        if (timerVal < 15 || timerVal > 1000000) {
-            msg = getString(R.string.sleep_mode_invalid_timer_val);
-            Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            return false;
-        }
-        return true;
-    }
-
-    @Override
-    public void onClick(View view) {
-        String cmd;
-        String output;
-        int id = view.getId();
-        switch(id) {
-        case R.id.sleep_mode_start_timer:
-            if (validateInput()) {
-                setFgauge(0);
-                setTimerVal(mEditTimerVal.getText().toString());
-                String msg;
-                msg = getString(R.string.sleep_mode_operate_success);
-                Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
-            }
-            break;
-        case R.id.sleep_mode_get_setting:
-            cmd = CAT + FS_SUSPEND;
-            output = execCommand(cmd);
-            showDialog(getString(R.string.sleep_mode_setting), output);
-            break;
-        default:
-            Log.w("@M_" + TAG, "unknown view id: " + id);
-            break;
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/testcard/TestCardActivity.java b/EngineerMode/src/com/mediatek/engineermode/testcard/TestCardActivity.java
deleted file mode 100644
index 3a73eab..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/testcard/TestCardActivity.java
+++ /dev/null
@@ -1,90 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.testcard;
-
-import android.os.Bundle;
-import android.os.SystemProperties;
-import android.preference.CheckBoxPreference;
-import android.preference.Preference;
-import android.preference.PreferenceActivity;
-import android.preference.PreferenceScreen;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-/**
- * Set CT test card setting.
- */
-public class TestCardActivity extends PreferenceActivity {
-    private static final String TAG = "EM/TestCard";
-    private static final String KEY_TEST_CARD = "key_test_card";
-    private static final int VALUE_OFF = 0;
-    private static final int VALUE_ON = 1;
-    private static final String PROP_TEST_CARD = "persist.sys.forcttestcard";
-    private CheckBoxPreference mTestCardPref;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        addPreferencesFromResource(R.xml.test_card);
-
-        PreferenceScreen prefSet = getPreferenceScreen();
-        if (prefSet != null) {
-            mTestCardPref = (CheckBoxPreference) prefSet.findPreference(KEY_TEST_CARD);
-        }
-   }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        int value = SystemProperties.getInt(PROP_TEST_CARD, VALUE_OFF);
-        Elog.v(TAG, "Get " + PROP_TEST_CARD + " = " + value);
-        mTestCardPref.setChecked(value == 0 ? false : true);
-    }
-
-    @Override
-    public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen,
-            Preference preference) {
-        if (mTestCardPref.equals(preference)) {
-            int value = mTestCardPref.isChecked() ? VALUE_ON : VALUE_OFF;
-            Elog.v(TAG, "Set " + PROP_TEST_CARD + " = " + value);
-            SystemProperties.set(PROP_TEST_CARD, String.valueOf(value));
-            return true;
-        }
-
-        return super.onPreferenceTreeClick(preferenceScreen, preference);
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TouchScreenList.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TouchScreenList.java
deleted file mode 100644
index 199af7c..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TouchScreenList.java
+++ /dev/null
@@ -1,133 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-
-import com.mediatek.engineermode.R;
-
-import java.io.IOException;
-import java.util.ArrayList;
-
-/**
- * TouchScreen test modules
- * 
- * @author mtk54040
- * 
- */
-public class TouchScreenList extends Activity implements OnItemClickListener {
-
-    private static final String TAG = "EM/TouchScreen";
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.touchscreen);
-
-        ListView listView = (ListView) findViewById(R.id.ListView_TouchScreen);
-//        if (listView == null) {
-//            Log.w("@M_" + TAG, "clocwork worked...");
-//            // not return and let exception happened.
-//        }
-
-        ArrayList<String> items = new ArrayList<String>();
-        // items.add("HandWriting");
-        // items.add("Verification");
-        // items.add("Settings");
-        // items.add("Rate Report");
-
-        items.add(getString(R.string.TouchScreen_HandWriting));
-        items.add(getString(R.string.TouchScreen_Verification));
-        items.add(getString(R.string.TouchScreen_Settings));
-        items.add(getString(R.string.TouchScreen_RateReport));
-        try {
-            String[] cmd = { "/system/bin/sh", "-c",
-                    "cat /sys/module/tpd_setting/parameters/tpd_type_cap" };
-            int ret = TouchScreenShellExe.execCommand(cmd);
-            if (0 == ret) {
-                Log.i("@M_" + TAG, TouchScreenShellExe.getOutput());
-                if (TouchScreenShellExe.getOutput().equalsIgnoreCase("1")) {
-                    // items.add("MultiTouch");
-                    items.add(getString(R.string.TouchScreen_MultiTouch));
-                }
-            }
-
-        } catch (IOException e) {
-            Log.i("@M_" + TAG, e.toString());
-        }
-
-
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, items);
-        listView.setAdapter(adapter);
-        listView.setOnItemClickListener(this);
-    }
-
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        Intent intent = new Intent();
-        switch (arg2) {
-        case 0:
-            intent.setClass(this, TsHandWriting.class);
-            break;
-        case 1:
-            intent.setClass(this, TsVerifyList.class);
-            break;
-        case 2:
-            intent.setClass(this, TouchScreenSettings.class);
-            break;
-        case 3:
-            intent.setClass(this, TsRateReport.class);
-            break;
-        case 4:
-            intent.setClass(this, TsMultiTouch.class);
-            break;
-        default:
-            break;
-        }
-
-        this.startActivity(intent);
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TouchScreenSettings.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TouchScreenSettings.java
deleted file mode 100644
index f4e01cd..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TouchScreenSettings.java
+++ /dev/null
@@ -1,555 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.DialogInterface;
-import android.content.SharedPreferences;
-import android.os.Bundle;
-import android.os.Environment;
-import android.os.Handler;
-import android.os.Message;
-import android.util.Log;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.Spinner;
-import android.widget.Toast;
-
-
-import com.mediatek.engineermode.R;
-
-import java.io.File;
-import java.io.IOException;
-import java.text.SimpleDateFormat;
-import java.util.ArrayList;
-import java.util.Date;
-
-public class TouchScreenSettings extends Activity implements OnClickListener {
-
-    // private ToggleButton mBtnSDcard;
-    // private ToggleButton mBtnUart;
-    private Button mBtnSet;
-    private EditText mEdit;
-//    private Spinner mModeSpinner;
-//    private ArrayAdapter<String> mModeAdatper;
-    private int mModeIndex;
-    private ArrayList<SpinnerData> mCategory;
-
-    private static String[] sFirstCommand = { "/system/bin/sh", "-c",
-    // "echo 1 > /sys/module/tpd_debug/parameters/tpd_em_log" };
-            "echo 2 > /sys/module/tpd_setting/parameters/tpd_mode" };
-
-    private static final String PARA_PATH = "/sys/module/tpd_debug/parameters";
-    private static final String PARA_PATH2 = "/sys/module/tpd_setting/parameters";
-    private static final String PARA_TAG = "tpd_em_";
-//    private int mErrorCode = 0;
-//    private static final int ERR_OK = 0;
-//    private static final int ERR_ERR = 1;
-
-    private static final String TAG = "EM/TouchScreen/set";
-
-    private boolean mSdcardExist = false;
-    
-    private static volatile boolean sRun = false;
-    private static String sCurrentFileName = null;
-    private static final int EVENT_UPDATE = 1;
-    
-    public Handler mUpdateHandler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-            if (msg.what == EVENT_UPDATE) {
-                Toast.makeText(TouchScreenSettings.this,
-                        "Finish file logging.", Toast.LENGTH_SHORT).show();
-            }           
-//            switch (msg.what) {
-//            case EVENT_UPDATE:
-//                Toast.makeText(TouchScreenSettings.this,
-//                        "Finish file logging.", Toast.LENGTH_SHORT).show();
-//                break;
-//            default:
-//                break;
-//            }
-        }
-    };
-    
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-//        Log.v("@M_" + TAG, "-->onCreate");
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.touch_settings);
-
-        // mBtnSDcard = (ToggleButton)
-        // findViewById(R.id.TouchScreen_Settings_sdcard);
-        // mBtnUart = (ToggleButton)
-        // findViewById(R.id.TouchScreen_Settings_uart);
-
-        mBtnSet = (Button) findViewById(R.id.TouchScreen_Settings_TextSet);
-        mEdit = (EditText) findViewById(R.id.TouchScreen_Settings_Value);
-        Spinner modeSpinner = (Spinner) findViewById(R.id.TouchScreen_Settings_Spinner);
-
-        ArrayAdapter<String> modeAdatper = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item);
-        modeAdatper
-                .setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        mCategory = getCategory();
-        if (null == mCategory) {
-            AlertDialog.Builder builder = new AlertDialog.Builder(this);
-            builder.setTitle("Warning");
-            builder.setMessage("No setting file exist.");
-            builder.setCancelable(false);
-            builder.setPositiveButton("OK",
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int id) {
-                            TouchScreenSettings.this.finish();
-                        }
-                    });
-            builder.create().show();
-            return;
-        }
-
-        for (int i = 0; i < mCategory.size(); i++) {
-            modeAdatper.add(mCategory.get(i).mName);
-        }
-        modeSpinner.setAdapter(modeAdatper);
-        modeSpinner.setOnItemSelectedListener(new OnItemSelectedListener() {
-
-            public void onItemSelected(AdapterView<?> arg0, View arg1,
-                    int arg2, long arg3) {
-                mModeIndex = arg2;
-                mEdit.setText(getFileValue(mCategory.get(mModeIndex).mFullPath));
-            }
-
-            public void onNothingSelected(AdapterView<?> arg0) {
-                mModeIndex = 0;
-            }
-        });
-
-        mBtnSet.setOnClickListener(this);
-        // mBtnSDcard.setOnClickListener(this);
-        // mBtnUart.setOnClickListener(this);
-
-    }
-
-    private String getFileValue(String path) {
-        String[] cmd = { "/system/bin/sh", "-c", "cat " + path }; // file must
-        // exist or
-        // wait()
-        // return2
-        Log.v("@M_" + TAG, "-->GetFileValue:" + path);
-        int ret;
-        try {
-            ret = TouchScreenShellExe.execCommand(cmd);
-
-            if (0 == ret) {
-                return TouchScreenShellExe.getOutput();
-            } else {
-                return "N/A";
-            }
-        } catch (IOException e) {
-            Log.v("@M_" + TAG, "-->GetFileValue:" + e.getMessage());
-            return "N/A";
-        }
-    }
-
-    @Override
-    public void onResume() {
-//        Log.v("@M_" + TAG, "-->onResume");
-        super.onResume();
-        // final SharedPreferences preferences =
-        // this.getSharedPreferences("touch_screen_settings",
-        // android.content.Context.MODE_PRIVATE);
-        
-        mSdcardExist = false;
-        if (!Environment.getExternalStorageState().equals(
-                Environment.MEDIA_REMOVED)) {
-            mSdcardExist = true;
-        }
-    }
-
-    private ArrayList<SpinnerData> getCategory() {
-        File dir = new File(PARA_PATH);
-        File[] files = dir.listFiles();
-        if (files == null) {
-            return null;
-        }
-        ArrayList<SpinnerData> result = new ArrayList<SpinnerData>();
-        for (File f : files) {
-            if (f.getName().indexOf(PARA_TAG) == 0) {
-                SpinnerData data = new SpinnerData();
-                data.mName = f.getName();
-                data.mFullPath = f.getAbsolutePath();
-                result.add(data);
-            }
-
-        }
-        dir = new File(PARA_PATH2);
-        files = dir.listFiles();
-        if (files == null) {
-            return result;
-        }
-        for (File f : files) {
-            if (f.getName().indexOf(PARA_TAG) == 0) {
-                SpinnerData data = new SpinnerData();
-                data.mName = f.getName();
-                data.mFullPath = f.getAbsolutePath();
-                result.add(data);
-            }
-        }
-
-//        if (result.size() == 0) {
-        if (result.isEmpty()) {
-            return null;
-        }
-        return result;
-    }
-
-    /*
-     * private int getLastError() { return err_no; }
-     */
-//    private void setLastError(int err) {
-//        mErrorCode = err;
-//    }
-
-    
-    /**
-     * workThread :write file para
-     * 
-     */
-    class WorkThread extends Thread {
-
-        public void run() {
-            while (sRun) {
-                // Log.i("MTHR", "LOOP mRun = "+mRun);
-                if (mSdcardExist) {
-                    // String shell = "cat /proc/tpd_em_log >> " +
-                    // currentFileName;
-                    String shell = "cat /sys/module/tpd_debug/parameters/tpd_em_log  >> "
-                            + sCurrentFileName;
-                    Log.v("@M_" + TAG, "run file shell--" + shell);
-                    String[] cmd2 = { "/system/bin/sh", "-c", shell };
-                    int ret = 0;
-                    try {
-                        ret = TouchScreenShellExe.execCommand(cmd2);
-                        if (0 != ret) {
-                            Log.i("@M_" + TAG, "cat >> failed!! ");
-                            // return;
-                        }
-                    } catch (IOException e) {
-                        Log.w("@M_" + TAG, "cat >> failed!!  io exception");
-                    }
-                }
-
-                try {
-                    sleep(10);
-                    // Log.i("MTHR", "After sleep");
-                } catch (InterruptedException e) {
-                    Log.w("@M_" + TAG, "sleep(10) >> exception!!!");
-
-                }
-            }
-            // Toast.makeText(TouchScreen_Settings.this, "Finish file logging.",
-            // Toast.LENGTH_LONG).show();
-            Message msg = new Message();
-            msg.what = EVENT_UPDATE;
-
-            mUpdateHandler.sendMessage(msg);
-
-            Log.i("@M_" + TAG, "Copy /proc/tpd_em_log success");
-        }
-    }
-
-    public void onClick(View arg0) {
-        if (arg0.getId() == mBtnSet.getId()) {
-            String editString = mEdit.getText().toString();
-            if (null == editString || editString.length() == 0) {
-                Toast.makeText(this, "Please input the value.",
-                        Toast.LENGTH_LONG).show();
-//                setLastError(ERR_OK);
-                return;
-            }
-
-            // boolean resultOK = false;
-            try {
-                if (mCategory.get(mModeIndex).mName.equals("tpd_em_log_to_fs")) { // if
-                    // no
-                    // sdcard
-                    // exists.
-                    if (!mSdcardExist) {
-                        AlertDialog.Builder builder = new AlertDialog.Builder(
-                                this);
-                        builder.setTitle("Error");
-                        builder.setMessage("No SD card exists.");
-                        builder.setPositiveButton("OK", null);
-                        builder.create().show();
-                        return;
-                    }
-                    final SharedPreferences preferences = this
-                            .getSharedPreferences("touch_screen_settings",
-                                    android.content.Context.MODE_PRIVATE);
-                    // open file log
-                    if ("0".equals(editString)) {
-//                        if (editString.equals("0")) {
-                        // close file log
-                        sRun = false;
-                        Log.i("@M_" + TAG, "close file log mRun = " + sRun);
-                        setCategory("0");
-                        SharedPreferences.Editor editor = preferences.edit();
-                        editor.putString("filename", "N");
-                        editor.commit();
-                        
-                    } else {
-                        String curVal = getFileValue(mCategory.get(mModeIndex).mFullPath);
-                     // already open file log.
-                        if (!"0".equals(curVal) && !"N/A".equals(curVal)) {
-//                            if (!curVal.equals("0") && !curVal.equals("N/A")) {
-                            Toast.makeText(this, "File Log Already Opened.",
-                                    Toast.LENGTH_SHORT).show();
-                            return;
-                        }
-
-                        runFirstCommand();
-
-                        String[] cmd = {
-                                "/system/bin/sh",
-                                "-c",
-                                "echo " + editString + " > " + PARA_PATH
-                                        + "/tpd_em_log" }; // file
-
-                        int ret = TouchScreenShellExe.execCommand(cmd);
-                        if (0 != ret) {
-                            Toast.makeText(this,
-                                   "Set tpd_em_log failed. open file log failed.",
-                                            Toast.LENGTH_SHORT).show();
-//                            setLastError(ERR_ERR);
-                            return;
-                        }
-
-                        String[] cmdx = {
-                                "/system/bin/sh",
-                                "-c",
-                                "echo " + editString + " > "
-                                        + mCategory.get(mModeIndex).mFullPath }; // file
-
-                        ret = TouchScreenShellExe.execCommand(cmdx);
-                        if (0 == ret) {
-                            Toast.makeText(this, "open file log success.",
-                                    Toast.LENGTH_SHORT).show();
-//                            setLastError(ERR_OK);
-                        } else {
-                            Toast.makeText(this, "open file log failed.",
-                                    Toast.LENGTH_SHORT).show();
-//                            setLastError(ERR_ERR);
-                            return;
-                        }
-
-                        File sdcard = Environment.getExternalStorageDirectory();
-                        File touchLog = new File(sdcard.getParent() + "/"
-                                + sdcard.getName() + "/TouchLog/");
-
-                        if (!touchLog.isDirectory()) {
-                            touchLog.mkdirs();
-                            Log.i("@M_" + TAG, "mkdir " + touchLog.getPath()
-                                    + " success");
-                        }
-                        SimpleDateFormat df = new SimpleDateFormat(
-                                "yyyy-MM-dd_HH-mm-ss");
-                        sCurrentFileName = touchLog.getPath() + "/L"
-                                + df.format(new Date().getTime());
-                        String shell = "echo START > " + sCurrentFileName;
-                        Log.i("@M_" + TAG, "file shell " + shell);
-                        String[] cmd2 = { "/system/bin/sh", "-c", shell };
-                        ret = TouchScreenShellExe.execCommand(cmd2);
-                        if (0 != ret) {
-                            // Log.i("MTH",
-                            // "Create file failed.(echo ###> failed!! )");
-                            Toast.makeText(this,
-                                    "Error: Create file in sdcard failed!!",
-                                    Toast.LENGTH_SHORT).show();
-                            return;
-                        }
-
-                        sRun = true;
-                        new WorkThread().start();
-
-                        Log.v("@M_" + TAG, "thread start mRun = " + sRun);
-                        Toast.makeText(this, "Start log file to sdcard.",
-                                Toast.LENGTH_SHORT).show();
-                        Log.v("@M_" + TAG, "Start log file to sdcard.");
-                        SharedPreferences.Editor editor = preferences.edit();
-                        editor.putString("filename", sCurrentFileName);
-                        editor.commit();
-                    
-
-                    }
-                } else if (mCategory.get(mModeIndex).mName.equals("tpd_em_log")) {
-                    // close uart log
-                    if ("0".equals(editString)) {
-//                        if (editString.equals("0")) {
-                        sRun = false;
-                        Log.i("@M_" + TAG, "uart close mRun = " + sRun);
-                        final SharedPreferences preferences = this
-                                .getSharedPreferences("touch_screen_settings",
-                                        android.content.Context.MODE_PRIVATE);
-                        SharedPreferences.Editor editor = preferences.edit();
-                        editor.putString("filename", "N");
-                        editor.commit();
-
-                        runFirstCommand();
-
-                        String[] cmd = {
-                                "/system/bin/sh",
-                                "-c",
-                                "echo 0 > " + PARA_PATH
-                                        + "/tpd_em_log_to_fs" };
-                        int ret = TouchScreenShellExe.execCommand(cmd);
-                        if (0 != ret) {
-                            Toast.makeText(this,
-                                            "Set tpd_em_log_to_fs failed. close file log failed.",
-                                            Toast.LENGTH_SHORT).show();
-//                            setLastError(ERR_ERR);
-                            return;
-                        }
-
-                        String[] cmdx = {
-                                "/system/bin/sh",
-                                "-c",
-                                "echo " + editString + " > "
-                                        + mCategory.get(mModeIndex).mFullPath }; // file
-                        // must
-                        // exist
-                        // or
-                        // wait()
-                        // return2
-                        ret = TouchScreenShellExe.execCommand(cmdx);
-                        if (0 == ret) {
-                            Toast.makeText(this, "Close uart log success.",
-                                    Toast.LENGTH_SHORT).show();
-//                            setLastError(ERR_OK);
-                        } else {
-                            Toast.makeText(this, "Close uart log failed.",
-                                    Toast.LENGTH_SHORT).show();
-//                            setLastError(ERR_ERR);
-                            return;
-                        }
-                    } else {
-                        setCategory(editString);
-                    }
-                } else {
-                    setCategory(editString);
-                }
-
-            } catch (IOException e) {
-                Log.i("@M_" + TAG, e.toString());
-                Toast.makeText(this,
-                                "Set ." + mCategory.get(mModeIndex).mName
-                                 + " exception.", Toast.LENGTH_LONG)
-                        .show();
-//                setLastError(ERR_ERR);
-            }
-        }
-
-    }
-
-    private void setCategory(String editString) throws IOException {
-        runFirstCommand();
-
-        String[] cmd = {
-                "/system/bin/sh",
-                "-c",
-                "echo " + editString + " > "
-                        + mCategory.get(mModeIndex).mFullPath };
-        int ret = TouchScreenShellExe.execCommand(cmd);
-        if (0 == ret) {
-            Toast.makeText(this,
-                    "Set ." + mCategory.get(mModeIndex).mName + " success.",
-                    Toast.LENGTH_SHORT).show();
-//            setLastError(ERR_OK);
-        } else {
-            Toast.makeText(this,
-                    "Set ." + mCategory.get(mModeIndex).mName + " failed.",
-                    Toast.LENGTH_SHORT).show();
-//            setLastError(ERR_ERR);
-        }
-    }
-
-    // private String firstCommand =
-    // "adb shell echo 2 > /sys/module/tpd_setting/parameters/tpd_mode";
-
-    /**
-     * Run init command 
-     * 
-     */
-    public void runFirstCommand() {
-        try {
-
-            int ret = TouchScreenShellExe.execCommand(sFirstCommand);
-
-            Log.v("@M_" + TAG, "write tpd_mode result:"
-                    + TouchScreenShellExe.getOutput());
-            if (0 == ret) {
-                Toast.makeText(this, "write tpd_mode 2 success.",
-                        Toast.LENGTH_SHORT).show();
-//                setLastError(ERR_OK);
-            } else {
-                Toast.makeText(this, "write tpd_mode 2 failed.",
-                        Toast.LENGTH_SHORT).show();
-//                setLastError(ERR_ERR);
-//                return;
-            }
-        } catch (IOException e) {
-            Log.i("@M_" + TAG, e.toString());
-            Toast.makeText(this, "write tpd_mode 2  exception.",
-                    Toast.LENGTH_SHORT).show();
-//            setLastError(ERR_ERR);
-        }
-    }
-    
-    /**
-     * class for setting name and para path 
-     * @author mtk54040
-     *
-     */
-    private class SpinnerData {
-        public String mName;
-        public String mFullPath;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TouchScreenShellExe.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TouchScreenShellExe.java
deleted file mode 100644
index 3618a39..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TouchScreenShellExe.java
+++ /dev/null
@@ -1,61 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-import com.mediatek.engineermode.ShellExe;
-import android.util.Log;
-
-import java.io.IOException;
-
-public class TouchScreenShellExe {
-
-    /*
-     * how to use try { execCommand("./data/kenshin/x.sh"); } catch (IOException
-     * e) { e.printStackTrace(); } }
-     */
-    public static final String ERROR = "ERROR";
-    private static final String TAG = "EM/TouchScreen_ShellExe";
-
-    public static String getOutput() {
-        String result = ShellExe.getOutput();
-        Log.i("@M_" + TAG, "getOutPut:sb-- " + result);
-        return result;
-    }
-
-    public static int execCommand(String[] command) throws IOException {
-        return ShellExe.execCommand(command);
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsHandWriting.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsHandWriting.java
deleted file mode 100644
index ee5d048..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsHandWriting.java
+++ /dev/null
@@ -1,367 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.SharedPreferences;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.graphics.Paint.FontMetricsInt;
-import android.os.Bundle;
-import android.util.DisplayMetrics;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.MotionEvent;
-import android.view.VelocityTracker;
-import android.view.View;
-import android.view.Window;
-import android.view.WindowManager;
-import android.widget.Toast;
-
-
-import java.io.IOException;
-import java.util.ArrayList;
-
-/**
- * Demonstrates wrapping a layout in a ScrollView.
- */
-
-public class TsHandWriting extends Activity {
-
-    public static final int CLEAR_CANVAS_ID = Menu.FIRST;
-
-    private static final String TAG = "EM/TouchScreen/HW";
-    MyView mView = null;
-
-    private int mZoom = 1;
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        // setContentView(new MyView(this));
-
-        Log.v("@M_" + TAG, "onCreate start");
-        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
-                WindowManager.LayoutParams.FLAG_FULLSCREEN);
-
-        requestWindowFeature(Window.FEATURE_NO_TITLE);
-        mView = new MyView(this);
-        mView.setSystemUiVisibility(View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
-        setContentView(mView);
-        Log.v("@M_" + TAG, "onCreate success");
-
-    }
-
-    @Override
-    public void onResume() {
-//        Log.v("@M_" + TAG, "-->onResume");
-        super.onResume();
-        final SharedPreferences preferences = this.getSharedPreferences(
-                "touch_screen_settings", android.content.Context.MODE_PRIVATE);
-        String file = preferences.getString("filename", "N");
-        if (!"N".equals(file)) {
-//            if (!file.equals("N")) {
-            String[] cmd = {"/system/bin/sh", "-c",
-                    "echo [ENTER_HAND_WRITING] >> " + file }; // file
-
-            int ret;
-            try {
-                ret = TouchScreenShellExe.execCommand(cmd);
-                if (0 == ret) {
-                    Toast.makeText(this, "Start logging...", Toast.LENGTH_LONG)
-                            .show();
-                } else {
-                    Toast.makeText(this, "Logging failed!", Toast.LENGTH_LONG)
-                            .show();
-                }
-            } catch (IOException e) {
-                Log.w("@M_" + TAG, e.toString());
-            }
-
-        }
-
-    }
-
-    @Override
-    public void onPause() {
-
-        Log.v("@M_" + TAG, "-->onPause");
-        final SharedPreferences preferences = this.getSharedPreferences(
-                "touch_screen_settings", android.content.Context.MODE_PRIVATE);
-        String file = preferences.getString("filename", "N");
-        if (!"N".equals(file)) {
-//        if (!file.equals("N")) {
-            String[] cmd = {"/system/bin/sh", "-c",
-                    "echo [LEAVE_HAND_WRITING] >> " + file }; // file
-
-            int ret;
-            try {
-                ret = TouchScreenShellExe.execCommand(cmd);
-                if (0 == ret) {
-                    Toast.makeText(this, "Stop logging...", Toast.LENGTH_LONG)
-                            .show();
-                } else {
-                    Toast.makeText(this, "Logging failed!", Toast.LENGTH_LONG)
-                            .show();
-                }
-            } catch (IOException e) {
-                Log.w("@M_" + TAG, e.toString());
-            }
-
-        }
-        super.onPause();
-
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        menu.add(0, CLEAR_CANVAS_ID, 0, "Clean Table.");
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem mi) {
-        if (CLEAR_CANVAS_ID == mi.getItemId()) {
-            mView.clear();
-        }
-
-//        switch (mi.getItemId()) {
-//        case CLEAR_CANVAS_ID:
-//            mView.clear();
-//            break;
-//        default:
-//            break;
-//        }
-        return super.onOptionsItemSelected(mi);
-    }
-
-    public class PT {
-        public Float mX;
-        public Float mY;
-
-        public PT(Float x, Float y) {
-            this.mX = x;
-            this.mY = y;
-        }
-    };
-
-    public class MyView extends View {
-        private final Paint mTextPaint;
-        private final Paint mTextBackgroundPaint;
-        private final Paint mTextLevelPaint;
-        private final Paint mPaint;
-        private final Paint mTargetPaint;
-        private final FontMetricsInt mTextMetrics = new FontMetricsInt();
-        private ArrayList<ArrayList<PT>> mLines = new ArrayList<ArrayList<PT>>();
-        private ArrayList<PT> mCurLine;
-        private ArrayList<VelocityTracker> mVelocityList = new ArrayList<VelocityTracker>();
-        private int mHeaderBottom;
-        private boolean mCurDown;
-        private int mCurX;
-        private int mCurY;
-        private float mCurPressure;
-        private int mCurWidth;
-        private VelocityTracker mVelocity;
-
-        public MyView(Context c) {
-            super(c);
-
-            DisplayMetrics dm = new DisplayMetrics();
-            dm = TsHandWriting.this.getApplicationContext().getResources()
-                    .getDisplayMetrics();
-            int screenWidth = dm.widthPixels;
-            int screenHeight = dm.heightPixels;
-            if ((480 == screenWidth && 800 == screenHeight)
-                    || (800 == screenWidth && 480 == screenHeight)) {
-                mZoom = 2;
-            }
-
-            mTextPaint = new Paint();
-            mTextPaint.setAntiAlias(true);
-            mTextPaint.setTextSize(10 * mZoom);
-            mTextPaint.setARGB(255, 0, 0, 0);
-            mTextBackgroundPaint = new Paint();
-            mTextBackgroundPaint.setAntiAlias(false);
-            mTextBackgroundPaint.setARGB(128, 255, 255, 255);
-            mTextLevelPaint = new Paint();
-            mTextLevelPaint.setAntiAlias(false);
-            mTextLevelPaint.setARGB(192, 255, 0, 0);
-            mPaint = new Paint();
-            mPaint.setAntiAlias(true);
-            mPaint.setARGB(255, 255, 255, 255);
-            mPaint.setStyle(Paint.Style.STROKE);
-            mPaint.setStrokeWidth(2);
-            mTargetPaint = new Paint();
-            mTargetPaint.setAntiAlias(false);
-            mTargetPaint.setARGB(192, 0, 255, 0);
-            mPaint.setStyle(Paint.Style.STROKE);
-            mPaint.setStrokeWidth(1);
-        }
-
-        @Override
-        protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-            super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-            mTextPaint.getFontMetricsInt(mTextMetrics);
-            mHeaderBottom = -mTextMetrics.ascent + mTextMetrics.descent + 2;
-            Log.v("@M_" + TAG, "Metrics: ascent=" + mTextMetrics.ascent + " descent="
-                    + mTextMetrics.descent + " leading=" + mTextMetrics.leading
-                    + " top=" + mTextMetrics.top + " bottom="
-                    + mTextMetrics.bottom);
-        }
-
-        @Override
-        protected void onDraw(Canvas canvas) {
-            int w = getWidth() / 5;
-            int base = -mTextMetrics.ascent + 1;
-            int bottom = mHeaderBottom;
-            canvas.drawRect(0, 0, w - 1, bottom, mTextBackgroundPaint);
-            canvas.drawText("X: " + mCurX, 1, base, mTextPaint);
-
-            canvas.drawRect(w, 0, (w * 2) - 1, bottom, mTextBackgroundPaint);
-            canvas.drawText("Y: " + mCurY, 1 + w, base, mTextPaint);
-
-            canvas
-                    .drawRect(w * 2, 0, (w * 3) - 1, bottom,
-                            mTextBackgroundPaint);
-            canvas.drawRect(w * 2, 0, (w * 2) + (mCurPressure * w) - 1, bottom,
-                    mTextLevelPaint);
-            Log.w("@M_" + TAG, "mCurPressure = " + mCurPressure);
-            canvas.drawText("Pres: " + mCurPressure, 1 + w * 2, base,
-                    mTextPaint);
-
-            canvas
-                    .drawRect(w * 3, 0, (w * 4) - 1, bottom,
-                            mTextBackgroundPaint);
-            int xVelocity = mVelocity == null ? 0 : (int) (Math.abs(mVelocity
-                    .getXVelocity()) * 1000);
-            canvas.drawText("XVel: " + xVelocity, 1 + w * 3, base, mTextPaint);
-
-            canvas.drawRect(w * 4, 0, getWidth(), bottom, mTextBackgroundPaint);
-            int yVelocity = mVelocity == null ? 0 : (int) (Math.abs(mVelocity
-                    .getYVelocity()) * 1000);
-            canvas.drawText("YVel: " + yVelocity, 1 + w * 4, base, mTextPaint);
-
-            int lineSz = mLines.size();
-            int k = 0;
-            for (k = 0; k < lineSz; k++) {
-                ArrayList<PT> m = mLines.get(k);
-
-                float lastX = 0;
-                float lastY = 0;
-                mPaint.setARGB(255, 0, 255, 255);
-                int sz = m.size();
-                int i = 0;
-                for (i = 0; i < sz; i++) {
-                    PT n = m.get(i);
-                    if (i > 0) {
-                        canvas.drawLine(lastX, lastY, n.mX, n.mY, mTargetPaint);
-                        canvas.drawPoint(lastX, lastY, mPaint);
-                    }
-
-                    lastX = n.mX;
-                    lastY = n.mY;
-                }
-
-                VelocityTracker velocity = mVelocityList.get(k);
-                if (velocity == null) {
-                    canvas.drawPoint(lastX, lastY, mPaint);
-                } else {
-                    mPaint.setARGB(255, 255, 0, 0);
-                    float xVel = velocity.getXVelocity() * (1000 / 60);
-                    float yVel = velocity.getYVelocity() * (1000 / 60);
-                    canvas.drawLine(lastX, lastY, lastX + xVel, lastY + yVel,
-                            mPaint);
-                }
-
-                if (mCurDown) {
-                    canvas.drawLine(0, (int) mCurY, getWidth(), (int) mCurY,
-                            mTargetPaint);
-                    canvas.drawLine((int) mCurX, 0, (int) mCurX, getHeight(),
-                            mTargetPaint);
-                    int pressureLevel = (int) (mCurPressure * 255);
-                    mPaint
-                            .setARGB(255, pressureLevel, 128,
-                                    255 - pressureLevel);
-                    canvas.drawPoint(mCurX, mCurY, mPaint);
-                    canvas.drawCircle(mCurX, mCurY, mCurWidth, mPaint);
-                }
-
-            }
-        }
-
-        @Override
-        public boolean onTouchEvent(MotionEvent event) {
-            int action = event.getAction();
-            if (action == MotionEvent.ACTION_DOWN) {
-
-                mVelocity = VelocityTracker.obtain();
-                mVelocityList.add(mVelocity);
-
-                mCurLine = new ArrayList<PT>();
-                mLines.add(mCurLine);
-            }
-            mVelocity.addMovement(event);
-            mVelocity.computeCurrentVelocity(1);
-            final int num = event.getHistorySize();
-            for (int i = 0; i < num; i++) {
-                mCurLine.add(new PT(event.getHistoricalX(i), event
-                        .getHistoricalY(i)));
-            }
-            mCurLine.add(new PT(event.getX(), event.getY()));
-            mCurDown = action == MotionEvent.ACTION_DOWN
-                    || action == MotionEvent.ACTION_MOVE;
-            mCurX = (int) event.getX();
-            mCurY = (int) event.getY();
-            mCurPressure = event.getPressure();
-            Log.w("@M_" + TAG, "event.getPressure()= " + mCurPressure);
-            mCurWidth = (int) (event.getSize() * (getWidth() / 3));
-
-            invalidate();
-            return true;
-        }
-
-        public void clear() {
-            for (ArrayList<PT> m : mLines) {
-                m.clear();
-            }
-            mLines.clear();
-            mVelocityList.clear();
-            invalidate();
-        }
-
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsMultiTouch.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsMultiTouch.java
deleted file mode 100644
index 5e09d35..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsMultiTouch.java
+++ /dev/null
@@ -1,347 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.content.Context;
-import android.content.DialogInterface;
-import android.content.DialogInterface.OnClickListener;
-import android.content.SharedPreferences;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.graphics.Rect;
-import android.os.Bundle;
-import android.text.InputType;
-import android.util.DisplayMetrics;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.MotionEvent;
-import android.view.View;
-import android.view.Window;
-import android.view.WindowManager;
-import android.widget.EditText;
-import android.widget.Toast;
-
-
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.HashMap;
-
-/**
- * Demonstrates wrapping a layout in a ScrollView.
- *
- *
- */
-
-public class TsMultiTouch extends Activity {
-    public static final int CLEAR_CANVAS_ID = 1;
-    public static final int SET_PT_SIZE_ID = 2;
-    public static final int DIS_HISTORY_ID = 3;
-    public static final int[][] RGB = {{255, 0, 0}, {0, 255, 0},
-            {0, 0, 255}, {255, 255, 0}, {0, 255, 255}, {255, 0, 255},
-            {100, 0, 0}, {0, 100, 0}, {0, 0, 100}, {100, 100, 0},
-            {0, 100, 100}, {100, 0, 100}, {255, 255, 255}};
-    private static final String TAG = "EM/TouchScreen/MT";
-    MyView mView = null;
-    volatile boolean mDisplayHistory = true;
-    DisplayMetrics mMetrics = new DisplayMetrics();
-
-    private int mPointSize = 1;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
-                WindowManager.LayoutParams.FLAG_FULLSCREEN);
-
-        requestWindowFeature(Window.FEATURE_NO_TITLE);
-        mView = new MyView(this);
-        setContentView(mView);
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        final SharedPreferences preferences = this.getSharedPreferences(
-                "touch_screen_settings", android.content.Context.MODE_PRIVATE);
-        String fileString = preferences.getString("filename", "N");
-        if (!"N".equals(fileString)) {
-            final String commPath = fileString;
-            new Thread() {
-                public void run() {
-                    String[] cmd = {"/system/bin/sh", "-c",
-                            "echo [ENTER_MULTI_TOUCH] >> " + commPath}; // file
-                    int ret;
-                    try {
-                        ret = TouchScreenShellExe.execCommand(cmd);
-                        if (0 == ret) {
-                            Log.v("@M_" + TAG, "-->onResume Start logging...");
-                        } else {
-                            Log.v("@M_" + TAG, "-->onResume Logging failed!");
-                        }
-                    } catch (IOException e) {
-                        Log.e("@M_" + TAG, e.toString());
-                    }
-                }
-            } .start();
-
-        }
-        mPointSize = preferences.getInt("size", 10);
-        getWindowManager().getDefaultDisplay().getMetrics(mMetrics);
-    }
-
-    @Override
-    public void onPause() {
-        Log.v("@M_" + TAG, "-->onPause");
-        final SharedPreferences preferences = this.getSharedPreferences(
-                "touch_screen_settings", android.content.Context.MODE_PRIVATE);
-        String fileString = preferences.getString("filename", "N");
-        if (!"N".equals(fileString)) {
-            String[] cmd = {"/system/bin/sh", "-c",
-                    "echo [LEAVE_MULTI_TOUCH] >> " + fileString}; // file
-            int ret;
-            try {
-                ret = TouchScreenShellExe.execCommand(cmd);
-                if (0 == ret) {
-                    Toast.makeText(this, "Stop logging...", Toast.LENGTH_LONG)
-                            .show();
-                } else {
-                    Toast.makeText(this, "Logging failed!", Toast.LENGTH_LONG)
-                            .show();
-                }
-            } catch (IOException e) {
-                Log.e("@M_" + TAG, e.toString());
-            }
-        }
-        super.onPause();
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        super.onCreateOptionsMenu(menu);
-        menu.add(0, CLEAR_CANVAS_ID, 0, "Clean Table");
-        menu.add(0, SET_PT_SIZE_ID, 0, "Set Point Size");
-        menu.add(0, DIS_HISTORY_ID, 0, "Hide History");
-        return true;
-    }
-
-    @Override
-    public boolean onPrepareOptionsMenu(Menu menu) {
-        if (mDisplayHistory) {
-            menu.getItem(2).setTitle("Hide History");
-        } else {
-            menu.getItem(2).setTitle("Show History");
-        }
-        return super.onPrepareOptionsMenu(menu);
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem mi) {
-        switch (mi.getItemId()) {
-        case CLEAR_CANVAS_ID:
-            mView.clear();
-            break;
-        case DIS_HISTORY_ID:
-            if (mDisplayHistory) {
-                mDisplayHistory = false;
-            } else {
-                mDisplayHistory = true;
-            }
-            mView.invalidate();
-            break;
-        case SET_PT_SIZE_ID:
-            final EditText input = new EditText(this);
-            input.setInputType(InputType.TYPE_CLASS_NUMBER);
-            new AlertDialog.Builder(this).setTitle(
-                    "Insert pixel size of point [1-10]").setView(input)
-                    .setPositiveButton("OK", new OnClickListener() {
-
-                        public void onClick(DialogInterface dialog, int which) {
-                            boolean valid = true;
-                            int sz = 0;
-                            CharSequence cText = input.getText();
-                            if (cText == null) {
-                                valid = false;
-                            }  else {
-                                try {
-                                    sz = Integer.valueOf(cText.toString());
-                                } catch (NumberFormatException e) {
-                                    valid = false;
-                                }
-                            }
-                            if (sz < 1 || sz > 10) {
-                                valid = false;
-                            }
-
-                            if (valid) {
-                                TsMultiTouch.this.mPointSize = sz;
-                                final SharedPreferences preferences = TsMultiTouch.this
-                                        .getSharedPreferences(
-                                                "touch_screen_settings",
-                                                android.content.Context.MODE_PRIVATE);
-                                preferences.edit().putInt("size",
-                                        TsMultiTouch.this.mPointSize).commit();
-                                mView.invalidate();
-                            } else {
-                                Toast.makeText(TsMultiTouch.this,
-                                        "Invalid input, please input 1-10 number",
-                                        Toast.LENGTH_SHORT).show();
-                            }
-                        }
-                    }).setNegativeButton("Cancel", null).show();
-            break;
-        default:
-            break;
-        }
-        return super.onOptionsItemSelected(mi);
-    }
-
-    public class MyView extends View {
-        private HashMap<Integer, TsPointDataStruct> mCurrPoints = new HashMap<Integer, TsPointDataStruct>();
-        private ArrayList<TsPointDataStruct> mHistory = new ArrayList<TsPointDataStruct>();
-
-        public MyView(Context c) {
-            super(c);
-        }
-
-        @Override
-        protected void onDraw(Canvas canvas) {
-            if (mDisplayHistory) {
-                for (int i = 0; i < mHistory.size(); i++) {
-                    TsPointDataStruct point = mHistory.get(i);
-                    int x = point.getmCoordinateX();
-                    int y = point.getmCoordinateY();
-                    canvas.drawCircle(x, y, mPointSize, getPaint(point.getmPid()));
-                }
-            }
-            final String maxString = "pid 9 x=999, y=999";
-            for (TsPointDataStruct point : mCurrPoints.values()) {
-                Paint targetPaint = getPaint(point.getmPid());
-                String s = "pid " + String.valueOf(point.getmPid())
-                        + " x=" + String.valueOf(point.getmCoordinateX())
-                        + ", y=" + String.valueOf(point.getmCoordinateY());
-                Log.i("@M_" + TAG, "Touch pos: " + point.getmCoordinateX() + "," + point.getmCoordinateY());
-
-                Rect rect = new Rect();
-                targetPaint.getTextBounds(maxString, 0, maxString.length(), rect);
-                if (rect.width() > mMetrics.widthPixels) {
-                    targetPaint = getSlimPaint(point.getmPid());
-                }
-                targetPaint.getTextBounds(s, 0, s.length(), rect);
-
-                int x = point.getmCoordinateX() - rect.width() / 2;
-                int y = point.getmCoordinateY() - rect.height() * 3;
-
-                if (x < 0) {
-                    x = 0;
-                } else if (x > mMetrics.widthPixels - rect.width()) {
-                    x = mMetrics.widthPixels - rect.width() - 2;
-                }
-
-                if (y < rect.height()) {
-                    y = rect.height();
-                } else if (y > mMetrics.heightPixels) {
-                    y = mMetrics.heightPixels;
-                }
-
-                canvas.drawText(s, x, y, targetPaint);
-                canvas.drawCircle(point.getmCoordinateX(),
-                        point.getmCoordinateY(), mPointSize * 3,
-                        targetPaint);
-            }
-        }
-
-        @Override
-        public boolean onTouchEvent(MotionEvent event) {
-            Log.i("@M_" + TAG, "onTouchEvent: Pointer counts: " + event.getPointerCount()
-                    + " Action: " + event.getAction());
-
-            for (int i = 0; i < event.getPointerCount(); i++) {
-                Log.i("@M_" + TAG, "onTouchEvent: idx: " + i + " pid: " + event.getPointerId(i)
-                        + " (" + event.getX(i) + ", " + event.getY(i) + ")");
-                int pid = event.getPointerId(i);
-                TsPointDataStruct n = new TsPointDataStruct();
-                n.setmCoordinateX((int) event.getX(i));
-                n.setmCoordinateY((int) event.getY(i));
-                n.setmPid(pid);
-                mCurrPoints.put(pid, n);
-                mHistory.add(n);
-            }
-
-            invalidate();
-            return true;
-        }
-
-        public void clear() {
-            mCurrPoints.clear();
-            mHistory.clear();
-            invalidate();
-        }
-
-        Paint getPaint(int idx) {
-            Paint paint = new Paint();
-            paint.setAntiAlias(false);
-            if (idx < RGB.length) {
-                paint.setARGB(255, RGB[idx][0], RGB[idx][1], RGB[idx][2]);
-            } else {
-                paint.setARGB(255, 255, 255, 255);
-            }
-            int textsize = (int) (mPointSize * 3.63 + 7.37);
-            paint.setTextSize(textsize);
-            return paint;
-        }
-        private Paint getSlimPaint(int idx) {
-            int pointSize;
-            Paint paint = new Paint();
-            paint.setAntiAlias(false);
-            if (idx < RGB.length) {
-                paint.setARGB(255, RGB[idx][0], RGB[idx][1], RGB[idx][2]);
-            } else {
-                paint.setARGB(255, 255, 255, 255);
-            }
-            pointSize = mPointSize / 2;
-            if (pointSize < 1) {
-                pointSize = 1;
-            }
-            int textsize = (int) (pointSize * 3.63 + 7.37);
-            paint.setTextSize(textsize);
-            return paint;
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsPointDataStruct.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsPointDataStruct.java
deleted file mode 100644
index 7dcc005..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsPointDataStruct.java
+++ /dev/null
@@ -1,129 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-public class TsPointDataStruct {
-    public long mTimeStamp;
-    public int mPid;
-    public int mAction = 0;
-    public int mCoordinateX = 0;
-    public int mCoordinateY = 0;
-    public float mPressure = 0.0f;
-    public float mVelocityX = 0.0f;
-    public float mVelocityY = 0.0f;
-    public float mFatSize = 0.01f; // (0~1)
-    
-    
-    public TsPointDataStruct() {
-        mTimeStamp = System.currentTimeMillis();
-    }
-
-    public void setTimeStamp() {
-        mTimeStamp = System.currentTimeMillis();
-    }
-
-    public long getmTimeStamp() {
-        return mTimeStamp;
-    }
-
-    public void setmTimeStamp(long timeStamp) {
-        this.mTimeStamp = timeStamp;
-    }
-
-    public int getmPid() {
-        return mPid;
-    }
-
-    public void setmPid(int pid) {
-        this.mPid = pid;
-    }
-
-    public int getmAction() {
-        return mAction;
-    }
-
-    public void setmAction(int action) {
-        this.mAction = action;
-    }
-
-    public int getmCoordinateX() {
-        return mCoordinateX;
-    }
-
-    public void setmCoordinateX(int coordinateX) {
-        this.mCoordinateX = coordinateX;
-    }
-
-    public int getmCoordinateY() {
-        return mCoordinateY;
-    }
-
-    public void setmCoordinateY(int coordinateY) {
-        this.mCoordinateY = coordinateY;
-    }
-
-    public float getmPressure() {
-        return mPressure;
-    }
-
-    public void setmPressure(float pressure) {
-        this.mPressure = pressure;
-    }
-
-    public float getmVelocityX() {
-        return mVelocityX;
-    }
-
-    public void setmVelocityX(float velocityX) {
-        this.mVelocityX = velocityX;
-    }
-
-    public float getmVelocityY() {
-        return mVelocityY;
-    }
-
-    public void setmVelocityY(float velocityY) {
-        this.mVelocityY = velocityY;
-    }
-
-    public float getmFatSize() {
-        return mFatSize;
-    }
-
-    public void setmFatSize(float fatSize) {
-        this.mFatSize = fatSize;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsPointStatusStruct.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsPointStatusStruct.java
deleted file mode 100644
index cabd6b2..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsPointStatusStruct.java
+++ /dev/null
@@ -1,55 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-public class TsPointStatusStruct {
-    public boolean mDown = false;
-    public boolean mNewLine = false;
-    
-    public boolean ismDown() {
-        return mDown;
-    }
-    public void setmDown(boolean down) {
-        this.mDown = down;
-    }
-    public boolean ismNewLine() {
-        return mNewLine;
-    }
-    public void setmNewLine(boolean newLine) {
-        this.mNewLine = newLine;
-    }
-    
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsRateReport.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsRateReport.java
deleted file mode 100644
index b46f8c7..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsRateReport.java
+++ /dev/null
@@ -1,210 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-import android.app.Activity;
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.os.Bundle;
-import android.util.DisplayMetrics;
-import android.util.Log;
-import android.view.MotionEvent;
-import android.view.View;
-import android.view.Window;
-import android.view.WindowManager;
-
-
-import java.util.HashMap;
-
-/**
- * Demonstrates wrapping a layout in a ScrollView.
- */
-
-public class TsRateReport extends Activity {
-    private static final String TAG = "EM/TouchScreen/RR";
-
-    MyView mView = null;
-    DisplayMetrics mMetrick = new DisplayMetrics();
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
-                WindowManager.LayoutParams.FLAG_FULLSCREEN);
-
-        requestWindowFeature(Window.FEATURE_NO_TITLE);
-        mView = new MyView(this);
-        setContentView(mView);
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-        getWindowManager().getDefaultDisplay().getMetrics(mMetrick);
-    }
-
-
-    public class MyView extends View {
-        private final HashMap<Integer, PointerData> mPtsStatus = new HashMap<Integer, PointerData>();
-        private int mPointerNumDetected = 0;
-
-        public MyView(Context c) {
-            super(c);
-        }
-
-        @Override
-        protected void onDraw(Canvas canvas) {
-            Log.v("@M_" + TAG, "-->onDraw");
-            int textsize = 15;
-            canvas.drawText("Pointer number detected: "
-                    + String.valueOf(mPointerNumDetected), 3, textsize + 10,
-                    getPaint(4, textsize));
-            Log.v("@M_" + TAG, "Pointer number detected: " + mPointerNumDetected);
-
-            for (PointerData pt : mPtsStatus.values()) {
-                pt.setUTimeStamp();
-                pt.calculateRate();
-                String s = String.format("pid=%2d, X=%3d, Y=%3d.", pt.mPid,
-                        pt.mLastX, pt.mLastY);
-                String ss = String.format("Rate=%dHz, Count=%d, Time=%dms",
-                        pt.mRate, pt.mCnt, pt.mMills);
-
-                int x = 3;
-                int y = 10 + (textsize * 3) + pt.mPid * 3 * textsize;
-
-                canvas.drawText(s, x, y, getPaint(pt.mPid, textsize));
-                canvas.drawText(ss, x, y + textsize, getPaint(pt.mPid, textsize));
-            }
-        }
-
-        private class PointerData {
-            public volatile int mCnt;
-            public volatile int mRate;
-            public volatile int mMills;
-            public volatile int mPid;
-            public volatile int mLastX;
-            public volatile int mLastY;
-            private volatile long mDownTime;
-            private volatile long mUpTime;
-
-            public void setDTimeStamp() {
-                mDownTime = System.currentTimeMillis();
-            }
-
-            public void setUTimeStamp() {
-                mUpTime = System.currentTimeMillis();
-            }
-
-            public void calculateRate() {
-                mMills = (int) (mUpTime - mDownTime);
-                if (mMills == 0) {
-                    mRate = -1;
-                } else {
-                    mRate = (int) ((1000L * mCnt) / mMills);
-                }
-            }
-
-            public void clean() {
-                mDownTime = 0;
-                mUpTime = 0;
-                mCnt = 0;
-                mPid = 0;
-                mRate = 0;
-            }
-        }
-
-        @Override
-        public boolean onTouchEvent(MotionEvent event) {
-            Log.v("@M_" + TAG, "-->onTouchEvent");
-            int action = event.getAction();
-            int actionCode = action & MotionEvent.ACTION_MASK;
-            int idx = action >> MotionEvent.ACTION_POINTER_INDEX_SHIFT;
-            int pid = event.getPointerId(idx);
-
-            if (actionCode == MotionEvent.ACTION_POINTER_DOWN
-                    || actionCode == MotionEvent.ACTION_DOWN) {
-                PointerData pt = new PointerData();
-                pt.mPid = pid;
-                pt.setDTimeStamp();
-                mPtsStatus.put(pid, pt);
-                mPointerNumDetected++;
-            } else if (actionCode == MotionEvent.ACTION_POINTER_UP
-                    || actionCode == MotionEvent.ACTION_UP) {
-                PointerData pt = mPtsStatus.get(pid);
-                pt.setUTimeStamp();
-            }
-            if (actionCode == MotionEvent.ACTION_POINTER_UP) {
-                mPointerNumDetected--;
-            } else if (actionCode == MotionEvent.ACTION_UP) {
-                mPointerNumDetected = 0;
-            }
-
-            int pointCt = event.getPointerCount();
-            Log.v("@M_" + TAG, "Pointer counts = " + pointCt + " mPtsStatus.size()= "
-                    + mPtsStatus.size());
-
-            for (int i = 0; i < pointCt; i++) {
-                PointerData pt = mPtsStatus.get(event.getPointerId(i));
-                pt.mCnt++;
-                pt.mLastX = (int) event.getX(i);
-                pt.mLastY = (int) event.getY(i);
-            }
-
-            invalidate();
-            return true;
-        }
-
-        public void clear() {
-            mPtsStatus.clear();
-            invalidate();
-        }
-
-        Paint getPaint(int idx, int textsize) {
-            Paint paint = new Paint();
-            paint.setAntiAlias(false);
-            if (idx < TsMultiTouch.RGB.length) {
-                paint.setARGB(255, TsMultiTouch.RGB[idx][0],
-                        TsMultiTouch.RGB[idx][1], TsMultiTouch.RGB[idx][2]);
-            } else {
-                paint.setARGB(255, 255, 255, 255);
-            }
-            paint.setTextSize(textsize);
-            return paint;
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsVerifyLine.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsVerifyLine.java
deleted file mode 100644
index 610d356..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsVerifyLine.java
+++ /dev/null
@@ -1,353 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-import android.app.Activity;
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.graphics.Point;
-import android.graphics.Rect;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Message;
-import android.util.DisplayMetrics;
-import android.util.Log;
-import android.view.Menu;
-import android.view.MenuItem;
-import android.view.MotionEvent;
-import android.view.SurfaceHolder;
-import android.view.SurfaceView;
-import android.view.View;
-
-
-import java.util.Vector;
-
-public class TsVerifyLine extends Activity implements View.OnTouchListener {
-    public DiversityCanvas mDiversityCanvas;
-    public boolean mRun = false;
-    public double mDiversity = 0;
-    public Vector<Point> mPts1 = null;
-    public Vector<Point> mInput = new Vector<Point>();
-    public int mLineIndex = 0;
-
-    public static final int CALCULATE_ID = Menu.FIRST;
-    public static final int NEXTLINE_ID = Menu.FIRST + 1;
-
-    private static final String TAG = "EM/TouchScreen/VL";
-
-    private int mZoom = 1;
-    private int mRectWidth;
-    private int mRectHeight;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        DisplayMetrics dm = new DisplayMetrics();
-        dm = this.getApplicationContext().getResources().getDisplayMetrics();
-        mRectWidth = dm.widthPixels;
-        mRectHeight = dm.heightPixels;
-        if ((480 == mRectWidth && 800 == mRectHeight)
-                || (800 == mRectWidth && 480 == mRectHeight)) {
-            mZoom = 2;
-        }
-
-        // mRun=true;
-        mPts1 = readPoints(0);
-        mLineIndex++;
-        mDiversityCanvas = new DiversityCanvas((Context) this);
-        setContentView(mDiversityCanvas);
-        mDiversityCanvas.setOnTouchListener(this);
-        Log.i("@M_" + TAG, "Oncreate");
-
-    }
-
-
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        menu.add(0, CALCULATE_ID, 0, "Calculate");
-        menu.add(0, NEXTLINE_ID, 1, "NextLine");
-        return true;
-    }
-
-    @Override
-    public boolean onOptionsItemSelected(MenuItem aMenuItem) {
-        switch (aMenuItem.getItemId()) {
-        case CALCULATE_ID:
-            calculateDiversity();
-            mDiversityCanvas.requestUpdate();
-            break;
-        case NEXTLINE_ID:
-            mInput.clear();
-
-            mPts1 = readPoints(mLineIndex);
-            mLineIndex++;
-
-            if (4 == mLineIndex) {
-                mLineIndex = 0;
-            }
-            mDiversity = 0.0;
-            mDiversityCanvas.requestUpdate();
-            break;
-        default:
-            break;
-        }
-        return super.onOptionsItemSelected(aMenuItem);
-    }
-
-    public void calculateDiversity() {
-        int i;
-        Point cp = new Point(0, 0);
-        if (mInput.isEmpty()) {
-//            if (mInput.size() == 0) {
-            return;
-        }
-        double error = 0.0;
-        float ratio = (float) mRectHeight / (float) mRectWidth;
-
-        switch (mLineIndex - 1) {
-        case 0:
-            for (i = 0; i < mInput.size(); i++) {
-                cp = mInput.get(i);
-                error += Math.abs(cp.x - mRectWidth / 2);
-            }
-            break;
-        case 1:
-            for (i = 0; i < mInput.size(); i++) {
-                cp = mInput.get(i);
-                error += Math.abs(cp.y - mRectHeight / 2);
-            }
-            break;
-        case 2:
-            for (i = 0; i < mInput.size(); i++) {
-                cp = mInput.get(i);
-                error += Math.abs(ratio * cp.x - cp.y)
-                        / Math.sqrt(1 + ratio * ratio);
-            }
-            break;
-        case -1:
-            for (i = 0; i < mInput.size(); i++) {
-                cp = mInput.get(i);
-                error += Math.abs(ratio * cp.x + cp.y - mRectHeight)
-                        / Math.sqrt(1 + ratio * ratio);
-            }
-            break;
-        default:
-            break;
-        }
-
-        mDiversity = error / mInput.size();
-    }
-
-    public boolean onTouch(View v, MotionEvent e) {
-
-        if (MotionEvent.ACTION_DOWN == e.getAction()
-                || MotionEvent.ACTION_MOVE == e.getAction()) {
-            if (v.equals(mDiversityCanvas)) {
-//                if (v == mDiversityCanvas) {
-                mInput.add(new Point((int) e.getX(), (int) e.getY()));
-                mDiversityCanvas.requestUpdate();
-            }
-        }
-
-        return true;
-    }
-
-    public Vector<Point> readPoints(int lineIndex) {
-        int x;
-        int y;
-        int i;
-        Vector<Point> v = new Vector<Point>();
-        Point p;
-        float ratio = (float) mRectHeight / (float) mRectWidth;
-
-        switch (mLineIndex) {
-        case 0:
-            for (i = 0; i < mRectHeight; i++) {
-                x = mRectWidth / 2;
-                y = i;
-                p = new Point(x, y);
-                v.add(p);
-            }
-            break;
-        case 1:
-            for (i = 0; i < mRectWidth; i++) {
-                x = i;
-                y = mRectHeight / 2;
-                p = new Point(x, y);
-                v.add(p);
-            }
-            break;
-        case 2:
-            for (i = 0; i < mRectWidth; i++) {
-                x = i;
-                y = (int) (i * ratio);
-                p = new Point(x, y);
-                v.add(p);
-            }
-            break;
-        case 3:
-            for (i = 0; i < mRectWidth; i++) {
-                x = mRectWidth - i;
-                y = (int) (i * ratio);
-                p = new Point(x, y);
-                v.add(p);
-            }
-            break;
-        default:
-            break;
-        }
-        return v;
-    }
-
-    class DiversityCanvas extends SurfaceView implements SurfaceHolder.Callback {
-        DiversityThread mThread = null;
-
-        public DiversityCanvas(Context context) {
-            super(context);
-            SurfaceHolder holder = getHolder();
-            holder.addCallback(this);
-        }
-
-        public void surfaceChanged(SurfaceHolder holder, int format, int width,
-                int height) {
-            Log.v("@M_" + TAG, "surfaceChanged");
-        }
-
-        public void surfaceCreated(SurfaceHolder holder) {
-            Log.v("@M_" + TAG, "surfaceCreated");
-            mRun = true;
-
-            mThread = new DiversityThread(holder, null);
-            mThread.start();
-            requestUpdate();
-        }
-
-        public void surfaceDestroyed(SurfaceHolder holder) {
-            mRun = false;
-            Log.v("@M_" + TAG, "surfaceDestroyed");
-            mThread.quit();
-        }
-
-        void requestUpdate() {
-            mThread.mHandler.sendEmptyMessage(DiversityThread.MSG_REQUEST_UPDATE);
-        }
-
-        class DiversityThread extends HandlerThread {
-
-            private static final int MSG_REQUEST_UPDATE = 10;
-            private SurfaceHolder mSurfaceHolder = null;
-            private Paint mLinePaint = null;
-            private Paint mTextPaint = null;
-            private Paint mRectPaint = null;
-            private Rect mRect = null;
-            private Handler mHandler = new Handler() {
-                @Override
-                public void handleMessage(Message msg) {
-                    super.handleMessage(msg);
-                    switch (msg.what) {
-                    case MSG_REQUEST_UPDATE:
-                        doUpdate();
-                        break;
-                    default:
-                        Log.d("@M_" + TAG, "Unknown msg:" + msg.what);
-                        break;
-                    }
-                }
-            };
-
-            private void doUpdate() {
-                Log.d("@M_" + TAG, "doUpdate()");
-                Canvas c = null;
-                c = mSurfaceHolder.lockCanvas(null);
-                if (c != null) {
-                    doDraw(c);
-                    mSurfaceHolder.unlockCanvasAndPost(c);
-                }
-            }
-
-            public DiversityThread(SurfaceHolder s, Context c) {
-                super("TouchScreen.verifyLine");
-                mSurfaceHolder = s;
-                mLinePaint = new Paint();
-                mLinePaint.setAntiAlias(true);
-                mTextPaint = new Paint();
-                mTextPaint.setAntiAlias(true);
-                mTextPaint.setTextSize(9.0f * mZoom);
-                mTextPaint.setARGB(255, 0, 0, 0);
-                mRect = new Rect(0, 0, mRectWidth, mRectHeight);
-                mRectPaint = new Paint();
-                mRectPaint.setARGB(255, 255, 255, 255);
-            }
-
-            private void doDraw(Canvas canvas) {
-                int i;
-                Point p1;
-                Point p2;
-                canvas.drawRect(mRect, mRectPaint);
-                mLinePaint.setARGB(255, 0, 0, 255);
-                try {
-                    for (i = 0; i < mPts1.size() - 1; i++) {
-                        p1 = mPts1.get(i);
-                        p2 = mPts1.get(i + 1);
-                        canvas.drawLine(p1.x, p1.y, p2.x, p2.y, mLinePaint);
-                    }
-                } catch (ArrayIndexOutOfBoundsException e) {
-                    Log.v("@M_" + TAG, "mPts1 ArrayIndexOutOfBoundsException: " + e.getMessage());
-                    return;
-                }
-
-                mLinePaint.setARGB(255, 255, 0, 0);
-                try {
-                    for (i = 0; i < mInput.size() - 1; i++) {
-                        p1 = mInput.get(i);
-                        p2 = mInput.get(i + 1);
-                        canvas.drawLine(p1.x, p1.y, p2.x, p2.y, mLinePaint);
-                    }
-                } catch (ArrayIndexOutOfBoundsException e) {
-                    Log.v("@M_" + TAG, "mInput ArrayIndexOutOfBoundsException: "
-                            + e.getMessage());
-                    return;
-                }
-                canvas.drawText("Diversity : " + Double.toString(mDiversity),
-                        20 * mZoom, mRectHeight - 10 * mZoom, mTextPaint);
-            }
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsVerifyList.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsVerifyList.java
deleted file mode 100644
index 327736c..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsVerifyList.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-public class TsVerifyList extends Activity implements OnItemClickListener {
-
-    public static final String TS_POINT = "ts_point";
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.touchscreen_verification);
-
-        ListView listView = (ListView) findViewById(R.id.ListView_TP_Verification);
-
-        ArrayList<String> items = new ArrayList<String>();
-        items.add("PointVerification");
-        items.add("LineVerification");
-        items.add("ShakingVerification");
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, items);
-        listView.setAdapter(adapter);
-        listView.setOnItemClickListener(this);
-
-    }
-
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        Intent intent = new Intent();
-        switch (arg2) {
-        case 0:
-            intent.setClass(this, TsVerifyShakingPoint.class);
-            intent.putExtra(TS_POINT, true);
-            break;
-        case 1:
-            intent.setClass(this, TsVerifyLine.class);
-            break;
-        case 2:
-            intent.setClass(this, TsVerifyShakingPoint.class);
-            intent.putExtra(TS_POINT, false);
-            break;
-        default:
-            break;
-        }
-
-        this.startActivity(intent);
-    }
-}
\ No newline at end of file
diff --git a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsVerifyShakingPoint.java b/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsVerifyShakingPoint.java
deleted file mode 100644
index 245552b..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/touchscreen/TsVerifyShakingPoint.java
+++ /dev/null
@@ -1,255 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.touchscreen;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.res.Resources;
-import android.graphics.Bitmap;
-import android.graphics.BitmapFactory;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.graphics.Point;
-import android.graphics.Rect;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Message;
-import android.util.DisplayMetrics;
-import android.util.Log;
-import android.view.MotionEvent;
-import android.view.SurfaceHolder;
-import android.view.SurfaceView;
-import android.view.View;
-
-import com.mediatek.engineermode.R;
-
-import java.util.Random;
-import java.util.Vector;
-
-public class TsVerifyShakingPoint extends Activity implements View.OnTouchListener {
-    private static final String TAG = "EM/TouchScreen/TsVerifyShakingPoint";
-    private boolean mIsVerifyPoint = true;
-    private boolean mRun = false;
-    private Random mRand;
-    private Vector<Point> mInputPoint = new Vector<Point>();
-    private Point mPrePoint;
-    private double mAverageShakingError = 0.0;
-    private double mPointError = 0.0;
-    private Bitmap mBitmap;
-    private int mBitmapPad = 0;
-    private int mZoom = 1;
-    private int mRectWidth;
-    private int mRectHeight;
-    private DiversityCanvas mDiversityCanvas = null;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        Bundle extra = getIntent().getExtras();
-        if (null != extra) {
-            mIsVerifyPoint = extra.getBoolean(TsVerifyList.TS_POINT);
-        }
-        Log.v("@M_" + TAG, "is verify point ? " + mIsVerifyPoint);
-        if (mIsVerifyPoint) {
-            setTitle(R.string.TouchScreen_VerificationPoint);
-        }
-        DisplayMetrics dm = new DisplayMetrics();
-        dm = this.getApplicationContext().getResources().getDisplayMetrics();
-        mRectWidth = dm.widthPixels;
-        mRectHeight = dm.heightPixels;
-        if ((480 == mRectWidth && 800 == mRectHeight)
-                || (800 == mRectWidth && 480 == mRectHeight)) {
-            mZoom = 2;
-        }
-        mRand = new Random();
-        mPrePoint = new Point(mRectWidth / 2, mRectHeight / 2);
-        mDiversityCanvas = new DiversityCanvas((Context) this);
-        setContentView(mDiversityCanvas);
-        mDiversityCanvas.setOnTouchListener(this);
-        Resources resource = this.getResources();
-        mBitmap = BitmapFactory.decodeResource(resource, R.drawable.cross);
-        if (mBitmap != null) {
-            mBitmapPad = mBitmap.getHeight() / 2;
-        }
-    }
-
-    public boolean onTouch(View arg0, MotionEvent event) {
-        if (mIsVerifyPoint) {
-            if (MotionEvent.ACTION_DOWN == event.getAction()) {
-                Log.i("@M_" + TAG, "The PrePoint.x value is : "
-                        + String.valueOf(mPrePoint.x));
-                Log.i("@M_" + TAG, "The PrePoint.y value is : "
-                        + String.valueOf(mPrePoint.y));
-                int xTouch = (int) event.getX();
-                int yTouch = (int) event.getY();
-                Log.i("@M_" + TAG, "The xTouch value is : " + String.valueOf(xTouch));
-                Log.i("@M_" + TAG, "The yTouch value is : " + String.valueOf(yTouch));
-                int dx2 = (xTouch - mPrePoint.x) * (xTouch - mPrePoint.x);
-                int dy2 = (yTouch - mPrePoint.y) * (yTouch - mPrePoint.y);
-                mPointError = Math.sqrt((double) (dx2 + dy2));
-                int xNextRand = mRand.nextInt(mRectWidth);
-                int yNextRand = mRand.nextInt(mRectHeight);
-                mPrePoint = new Point(xNextRand, yNextRand);
-                mDiversityCanvas.requestUpdate();
-            }
-        } else {
-            if (MotionEvent.ACTION_DOWN == event.getAction()
-                    || MotionEvent.ACTION_MOVE == event.getAction()) {
-                mInputPoint.add(new Point((int) event.getX(), (int) event
-                        .getY()));
-                mDiversityCanvas.requestUpdate();
-            } else if (MotionEvent.ACTION_UP == event.getAction()) {
-                mAverageShakingError = 0.0;
-                for (int i = 0; i < mInputPoint.size(); i++) {
-                    int dx2 = (mInputPoint.get(i).x - mPrePoint.x)
-                            * (mInputPoint.get(i).x - mPrePoint.x);
-                    int dy2 = (mInputPoint.get(i).y - mPrePoint.y)
-                            * (mInputPoint.get(i).y - mPrePoint.y);
-                    mAverageShakingError += Math.sqrt((double) (dx2 + dy2));
-                }
-                mAverageShakingError = mAverageShakingError
-                        / mInputPoint.size();
-                mInputPoint.clear();
-                int xNextRand = mRand.nextInt(mRectWidth);
-                int yNextRand = mRand.nextInt(mRectHeight);
-                mPrePoint = new Point(xNextRand, yNextRand);
-                mDiversityCanvas.requestUpdate();
-            }
-        }
-        return true;
-    }
-
-    class DiversityCanvas extends SurfaceView implements SurfaceHolder.Callback {
-        DiversityThread mThread = null;
-
-        public DiversityCanvas(Context context) {
-            super(context);
-            SurfaceHolder holder = getHolder();
-            holder.addCallback(this);
-        }
-
-        public void surfaceChanged(SurfaceHolder holder, int format, int width,
-                int height) {
-            Log.v("@M_" + TAG, "surfaceChanged");
-        }
-
-        public void surfaceCreated(SurfaceHolder holder) {
-            mRun = true;
-            mThread = new DiversityThread(holder, null);
-            mThread.start();
-            requestUpdate();
-        }
-
-        public void surfaceDestroyed(SurfaceHolder holder) {
-            mRun = false;
-            mThread.quit();
-        }
-
-        void requestUpdate() {
-            mThread.mHandler.sendEmptyMessage(DiversityThread.MSG_REQUEST_UPDATE);
-        }
-
-        class DiversityThread extends HandlerThread {
-            private static final int MSG_REQUEST_UPDATE = 10;
-            private SurfaceHolder mSurfaceHolder = null;
-            private Paint mTextPaint = null;
-            private Paint mRectPaint = null;
-            private Rect mRect = null;
-            private Paint mCrossPaint = null;
-            private Handler mHandler = new Handler() {
-                @Override
-                public void handleMessage(Message msg) {
-                    super.handleMessage(msg);
-                    switch (msg.what) {
-                    case MSG_REQUEST_UPDATE:
-                        doUpdate();
-                        break;
-                    default:
-                        Log.d("@M_" + TAG, "Unknown msg:" + msg.what);
-                        break;
-                    }
-                }
-            };
-
-            public DiversityThread(SurfaceHolder s, Context c) {
-                super("TouchScreen.verifyPoint");
-                mSurfaceHolder = s;
-                mTextPaint = new Paint();
-                mTextPaint.setAntiAlias(true);
-                mTextPaint.setTextSize(9.0f * mZoom);
-                mTextPaint.setARGB(255, 0, 0, 0);
-                mRect = new Rect(0, 0, mRectWidth, mRectHeight);
-                mRectPaint = new Paint();
-                mRectPaint.setARGB(255, 255, 255, 255);
-                mCrossPaint = new Paint();
-                mCrossPaint.setARGB(255, 255, 0, 0);
-            }
-
-            private void doUpdate() {
-                Log.d("@M_" + TAG, "doUpdate()");
-                Canvas c = null;
-                c = mSurfaceHolder.lockCanvas(null);
-                if (c != null) {
-                    doDraw(c);
-                    mSurfaceHolder.unlockCanvasAndPost(c);
-                }
-            }
-
-            private void doDraw(Canvas canvas) {
-                canvas.drawRect(mRect, mRectPaint);
-                if (mBitmap == null) {
-                    canvas.drawLine(mPrePoint.x - 15, mPrePoint.y - 15,
-                            mPrePoint.x + 15, mPrePoint.y + 15, mCrossPaint);
-                    canvas.drawLine(mPrePoint.x - 15, mPrePoint.y + 15,
-                            mPrePoint.x + 15, mPrePoint.y - 15, mCrossPaint);
-                } else {
-                    canvas.drawBitmap(mBitmap, mPrePoint.x - mBitmapPad,
-                            mPrePoint.y - mBitmapPad, null);
-                }
-                if (mIsVerifyPoint) {
-                    canvas.drawText("point error : "
-                            + Double.toString(mPointError), 20,
-                            mRectHeight / 2, mTextPaint);
-                } else {
-                    canvas.drawText("Average shaking error : "
-                            + Double.toString(mAverageShakingError), 20,
-                            mRectHeight / 2, mTextPaint);
-                }
-            }
-        }
-    }
-}
\ No newline at end of file
diff --git a/EngineerMode/src/com/mediatek/engineermode/u3phy/U3PhySwitch.java b/EngineerMode/src/com/mediatek/engineermode/u3phy/U3PhySwitch.java
deleted file mode 100644
index c011f53..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/u3phy/U3PhySwitch.java
+++ /dev/null
@@ -1,202 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.u3phy;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.View;
-import android.widget.Button;
-import android.widget.RadioButton;
-import android.widget.RadioGroup;
-import android.widget.TextView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ShellExe;
-
-import java.io.File;
-import java.io.IOException;
-
-/**
- * Menu to set U3 PHY Switch.
- */
-public class U3PhySwitch extends Activity implements View.OnClickListener {
-    private static final String TAG = "EM/U3Phy";
-    private static final String USB_CONNECT_STATE = "/sys/class/android_usb/android0/state";
-    private static final String USB_CONNECT = "CONNECT";
-    private static final String USB_CONFIGURED = "CONFIGURED";
-    private static final String CONFIG_FILE_PATH = "/sys/devices/platform/mt_usb/sib_enable";
-
-    private RadioGroup mRadioGroup;
-    private RadioButton mRadioButtonAp;
-    private RadioButton mRadioButtonMd;
-    private Button mSetButton;
-    private TextView mHintText;
-    private Toast mToast;
-
-    @Override
-    public void onClick(View v) {
-        if (v.getId() == R.id.u3_phy_switch_set) {
-            int checkedId = mRadioGroup.getCheckedRadioButtonId();
-            if (checkedId == R.id.u3_phy_switch_ap) {
-                setConfig(0);
-            } else if (checkedId == R.id.u3_phy_switch_md) {
-                setConfig(1);
-            } else {
-                showToast("Please select one option");
-                return;
-            }
-            toggleFlightMode();
-            showToast("Set done");
-        }
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.u3_phy_switch);
-        mRadioGroup = (RadioGroup) findViewById(R.id.u3_phy_switch_group);
-        mRadioButtonAp = (RadioButton) findViewById(R.id.u3_phy_switch_ap);
-        mRadioButtonMd = (RadioButton) findViewById(R.id.u3_phy_switch_md);
-        mSetButton = (Button) findViewById(R.id.u3_phy_switch_set);
-        mSetButton.setOnClickListener(this);
-        mHintText = (TextView) findViewById(R.id.u3_phy_switch_hint);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        updateUI();
-    }
-
-    private int getConfig() {
-        int ret = ShellExe.RESULT_FAIL;
-        String cmd = "cat " + CONFIG_FILE_PATH;
-        try {
-            ret = ShellExe.execCommand(cmd, true);
-            Elog.d(TAG, cmd + " return " + ret);
-            if (ShellExe.RESULT_SUCCESS == ret) {
-                int value = Integer.parseInt(ShellExe.getOutput());
-                Elog.d(TAG, CONFIG_FILE_PATH + ": " + ShellExe.getOutput());
-                return value;
-            } else {
-                showToast("Get value failed");
-            }
-        } catch (IOException e) {
-            Elog.d(TAG, cmd.toString() + e.getMessage());
-            showToast("Get value failed");
-        } catch (NumberFormatException e) {
-            Elog.d(TAG, cmd.toString() + e.getMessage());
-            showToast("Get value failed");
-        }
-        return -1;
-    }
-
-    private void setConfig(int value) {
-        int ret = ShellExe.RESULT_FAIL;
-        String cmd = "echo " + value + " > " + CONFIG_FILE_PATH;
-        try {
-            ret = ShellExe.execCommand(cmd, true);
-            Elog.d(TAG, cmd + " return " + ret);
-            if (ShellExe.RESULT_SUCCESS != ret) {
-                showToast("Set failed");
-            }
-        } catch (IOException e) {
-            Elog.d(TAG, cmd.toString() + e.getMessage());
-            showToast("Set failed");
-        }
-    }
-
-    private boolean isUsbConnected() {
-        String result = null;
-        boolean isConnected = false;
-        StringBuilder strBuilder = new StringBuilder();
-        strBuilder.append("cat ");
-        strBuilder.append(USB_CONNECT_STATE);
-        Elog.v(TAG, "isUsbConnected cmd: " + strBuilder.toString());
-        try {
-            if (ShellExe.RESULT_SUCCESS == ShellExe.execCommand(strBuilder.toString(), true)) {
-                result = ShellExe.getOutput();
-                if (result.equals(USB_CONFIGURED) || result.equals(USB_CONNECT)) {
-                    isConnected = true;
-                }
-            }
-        } catch (IOException e) {
-            Elog.w(TAG, "get current dramc IOException: " + e.getMessage());
-        }
-        return isConnected;
-    }
-
-    private void toggleFlightMode() {
-        Intent intent = new Intent(Intent.ACTION_AIRPLANE_MODE_CHANGED);
-        intent.putExtra("state", true);
-        sendBroadcast(intent);
-
-        intent = new Intent(Intent.ACTION_AIRPLANE_MODE_CHANGED);
-        intent.putExtra("state", false);
-        sendBroadcast(intent);
-    }
-
-    private void updateUI() {
-        if (!(new File(CONFIG_FILE_PATH).exists())) {
-            mSetButton.setEnabled(false);
-            mRadioButtonAp.setEnabled(false);
-            mRadioButtonMd.setEnabled(false);
-            mHintText.setEnabled(false);
-            return;
-        }
-
-        int config = getConfig();
-        if (config == 0) {
-            mRadioGroup.check(R.id.u3_phy_switch_ap);
-        } else if (config == 1) {
-            mRadioGroup.check(R.id.u3_phy_switch_md);
-        }
-        mSetButton.setEnabled(!isUsbConnected());
-    }
-
-    private void showToast(String msg) {
-        if (mToast != null) {
-            mToast.cancel();
-        }
-        mToast = Toast.makeText(this, msg, Toast.LENGTH_SHORT);
-        mToast.show();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/usb/UsbDriver.java b/EngineerMode/src/com/mediatek/engineermode/usb/UsbDriver.java
deleted file mode 100644
index 7a8683b..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/usb/UsbDriver.java
+++ /dev/null
@@ -1,26 +0,0 @@
-package com.mediatek.engineermode.usb;
-
-public class UsbDriver {
-
-    static {
-        System.loadLibrary("em_usb_jni");
-
-    }
-
-    public static final String[] MSG = { "Driver return 0.",
-            "Attached device not support.", "Device not connected/responding.",
-            "Unsupported HUB topology." };
-    public static final int MSG_LEN = 4;
-
-    public static native boolean nativeInit();
-
-    public static native void nativeDeInit();
-
-    public static native boolean nativeCleanMsg();
-
-    public static native int nativeGetMsg();
-
-    public static native boolean nativeStartTest(int n);
-
-    public static native boolean nativeStopTest(int n);
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/usb/UsbList.java b/EngineerMode/src/com/mediatek/engineermode/usb/UsbList.java
deleted file mode 100644
index dcb100b..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/usb/UsbList.java
+++ /dev/null
@@ -1,122 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.usb;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-
-import com.mediatek.engineermode.R;
-import com.mediatek.engineermode.ChipSupport;
-import java.util.ArrayList;
-
-/**
- * Test USB OTG and ex function
- *
- * @author mtk54040
- *
- */
-public class UsbList extends Activity implements OnItemClickListener {
-    public static final String IF_TEST = "if_test";
-    public static final String IF_OTG20_TEST = "if_otg20_test";
-
-    private static final  int INDEX_0 = 0;
-    private static final  int INDEX_1 = 1;
-    private static final  int INDEX_2 = 2;
-    private static final String TAG = "UsbList";
-    private ArrayList<String> mItemList = new ArrayList<String>();
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.usb);
-
-        ListView listView = (ListView) findViewById(R.id.ListView_USB);
-
-        mItemList.add(getString(R.string.USB_IF_TEST));
-        mItemList.add(getString(R.string.USB_EX_TEST));
-        if (ChipSupport.getChip() >= ChipSupport.MTK_6595_SUPPORT) {
-            mItemList.add(getString(R.string.USB_IF_OTG20_TEST));
-        }
-
-        if (UsbPhyTuning.isUsbPhyExist()) {
-            mItemList.add(getString(R.string.usb_phy_tuning));
-        }
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mItemList);
-        listView.setAdapter(adapter);
-        listView.setOnItemClickListener(this);
-    }
-
-    public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
-        Log.d("@M_" + TAG, "-->onItemClick + arg2 " + arg2);
-        Intent intent = null;
-        if (getString(R.string.usb_phy_tuning).equals(mItemList.get(arg2))) {
-            intent = new Intent(this, UsbPhyTuning.class);
-        } else {
-            intent = new Intent(UsbList.this, UsbTest.class);
-            switch (arg2) {
-            case INDEX_0:
-                intent.putExtra(UsbList.IF_TEST, true);
-                intent.putExtra(UsbList.IF_OTG20_TEST, false);
-                break;
-            case INDEX_1:
-                intent.putExtra(UsbList.IF_TEST, false);
-                intent.putExtra(UsbList.IF_OTG20_TEST, false);
-                break;
-            case INDEX_2:
-                intent.putExtra(UsbList.IF_TEST, false);
-                intent.putExtra(UsbList.IF_OTG20_TEST, true);
-                break;
-            default:
-                break;
-            }
-        }
-        if (intent == null) {
-            Log.d("@M_" + TAG, "Invalid intent: null");
-            return;
-        }
-        startActivity(intent);
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/usb/UsbPhyTuning.java b/EngineerMode/src/com/mediatek/engineermode/usb/UsbPhyTuning.java
deleted file mode 100644
index fe77473..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/usb/UsbPhyTuning.java
+++ /dev/null
@@ -1,304 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.usb;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.Message;
-import android.os.SystemProperties;
-import android.view.View;
-import android.widget.ArrayAdapter;
-import android.widget.Button;
-import android.widget.Spinner;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileReader;
-import java.io.IOException;
-
-/**
- * USB PHY Tuning Activity.
- *
- * @author mtk81238
- *
- */
-public class UsbPhyTuning extends Activity implements android.view.View.OnClickListener {
-    /**
-     * action data.
-     *
-     * @author mtk81238
-     *
-     */
-    private class ActionData {
-        public Spinner spinner;
-        public String[] spinnerItems;
-        public Button button;
-        public String type;
-        public String path;
-
-        public ActionData(String actionType, String actionPath, Spinner sp,
-                String[] spItems, Button btn) {
-            spinner = sp;
-            spinnerItems = spItems;
-            button = btn;
-            type = actionType;
-            path = actionPath;
-        }
-    }
-
-    private static final String TAG = "EM/UsbPhyTuning";
-    private static final String TYPE_USB_DRIVING_CAPABILITY = "USB_DRIVING_CAPABILITY";
-    private static final String TYPE_USB_HSTX_SRCTRL = "RG_USB20_HSTX_SRCTRL";
-    private static final String TYPE_USB_INTR_EN = "RG_USB20_INTR_EN";
-    private static final String PATH_USB_PHY = "/sys/kernel/debug/usb20_phy";
-    private static final String PATH_USB_DRIVING_CAPABILITY = PATH_USB_PHY + "/"
-            + TYPE_USB_DRIVING_CAPABILITY;
-    private static final String PATH_USB_HSTX_SRCTRLL = PATH_USB_PHY + "/"
-            + TYPE_USB_HSTX_SRCTRL;
-    private static final String PATH_USB_INTR_EN = PATH_USB_PHY + "/" + TYPE_USB_INTR_EN;
-    private static final String KEY_EM_USB_VAL = "mediatek.em.usb.value";
-    private static final String KEY_EM_USB_TYPE = "mediatek.em.usb.set";
-    private static final int MSG_CHECK_SUBMIT_OPERATION = 10;
-    private Spinner mSpDrivingCapability = null;
-    private Spinner mSpHstxSrctrl = null;
-    private Spinner mSpIntrEn = null;
-    private Button mBtnDrivingCapability = null;
-    private Button mBtnHstxSrctrl = null;
-    private Button mBtnIntrEn = null;
-    private String[] mArrBValStr07 = null;
-    private String[] mArrDValStr01 = null;
-    private String[] mArrDValStr014 = { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
-            "10", "11", "12", "13", "14" };
-    private ActionData[] mActionData = null;
-
-    /**
-     * tell whether usb phy path exist.
-     *
-     * @return if existed, return true, or false
-     */
-    public static boolean isUsbPhyExist() {
-        return new File(PATH_USB_PHY).exists();
-    }
-
-    private Handler mMainHandler = new Handler() {
-        @Override
-        public void handleMessage(android.os.Message msg) {
-            super.handleMessage(msg);
-            switch (msg.what) {
-            case MSG_CHECK_SUBMIT_OPERATION:
-                handleCheckMsg(msg);
-                break;
-            default:
-                Elog.d(TAG, "Unhandled msg:" + msg.what);
-                break;
-            }
-        }
-    };
-
-    private void handleCheckMsg(Message msg) {
-        ActionData actionData = (ActionData) msg.obj;
-        boolean ret = checkSubmitResult(actionData);
-        if (ret) {
-            Toast.makeText(this, actionData.type + " execute success", Toast.LENGTH_SHORT)
-                    .show();
-        } else {
-            Toast.makeText(this, actionData.type + " execute fail", Toast.LENGTH_SHORT)
-                    .show();
-        }
-        actionData.button.setEnabled(true);
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.usb_phy_tuning);
-        mArrBValStr07 = getResources().getStringArray(R.array.usb_phy_tuning_val_0_7b);
-        mArrDValStr01 = getResources().getStringArray(R.array.usb_phy_tuning_val_0_1d);
-        mSpDrivingCapability = (Spinner) findViewById(R.id.usb_phy_driving_capability_sp);
-        mSpHstxSrctrl = (Spinner) findViewById(R.id.usb_phy_hstx_srctrl_sp);
-        mSpIntrEn = (Spinner) findViewById(R.id.usb_phy_intr_en_sp);
-
-        mBtnDrivingCapability = (Button) findViewById(R.id.usb_phy_driving_capability_btn);
-        mBtnDrivingCapability.setOnClickListener(this);
-        mBtnHstxSrctrl = (Button) findViewById(R.id.usb_phy_hstx_srctrl_btn);
-        mBtnHstxSrctrl.setOnClickListener(this);
-        mBtnIntrEn = (Button) findViewById(R.id.usb_phy_intr_en_btn);
-        mBtnIntrEn.setOnClickListener(this);
-
-        mActionData = new ActionData[3];
-        mActionData[0] = new ActionData(TYPE_USB_DRIVING_CAPABILITY,
-                PATH_USB_DRIVING_CAPABILITY, mSpDrivingCapability, mArrDValStr014,
-                mBtnDrivingCapability);
-        mActionData[1] = new ActionData(TYPE_USB_HSTX_SRCTRL, PATH_USB_HSTX_SRCTRLL,
-                mSpHstxSrctrl, mArrBValStr07, mBtnHstxSrctrl);
-        mActionData[2] = new ActionData(TYPE_USB_INTR_EN, PATH_USB_INTR_EN, mSpIntrEn,
-                mArrDValStr01, mBtnIntrEn);
-        for (int i = 0; i < mActionData.length; i++) {
-            fillSelectSpinner(mActionData[i]);
-        }
-    }
-
-    private void fillSpinnerItems(Spinner spinner, String[] itemArr) {
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item, itemArr);
-        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        spinner.setAdapter(adapter);
-    }
-
-    private void fillSelectSpinner(ActionData actionData) {
-        Spinner spinner = actionData.spinner;
-        String[] spItems = actionData.spinnerItems;
-        String path = actionData.path;
-        fillSpinnerItems(spinner, spItems);
-        String content = readFileContent(path);
-        if (content != null) {
-            content = content.trim();
-        }
-        int index = getIdxInStrArr(spItems, content);
-        if (index >= 0) {
-            spinner.setSelection(index);
-        } else {
-            Toast.makeText(this,
-                    "unknown value " + content + ", when read " + actionData.type,
-                    Toast.LENGTH_LONG).show();
-        }
-    }
-
-    private String readFileContent(String path) {
-        StringBuilder builder = new StringBuilder();
-        BufferedReader reader = null;
-        char[] buffer = new char[1024];
-        try {
-            reader = new BufferedReader(new FileReader(path));
-            while (true) {
-                int ret = reader.read(buffer, 0, buffer.length);
-                if (ret <= 0) {
-                    reader.close();
-                    break;
-                }
-                builder.append(buffer, 0, ret);
-            }
-
-        } catch (IOException e) {
-            builder.append("Error:").append(e.getMessage());
-            Elog.e(TAG, "readFileContent IOException:" + e.getMessage());
-        }
-        return builder.toString();
-    }
-
-    private int getIdxInStrArr(String[] array, String str) {
-        int index = -1;
-        for (int i = 0; i < array.length; i++) {
-            if (array[i].equals(str)) {
-                index = i;
-                break;
-            }
-        }
-        return index;
-    }
-
-    private void onClickButton(Button button) {
-        ActionData actionData = null;
-        for (int i = 0; i < mActionData.length; i++) {
-            if (button == mActionData[i].button) {
-                actionData = mActionData[i];
-                break;
-            }
-        }
-        if (actionData == null) {
-            Elog.e(TAG, "onClickButton Invalid actionData: null");
-            return;
-        }
-        submitSetting(actionData);
-    }
-
-    private void submitSetting(ActionData actionData) {
-        Button btn = actionData.button;
-        String type = actionData.type;
-        String value = actionData.spinner.getSelectedItem().toString();
-        btn.setEnabled(false);
-        SystemProperties.set(KEY_EM_USB_VAL, value);
-        SystemProperties.set(KEY_EM_USB_TYPE, type);
-        Message msg = Message.obtain();
-        msg.what = MSG_CHECK_SUBMIT_OPERATION;
-        msg.obj = actionData;
-        mMainHandler.sendMessageDelayed(msg, 100);
-    }
-
-    private boolean checkSubmitResult(ActionData actionData) {
-        boolean result = false;
-        Spinner spinner = null;
-        String path = null;
-        String[] array = null;
-        if (actionData != null) {
-            spinner = actionData.spinner;
-            path = actionData.path;
-            array = actionData.spinnerItems;
-        }
-        if (spinner != null && path != null && array != null) {
-            String content = readFileContent(path);
-            if (content != null) {
-                content = content.trim();
-            }
-            String selectVal = spinner.getSelectedItem().toString();
-            if (selectVal.equals(content)) {
-                result = true;
-            } else {
-                Elog.d(TAG, "submit fail, submited value:" + selectVal + ", read value:"
-                        + content);
-                // execute fail, reset spinner consistent with system value
-                int index = getIdxInStrArr(array, content);
-                if (index >= 0) {
-                    spinner.setSelection(index);
-                }
-            }
-        }
-        return result;
-    }
-
-    @Override
-    public void onClick(View view) {
-        if (view instanceof Button) {
-            Button btn = (Button) view;
-            onClickButton(btn);
-        }
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/usb/UsbTest.java b/EngineerMode/src/com/mediatek/engineermode/usb/UsbTest.java
deleted file mode 100644
index 1193f11..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/usb/UsbTest.java
+++ /dev/null
@@ -1,856 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- */
-/* MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.usb;
-
-import android.app.Activity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.os.Handler;
-import android.os.HandlerThread;
-import android.os.Looper;
-import android.os.Message;
-import android.os.SystemProperties;
-import android.util.Log;
-import android.os.SystemClock;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Button;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.InputStreamReader;
-import java.io.BufferedReader;
-import java.util.Arrays;
-import java.io.OutputStreamWriter;
-import java.io.PrintWriter;
-import java.io.FileOutputStream;
-
-
-/**
- * Test USB OTG IF/EX function test
- *
- * @author mtk54040
- *
- */
-public class UsbTest extends Activity implements OnClickListener {
-    private Button mBtnEnVbusStart;
-    private Button mBtnEnVbusStop;
-    private Button mBtnDeVbusStart;
-    private Button mBtnDeVbusStop;
-    private Button mBtnEnSrpStart;
-    private Button mBtnEnSrpStop;
-    private Button mBtnDeSrpStart;
-    private Button mBtnDeSrpStop;
-    private Button mBtnAUutStart;
-    private Button mBtnAUutStop;
-    private Button mBtnBUutStart;
-    private Button mBtnBUutStop;
-    private Button mBtnBUutTD59;
-    private Button[] mBtnList = null;
-
-    private static final String TAG = "USBTest";
-
-    // dialog ID and MSG ID
-    private static final int DLG_STOP = 1;
-    private static final int DLG_MSG = 2;
-    private static final int DLG_UNKNOW_MSG = 3;
-    private static final int DLG_ERROR_MSG = 4;
-    // private static final int DLG_IN_PROCESS = 5;
-
-    // private static final int DLGID_OP_IN_PROCESS = 1;
-    private static final int OP_IN_PROCESS = 10;
-    private static final int OP_FINISH = 11;
-    private static final int UPDATAT_MSG = 12;
-    private static final int ERROR_MSG = 13;
-
-    private static final int OTG20_ENTER_DONE = 14;
-    private static final int OTG20_EXIT_DONE = 15;
-    private static final int OTG20_START_DONE = 16;
-    private static final int OTG20_STOP_DONE = 17;
-
-    private static final int GET_MSG = 20;
-    private static final int START_TEST = 21;
-    // private static final int STOP_TEST = 22;
-    // private static Handler mainHandler = null;
-    // ProgressDialog mDialogSearchProgress = null;
-    private HandlerThread mResultCollectThread = null;
-    private ResultCollectHandler mResultCollectHandler = null;
-    private HandlerThread mTestThread = null;
-    private TestHandler mTestHandler = null;
-
-    //private WorkHandler mWorkHandler = null; // used to handle the work
-                                                // thread
-
-    private static final int ENABLE_VBUS = 0x01;
-    private static final int ENABLE_SRP = 0x02;
-    private static final int DETECT_SRP = 0x03;
-    private static final int DETECT_VBUS = 0x04;
-    private static final int A_UUT = 0x05;
-    private static final int B_UUT = 0x06;
-    private static final int TEST_SE0_NAK = 0x07;
-    private static final int TEST_J = 0x08;
-    private static final int TEST_K = 0x09;
-    private static final int TEST_PACKET = 0x0a;
-    private static final int SUSPEND_RESUME = 0x0b;
-    private static final int GET_DESCRIPTOR = 0x0c;
-    private static final int SET_FEATURE = 0x0d;
-    private static final int TD_5_9 = 0X0e;
-
-    private static final int USBIF_OTG20_MODE = 0x50;
-    private static final int USBIF_OTG20_ENABLE_VBUS = 0x51;
-    //private static final int USBIF_OTG20_DETECT_VBUS = 0x52;
-    //private static final int USBIF_OTG20_ENABLE_SRP = 0x53;
-    //private static final int USBIF_OTG20_DETECT_SRP = 0x54;
-    private static final int USBIF_OTG20_TEST_SE0_NAK = 0x55;
-    private static final int USBIF_OTG20_TEST_J = 0x56;
-    private static final int USBIF_OTG20_TEST_K = 0x57;
-    private static final int USBIF_OTG20_TEST_PACKET = 0x58;
-    private static final int USBIF_OTG20_SUSPEND_RESUME = 0x59;
-    private static final int USBIF_OTG20_GET_DESCRIPTOR = 0x5a;
-    private static final int USBIF_OTG20_SET_FEATURE = 0x5b;
-
-
-    private static final int USBIF_OTG20_A_UUT = 0x70;
-    private static final int USBIF_OTG20_B_UUT = 0x71;
-
-    private static final int[] BUTTONS_IDS_IF = { R.id.USB_IF_Elec_EnVBUS_Start_ID,
-        R.id.USB_IF_Elec_EnVBUS_Stop_ID, R.id.USB_IF_Elec_DeVBUS_Start_ID,
-        R.id.USB_IF_Elec_DeVBUS_Stop_ID, R.id.USB_IF_Elec_EnSRP_Start_ID,
-        R.id.USB_IF_Elec_EnSRP_Stop_ID, R.id.USB_IF_Elec_DeSRP_Start_ID,
-        R.id.USB_IF_Elec_DeSRP_Stop_ID, R.id.USB_IF_Proto_AUUT_Start_ID,
-        R.id.USB_IF_Proto_AUUT_Stop_ID, R.id.USB_IF_Proto_BUUT_Start_ID,
-        R.id.USB_IF_Proto_BUUT_Stop_ID, R.id.USB_IF_Proto_BUUT_TD5_9_ID };
-
-    private static final int[] BUTTONS_IDS_EX = { R.id.USB_EX_ITEM1_Start_ID,
-        R.id.USB_EX_ITEM1_Stop_ID, R.id.USB_EX_ITEM2_Start_ID,
-        R.id.USB_EX_ITEM2_Stop_ID, R.id.USB_EX_ITEM3_Start_ID,
-        R.id.USB_EX_ITEM3_Stop_ID, R.id.USB_EX_ITEM4_Start_ID,
-        R.id.USB_EX_ITEM4_Stop_ID, R.id.USB_EX_ITEM5_Start_ID,
-        R.id.USB_EX_ITEM5_Stop_ID, R.id.USB_EX_ITEM6_Start_ID,
-        R.id.USB_EX_ITEM6_Stop_ID, R.id.USB_EX_ITEM7_Start_ID,
-        R.id.USB_EX_ITEM7_Stop_ID };
-
-    private static final int[] BUTTONS_IDS_IF_OTG20 = {
-        R.id.USB_IF_OTG20_Start_ID, R.id.USB_IF_OTG20_Stop_ID,
-        R.id.USB_IF_OTG20_Elec_EnVBUS_Start_ID, R.id.USB_IF_OTG20_Elec_EnVBUS_Stop_ID,
-        /*R.id.USB_IF_OTG20_Elec_DeVBUS_Start_ID, R.id.USB_IF_OTG20_Elec_DeVBUS_Stop_ID,
-        R.id.USB_IF_OTG20_Elec_EnSRP_Start_ID, R.id.USB_IF_OTG20_Elec_EnSRP_Stop_ID,
-        R.id.USB_IF_OTG20_Elec_DeSRP_Start_ID, R.id.USB_IF_OTG20_Elec_DeSRP_Stop_ID,*/
-
-        R.id.USB_IF_OTG20_Elec_TEST_SE0_NAK_Start_ID, R.id.USB_IF_OTG20_TEST_SE0_NAK_Stop_ID,
-        R.id.USB_IF_OTG20_Elec_TEST_J_Start_ID, R.id.USB_IF_OTG20_Elec_TEST_J_Stop_ID,
-        R.id.USB_IF_OTG20_Elec_TEST_K_Start_ID, R.id.USB_IF_OTG20_Elec_TEST_K_Stop_ID,
-        R.id.USB_IF_OTG20_Elec_TEST_PACKET_Start_ID, R.id.USB_IF_OTG20_Elec_TEST_PACKET_Stop_ID,
-        R.id.USB_IF_OTG20_Elec_SUSPEND_RESUME_Start_ID, R.id.USB_IF_OTG20_Elec_SUSPEND_RESUME_Stop_ID,
-        R.id.USB_IF_OTG20_Elec_GET_DESCRIPTOR_Start_ID, R.id.USB_IF_OTG20_Elec_GET_DESCRIPTOR_Stop_ID,
-        R.id.USB_IF_OTG20_Elec_SET_FEATURE_Start_ID, R.id.USB_IF_OTG20_Elec_SET_FEATURE_Stop_ID,
-
-        R.id.USB_IF_OTG20_Proto_AUUT_Start_ID, R.id.USB_IF_OTG20_Proto_AUUT_Stop_ID,
-        R.id.USB_IF_OTG20_Proto_BUUT_Start_ID, R.id.USB_IF_OTG20_Proto_BUUT_Stop_ID };
-
-    private static final int[] IF_COMMOND = { ENABLE_VBUS, DETECT_VBUS,
-            ENABLE_SRP, DETECT_SRP, A_UUT, B_UUT };
-
-    private static final int[] EX_COMMAND = { TEST_SE0_NAK, TEST_J, TEST_K,
-            TEST_PACKET, SUSPEND_RESUME, GET_DESCRIPTOR, SET_FEATURE };
-
-    private static final int[] IF_OTG20_COMMAND = { USBIF_OTG20_MODE, USBIF_OTG20_ENABLE_VBUS,
-            /*USBIF_OTG20_DETECT_VBUS, USBIF_OTG20_ENABLE_SRP, USBIF_OTG20_DETECT_SRP*/
-            USBIF_OTG20_TEST_SE0_NAK, USBIF_OTG20_TEST_J, USBIF_OTG20_TEST_K, USBIF_OTG20_TEST_PACKET, USBIF_OTG20_SUSPEND_RESUME,
-            USBIF_OTG20_GET_DESCRIPTOR, USBIF_OTG20_SET_FEATURE, USBIF_OTG20_A_UUT, USBIF_OTG20_B_UUT };
-
-    private String usb_property_set = "sys.usb.config" ;
-
-    private String[] cmd_mu3h_driver_init_0 = { "/system/bin/sh", "-c", "echo 0 > /proc/mu3h_driver_init", };
-    private String[] cmd_mu3h_driver_init_1 = { "/system/bin/sh", "-c", "echo 1 > /proc/mu3h_driver_init", };
-
-    private String[] cmd_mu3d_driver_init_0 = { "/system/bin/sh", "-c", "echo 0 > /proc/mu3d_driver_init", };
-    private String[] cmd_mu3d_driver_init_1 = { "/system/bin/sh", "-c", "echo 1 > /proc/mu3d_driver_init", };
-
-    private String[] cmd_android_usbif_init_0 = { "/system/bin/sh", "-c", "echo 0 > /proc/android_usbif_init", };
-    private String[] cmd_android_usbif_init_1 = { "/system/bin/sh", "-c", "echo 1 > /proc/android_usbif_init", };
-
-    private String[] cmd_ts_mu3d_start = { "/system/bin/ts_mu3d", "auto.dev", };
-    private String[] cmd_ts_mu3d_stop = { "/system/bin/ts_mu3d", "auto.stop", };
-
-    private String[] cmd_ts_mu3d_uuta_start = { "/system/bin/ts_mu3d", "auto.otg", "8", };
-    private String[] cmd_ts_mu3h_uuta_start = { "/system/bin/ts_mu3h", "otg.uuta", };
-
-    private String[] cmd_ts_mu3d_uutb_start = { "/system/bin/ts_mu3d", "auto.otg", "9", };
-    private String[] cmd_ts_mu3h_uutb_start = { "/system/bin/ts_mu3h", "otg.uutb", };
-
-    private String[] cmd_ts_mu3d_otg_stop = { "/system/bin/ts_mu3d", "auto.otg", "10", };
-    private String[] cmd_ts_mu3h_hcdinit = { "/system/bin/ts_mu3h", "hcd.init", };
-    private String[] cmd_ts_mu3h_hcdcleanup = { "/system/bin/ts_mu3h", "hcd.cleanup", };
-
-    private String[] cmd_ts_mu3h_hcddrvvbus_start = { "/system/bin/ts_mu3h", "hcd.drvvbus", };
-    private String[] cmd_ts_mu3h_hcddrvvbus_stop = { "/system/bin/ts_mu3h", "hcd.stopvbus", };
-
-    private String[] cmd_ts_mu3h_hcdhosttestmode_start = { "/system/bin/ts_mu3h", "hcd.starthosttestmode", "0"};
-    private String[] cmd_ts_mu3h_hcdhosttestmode_stop = { "/system/bin/ts_mu3h", "hcd.stophosttestmode", };
-
-
-    private int mCommand = 0;
-    private int mMsg = 0;
-    private boolean mRun = false;
-    private boolean mTestIf = false;
-    private boolean mTestIf_OTG20 = false;
-    private int[] mBtnIds;
-    private boolean mTestIf_OTG20_enabled = false ;
-
-    /** Called when the activity is first created. */
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        Bundle extra = getIntent().getExtras();
-        if (null != extra) {
-            mTestIf = extra.getBoolean(UsbList.IF_TEST);
-            mTestIf_OTG20 = extra.getBoolean(UsbList.IF_OTG20_TEST);
-        }
-        Log.v("@M_" + TAG, "is test IF ? " + mTestIf + ", is mTestIf_OTG20 ? " + mTestIf_OTG20);
-
-        if (mTestIf) {
-            setContentView(R.layout.usb_test);
-            mBtnList = new Button[BUTTONS_IDS_IF.length];
-            mBtnIds = BUTTONS_IDS_IF;
-        } else if (mTestIf_OTG20) {
-            setTitle(R.string.USB_IF_OTG20_TEST);
-            setContentView(R.layout.usb_otg20_test);
-            mBtnList = new Button[BUTTONS_IDS_IF_OTG20.length];
-            mBtnIds = BUTTONS_IDS_IF_OTG20;
-        } else {
-            setTitle(R.string.USB_EX_TEST);
-            setContentView(R.layout.usb_test_ex);
-            mBtnList = new Button[BUTTONS_IDS_EX.length];
-            mBtnIds = BUTTONS_IDS_EX;
-        }
-
-        for (int i = 0; i < mBtnIds.length; i++) {
-            mBtnList[i] = (Button) findViewById(mBtnIds[i]);
-            mBtnList[i].setOnClickListener(this);
-        }
-
-        if (mTestIf_OTG20) {
-            Log.v("@M_" + TAG, "mTestIf_OTG20 test");
-            updateAllBtn_OTG20(mTestIf_OTG20_enabled) ;
-        } else {
-            if (!UsbDriver.nativeInit()) {
-                Toast.makeText(this, R.string.USB_not_support, Toast.LENGTH_SHORT)
-                        .show();
-                finish();
-            }
-        }
-
-        mResultCollectThread = new HandlerThread(TAG + "/ResultCollect");
-        mResultCollectThread.start();
-        mResultCollectHandler = new ResultCollectHandler(mResultCollectThread.getLooper());
-        mTestThread = new HandlerThread(TAG + "/Test");
-        mTestThread.start();
-        mTestHandler = new TestHandler(mTestThread.getLooper());
-    }
-
-    private Handler mUiHandler = new Handler() {
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case OP_IN_PROCESS:
-                showDialog(DLG_STOP);
-                break;
-            case OP_FINISH:
-                dismissDialog(DLG_STOP);
-                break;
-            case UPDATAT_MSG:
-                if (mMsg >= UsbDriver.MSG_LEN || mMsg < 0) {
-                    showDialog(DLG_UNKNOW_MSG);
-                } else {
-                    showDialog(DLG_MSG);
-                }
-                break;
-            case ERROR_MSG:
-                showDialog(DLG_ERROR_MSG);
-                break;
-            case OTG20_ENTER_DONE:
-                updateAllBtn_OTG20(true) ;
-                break;
-            case OTG20_EXIT_DONE:
-                updateAllBtn_OTG20(false) ;
-                break;
-            case OTG20_STOP_DONE:
-                updateAllBtn_OTG20(true) ;
-                break;
-            default:
-                break;
-            }
-        }
-    };
-
-
-    private static StringBuilder sResult = new StringBuilder("");
-
-    public static class StreamDrainer implements Runnable {
-        private InputStream ins;
-
-        public StreamDrainer(InputStream ins) {
-            this.ins = ins;
-        }
-
-        public void run() {
-            try {
-                BufferedReader reader = new BufferedReader(
-                        new InputStreamReader(ins));
-                String line = null;
-                while ((line = reader.readLine()) != null) {
-                    Log.i("@M_" + TAG, "thread id " + Thread.currentThread().getId() + " ,line is " + line);
-                }
-                Log.i("@M_" + TAG, "thread id " + Thread.currentThread().getId() + " ,read line done");
-            } catch (IOException e) {
-                e.printStackTrace();
-            }
-        }
-
-    }
-
-    /**
-     * Write proc value for USB test setting
-     *
-     * @param proc_path : the proc path
-     * @param value : the value writing to proc path
-     */
-    public static void usbExecProcWrite(String proc_path , String value) {
-        // Open the sysfs file for writing and write "1" to it.
-        Log.i("@M_" + TAG, "myexecProc : , proc_path is " + proc_path + " value is " + value) ;
-
-        PrintWriter outStream = null;
-        try {
-            FileOutputStream fos = new FileOutputStream(proc_path);
-            outStream = new PrintWriter(new OutputStreamWriter(fos));
-            outStream.println(value);
-        } catch (IOException e) {
-            e.printStackTrace();
-        } finally {
-            if (outStream != null)
-                outStream.close();
-        }
-
-        Log.i("@M_" + TAG, "myexecProc : done") ;
-    }
-
-    /**
-     * Exec command for USB test setting
-     *
-     * @param command : the exec command
-     */
-    public static int usbExecCommand(String[] command) {
-
-        Log.i("@M_" + TAG, "usbExecCommand : , command is " + Arrays.toString(command)) ;
-
-        sResult.delete(0, sResult.length());
-        try {
-            Runtime runtime = Runtime.getRuntime();
-            Process proc = runtime.exec(command);
-
-            new Thread(new StreamDrainer(proc.getInputStream())).start();
-            new Thread(new StreamDrainer(proc.getErrorStream())).start();
-
-            proc.getOutputStream().close();
-
-            int exitValue = proc.waitFor();
-
-            Log.i("@M_" + TAG, "waitFor value = " + exitValue + ", done");
-
-            return 0;
-        } catch (IOException e) {
-            e.printStackTrace();
-        } catch (InterruptedException e) {
-            e.printStackTrace();
-        }
-
-        return -1;
-    }
-
-    private int usbSwitchToIFOTG20mode(boolean enable) {
-
-        Log.i("@M_" + TAG, "usbSwitchToIFOTG20mode : enaable is " + enable);
-
-        if (enable) {
-            // 1. stop adbd
-            SystemProperties.set(usb_property_set, "none") ;
-
-            SystemClock.sleep(2000) ;
-
-            // 2. stop android0
-            usbExecCommand(cmd_android_usbif_init_0) ;
-
-            //SystemClock.sleep(1000) ;
-
-            // 3. stop mu3d normal driver
-            usbExecCommand(cmd_mu3d_driver_init_0) ;
-            //SystemClock.sleep(1000) ;
-
-            // 4. stop mu3h normal driver
-            usbExecCommand(cmd_mu3h_driver_init_0) ;
-            //SystemClock.sleep(1000) ;
-
-            // 5. start and enter mu3d test driver test mode
-            usbExecCommand(cmd_ts_mu3d_start) ;
-            SystemClock.sleep(2000); // wait driver process init done
-
-
-        } else {
-            // 1. stop mu3d test driver test mode
-            usbExecCommand(cmd_ts_mu3d_stop);
-            //SystemClock.sleep(1000) ;
-
-            // 2. start mu3d normal driver
-            usbExecCommand(cmd_mu3d_driver_init_1);
-            //SystemClock.sleep(1000) ;
-
-            // 3. start android0
-            usbExecCommand(cmd_android_usbif_init_1);
-            //SystemClock.sleep(1000) ;
-
-            // 4. start mu3h normal driver
-            usbExecCommand(cmd_mu3h_driver_init_1);
-
-            SystemClock.sleep(2000) ;
-
-            // 5. start adbd
-            SystemProperties.set(usb_property_set, "mass_storage,adb");
-
-        }
-
-        return 0;
-    }
-
-    private int usbIFU3DrvVbus(boolean enable) {
-
-        Log.i("@M_" + TAG, "usbIFU3enVbus : enaable is " + enable);
-
-        if (enable) {
-            usbExecCommand(cmd_ts_mu3h_hcdinit);
-            usbExecCommand(cmd_ts_mu3h_hcddrvvbus_start);
-        } else {
-            usbExecCommand(cmd_ts_mu3h_hcddrvvbus_stop);
-            usbExecCommand(cmd_ts_mu3h_hcdcleanup);
-        }
-        return 0;
-    }
-
-    private int usbIFU3ElecTestMode(boolean enable, String mode) {
-
-        Log.i("@M_" + TAG, "usbIFU3ElecTestMode : enaable is " + enable + " , mode is " + mode) ;
-        if (enable) {
-            usbExecCommand(cmd_ts_mu3h_hcdinit) ;
-            cmd_ts_mu3h_hcdhosttestmode_start[2] = mode;
-            Log.i("@M_" + TAG, "usbIFU3ElecTestMode : , cmd_ts_mu3h_hcdhosttestmode_start is " + Arrays.toString(cmd_ts_mu3h_hcdhosttestmode_start)) ;
-            usbExecCommand(cmd_ts_mu3h_hcdhosttestmode_start);
-        } else {
-            usbExecCommand(cmd_ts_mu3h_hcdhosttestmode_stop);
-            usbExecCommand(cmd_ts_mu3h_hcdcleanup);
-        }
-        return 0;
-    }
-
-    private int usbIFOTG20uutATest(boolean enable) {
-
-        Log.i("@M_" + TAG, "usbIFOTG20uutATest : enaable is " + enable);
-
-        if (enable) {
-            // 1. start mu3h uuta mode
-            usbExecCommand(cmd_ts_mu3h_uuta_start);
-            // 2. start mu3d uuta mode
-            usbExecCommand(cmd_ts_mu3d_uuta_start);
-
-        } else {
-            // 1. stop mu3d uuta mode
-            usbExecCommand(cmd_ts_mu3d_otg_stop);
-            // 2. stop mu3h uuta mode
-            usbExecCommand(cmd_ts_mu3h_hcdcleanup);
-
-            SystemClock.sleep(3000) ;
-        }
-        return 0;
-    }
-
-    private int usbIFOTG20uutBTest(boolean enable) {
-
-        Log.i("@M_" + TAG, "usbIFOTG20uutBTest : enaable is " + enable);
-
-        if (enable) {
-            // 1. start mu3h uutb mode
-            usbExecCommand(cmd_ts_mu3h_uutb_start);
-            // 2. start mu3d uutb mode
-            usbExecCommand(cmd_ts_mu3d_uutb_start);
-        } else {
-            // 1. stop mu3d uutb mode
-            usbExecCommand(cmd_ts_mu3d_otg_stop);
-            // 2. stop mu3h uutb mode
-            usbExecCommand(cmd_ts_mu3h_hcdcleanup);
-
-            SystemClock.sleep(3000) ;
-        }
-
-        return 0;
-    }
-
-
-    /**
-     * Enable or disable the button group
-     *
-     * @param enable
-     */
-    private void updateAllBtn(boolean enable) {
-        for (Button btn : mBtnList) {
-            btn.setEnabled(enable);
-        }
-    }
-
-    private void updateAllBtn_OTG20(boolean in_usbif_test_mode) {
-        Button btn_enter_otg20;
-        Button btn_exit_otg20;
-
-        Log.d("@M_" + TAG, "-->updateAllBtn_OTG20, mBtnIds.length is " + mBtnIds.length + ", BUTTONS_IDS_IF_OTG20.length is " + BUTTONS_IDS_IF_OTG20.length);
-
-        //btn_enter_otg20 = (Button) findViewById(mBtnIds[0]);
-        //btn_exit_otg20 = (Button) findViewById(mBtnIds[1]);
-
-        btn_enter_otg20 = mBtnList[0];
-        btn_exit_otg20 = mBtnList[1];
-
-        Log.d("@M_" + TAG, "-->updateAllBtn_OTG20, in_usbif_test_mode is " + in_usbif_test_mode);
-
-        if (in_usbif_test_mode) {
-            for (Button btn : mBtnList) {
-                btn.setEnabled(true);
-            }
-            btn_enter_otg20.setEnabled(false);
-        } else {
-            for (Button btn : mBtnList) {
-                btn.setEnabled(false);
-            }
-            btn_enter_otg20.setEnabled(true);
-        }
-
-    }
-
-    /**
-     * Enable only one button
-     *
-     * @param selBtn
-     */
-    private void makeOneBtnEnable(Button selBtn) {
-        for (Button btn : mBtnList) {
-            if (btn == selBtn) {
-                btn.setEnabled(true);
-            } else {
-                btn.setEnabled(false);
-            }
-        }
-    }
-
-    @Override
-    protected void onPrepareDialog(int id, Dialog dialog) {
-        switch (id) {
-        case DLG_MSG:
-        case DLG_UNKNOW_MSG:
-            removeDialog(id);
-            break;
-        }
-    }
-
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Log.d("@M_" + TAG, "-->onCreateDialog");
-        if (id == DLG_STOP) {
-            ProgressDialog dialog = new ProgressDialog(this);
-            dialog.setTitle(R.string.USB_IF_TEST);
-            dialog.setMessage(getString(R.string.USB_IF_stop));
-            dialog.setCancelable(false);
-            dialog.setIndeterminate(true);
-            return dialog;
-        } else if (id == DLG_MSG) {
-            AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                    false).setTitle(R.string.USB_message).setMessage(
-                    UsbDriver.MSG[mMsg]).setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            // finish();
-                        }
-                    }).create();
-            return dialog;
-        } else if (id == DLG_UNKNOW_MSG) {
-            AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                    false).setTitle(R.string.USB_message).setMessage(
-                    String.valueOf(mMsg)).setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            // finish();
-                        }
-                    }).create();
-            return dialog;
-        } else if (id == DLG_ERROR_MSG) {
-            AlertDialog dialog = new AlertDialog.Builder(this).setCancelable(
-                    false).setTitle(R.string.USB_message).setMessage(
-                    R.string.USB_msg_err).setPositiveButton(R.string.OK,
-                    new DialogInterface.OnClickListener() {
-                        public void onClick(DialogInterface dialog, int which) {
-                            // finish();
-                        }
-                    }).create();
-            return dialog;
-        }
-        return null;
-    }
-
-    @Override
-    protected void onDestroy() {
-        Log.v("@M_" + TAG, "-->onDestroy");
-        if (mRun) {
-            mRun = false;
-             if (!UsbDriver.nativeStopTest(mCommand)) {
-                 Log.w("@M_" + TAG, "onDestroy() nativeStopTest fail");
-             }
-        }
-        UsbDriver.nativeCleanMsg();
-        UsbDriver.nativeDeInit();
-        mResultCollectThread.quit();
-        mTestThread.quit();
-        super.onDestroy();
-    }
-
-    public void onClick(View arg0) {
-        boolean isSTART = false;
-        Button stopBtn = null;
-        Button startBtn = null;
-
-        if (arg0.getId() == BUTTONS_IDS_IF[BUTTONS_IDS_IF.length - 1]) {
-            mCommand = TD_5_9;
-            isSTART = true;
-            stopBtn = mBtnList[mBtnList.length - 3];
-        } else {
-            int btnIndex = findBtnIndex(arg0.getId());
-            if (mTestIf) {
-                mCommand = IF_COMMOND[btnIndex / 2];
-            } else if (mTestIf_OTG20) {
-                mCommand = IF_OTG20_COMMAND[btnIndex / 2];
-            } else {
-                mCommand = EX_COMMAND[btnIndex / 2];
-            }
-
-            if (0 == btnIndex % 2) {
-                isSTART = true;
-                startBtn = mBtnList[btnIndex];
-                stopBtn = mBtnList[btnIndex + 1];
-            } else {
-                isSTART = false;
-                startBtn = mBtnList[btnIndex - 1];
-                stopBtn = mBtnList[btnIndex];
-            }
-        }
-        Log.v("@M_" + TAG, "isSTART--" + isSTART);
-        Log.v("@M_" + TAG, "command--" + mCommand);
-
-        if (mTestIf_OTG20) {
-            if (mCommand == USBIF_OTG20_MODE) {
-                if (isSTART) {
-                    UsbDriver.nativeCleanMsg();
-                    mTestHandler.sendEmptyMessage(START_TEST);
-                } else {
-                    usbSwitchToIFOTG20mode(false);
-                    mTestIf_OTG20_enabled = false;
-                    mUiHandler.sendEmptyMessage(OTG20_EXIT_DONE);
-                }
-            } else {  // Other TEST command
-        if (isSTART) {
-            UsbDriver.nativeCleanMsg();
-            makeOneBtnEnable(stopBtn);
-                    mRun = true;
-            mTestHandler.sendEmptyMessage(START_TEST);
-                    // START command
-                    mResultCollectHandler.sendEmptyMessage(GET_MSG);
-                } else if (mRun) {
-                    mRun = false;
-                    if (mCommand == USBIF_OTG20_A_UUT) {
-                        usbIFOTG20uutATest(false);
-                    } else if (mCommand == USBIF_OTG20_B_UUT) {
-                        usbIFOTG20uutBTest(false);
-                    } else if (mCommand == USBIF_OTG20_ENABLE_VBUS) {
-                        usbIFU3DrvVbus(false);
-                    } else if (mCommand == USBIF_OTG20_TEST_SE0_NAK) {
-                        usbIFU3ElecTestMode(false, "6");
-                    } else if (mCommand == USBIF_OTG20_TEST_J) {
-                        usbIFU3ElecTestMode(false, "7");
-                    } else if (mCommand == USBIF_OTG20_TEST_K) {
-                        usbIFU3ElecTestMode(false, "8");
-                    } else if (mCommand == USBIF_OTG20_TEST_PACKET) {
-                        usbIFU3ElecTestMode(false, "9");
-                    } else if (mCommand == USBIF_OTG20_SUSPEND_RESUME) {
-                        usbIFU3ElecTestMode(false, "10");
-                    } else if (mCommand == USBIF_OTG20_GET_DESCRIPTOR) {
-                        usbIFU3ElecTestMode(false, "11");
-                    } else if (mCommand == USBIF_OTG20_SET_FEATURE) {
-                        usbIFU3ElecTestMode(false, "12");
-                    }
-                    // STOP command done
-                    mUiHandler.sendEmptyMessage(OTG20_STOP_DONE);
-
-                }
-
-            }
-
-        } else {
-            if (isSTART) {
-                UsbDriver.nativeCleanMsg();
-                makeOneBtnEnable(stopBtn);
-                mRun = true;
-                mTestHandler.sendEmptyMessage(START_TEST);
-                // START command
-                mResultCollectHandler.sendEmptyMessage(GET_MSG);
-            } else if (mRun) {
-                mRun = false;
-                if (!UsbDriver.nativeStopTest(mCommand)) {
-                    Toast.makeText(this, R.string.USB_stop_fail,
-                                    Toast.LENGTH_SHORT).show();
-                    UsbDriver.nativeCleanMsg();
-                }
-                updateAllBtn(true);
-            }
-        }
-    }
-
-    private int findBtnIndex(int id) {
-        for (int i = 0; i < mBtnIds.length; i++) {
-            if (id == mBtnIds[i]) {
-                Log.d("@M_" + TAG, "find btn index: " + i);
-                return i;
-            }
-        }
-        Log.d("@M_" + TAG, "find btn index error");
-        return -1;
-    }
-
-    private final class TestHandler extends Handler {
-        TestHandler(Looper looper) {
-            super(looper);
-        }
-
-        @Override
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case START_TEST:
-                Log.v("@M_" + TAG, "command--" + mCommand);
-                Log.v("@M_" + TAG, "handleMessage command--" + mCommand);
-                if (mTestIf_OTG20) {  // USBIF mode enable switch
-                    if (mCommand == USBIF_OTG20_MODE) {
-                        mTestIf_OTG20_enabled = true ;
-
-                        usbSwitchToIFOTG20mode(true) ;
-
-                        mUiHandler.sendEmptyMessage(OTG20_ENTER_DONE);
-                    } else {  // other USBIF test case
-                        if (mCommand == USBIF_OTG20_A_UUT) {
-                            usbIFOTG20uutATest(true);
-                        } else if (mCommand == USBIF_OTG20_B_UUT) {
-                            usbIFOTG20uutBTest(true);
-                        } else if (mCommand == USBIF_OTG20_ENABLE_VBUS) {
-                            usbIFU3DrvVbus(true);
-                        } else if (mCommand == USBIF_OTG20_TEST_SE0_NAK) {
-                            usbIFU3ElecTestMode(true, "6");
-                        } else if (mCommand == USBIF_OTG20_TEST_J) {
-                            usbIFU3ElecTestMode(true, "7");
-                        } else if (mCommand == USBIF_OTG20_TEST_K) {
-                            usbIFU3ElecTestMode(true, "8");
-                        } else if (mCommand == USBIF_OTG20_TEST_PACKET) {
-                            usbIFU3ElecTestMode(true, "9");
-                        } else if (mCommand == USBIF_OTG20_SUSPEND_RESUME) {
-                            usbIFU3ElecTestMode(true, "10");
-                        } else if (mCommand == USBIF_OTG20_GET_DESCRIPTOR) {
-                            usbIFU3ElecTestMode(true, "11");
-                        } else if (mCommand == USBIF_OTG20_SET_FEATURE) {
-                            usbIFU3ElecTestMode(true, "12");
-                        }
-                    }
-                } else {
-                    if (!UsbDriver.nativeStartTest(mCommand)) {
-                        mUiHandler.sendEmptyMessage(ERROR_MSG);
-                    }
-                }
-
-                Log.v("@M_" + TAG, "Task finish");
-                break;
-            default:
-                Log.w("@M_" + TAG, "Unhandled msg: " + msg.what);
-                break;
-            }
-            super.handleMessage(msg);
-        }
-    }
-
-    private final class ResultCollectHandler extends Handler {
-        ResultCollectHandler(Looper looper) {
-            super(looper);
-        }
-
-        @Override
-        public void handleMessage(Message msg) {
-            switch (msg.what) {
-            case GET_MSG:
-                 if (mRun) {
-                 if (!mTestIf_OTG20) {
-                     mMsg = UsbDriver.nativeGetMsg();
-                     Log.d("@M_" + TAG, "getMsg() " + mMsg);
-                     if (0 != mMsg) {
-                         mUiHandler.sendEmptyMessage(UPDATAT_MSG);
-                     } else {
-                         sendEmptyMessageDelayed(GET_MSG, 200);
-                     }
-                 }
-                 }
-                break;
-            default:
-                Log.w("@M_" + TAG, "Unhandled msg: " + msg.what);
-                break;
-            }
-            super.handleMessage(msg);
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/vcmd/AbstrViewCmdActivity.java b/EngineerMode/src/com/mediatek/engineermode/vcmd/AbstrViewCmdActivity.java
deleted file mode 100644
index 0e923d1..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/vcmd/AbstrViewCmdActivity.java
+++ /dev/null
@@ -1,107 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.vcmd;
-
-import java.util.Collection;
-import java.util.List;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.widget.CheckBox;
-import android.widget.CompoundButton;
-import android.widget.Toast;
-import android.widget.CompoundButton.OnCheckedChangeListener;
-
-public abstract class AbstrViewCmdActivity extends Activity implements OnCheckedChangeListener {
-
-    private ViewCommandManager mVcMngr;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        mVcMngr = new ViewCommandManager(this);
-        mVcMngr.initViewCmdFromList(initViewCmds());
-    }
-
-    protected ViewCommandManager getViewCommandManager() {
-        if (mVcMngr == null) {
-            throw new RuntimeException("please get ViewCommandManger after supper activity was created");
-        }
-        return mVcMngr;
-    }
-
-    abstract protected List<ViewCommand> initViewCmds();
-
-    protected void registListeners() {
-        Collection<ViewCommand> viewCmds = mVcMngr.getViewCommandSet();
-        for (ViewCommand vc : viewCmds) {
-            if (vc.adapter == null) {
-                continue;
-            }
-            if (vc.adapter.getViewType() == CheckBox.class) {
-                CheckBox cb = (CheckBox) findViewById(vc.rid);
-                cb.setOnCheckedChangeListener(this);
-            }
-        }
-    }
-
-    @Override
-    protected void onStart() {
-        super.onStart();
-        if (!mVcMngr.setAllViewByVal()) {
-            Toast.makeText(this, "fail to load data", Toast.LENGTH_SHORT).show();
-        }
-    }
-
-    @Override
-    protected void onDestroy() {
-        mVcMngr.clearRes();
-        super.onDestroy();
-    }
-
-    @Override
-    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
-        int id = buttonView.getId();
-        if (mVcMngr.handleViewAction(id)) {
-            Toast.makeText(this, "set success", Toast.LENGTH_SHORT).show();
-        } else {
-            Toast.makeText(this, "set fail", Toast.LENGTH_SHORT).show();
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/vcmd/CheckBoxCmdAdapter.java b/EngineerMode/src/com/mediatek/engineermode/vcmd/CheckBoxCmdAdapter.java
deleted file mode 100644
index 46ab403..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/vcmd/CheckBoxCmdAdapter.java
+++ /dev/null
@@ -1,153 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.vcmd;
-
-import java.io.IOException;
-import java.util.regex.Pattern;
-
-import android.app.Activity;
-import android.view.View;
-import android.widget.CheckBox;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.ShellExe;
-import com.mediatek.engineermode.vcmd.ViewCommand.Adapter;
-
-public class CheckBoxCmdAdapter implements Adapter {
-
-    private static final String TAG = "CheckBoxCmdAdapter";
-    private static final String CHECKED = "1";
-    private static final String UNCHECKED = "0";
-    private static final String ENABLED = "enabled";
-    private static final String DISABLED = "disable";
-
-    @Override
-    public boolean doViewAction(Activity host, ViewCommand vc) {
-        if (!(vc.adapter instanceof CheckBoxCmdAdapter)) {
-            Elog.d(TAG, "Unsupported ViewCommand.Adapter:" + vc.adapter.toString());
-            return false;
-        }
-        CheckBox cb = (CheckBox) host.findViewById(vc.rid);
-        StringBuilder builder = new StringBuilder().append("echo ");
-        if (cb.isChecked()) {
-            builder.append(CHECKED);
-        } else {
-            builder.append(UNCHECKED);
-        }
-        builder.append(" > ").append(vc.cmdPath);
-        String cmd = builder.toString();
-        Elog.d(TAG, "cmd: " + cmd);
-        int result = -1;
-        try {
-            result = ShellExe.execCommand(cmd);
-        } catch (IOException e) {
-            Elog.d(TAG, "IOException:" + e.getMessage());
-            return false;
-        }
-        if (result != ShellExe.RESULT_SUCCESS) {
-            Elog.d(TAG, "fail to exec write cmd");
-            return false;
-        }
-        return true;
-    }
-
-    @Override
-    public boolean setViewByCmdVal(Activity host, ViewCommand vc) {
-        if (!(vc.adapter instanceof CheckBoxCmdAdapter)) {
-            Elog.d(TAG, "Unsupported ViewCommand.Adapter:" + vc.adapter.toString());
-            return false;
-        }
-        CheckBox cb = (CheckBox) host.findViewById(vc.rid);
-        String cmd = "cat " + vc.cmdPath;
-        Elog.d(TAG, "CMD:" + cmd);
-        int ret;
-        try {
-            ret = ShellExe.execCommand(cmd);
-        } catch (IOException e) {
-            Elog.d(TAG, "IOException:" + e.getMessage());
-            return false;
-        }
-        String val = ShellExe.getOutput();
-        if (ShellExe.RESULT_SUCCESS != ret) {
-            Elog.d(TAG, "Exec cmd fail:" + ret + " output:" + val);
-           return false;
-        }
-        if (val == null) {
-            Elog.d(TAG, "output was null");
-            return false;
-        }
-        String targetVal = val.trim();
-        if (isCheckedStr(true, targetVal)) {
-            cb.setChecked(true);
-        } else if (isCheckedStr(false, targetVal)) {
-            cb.setChecked(false);
-        } else {
-            Elog.d(TAG, "invalid Cmd result:" + targetVal);
-            return false;
-        }
-        return true;
-    }
-
-    @Override
-    public Class<? extends View> getViewType() {
-        return CheckBox.class;
-    }
-
-    protected boolean isCheckedStr(boolean checked, String str) {
-        if (checked) {
-            if (str.contains(ENABLED)) {
-                return true;
-            } else if (CHECKED.equals(str) || findRegex(str, "= *" + CHECKED)) {
-                return true;
-            }
-        } else {
-            if (str.contains(DISABLED)) {
-                return true;
-            } else if (UNCHECKED.equals(str) || findRegex(str, "= *" + UNCHECKED)) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    private boolean findRegex(String str, String regex) {
-        Pattern p = Pattern.compile(regex);
-        return p.matcher(str).find();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/vcmd/TextViewCmdAdapter.java b/EngineerMode/src/com/mediatek/engineermode/vcmd/TextViewCmdAdapter.java
deleted file mode 100644
index d944ccb..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/vcmd/TextViewCmdAdapter.java
+++ /dev/null
@@ -1,96 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.vcmd;
-
-import java.io.IOException;
-
-import android.app.Activity;
-import android.view.View;
-import android.widget.TextView;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.ShellExe;
-import com.mediatek.engineermode.vcmd.ViewCommand.Adapter;
-
-public class TextViewCmdAdapter implements Adapter {
-    private static final String TAG = "TextViewCmdAdapter";
-    @Override
-    public boolean doViewAction(Activity host, ViewCommand vc) {
-        if (!(vc.adapter instanceof TextViewCmdAdapter)) {
-            Elog.d(TAG, "Unsupported ViewCommand.Adapter:" + vc.adapter.toString());
-            return false;
-        }
-        Elog.d(TAG, "Only Do Nothing");
-        return true;
-    }
-
-    @Override
-    public boolean setViewByCmdVal(Activity host, ViewCommand vc) {
-        if (!(vc.adapter instanceof TextViewCmdAdapter)) {
-            Elog.d(TAG, "Unsupported ViewCommand.Adapter:" + vc.adapter.toString());
-            return false;
-        }
-        TextView tv = (TextView) host.findViewById(vc.rid);
-        String cmd = "cat " + vc.cmdPath;
-        Elog.d(TAG, "cmd:" + cmd);
-        int ret;
-        try {
-            ret = ShellExe.execCommand(cmd);
-        } catch (IOException e) {
-            Elog.d(TAG, "IOException:" + e.getMessage());
-            return false;
-        }
-        String val = ShellExe.getOutput();
-        if (ShellExe.RESULT_SUCCESS != ret) {
-            Elog.d(TAG, "Exec cmd fail:" + ret + " output:" + val);
-           return false;
-        }
-        if (val == null) {
-            Elog.d(TAG, "output was null");
-            return false;
-        }
-        tv.setText(val);
-        return true;
-    }
-
-    @Override
-    public Class<? extends View> getViewType() {
-        return TextView.class;
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/vcmd/ViewCommand.java b/EngineerMode/src/com/mediatek/engineermode/vcmd/ViewCommand.java
deleted file mode 100644
index dcb2295..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/vcmd/ViewCommand.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.vcmd;
-
-import android.app.Activity;
-import android.view.View;
-
-public class ViewCommand {
-    public int rid;
-    public String cmdPath;
-    public Adapter adapter;
-    public ViewCommand() {}
-
-    public ViewCommand(int resid, String path, Adapter adp) {
-        rid = resid;
-        cmdPath = path;
-        adapter = adp;
-    }
-
-    public interface Adapter {
-        public boolean doViewAction(Activity host, ViewCommand vc);
-
-        public boolean setViewByCmdVal(Activity host, ViewCommand vc);
-
-        public Class<? extends View> getViewType();
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/vcmd/ViewCommandManager.java b/EngineerMode/src/com/mediatek/engineermode/vcmd/ViewCommandManager.java
deleted file mode 100644
index e1415fa..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/vcmd/ViewCommandManager.java
+++ /dev/null
@@ -1,146 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.vcmd;
-
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.List;
-
-import com.mediatek.engineermode.Elog;
-
-import android.app.Activity;
-
-
-
-public class ViewCommandManager {
-    private static final String TAG = "ViewCommandManager";
-    private Activity mHost;
-    private HashMap<Integer, ViewCommand> mViewCmdSet;
-    public ViewCommandManager(Activity activity) {
-        mHost = activity;
-        mViewCmdSet = new HashMap<Integer, ViewCommand>();
-    }
-
-    public void initViewCmdFromList(List<ViewCommand> list) {
-        for (ViewCommand vc : list) {
-            if (vc == null) {
-                continue;
-            }
-            mViewCmdSet.put(vc.rid, vc);
-        }
-    }
-
-    public void initViewCmdFromArray(ViewCommand[] viewCmds) {
-        if (viewCmds == null) {
-            return;
-        }
-        for (int i = 0; i < viewCmds.length; i++) {
-            if (viewCmds[i] == null) {
-                continue;
-            }
-
-            ViewCommand vc = viewCmds[i];
-            mViewCmdSet.put(vc.rid, vc);
-        }
-    }
-
-    public boolean handleViewAction(int rid) {
-        ViewCommand vc = mViewCmdSet.get(rid);
-        if (vc == null) {
-            Elog.d(TAG, "Invalid rid:" + rid);
-            return false;
-        }
-        if (vc.adapter == null) {
-            return false;
-        }
-        return vc.adapter.doViewAction(mHost, vc);
-    }
-
-    public boolean handleAllViewAction() {
-        Collection<ViewCommand> vcs = mViewCmdSet.values();
-        boolean flag = true;
-        for (ViewCommand vc : vcs) {
-            if (vc.adapter == null) {
-                flag = false;
-                continue;
-            }
-            if (!vc.adapter.doViewAction(mHost, vc)) {
-                flag = false;
-            }
-        }
-        return flag;
-    }
-
-    public boolean setViewByVal(int rid) {
-        ViewCommand vc = mViewCmdSet.get(rid);
-        if (vc == null) {
-            Elog.d(TAG, "Invalid rid:" + rid);
-            return false;
-        }
-        if (vc.adapter == null) {
-            return false;
-        }
-        return vc.adapter.setViewByCmdVal(mHost, vc);
-    }
-
-    public boolean setAllViewByVal() {
-        Collection<ViewCommand> vcs = mViewCmdSet.values();
-        boolean flag = true;
-        for (ViewCommand vc : vcs) {
-            if (vc.adapter == null) {
-                Elog.d(TAG, "adapter is null; vc.cmdPath:" + vc.cmdPath);
-                flag = false;
-                continue;
-            }
-            if (!vc.adapter.setViewByCmdVal(mHost, vc)) {
-                Elog.d(TAG, "SetViewByCmdVal fail; vc.cmdPath:" + vc.cmdPath);
-                flag = false;
-            }
-        }
-        return flag;
-    }
-
-    public void clearRes() {
-        mViewCmdSet.clear();
-    }
-
-    public  Collection<ViewCommand> getViewCommandSet() {
-        return mViewCmdSet.values();
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/video/VideoActivity.java b/EngineerMode/src/com/mediatek/engineermode/video/VideoActivity.java
deleted file mode 100644
index e8a775e..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/video/VideoActivity.java
+++ /dev/null
@@ -1,120 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein
- * is confidential and proprietary to MediaTek Inc. and/or its licensors.
- * Without the prior written permission of MediaTek inc. and/or its licensors,
- * any reproduction, modification, use or disclosure of MediaTek Software,
- * and information contained herein, in whole or in part, shall be strictly prohibited.
- *
- * MediaTek Inc. (C) 2010. All rights reserved.
- *
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
- * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
- * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
- * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
- * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
- * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
- * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
- * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
- * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
- * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
- * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
- * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
- * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
- * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
- * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek Software")
- * have been modified by MediaTek Inc. All revisions are subject to any receiver's
- * applicable license agreements with MediaTek Inc.
- */
-
-package com.mediatek.engineermode.video;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.os.SystemProperties;
-import android.view.View;
-import android.widget.AdapterView;
-import android.widget.AdapterView.OnItemSelectedListener;
-import android.widget.ArrayAdapter;
-import android.widget.Spinner;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-
-/**
- *  Video main actvity.
- * @author mtk81238
- *
- */
-public class VideoActivity extends Activity implements OnItemSelectedListener {
-
-    private static final String TAG = "EM/VideoActivity";
-    private static final String SP_KEY_MJC_CUSTOMER = "sys.display.mjc.customer";
-    private static final String SP_KEY_MJC_DEMO = "sys.display.mjc.demo";
-
-    private Spinner mSpCustomize = null;
-    private Spinner mSpDemo = null;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.video_entry);
-        mSpCustomize = (Spinner) findViewById(R.id.video_customize_spn);
-        mSpDemo = (Spinner) findViewById(R.id.video_demo_spn);
-        fillSpinnerIntItems(mSpCustomize, new int[] {0, 1});
-        fillSpinnerIntItems(mSpDemo, new int[] {0, 1, 2});
-        mSpCustomize.setSelection(getIntSystemProp(SP_KEY_MJC_CUSTOMER, 0));
-        mSpDemo.setSelection(getIntSystemProp(SP_KEY_MJC_DEMO, 0));
-        mSpCustomize.setOnItemSelectedListener(this);
-        mSpDemo.setOnItemSelectedListener(this);
-    }
-
-    private void fillSpinnerIntItems(Spinner spinner, int[] itemVals) {
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_spinner_item);
-        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        for (int i = 0; i < itemVals.length; i++) {
-            adapter.add(String.valueOf(itemVals[i]));
-        }
-        spinner.setAdapter(adapter);
-    }
-
-    private void setIntSystemProp(String key, int val) {
-        String strVal = String.valueOf(val);
-        SystemProperties.set(key, strVal);
-    }
-
-    private int getIntSystemProp(String key, int defVal) {
-        String strVal = SystemProperties.get(key);
-        int value = 0;
-        try {
-            value = Integer.parseInt(strVal);
-        } catch (NumberFormatException e) {
-            value = defVal;
-        }
-        return value;
-    }
-
-    @Override
-    public void onItemSelected(AdapterView<?> parent, View view, int position,
-            long id) {
-        if (parent == mSpCustomize) {
-            setIntSystemProp(SP_KEY_MJC_CUSTOMER, position);
-        } else if (parent == mSpDemo) {
-            setIntSystemProp(SP_KEY_MJC_DEMO, position);
-        } else {
-            Elog.d(TAG, "Unhandled adapterView:" + parent);
-        }
-    }
-
-    @Override
-    public void onNothingSelected(AdapterView<?> parent) {
-        // just do nothing
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfc.java b/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfc.java
deleted file mode 100644
index ff563bb..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfc.java
+++ /dev/null
@@ -1,62 +0,0 @@
-package com.mediatek.engineermode.wps;
-
-import android.app.ListActivity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-
-/**
- * wifi wps NFC test_bed in engineermode
- *
- * @author mtk54040
- *
- */
-public class WpsNfc extends ListActivity {
-
-    private static final String TAG = "EM/WpsNfc";
-
-    private ArrayList<String> mModuleList = null;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.wps_nfc);
-
-
-        mModuleList = new ArrayList<String>();
-        mModuleList.add(getString(R.string.wps_role));
-        mModuleList.add(getString(R.string.wps_write_tag));
-
-        ArrayAdapter<String> moduleAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mModuleList);
-        setListAdapter(moduleAdapter);
-
-    }
-
-
-
-    @Override
-    protected void onListItemClick(ListView l, View v, int position, long id) {
-        if (mModuleList.get(position).equals(
-                getString(R.string.wps_role))) {
-            Log.v("@M_" + TAG, "-->onListItemClick wps_role");
-            startActivity(new Intent(WpsNfc.this, WpsNfcRole.class));
-        } else if (mModuleList.get(position).equals(
-                getString(R.string.wps_write_tag))) {
-            Log.v("@M_" + TAG, "-->onListItemClick wps_write_tag");
-            startActivity(new Intent(WpsNfc.this, WpsNfcTag.class));
-        }
-    }
-
-
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcList.java b/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcList.java
deleted file mode 100644
index 03d26c0..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcList.java
+++ /dev/null
@@ -1,194 +0,0 @@
-package com.mediatek.engineermode.wps;
-
-import android.app.ListActivity;
-import android.app.AlertDialog;
-import android.app.Dialog;
-import android.app.ProgressDialog;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.content.BroadcastReceiver;
-import android.content.DialogInterface;
-import android.os.Bundle;
-import android.provider.Settings;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.ArrayAdapter;
-import android.widget.CheckBox;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.Elog;
-import com.mediatek.engineermode.R;
-import java.util.ArrayList;
-
-/**
- * wifi wps NFC test_bed in engineermode
- *
- * @author mtk54040
- *
- */
-public class WpsNfcList extends ListActivity implements OnClickListener {
-
-    private static final String TAG = "EM/WpsList";
-    private static final String WPS_WIFI_ENABLE = "wps_em_wifi_enable";
-    private static final String WPS_P2P_ENABLE = "wps_em_p2p_enable";
-    private static final int DIALOG_QUERY_WFA = 0;
-    private static final int DIALOG_SET_WARNING = 1;
-    private static final String ACTION_SET_HANDOVER_MODE = "com.mediatek.nfc.handover.ACTION_SET_HANDOVER_MODE";
-    private static final String EXTRA_MODE_VALUE = "com.mediatek.nfc..handover.EXTRA_MODE_VALUE";
-
-    private static final String ACTION_QUERY_HANDOVER_MODE = "com.mediatek.nfc.handover.ACTION_QUERY_HANDOVER_MODE";
-    private static final String ACTION_QUERY_HANDOVER_MODE_RESULT = "com.mediatek.nfc.handover.ACTION_QUERY_HANDOVER_MODE_RESULT";
-
-    private CheckBox mWifiEnableChk;
-    private CheckBox mP2pEnableChk;
-    private CheckBox mWfaEnableChk;
-    private ArrayList<String> mModuleList = null;
-    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            String action = intent.getAction();
-            Elog.v(TAG, "mReceiver onReceive: " + action);
-            if (action.equals(ACTION_QUERY_HANDOVER_MODE_RESULT)) {
-                int result = intent.getExtras().getInt(EXTRA_MODE_VALUE);
-                Elog.v(TAG, "result is: " + result);
-                if (result > 0) {
-                    mWfaEnableChk.setChecked(true);
-                } else {
-                    mWfaEnableChk.setChecked(false);
-                }
-                removeDialog(DIALOG_QUERY_WFA);
-            } else {
-                Elog.v(TAG, "mReceiver Other response");
-            }
-        }
-    };
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        setContentView(R.layout.wps_nfc_em);
-
-        mWifiEnableChk = (CheckBox) findViewById(R.id.checkBox1);
-        mP2pEnableChk = (CheckBox) findViewById(R.id.checkBox2);
-        mWfaEnableChk = (CheckBox) findViewById(R.id.checkBox3);
-
-        mWifiEnableChk.setOnClickListener(this);
-        mP2pEnableChk.setOnClickListener(this);
-        mWfaEnableChk.setOnClickListener(this);
-
-        mModuleList = new ArrayList<String>();
-        mModuleList.add(getString(R.string.wps_nfc));
-
-        ArrayAdapter<String> moduleAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mModuleList);
-        setListAdapter(moduleAdapter);
-        int wifiFlag = 0;
-        int p2pFlag = 0;
-
-        wifiFlag = Settings.System.getInt(getContentResolver(),
-                WPS_WIFI_ENABLE, -1);
-        p2pFlag = Settings.System.getInt(getContentResolver(), WPS_P2P_ENABLE,
-                -1);
-
-        Elog.v(TAG, "-->wifiFlag = " + wifiFlag);
-        Elog.v(TAG, "-->p2pFlag = " + p2pFlag);
-
-        if (wifiFlag > 0) {
-            mWifiEnableChk.setChecked(true);
-        }
-        if (p2pFlag > 0) {
-            mP2pEnableChk.setChecked(true);
-        }
-        // register query result receiver
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(ACTION_QUERY_HANDOVER_MODE_RESULT);
-        registerReceiver(mReceiver, filter);
-
-        // send query intent
-        Intent intentQueryRequest = new Intent(ACTION_QUERY_HANDOVER_MODE);
-        sendBroadcast(intentQueryRequest);
-        showDialog(DIALOG_QUERY_WFA);
-    }
-
-    @Override
-    protected void onListItemClick(ListView l, View v, int position, long id) {
-        if (mModuleList.get(position).equals(getString(R.string.wps_nfc))) {
-            Elog.v(TAG, "-->onListItemClick wps_nfc");
-
-            startActivity(new Intent(WpsNfcList.this, WpsNfc.class));
-        }
-    }
-    @Override
-    protected void onDestroy() {
-        Elog.v(TAG, "onDestroy");
-        unregisterReceiver(mReceiver);
-        super.onDestroy();
-    }
-    public void onClick(View v) {
-        Elog.v(TAG, "-->onClick checkbox");
-
-        if (v.equals(mWifiEnableChk)) {
-            if (mWifiEnableChk.isChecked()) {
-                Settings.System.putInt(getContentResolver(),
-                        WPS_WIFI_ENABLE, 1);
-            } else {
-                Settings.System.putInt(getContentResolver(),
-                        WPS_WIFI_ENABLE, 0);
-            }
-
-        } else if (v.equals(mP2pEnableChk)) {
-
-            if (mP2pEnableChk.isChecked()) {
-                Settings.System
-                        .putInt(getContentResolver(), WPS_P2P_ENABLE, 1);
-            } else {
-                Settings.System.putInt(getContentResolver(), WPS_P2P_ENABLE, 0);
-            }
-        } else if (v.equals(mWfaEnableChk)) {
-            int result;
-            if (mWfaEnableChk.isChecked()) {
-                result = 1;
-            } else {
-                result = 0;
-            }
-            Intent intentSetRequest = new Intent(ACTION_SET_HANDOVER_MODE);
-            intentSetRequest.putExtra(EXTRA_MODE_VALUE, result);
-            sendBroadcast(intentSetRequest);
-            Elog.v(TAG, "send result :" + result);
-            showDialog(DIALOG_SET_WARNING);
-        }
-    }
-    @Override
-    protected Dialog onCreateDialog(int id) {
-        Dialog dialog = null;
-        AlertDialog.Builder builder = null;
-        switch (id) {
-            case DIALOG_QUERY_WFA:
-                ProgressDialog innerDialog = new ProgressDialog(this);
-                innerDialog.setTitle(R.string.wps_dialog_init);
-                innerDialog
-                        .setMessage(getString(R.string.wps_dialog_init_message));
-                innerDialog.setCancelable(false);
-                innerDialog.setIndeterminate(true);
-                dialog = innerDialog;
-                break;
-            case DIALOG_SET_WARNING:
-                builder = new AlertDialog.Builder(this);
-                builder.setTitle(R.string.wps_dialog_warn);
-                builder.setCancelable(false);
-                builder.setMessage(getString(R.string.wps_dialog_warn_message));
-                builder.setPositiveButton(R.string.wps_dialog_ok,
-                        new DialogInterface.OnClickListener() {
-                            public void onClick(DialogInterface dialog, int which) {
-                                finish();
-                            }
-                        });
-                dialog = builder.create();
-                break;
-            default:
-                break;
-        }
-        return dialog;
-    }
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcRole.java b/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcRole.java
deleted file mode 100644
index 001250a..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcRole.java
+++ /dev/null
@@ -1,62 +0,0 @@
-package com.mediatek.engineermode.wps;
-
-import android.app.ListActivity;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-
-/**
- * wifi wps NFC test_bed in engineermode
- *
- * @author mtk54040
- *
- */
-public class WpsNfcRole extends ListActivity {
-
-    private static final String TAG = "EM/WpsRole";
-
-    private ArrayList<String> mModuleList = null;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-//        setContentView(R.layout.wps_role);
-        setContentView(R.layout.wps_nfc);
-
-        mModuleList = new ArrayList<String>();
-        mModuleList.add(getString(R.string.wps_role_enrollee));
-        mModuleList.add(getString(R.string.wps_role_registrar));
-
-        ArrayAdapter<String> moduleAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mModuleList);
-        setListAdapter(moduleAdapter);
-
-    }
-
-
-
-    @Override
-    protected void onListItemClick(ListView l, View v, int position, long id) {
-        if (mModuleList.get(position).equals(
-                getString(R.string.wps_role_enrollee))) {
-            Log.v("@M_" + TAG, "-->onListItemClick wps_role_enrollee");
-            startActivity(new Intent(WpsNfcRole.this, WpsNfcRoleEnrollee.class));
-        } else if (mModuleList.get(position).equals(
-                getString(R.string.wps_role_registrar))) {
-            Log.v("@M_" + TAG, "-->onListItemClick wps_role_registrar");
-            startActivity(new Intent(WpsNfcRole.this, WpsNfcRoleRegistrar.class));
-        }
-    }
-
-
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcRoleEnrollee.java b/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcRoleEnrollee.java
deleted file mode 100644
index 0632327..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcRoleEnrollee.java
+++ /dev/null
@@ -1,114 +0,0 @@
-package com.mediatek.engineermode.wps;
-
-import android.app.ListActivity;
-import android.content.Context;
-import android.content.Intent;
-import android.net.wifi.WifiManager;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-/**
- * wifi wps NFC test_bed in engineermode
- * 
- * @author mtk54040
- * 
- */
-public class WpsNfcRoleEnrollee extends ListActivity{
-
-    private static final String TAG = "EM/WpsRole";
-    
-    private WifiManager mWifiManager;
-    private ArrayList<String> mModuleList = null;
-
-    
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        // setContentView(R.layout.wps_role);
-        //setContentView(R.layout.wps_nfc_role_enrollee);
-        setContentView(R.layout.wps_nfc);
-            
-        mModuleList = new ArrayList<String>();
-        mModuleList.add(getString(R.string.wps_write_pin));
-        mModuleList.add(getString(R.string.wps_get_credential));
-
-        ArrayAdapter<String> moduleAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mModuleList);
-        setListAdapter(moduleAdapter);
-        mWifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);
-    }
-
-    @Override
-    protected void onListItemClick(ListView l, View v, int position, long id) {
-        // Send broadcast
-        // Intent intent = new Intent();
-
-        if (mModuleList.get(position).equals(getString(R.string.wps_write_pin))) {
-            Log.v("@M_" + TAG, "-->onListItemClick wps_write_pin");
-
-            // add api function
-            //mWifiManager.getWpsPinAndConnect(WifiManager.TOKEN_TYPE_NDEF, null);
-            /*
-             * // assume that we have already get psw from WiFiManager. int
-             * pwdId = 271; byte[] pubKeyHash = { 0x02, 0x45, 0x67, 0x21, 0x23,
-             * 0x60, 0x40, (byte) 0x93, (byte) 0x84, (byte) 0xAF, (byte) 0xAD,
-             * 0x23, 0x24, (byte) 0x9A, 0x10, 0x3C, (byte) 0xDF, 0x3F, 0x66,
-             * 0x41 }; byte[] devPwd = { 0x4C, 0x3B, 0x2B, 0x20, 0x6A, 0x21,
-             * 0x2B, 0x2C, 0x56, 0x41, 0x32, 0x51, 0x77, 0x42, 0x2B, 0x20 };
-             * byte[] vendorEx = {0x10, 0x49, 0x00, 0x06, 0x00, 0x37, 0x2A,
-             * 0x00, 0x01, 0x20};
-             * 
-             * PasswordToken passwordToken = new PasswordToken();
-             * passwordToken.setPwdId(pwdId);
-             * passwordToken.setPublicKeyHash(pubKeyHash);
-             * passwordToken.setDevPwd(devPwd);
-             * passwordToken.setVendorEx(vendorEx);
-             * 
-             * Log.v("@M_" + TAG, " Send Intent Write PWD token ");
-             * 
-             * Intent intentEWPT = new Intent(
-             * INfcWpsTestBed.MTK_WPS_NFC_TESTBED_W_PASSWORD_ACTION);
-             * 
-             * 
-             * intentEWPT.putExtra(INfcWpsTestBed.MTK_WPS_NFC_TESTBED_EXTRA_PASSWORD
-             * , passwordToken); //intentEWPT.putExtra("PwdToken1", (Parcelable)
-             * passwordToken);
-             * 
-             * Log.v("@M_" + TAG, "  Extra String ::  " +
-             * INfcWpsTestBed.MTK_WPS_NFC_TESTBED_EXTRA_PASSWORD);
-             * sendBroadcast(intentEWPT);
-             */
-            // Intent intent = new Intent();
-            // intent.putExtra(getString(R.string.wps_role_enrollee),
-            // getString(R.string.wps_share_pin));
-            // intent.setAction(getString(R.string.wps_nfc));
-            // sendBroadcast(intent);
-
-            Toast.makeText(getApplicationContext(),
-                    R.string.wps_send_broadcast, Toast.LENGTH_SHORT).show();
-        } else if (mModuleList.get(position).equals(
-                getString(R.string.wps_get_credential))) {
-            Log.v("@M_" + TAG, "-->onListItemClick wps_get_credential");
-            // Intent intent = new Intent();
-            // intent.putExtra(getString(R.string.wps_role_enrollee),
-            // getString(R.string.wps_get_credential));
-            // intent.setAction(getString(R.string.wps_nfc));
-            // sendBroadcast(intent);
-
-            //mWifiManager.getCredFromNfc(null);
-
-            Toast.makeText(getApplicationContext(),
-                    R.string.wps_send_broadcast, Toast.LENGTH_SHORT).show();
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcRoleRegistrar.java b/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcRoleRegistrar.java
deleted file mode 100644
index 8c5c0af..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcRoleRegistrar.java
+++ /dev/null
@@ -1,119 +0,0 @@
-package com.mediatek.engineermode.wps;
-
-import android.app.ListActivity;
-import android.content.Context;
-import android.content.Intent;
-import android.net.wifi.WifiManager;
-import android.os.Bundle;
-import android.util.Log;
-import android.view.View;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-import android.widget.Toast;
-
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-/**
- * wifi wps NFC test_bed in engineermode
- * 
- * @author mtk54040
- * 
- */
-public class WpsNfcRoleRegistrar extends ListActivity {
-
-    private static final String TAG = "EM/WpsRole";
-    private static final String MTK_WPS_NFC_TESTBED_ER_R_PASSWORD_ACTION = "mtk.wps.nfc.testbed.externalRegistrar.r.password";
-    private ArrayList<String> mModuleList = null;
-    private WifiManager mWifiManager;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        // setContentView(R.layout.wps_role);
-        setContentView(R.layout.wps_nfc);
-
-        mModuleList = new ArrayList<String>();
-        mModuleList.add(getString(R.string.wps_get_pin));
-        mModuleList.add(getString(R.string.wps_write_credential));
-        mModuleList.add(getString(R.string.wps_get_ap_pin));
-         
-        ArrayAdapter<String> moduleAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mModuleList);
-        setListAdapter(moduleAdapter);
-        mWifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);
-
-    }
-
-    @Override
-    protected void onListItemClick(ListView l, View v, int position, long id) {
-        // Send broadcast
-
-        if (mModuleList.get(position).equals(getString(R.string.wps_get_pin))) {
-            Log.v("@M_" + TAG, "-->onListItemClick wps_get_pin");
-            // Intent intent = new Intent();
-            // intent.putExtra(getString(R.string.wps_role_registrar),
-            // getString(R.string.wps_get_pin));
-            // intent.setAction(getString(R.string.wps_nfc));
-            // sendBroadcast(intent);
-
-            //mWifiManager.getPinFromNfc(WifiManager.TOKEN_TYPE_NDEF, null);
-
-            Toast.makeText(getApplicationContext(),
-                    R.string.wps_send_broadcast, Toast.LENGTH_SHORT).show();
-        } else if (mModuleList.get(position).equals(
-                getString(R.string.wps_write_credential))) {
-            Log.v("@M_" + TAG, "-->onListItemClick wps_write_credential");
-            // Intent intent = new Intent();
-            // intent.putExtra(getString(R.string.wps_role_registrar),
-            // getString(R.string.wps_share_credential));
-            // intent.setAction(getString(R.string.wps_nfc));
-            // sendBroadcast(intent);
-
-            // add api function
-            //mWifiManager.getWpsCredAndConnect(WifiManager.TOKEN_TYPE_NDEF, null);
-            /*
-             * // sendBroadcast: W_CONFIGURATION_ACTION, config
-             * 
-             * // assume that we have already get config from WiFiManager.
-             * byte[] networkIndex = {0x01}; byte[] ssid = {0x48, 0x6F, 0x6D,
-             * 0x65, 0x57, 0x4C, 0x41, 0x4E}; byte[] authenticationType = {0x00,
-             * 0x20}; byte[] encryptionType = {0x00, 0x08}; byte[] networkKey =
-             * {0x4D, 0x79, 0x50, 0x72, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65,
-             * 0x64, 0x4B, 0x65, 0x79}; byte[] macAddress = {(byte) 0xFF, (byte)
-             * 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF}; byte[]
-             * vendorExtension = {0x10, 0x49, 0x00, 0x06, 0x00, 0x37, 0x2A,
-             * 0x02, 0x01, 0x01, 0x10, 0x49, 0x00, 0x06, 0x00, 0x37, 0x2A, 0x00,
-             * 0x01, 0x20};
-             * 
-             * ConfigurationToken configurationToken = new ConfigurationToken();
-             * configurationToken.setNetworkIndex(networkIndex);
-             * configurationToken.setSSID(ssid);
-             * configurationToken.setAuthType(authenticationType);
-             * configurationToken.setEncrypType(encryptionType);
-             * configurationToken.setMacAddress(macAddress);
-             * configurationToken.setNetworkKey(networkKey);
-             * configurationToken.setVendorExtension(vendorExtension);
-             * 
-             * // sendBroadcast: W_CONFIGURATION_ACTION, config Intent
-             * intentRWCT = new Intent(
-             * INfcWpsTestBed.MTK_WPS_NFC_TESTBED_W_CONFIGURATION_ACTION);
-             * intentRWCT
-             * .putExtra(INfcWpsTestBed.MTK_WPS_NFC_TESTBED_EXTRA_CONFIGURATION,
-             * configurationToken); sendBroadcast(intentRWCT);
-             */
-            Toast.makeText(getApplicationContext(),
-                    R.string.wps_send_broadcast, Toast.LENGTH_SHORT).show();
-        }else if(mModuleList.get(position).equals(
-                getString(R.string.wps_get_ap_pin))) {
-             Log.v("@M_" + TAG, "-->onListItemClick wps_get_ap_pin");
-             Intent intentHandoverRequest = new Intent(MTK_WPS_NFC_TESTBED_ER_R_PASSWORD_ACTION);
-             sendBroadcast(intentHandoverRequest);
-             Toast.makeText(getApplicationContext(),
-                    R.string.wps_send_broadcast, Toast.LENGTH_SHORT).show();
-        }
-    }
-
-}
diff --git a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcTag.java b/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcTag.java
deleted file mode 100644
index 87e4ae0..0000000
--- a/EngineerMode/src/com/mediatek/engineermode/wps/WpsNfcTag.java
+++ /dev/null
@@ -1,141 +0,0 @@
-package com.mediatek.engineermode.wps;
-
-import android.app.ListActivity;
-import android.content.Context;
-import android.net.wifi.WifiManager;
-import android.os.Bundle;
-import android.view.View;
-import android.provider.Settings;
-import android.util.Log;
-import android.widget.ArrayAdapter;
-import android.widget.ListView;
-import android.view.View;
-import android.view.View.OnClickListener;
-import android.widget.Toast;
-import android.widget.CheckBox;
-import com.mediatek.engineermode.R;
-
-import java.util.ArrayList;
-
-/**
- * wifi wps NFC test_bed in engineermode
- * 
- * @author mtk54040
- * 
- */
-public class WpsNfcTag extends ListActivity implements OnClickListener{
-
-    private static final String TAG = "EM/WpsNfcTag";
-    private static final String WPS_NFC_USE_PK = "wps_nfc_pubkey";
-    
-    private ArrayList<String> mModuleList = null;
-    private WifiManager mWifiManager;
-    private CheckBox mUsePublicKey;
-    
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        // setContentView(R.layout.wps_write_tag);
-        setContentView(R.layout.wps_nfc_role_enrollee);
-
-        mModuleList = new ArrayList<String>();
-        mModuleList.add(getString(R.string.wps_pin));
-        mModuleList.add(getString(R.string.wps_credential));
-
-        ArrayAdapter<String> moduleAdapter = new ArrayAdapter<String>(this,
-                android.R.layout.simple_list_item_1, mModuleList);
-        setListAdapter(moduleAdapter);
-
-        mUsePublicKey = (CheckBox) findViewById(R.id.checkBox);
-        mUsePublicKey.setOnClickListener(this);
-        Settings.System
-                        .putInt(getContentResolver(), WPS_NFC_USE_PK, 0); // default always 0
-                        
-        mWifiManager = (WifiManager) getSystemService(Context.WIFI_SERVICE);
-    }
-
-    @Override
-    protected void onListItemClick(ListView l, View v, int position, long id) {
-        // Send broadcast
-
-        if (mModuleList.get(position).equals(getString(R.string.wps_pin))) {
-            Log.v("@M_" + TAG, "-->onListItemClick wps_pin");
-
-            // Intent intent = new Intent();
-            // intent.putExtra(getString(R.string.wps_write_tag),
-            // getString(R.string.wps_pin));
-            // intent.setAction(getString(R.string.wps_nfc));
-            // sendBroadcast(intent);
-
-            // add api function,first listener second para:
-            // WifiManager.TOKEN_TYPE_NDEF
-            //mWifiManager.writePinToNfc(WifiManager.TOKEN_TYPE_NDEF, null);
-            /*
-             * // assume that we have already get config from WiFiManager. byte
-             * networkIndex = 0x01; String ssid = "HomeWLAN"; Short
-             * authenticationType = 0x20; // = {0x00, 0x20}; Short
-             * encryptionType = 0x08;// {0x00, 0x08}; String networkKey =
-             * "MyPreSharedKey";// {0x4D, 0x79, 0x50, 0x72, // 0x65, 0x53, 0x68,
-             * 0x61, // 0x72, 0x65, 0x64, 0x4B, // 0x65, 0x79}; byte[]
-             * macAddress = { (byte) 0x11, (byte) 0x22, (byte) 0x33, (byte)
-             * 0xAA, (byte) 0xBB, (byte) 0xCC }; byte[] vendorExtension = {
-             * 0x10, 0x49, 0x00, 0x06, 0x00, 0x37, 0x2A, 0x00, 0x01, 0x20 };
-             * 
-             * WpsCredential mWpsCredential = new WpsCredential();
-             * mWpsCredential.setNetworkIndex(networkIndex);
-             * mWpsCredential.setSSID(ssid);
-             * mWpsCredential.setAuthType(authenticationType);
-             * mWpsCredential.setEncrypType(encryptionType);
-             * mWpsCredential.setMacAddress(macAddress);
-             * mWpsCredential.setNetworkKey(networkKey);
-             * mWpsCredential.setVendorExtension(vendorExtension);
-             * 
-             * // sendBroadcast: W_CONFIGURATION_ACTION, config Intent
-             * intentHandoverSelector = new Intent(
-             * INfcWpsTestBed.MTK_WPS_NFC_TESTBED_HS_ACTION);
-             * intentHandoverSelector
-             * .putExtra(INfcWpsTestBed.MTK_WPS_NFC_TESTBED_EXTRA_CREDENTIAL,
-             * mWpsCredential); sendBroadcast(intentHandoverSelector);
-             */
-            Toast.makeText(getApplicationContext(),
-                    R.string.wps_send_broadcast, Toast.LENGTH_SHORT).show();
-        } else if (mModuleList.get(position).equals(
-                getString(R.string.wps_credential))) {
-            Log.v("@M_" + TAG, "-->onListItemClick wps_credential");
-
-            // Intent intent = new Intent();
-            // intent.putExtra(getString(R.string.wps_write_tag),
-            // getString(R.string.wps_credential));
-            // intent.setAction(getString(R.string.wps_nfc));
-            // sendBroadcast(intent);
-
-            // add api function
-            //mWifiManager.writeCredToNfc(WifiManager.TOKEN_TYPE_NDEF, null);
-            /*
-             * // sendBroadcast: W_CONFIGURATION_ACTION, config Intent
-             * intentHandoverRequest = new Intent(
-             * INfcWpsTestBed.MTK_WPS_NFC_TESTBED_HR_ACTION);
-             * //intentRWCT.putExtra
-             * (INfcWpsTestBed.MTK_WPS_NFC_TESTBED_EXTRA_CONFIGURATION,
-             * configurationToken); sendBroadcast(intentHandoverRequest);
-             */
-            Toast.makeText(getApplicationContext(),
-                    R.string.wps_send_broadcast, Toast.LENGTH_SHORT).show();
-        }
-    }
-    public void onClick(View v) {
-        Log.v("@M_" + TAG, "-->onClick checkbox");
-
-        if (v.equals(mUsePublicKey)) {
-            if (mUsePublicKey.isChecked()) {
-                Settings.System.putInt(getContentResolver(),
-                        WPS_NFC_USE_PK, 1);
-            } else {
-                Settings.System.putInt(getContentResolver(),
-                        WPS_NFC_USE_PK, 0);
-            }
-
-        } 
-    }
-}
diff --git a/PlatformConfig.mk b/PlatformConfig.mk
index 5dc8168..0f1588f 100644
--- a/PlatformConfig.mk
+++ b/PlatformConfig.mk
@@ -1,7 +1,9 @@
 # Platform
 TARGET_BOOTLOADER_BOARD_NAME := mt6757
 TARGET_BOARD_PLATFORM := mt6757
-TARGET_LDPRELOAD += libxlog.so
+TARGET_LDPRELOAD += \
+  libxlog.so
+  libmtk_symbols.so
 TARGET_ARCH := arm64
 TARGET_ARCH_VARIANT := armv8-a
 TARGET_CPU_ABI := arm64-v8a
diff --git a/YGPS/NOTICE b/YGPS/NOTICE
deleted file mode 100755
index c5b1efa..0000000
--- a/YGPS/NOTICE
+++ /dev/null
@@ -1,190 +0,0 @@
-
-   Copyright (c) 2005-2008, The Android Open Source Project
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
diff --git a/EngineerMode/MODULE_LICENSE_APACHE2 b/d0npatch/apache-http.patch
similarity index 100%
rename from EngineerMode/MODULE_LICENSE_APACHE2
rename to d0npatch/apache-http.patch
diff --git a/d0npatch/bionic.patch b/d0npatch/bionic.patch
new file mode 100644
index 0000000..5baf3ca
--- /dev/null
+++ b/d0npatch/bionic.patch
@@ -0,0 +1,43 @@
+diff --git a/libc/bionic/ndk_cruft.cpp b/libc/bionic/ndk_cruft.cpp
+index 3ac88f867..6ccb9a15d 100644
+--- a/libc/bionic/ndk_cruft.cpp
++++ b/libc/bionic/ndk_cruft.cpp
+@@ -340,10 +340,13 @@ size_t dlmalloc_usable_size(void* ptr) {
+ }
+ 
+ // In L we added a public pthread_gettid_np, but some apps were using the private API.
+-pid_t __pthread_gettid(pthread_t t) {
++pid_t __pthread_gettid_libc(pthread_t t) {
+   return pthread_gettid_np(t);
+ }
+ 
++__asm__(".symver __pthread_gettid_libc,__pthread_gettid@LIBC");
++__asm__(".symver __pthread_gettid_libc,__pthread_gettid@@LIBC_PRIVATE");
++
+ // Older versions of apportable used dlmalloc directly instead of malloc,
+ // so export this compatibility shim that simply calls malloc.
+ void* dlmalloc(size_t size) {
+diff --git a/libc/libc.arm.map b/libc/libc.arm.map
+index 38f8437f4..fc7d37a02 100644
+--- a/libc/libc.arm.map
++++ b/libc/libc.arm.map
+@@ -122,6 +122,7 @@ LIBC {
+     __pselect6; # arm x86 mips
+     __pthread_cleanup_pop;
+     __pthread_cleanup_push;
++    __pthread_gettid; # arm x86 mips nobrillo
+     __ptrace; # arm x86 mips
+     __putlong;
+     __putshort;
+diff --git a/libc/libc.map.txt b/libc/libc.map.txt
+index 0e41f6ccb..3e87dadbb 100644
+--- a/libc/libc.map.txt
++++ b/libc/libc.map.txt
+@@ -122,6 +122,7 @@ LIBC {
+     __pselect6; # arm x86 mips
+     __pthread_cleanup_pop;
+     __pthread_cleanup_push;
++    __pthread_gettid; # arm x86 mips nobrillo
+     __ptrace; # arm x86 mips
+     __putlong;
+     __putshort;
diff --git a/YGPS/MODULE_LICENSE_APACHE2 b/d0npatch/curl.patch
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/MODULE_LICENSE_APACHE2
rename to d0npatch/curl.patch
diff --git a/wpa_supplicant_8_lib/MODULE_LICENSE_BSD b/d0npatch/t1.patch
old mode 100755
new mode 100644
similarity index 100%
rename from wpa_supplicant_8_lib/MODULE_LICENSE_BSD
rename to d0npatch/t1.patch
index e69de29..38bfa65
diff --git a/fmradio/Android.mk b/fmradio/Android.mk
old mode 100755
new mode 100644
diff --git a/fmradio/README b/fmradio/README
old mode 100755
new mode 100644
diff --git a/fmradio/custom/Android.mk b/fmradio/custom/Android.mk
old mode 100755
new mode 100644
diff --git a/fmradio/custom/README b/fmradio/custom/README
old mode 100755
new mode 100644
diff --git a/fmradio/custom/custom.cpp b/fmradio/custom/custom.cpp
old mode 100755
new mode 100644
diff --git a/fmradio/custom/fm.h b/fmradio/custom/fm.h
old mode 100755
new mode 100644
diff --git a/fmradio/custom/fmlib_cust.h b/fmradio/custom/fmlib_cust.h
old mode 100755
new mode 100644
diff --git a/fmradio/new_hal/Android.mk b/fmradio/new_hal/Android.mk
old mode 100755
new mode 100644
diff --git a/fmradio/new_hal/NOTICE b/fmradio/new_hal/NOTICE
old mode 100755
new mode 100644
diff --git a/fmradio/new_hal/README b/fmradio/new_hal/README
old mode 100755
new mode 100644
diff --git a/fmradio/new_hal/common.c b/fmradio/new_hal/common.c
old mode 100755
new mode 100644
diff --git a/fmradio/new_hal/fm.h b/fmradio/new_hal/fm.h
old mode 100755
new mode 100644
diff --git a/fmradio/new_hal/fmr.h b/fmradio/new_hal/fmr.h
old mode 100755
new mode 100644
diff --git a/fmradio/new_hal/fmr_core.c b/fmradio/new_hal/fmr_core.c
old mode 100755
new mode 100644
diff --git a/fmradio/new_hal/fmr_err.c b/fmradio/new_hal/fmr_err.c
old mode 100755
new mode 100644
diff --git a/fmradio/new_hal/radio_hw_hal.c b/fmradio/new_hal/radio_hw_hal.c
old mode 100755
new mode 100644
diff --git a/YGPS/Android.mk b/hal/YGPS/Android.mk
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/Android.mk
rename to hal/YGPS/Android.mk
diff --git a/YGPS/AndroidManifest.xml b/hal/YGPS/AndroidManifest.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/AndroidManifest.xml
rename to hal/YGPS/AndroidManifest.xml
diff --git a/hal/YGPS/MODULE_LICENSE_APACHE2 b/hal/YGPS/MODULE_LICENSE_APACHE2
new file mode 100644
index 0000000..e69de29
diff --git a/EngineerMode/NOTICE b/hal/YGPS/NOTICE
similarity index 100%
rename from EngineerMode/NOTICE
rename to hal/YGPS/NOTICE
diff --git a/YGPS/README b/hal/YGPS/README
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/README
rename to hal/YGPS/README
diff --git a/YGPS/res/drawable/icon.png b/hal/YGPS/res/drawable/icon.png
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/drawable/icon.png
rename to hal/YGPS/res/drawable/icon.png
diff --git a/YGPS/res/drawable/satgreen.png b/hal/YGPS/res/drawable/satgreen.png
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/drawable/satgreen.png
rename to hal/YGPS/res/drawable/satgreen.png
diff --git a/YGPS/res/drawable/satred.png b/hal/YGPS/res/drawable/satred.png
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/drawable/satred.png
rename to hal/YGPS/res/drawable/satred.png
diff --git a/YGPS/res/drawable/satyellow.png b/hal/YGPS/res/drawable/satyellow.png
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/drawable/satyellow.png
rename to hal/YGPS/res/drawable/satyellow.png
diff --git a/YGPS/res/layout/layout_auto_test.xml b/hal/YGPS/res/layout/layout_auto_test.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/layout/layout_auto_test.xml
rename to hal/YGPS/res/layout/layout_auto_test.xml
diff --git a/YGPS/res/layout/layout_copyright_info.xml b/hal/YGPS/res/layout/layout_copyright_info.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/layout/layout_copyright_info.xml
rename to hal/YGPS/res/layout/layout_copyright_info.xml
diff --git a/YGPS/res/layout/layout_info.xml b/hal/YGPS/res/layout/layout_info.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/layout/layout_info.xml
rename to hal/YGPS/res/layout/layout_info.xml
diff --git a/YGPS/res/layout/layout_nmea.xml b/hal/YGPS/res/layout/layout_nmea.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/layout/layout_nmea.xml
rename to hal/YGPS/res/layout/layout_nmea.xml
diff --git a/YGPS/res/layout/layout_satellites.xml b/hal/YGPS/res/layout/layout_satellites.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/layout/layout_satellites.xml
rename to hal/YGPS/res/layout/layout_satellites.xml
diff --git a/YGPS/res/layout/layout_tabs.xml b/hal/YGPS/res/layout/layout_tabs.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/layout/layout_tabs.xml
rename to hal/YGPS/res/layout/layout_tabs.xml
diff --git a/YGPS/res/values/colors.xml b/hal/YGPS/res/values/colors.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/values/colors.xml
rename to hal/YGPS/res/values/colors.xml
diff --git a/YGPS/res/values/strings.xml b/hal/YGPS/res/values/strings.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/values/strings.xml
rename to hal/YGPS/res/values/strings.xml
diff --git a/YGPS/res/values/styles.xml b/hal/YGPS/res/values/styles.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/res/values/styles.xml
rename to hal/YGPS/res/values/styles.xml
diff --git a/YGPS/src/com/mediatek/ygps/ClientSocket.java b/hal/YGPS/src/com/mediatek/ygps/ClientSocket.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/ClientSocket.java
rename to hal/YGPS/src/com/mediatek/ygps/ClientSocket.java
diff --git a/YGPS/src/com/mediatek/ygps/CopyrightInfo.java b/hal/YGPS/src/com/mediatek/ygps/CopyrightInfo.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/CopyrightInfo.java
rename to hal/YGPS/src/com/mediatek/ygps/CopyrightInfo.java
diff --git a/YGPS/src/com/mediatek/ygps/GpsMnlSetting.java b/hal/YGPS/src/com/mediatek/ygps/GpsMnlSetting.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/GpsMnlSetting.java
rename to hal/YGPS/src/com/mediatek/ygps/GpsMnlSetting.java
diff --git a/YGPS/src/com/mediatek/ygps/GpsSatelliteAdapter.java b/hal/YGPS/src/com/mediatek/ygps/GpsSatelliteAdapter.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/GpsSatelliteAdapter.java
rename to hal/YGPS/src/com/mediatek/ygps/GpsSatelliteAdapter.java
diff --git a/YGPS/src/com/mediatek/ygps/NmeaParser.java b/hal/YGPS/src/com/mediatek/ygps/NmeaParser.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/NmeaParser.java
rename to hal/YGPS/src/com/mediatek/ygps/NmeaParser.java
diff --git a/YGPS/src/com/mediatek/ygps/NmeaSatelliteAdapter.java b/hal/YGPS/src/com/mediatek/ygps/NmeaSatelliteAdapter.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/NmeaSatelliteAdapter.java
rename to hal/YGPS/src/com/mediatek/ygps/NmeaSatelliteAdapter.java
diff --git a/YGPS/src/com/mediatek/ygps/SatelLocationView.java b/hal/YGPS/src/com/mediatek/ygps/SatelLocationView.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/SatelLocationView.java
rename to hal/YGPS/src/com/mediatek/ygps/SatelLocationView.java
diff --git a/YGPS/src/com/mediatek/ygps/SatelSignalChartView.java b/hal/YGPS/src/com/mediatek/ygps/SatelSignalChartView.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/SatelSignalChartView.java
rename to hal/YGPS/src/com/mediatek/ygps/SatelSignalChartView.java
diff --git a/YGPS/src/com/mediatek/ygps/SatelliteBaseView.java b/hal/YGPS/src/com/mediatek/ygps/SatelliteBaseView.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/SatelliteBaseView.java
rename to hal/YGPS/src/com/mediatek/ygps/SatelliteBaseView.java
diff --git a/YGPS/src/com/mediatek/ygps/SatelliteInfo.java b/hal/YGPS/src/com/mediatek/ygps/SatelliteInfo.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/SatelliteInfo.java
rename to hal/YGPS/src/com/mediatek/ygps/SatelliteInfo.java
diff --git a/YGPS/src/com/mediatek/ygps/SatelliteInfoAdapter.java b/hal/YGPS/src/com/mediatek/ygps/SatelliteInfoAdapter.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/SatelliteInfoAdapter.java
rename to hal/YGPS/src/com/mediatek/ygps/SatelliteInfoAdapter.java
diff --git a/YGPS/src/com/mediatek/ygps/SatelliteInfoManager.java b/hal/YGPS/src/com/mediatek/ygps/SatelliteInfoManager.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/SatelliteInfoManager.java
rename to hal/YGPS/src/com/mediatek/ygps/SatelliteInfoManager.java
diff --git a/YGPS/src/com/mediatek/ygps/YgpsActivity.java b/hal/YGPS/src/com/mediatek/ygps/YgpsActivity.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/YgpsActivity.java
rename to hal/YGPS/src/com/mediatek/ygps/YgpsActivity.java
diff --git a/YGPS/src/com/mediatek/ygps/YgpsService.java b/hal/YGPS/src/com/mediatek/ygps/YgpsService.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/src/com/mediatek/ygps/YgpsService.java
rename to hal/YGPS/src/com/mediatek/ygps/YgpsService.java
diff --git a/YGPS/tests/Android.mk b/hal/YGPS/tests/Android.mk
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/Android.mk
rename to hal/YGPS/tests/Android.mk
diff --git a/YGPS/tests/AndroidManifest.xml b/hal/YGPS/tests/AndroidManifest.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/AndroidManifest.xml
rename to hal/YGPS/tests/AndroidManifest.xml
diff --git a/YGPS/tests/NOTICE b/hal/YGPS/tests/NOTICE
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/NOTICE
rename to hal/YGPS/tests/NOTICE
diff --git a/YGPS/tests/README b/hal/YGPS/tests/README
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/README
rename to hal/YGPS/tests/README
diff --git a/YGPS/tests/res/drawable-hdpi/ic_launcher.png b/hal/YGPS/tests/res/drawable-hdpi/ic_launcher.png
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/res/drawable-hdpi/ic_launcher.png
rename to hal/YGPS/tests/res/drawable-hdpi/ic_launcher.png
diff --git a/YGPS/tests/res/drawable-ldpi/ic_launcher.png b/hal/YGPS/tests/res/drawable-ldpi/ic_launcher.png
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/res/drawable-ldpi/ic_launcher.png
rename to hal/YGPS/tests/res/drawable-ldpi/ic_launcher.png
diff --git a/YGPS/tests/res/drawable-mdpi/ic_launcher.png b/hal/YGPS/tests/res/drawable-mdpi/ic_launcher.png
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/res/drawable-mdpi/ic_launcher.png
rename to hal/YGPS/tests/res/drawable-mdpi/ic_launcher.png
diff --git a/YGPS/tests/res/drawable-xhdpi/ic_launcher.png b/hal/YGPS/tests/res/drawable-xhdpi/ic_launcher.png
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/res/drawable-xhdpi/ic_launcher.png
rename to hal/YGPS/tests/res/drawable-xhdpi/ic_launcher.png
diff --git a/YGPS/tests/res/values/strings.xml b/hal/YGPS/tests/res/values/strings.xml
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/res/values/strings.xml
rename to hal/YGPS/tests/res/values/strings.xml
diff --git a/YGPS/tests/src/com/mediatek/ygps/tests/YgpsAutoTest.java b/hal/YGPS/tests/src/com/mediatek/ygps/tests/YgpsAutoTest.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/src/com/mediatek/ygps/tests/YgpsAutoTest.java
rename to hal/YGPS/tests/src/com/mediatek/ygps/tests/YgpsAutoTest.java
diff --git a/YGPS/tests/src/com/mediatek/ygps/tests/YgpsAutoTestRunner.java b/hal/YGPS/tests/src/com/mediatek/ygps/tests/YgpsAutoTestRunner.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/src/com/mediatek/ygps/tests/YgpsAutoTestRunner.java
rename to hal/YGPS/tests/src/com/mediatek/ygps/tests/YgpsAutoTestRunner.java
diff --git a/YGPS/tests/src/com/mediatek/ygps/tests/YgpsLaunchPerformance.java b/hal/YGPS/tests/src/com/mediatek/ygps/tests/YgpsLaunchPerformance.java
old mode 100755
new mode 100644
similarity index 100%
rename from YGPS/tests/src/com/mediatek/ygps/tests/YgpsLaunchPerformance.java
rename to hal/YGPS/tests/src/com/mediatek/ygps/tests/YgpsLaunchPerformance.java
diff --git a/ccci_lib/Android.mk b/hal/ccci_lib/Android.mk
old mode 100755
new mode 100644
similarity index 100%
rename from ccci_lib/Android.mk
rename to hal/ccci_lib/Android.mk
diff --git a/ccci_lib/NOTICE b/hal/ccci_lib/NOTICE
old mode 100755
new mode 100644
similarity index 100%
rename from ccci_lib/NOTICE
rename to hal/ccci_lib/NOTICE
diff --git a/ccci_lib/PROPRIETARY_LICENSE b/hal/ccci_lib/PROPRIETARY_LICENSE
old mode 100755
new mode 100644
similarity index 100%
rename from ccci_lib/PROPRIETARY_LICENSE
rename to hal/ccci_lib/PROPRIETARY_LICENSE
diff --git a/ccci_lib/README b/hal/ccci_lib/README
old mode 100755
new mode 100644
similarity index 100%
rename from ccci_lib/README
rename to hal/ccci_lib/README
diff --git a/ccci_lib/ccci_lib.c b/hal/ccci_lib/ccci_lib.c
old mode 100755
new mode 100644
similarity index 100%
rename from ccci_lib/ccci_lib.c
rename to hal/ccci_lib/ccci_lib.c
diff --git a/hal/Android.mk b/hal/hal/Android.mk
old mode 100755
new mode 100644
similarity index 100%
rename from hal/Android.mk
rename to hal/hal/Android.mk
diff --git a/hal/NOTICE b/hal/hal/NOTICE
old mode 100755
new mode 100644
similarity index 100%
rename from hal/NOTICE
rename to hal/hal/NOTICE
diff --git a/hal/README b/hal/hal/README
old mode 100755
new mode 100644
similarity index 100%
rename from hal/README
rename to hal/hal/README
diff --git a/hal/gps_mtk_aosp.c b/hal/hal/gps_mtk_aosp.c
old mode 100755
new mode 100644
similarity index 100%
rename from hal/gps_mtk_aosp.c
rename to hal/hal/gps_mtk_aosp.c
diff --git a/hal/include/hardware/gps_mtk.h b/hal/hal/include/hardware/gps_mtk.h
old mode 100755
new mode 100644
similarity index 100%
rename from hal/include/hardware/gps_mtk.h
rename to hal/hal/include/hardware/gps_mtk.h
diff --git a/hal/include/linux/mtk_agps_common.h b/hal/hal/include/linux/mtk_agps_common.h
old mode 100755
new mode 100644
similarity index 100%
rename from hal/include/linux/mtk_agps_common.h
rename to hal/hal/include/linux/mtk_agps_common.h
diff --git a/libepos/Android.mk b/hal/libepos/Android.mk
old mode 100755
new mode 100644
similarity index 100%
rename from libepos/Android.mk
rename to hal/libepos/Android.mk
diff --git a/libepos/README b/hal/libepos/README
old mode 100755
new mode 100644
similarity index 100%
rename from libepos/README
rename to hal/libepos/README
diff --git a/libepos/arm/libepos.a b/hal/libepos/arm/libepos.a
old mode 100755
new mode 100644
similarity index 100%
rename from libepos/arm/libepos.a
rename to hal/libepos/arm/libepos.a
diff --git a/libepos/arm/libepos.abk b/hal/libepos/arm/libepos.abk
old mode 100755
new mode 100644
similarity index 100%
rename from libepos/arm/libepos.abk
rename to hal/libepos/arm/libepos.abk
diff --git a/libepos/libepos.a b/hal/libepos/libepos.a
old mode 100755
new mode 100644
similarity index 100%
rename from libepos/libepos.a
rename to hal/libepos/libepos.a
diff --git a/include/fd_utils-inl-extra.h b/include/fd_utils-inl-extra.h
old mode 100755
new mode 100644
diff --git a/keyhandler/Android.mk b/keyhandler/Android.mk
old mode 100755
new mode 100644
diff --git a/keyhandler/src/com/cyanogenmod/settings/device/KeyHandler.java b/keyhandler/src/com/cyanogenmod/settings/device/KeyHandler.java
old mode 100755
new mode 100644
diff --git a/lib_driver_cmd_mt66xx/Android.mk b/lib_driver_cmd_mt66xx/Android.mk
deleted file mode 100755
index 37b895c..0000000
--- a/lib_driver_cmd_mt66xx/Android.mk
+++ /dev/null
@@ -1,12 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-
-include $(CLEAR_VARS)
-LOCAL_MODULE = lib_driver_cmd_mt66xx
-LOCAL_MODULE_CLASS = STATIC_LIBRARIES
-LOCAL_MODULE_OWNER = mtk
-LOCAL_MODULE_SUFFIX = .a
-LOCAL_PROPRIETARY_MODULE = true
-LOCAL_UNINSTALLABLE_MODULE = true
-LOCAL_MULTILIB = 64
-LOCAL_SRC_FILES_64 = arm64/lib_driver_cmd_mt66xx.a
-include $(BUILD_PREBUILT)
diff --git a/lib_driver_cmd_mt66xx/arm64/lib_driver_cmd_mt66xx.a b/lib_driver_cmd_mt66xx/arm64/lib_driver_cmd_mt66xx.a
deleted file mode 100755
index 28e9132d2289b096ffbd3c3d6139da4348e65d05..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 218414
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%0AT22TjZWx7bQOlv9b648#wP5ZFu
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
XW-hyv-MY`+oD$U^=}eV>#{B;ukWZ{X

diff --git a/libhwm/Android.mk b/libhwm/Android.mk
deleted file mode 100644
index d40f53b..0000000
--- a/libhwm/Android.mk
+++ /dev/null
@@ -1,25 +0,0 @@
-LOCAL_PATH := $(call my-dir)
-
-include $(CLEAR_VARS)
-LOCAL_MODULE = libhwm
-LOCAL_MODULE_CLASS = SHARED_LIBRARIES
-LOCAL_MODULE_OWNER = mtk
-LOCAL_MODULE_SUFFIX = .so
-LOCAL_PROPRIETARY_MODULE = false
-LOCAL_SHARED_LIBRARIES_64 = libnvram libfile_op libc++
-LOCAL_EXPORT_C_INCLUDE_DIRS = $(LOCAL_PATH)/include
-LOCAL_MULTILIB = 64
-LOCAL_SRC_FILES_64 = arm64/libhwm.so
-include $(BUILD_PREBUILT)
-
-include $(CLEAR_VARS)
-LOCAL_MODULE = libhwm
-LOCAL_MODULE_CLASS = SHARED_LIBRARIES
-LOCAL_MODULE_OWNER = mtk
-LOCAL_MODULE_SUFFIX = .so
-LOCAL_PROPRIETARY_MODULE = false
-LOCAL_SHARED_LIBRARIES = libnvram libfile_op libc++
-LOCAL_EXPORT_C_INCLUDE_DIRS = $(LOCAL_PATH)/include
-LOCAL_MULTILIB = 32
-LOCAL_SRC_FILES_32 = arm/libhwm.so
-include $(BUILD_PREBUILT)
diff --git a/libhwm/arm/libhwm.so b/libhwm/arm/libhwm.so
deleted file mode 100644
index 569cab7e179430d17d68b17ca7b9cb4922a83275..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 46680
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
L9`}W0`s9BBg03Z!

diff --git a/libhwm/arm64/libhwm.so b/libhwm/arm64/libhwm.so
deleted file mode 100644
index d038ea1c2699ffb6fe299ded39560fab4f700a13..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 47080
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

diff --git a/libhwm/include/libhwm.h b/libhwm/include/libhwm.h
deleted file mode 100644
index 3afbffa..0000000
--- a/libhwm/include/libhwm.h
+++ /dev/null
@@ -1,163 +0,0 @@
-/* Copyright Statement:
- *
- * This software/firmware and related documentation ("MediaTek Software") are
- * protected under relevant copyright laws. The information contained herein is
- * confidential and proprietary to MediaTek Inc. and/or its licensors. Without
- * the prior written permission of MediaTek inc. and/or its licensors, any
- * reproduction, modification, use or disclosure of MediaTek Software, and
- * information contained herein, in whole or in part, shall be strictly
- * prohibited.
- * 
- * MediaTek Inc. (C) 2010. All rights reserved.
- * 
- * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
- * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
- * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER
- * ON AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL
- * WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR
- * NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH
- * RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
- * INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES
- * TO LOOK ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO.
- * RECEIVER EXPRESSLY ACKNOWLEDGES THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO
- * OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES CONTAINED IN MEDIATEK
- * SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE
- * RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
- * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S
- * ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE
- * RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE
- * MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE
- * CHARGE PAID BY RECEIVER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
- *
- * The following software/firmware and/or related documentation ("MediaTek
- * Software") have been modified by MediaTek Inc. All revisions are subject to
- * any receiver's applicable license agreements with MediaTek Inc.
- */
-
-#ifndef __LIBHWM_H__
-#define __LIBHWM_H__
-/*---------------------------------------------------------------------------*/
-#include <math.h>
-
-#define GSENSOR_NAME                    "/dev/gsensor"
-#define GSENSOR_ATTR_SELFTEST           "/sys/bus/platform/drivers/gsensor/selftest"
-
-#define GYROSCOPE_NAME                  "/dev/gyroscope"
-#define ALSPS_NAME                      "/dev/als_ps"
-/*---------------------------------------------------------------------------*/
-// hardware\libhardware\include\hardware\sensors.h
-#define LIBHWM_GRAVITY_EARTH            (9.80665f)
-/*---------------------------------------------------------------------------*/
-#define LIBHWM_ACC_NVRAM_SENSITIVITY    (65536)
-/*---------------------------------------------------------------------------*/
-#define LSB_TO_GRA(X)                   ((X*LIBHWM_GRAVITY_EARTH)/LIBHWM_ACC_NVRAM_SENSITIVITY)
-#define GRA_TO_LSB(X)                   (round((X*LIBHWM_ACC_NVRAM_SENSITIVITY)/LIBHWM_GRAVITY_EARTH))
-/*---------------------------------------------------------------------------*/
-#define LIBHWM_INVAL_FD                 (-1)
-/*---------------------------------------------------------------------------*/
-#define LIBHWM_IS_INVAL_FD(fd)          (fd == LIBHWM_INVAL_FD)
-// Gyroscope sensor sensitivity 1000
-#define LIBHWM_GYRO_NVRAM_SENSITIVITY   1000
-/*---------------------------------------------------------------------------*/
-#define ABSDIF(X, Y) ((X > Y) ? (Y - X) : (X - Y))
-#define ABS(X)      ((X > 0) ? (X) : (-X))
-/*---------------------------------------------------------------------------*/
-typedef enum {
-    HWM_TYPE_NONE = 0,
-    HWM_TYPE_ACC = 1,
-    HWM_TYPE_MAG = 2,
-    HWM_TYPE_PRO = 3,
-    HWM_TYPE_LIG = 4,
-    HWM_TYPE_PS = 5,
-} HwmType;
-/*---------------------------------------------------------------------------*/
-typedef struct {
-    HwmType     type;
-    char        *ctl;
-    char        *dat;
-    int         ctl_fd;
-    int         dat_fd;
-} HwmDev;
-/*---------------------------------------------------------------------------*/
-typedef union {
-    struct {    /*raw data*/
-        int rx;
-        int ry;
-        int rz;
-    };
-    struct {
-        float x;
-        float y;
-        float z;
-    };
-    struct {
-        float azimuth;
-        float pitch;
-        float roll;
-    };
-    struct {
-        int ps_data;
-        int ps_cali;
-        int ps_threshold_high;
-        int ps_threshold_low;
-    };
-} HwmData;
-/*---------------------------------------------------------------------------*/
-typedef struct {
-    void *ptr;
-    int   len;
-} HwmPrivate;
-/*---------------------------------------------------------------------------*/
-extern int gsensor_calibration(int fd, int period, int count, int tolerance, int trace, HwmData *cali);
-extern int gsensor_write_nvram(HwmData *dat);
-extern int gsensor_read_nvram(HwmData *dat);
-extern int gsensor_rst_cali(int fd);
-extern int gsensor_set_cali(int fd, HwmData *dat);
-extern int gsensor_get_cali(int fd, HwmData *dat);
-extern int gsensor_read(int fd, HwmData *dat);
-extern int gsensor_init(int fd);
-extern int gsensor_close(int fd);
-extern int gsensor_open(int *fd);
-extern int gyroscope_calibration(int fd, int period, int count, int tolerance, int trace, HwmData *cali);
-extern int gyroscope_write_nvram(HwmData *dat);
-extern int gyroscope_read_nvram(HwmData *dat);
-extern int gyroscope_rst_cali(int fd);
-extern int gyroscope_set_cali(int fd, HwmData *dat);
-extern int gyroscope_get_cali(int fd, HwmData *dat);
-extern int gyroscope_read(int fd, HwmData *dat);
-extern int gyroscope_close(int fd);
-extern int gyroscope_open(int *fd);
-extern int gyroscope_init(int fd);
-
-/*yucong add for alsps calibration functions*/
-extern int alsps_calibration(int fd, int period, int count, int tolerance, int trace, HwmData *cali);
-extern int alsps_write_nvram(HwmData *dat);
-extern int alsps_read_nvram(HwmData *dat);
-extern int alsps_rst_cali(int fd);
-extern int alsps_set_cali(int fd, HwmData *dat);
-extern int alsps_get_cali(int fd, HwmData *dat);
-extern int alsps_read(int fd, HwmData *dat);
-extern int alsps_set_threshold(int fd, HwmData *dat);
-
-/*---------------------------------------------------------------------------*/
-/*---------------------------------------------------------------------------*/
-extern int get_psensor_data(void);
-extern int calculate_psensor_min_value(void);
-extern int get_psensor_min_value(void);
-extern int calculate_psensor_max_value(void);
-extern int get_psensor_max_value(void);
-extern int do_calibration(int min, int max);
-extern int get_psensor_threshold(int flag);
-extern int set_psensor_threshold(int high, int low);
-extern int clear_psensor_calibration(void);
-/*---------------------------------------------------------------------------*/
-extern int do_gsensor_calibration(int tolerance);
-extern int get_gsensor_calibration(float *x, float *y, float *z);
-extern int clear_gsensor_calibration(void);
-
-/*---------------------------------------------------------------------------*/
-extern int do_gyroscope_calibration(int tolerance);
-extern int get_gyroscope_calibration(float *x, float *y, float *z);
-extern int clear_gyroscope_calibration(void);
-#endif
diff --git a/libion_mtk/Android.mk b/libion_mtk/Android.mk
deleted file mode 100644
index 36f6a0e..0000000
--- a/libion_mtk/Android.mk
+++ /dev/null
@@ -1,32 +0,0 @@
-#
-# Copyright (C) 2011-2014 MediaTek Inc.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-LOCAL_PATH:= $(call my-dir)
-
-include $(CLEAR_VARS)
-
-LOCAL_SRC_FILES := ion.c
-LOCAL_MODULE := libion_mtk
-LOCAL_MODULE_TAGS := optional
-
-LOCAL_C_INCLUDES += \
-	device/infinix/x603/libion_mtk/include \
-	system/core/include
-
-LOCAL_SHARED_LIBRARIES := libion liblog libdl
-
-include $(BUILD_SHARED_LIBRARY)
-
-include $(call all-makefiles-under,$(LOCAL_PATH))
diff --git a/libion_mtk/README b/libion_mtk/README
deleted file mode 100644
index 8bc0578..0000000
--- a/libion_mtk/README
+++ /dev/null
@@ -1,21 +0,0 @@
-Library of ION driver, for user space interface added by MTK.
-
-WHAT IT DOES?
-=============
-libion_mtk.so provide user space API added by MTK.
-
-HOW IT WAS BUILT?
-==================
-It needs the following library from AOSP:
-1.  libion.so
-2.  liblog.so
-
-HOW TO USE IT?
-==============
-libion_mtk.so provide user space API added by MTK.
-all api interfaces are at vendor/mediatek/proprietary/external/include/libion_mtk/ion.h
-
-[Build Method]
-mmm vendor/mediatek/proprietary/external/libion_mtk/
-
-All the source code of this library were written by MediaTek co..
diff --git a/libion_mtk/include/ion.h b/libion_mtk/include/ion.h
deleted file mode 100644
index 666c701..0000000
--- a/libion_mtk/include/ion.h
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- *  ion.h
- *
- * Memory Allocator functions for ion
- *
- *   Copyright 2011 Google, Inc
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-
-#ifndef __MTK_ION_H
-#define __MTK_ION_H
-
-#include <linux/ion.h>
-
-__BEGIN_DECLS
-
-// Allocate buffer from multimedia heap.
-int ion_alloc_mm(int fd, size_t len, size_t align,
-                 unsigned int flags, ion_user_handle_t *handle);
-// Allocate buffer from camera heap.
-int ion_alloc_camera(int fd, size_t len, size_t align,
-                     unsigned int flags, ion_user_handle_t *handle);
-// Allocate buffer from system contiguous heap.
-int ion_alloc_syscontig(int fd, size_t len, size_t align,
-                        unsigned int flags, ion_user_handle_t *handle);
-// Map virtual address of ION buffer
-void* ion_mmap(int fd, void *addr, size_t length, int prot, int flags, int share_fd, off_t offset);
-// UnMap virtual address of ION buffer
-int ion_munmap(int fd, void *addr, size_t length);
-// Close share fd of ION buffer.
-int ion_share_close(int fd, int share_fd);
-// ION custom IOCTL
-int ion_custom_ioctl(int fd, unsigned int cmd, void *arg);
-int mt_ion_open(const char *name);
-
-int ion_cache_sync_flush_all(int fd);
-int ion_cache_sync_flush_range(int fd, ion_user_handle_t handle);
-int ion_cache_sync_flush_range_va(int fd, void *addr, size_t length);
-int ion_dma_map_area(int fd, ion_user_handle_t handle, int dir);
-int ion_dma_unmap_area(int fd, ion_user_handle_t handle, int dir);
-int ion_dma_map_area_va(int fd, void *addr, size_t length, int dir);
-int ion_dma_unmap_area_va(int fd, void *addr, size_t length, int dir);
-
-__END_DECLS
-
-#endif /* __MTK_ION_H */
diff --git a/libion_mtk/include/ion_drv.h b/libion_mtk/include/ion_drv.h
deleted file mode 100644
index 974f5af..0000000
--- a/libion_mtk/include/ion_drv.h
+++ /dev/null
@@ -1,250 +0,0 @@
-/*
- * Copyright (C) 2015 MediaTek Inc.
- *
- * This program is free software: you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- */
-
-#ifndef __ION_DRV_H__
-#define __ION_DRV_H__
-#include <linux/version.h>
-
-#include <ion.h>
-
-#define BACKTRACE_SIZE 10
-
-/* Structure definitions */
-
-typedef enum {
-	ION_CMD_SYSTEM,
-	ION_CMD_MULTIMEDIA,
-	ION_CMD_MULTIMEDIA_SEC
-} ION_CMDS;
-
-typedef enum {
-	ION_MM_CONFIG_BUFFER,
-	ION_MM_SET_DEBUG_INFO,
-	ION_MM_GET_DEBUG_INFO,
-	ION_MM_SET_SF_BUF_INFO,
-	ION_MM_GET_SF_BUF_INFO
-} ION_MM_CMDS;
-
-typedef enum {
-	ION_SYS_CACHE_SYNC,
-	ION_SYS_GET_PHYS,
-	ION_SYS_GET_CLIENT,
-	ION_SYS_SET_HANDLE_BACKTRACE,
-	ION_SYS_SET_CLIENT_NAME,
-	ION_SYS_DMA_OP,
-} ION_SYS_CMDS;
-
-typedef enum {
-	ION_CACHE_CLEAN_BY_RANGE,
-	ION_CACHE_INVALID_BY_RANGE,
-	ION_CACHE_FLUSH_BY_RANGE,
-	ION_CACHE_CLEAN_BY_RANGE_USE_VA,
-	ION_CACHE_INVALID_BY_RANGE_USE_VA,
-	ION_CACHE_FLUSH_BY_RANGE_USE_VA,
-	ION_CACHE_CLEAN_ALL,
-	ION_CACHE_INVALID_ALL,
-	ION_CACHE_FLUSH_ALL
-} ION_CACHE_SYNC_TYPE;
-
-typedef enum {
-	ION_ERROR_CONFIG_LOCKED = 0x10000
-} ION_ERROR_E;
-
-/* mm or mm_sec heap flag which is do not conflist with ION_HEAP_FLAG_DEFER_FREE */
-#define ION_FLAG_MM_HEAP_INIT_ZERO (1 << 16)
-#define ION_FLAG_MM_HEAP_SEC_PA (1 << 18)
-
-
-typedef struct ion_sys_cache_sync_param {
-	union {
-		ion_user_handle_t handle;
-		struct ion_handle *kernel_handle;
-	};
-	void *va;
-	unsigned int size;
-	ION_CACHE_SYNC_TYPE sync_type;
-} ion_sys_cache_sync_param_t;
-
-typedef enum {
-	ION_DMA_MAP_AREA,
-	ION_DMA_UNMAP_AREA,
-	ION_DMA_MAP_AREA_VA,
-	ION_DMA_UNMAP_AREA_VA,
-	ION_DMA_FLUSH_BY_RANGE,
-	ION_DMA_FLUSH_BY_RANGE_USE_VA,
-	ION_DMA_CACHE_FLUSH_ALL
-} ION_DMA_TYPE;
-
-typedef enum {
-	ION_DMA_FROM_DEVICE,
-	ION_DMA_TO_DEVICE,
-	ION_DMA_BIDIRECTIONAL,
-} ION_DMA_DIR;
-
-typedef struct ion_dma_param {
-	union {
-		ion_user_handle_t handle;
-		void *kernel_handle;
-	};
-	void *va;
-	unsigned int size;
-	ION_DMA_TYPE dma_type;
-	ION_DMA_DIR dma_dir;
-} ion_sys_dma_param_t;
-
-typedef struct ion_sys_get_phys_param {
-	union {
-		ion_user_handle_t handle;
-		struct ion_handle *kernel_handle;
-	};
-	unsigned int phy_addr;
-	unsigned long len;
-} ion_sys_get_phys_param_t;
-
-#define ION_MM_DBG_NAME_LEN 16
-#define ION_MM_SF_BUF_INFO_LEN 16
-
-typedef struct __ion_sys_client_name {
-	char name[ION_MM_DBG_NAME_LEN];
-} ion_sys_client_name_t;
-
-typedef struct ion_sys_get_client_param {
-	unsigned int client;
-} ion_sys_get_client_param_t;
-
-typedef struct ion_sys_record_param {
-	pid_t group_id;
-	pid_t pid;
-	unsigned int action;
-	unsigned int address_type;
-	unsigned int address;
-	unsigned int length;
-	unsigned int backtrace[BACKTRACE_SIZE];
-	unsigned int backtrace_num;
-	struct ion_handle *handle;
-	struct ion_client *client;
-	struct ion_buffer *buffer;
-	struct file *file;
-	int fd;
-} ion_sys_record_t;
-
-typedef struct ion_sys_data {
-	ION_SYS_CMDS sys_cmd;
-	union {
-		ion_sys_cache_sync_param_t cache_sync_param;
-		ion_sys_get_phys_param_t get_phys_param;
-		ion_sys_get_client_param_t get_client_param;
-		ion_sys_client_name_t client_name_param;
-		ion_sys_record_t record_param;
-		ion_sys_dma_param_t dma_param;
-	};
-} ion_sys_data_t;
-
-typedef struct ion_mm_config_buffer_param {
-	union {
-		ion_user_handle_t handle;
-		struct ion_handle *kernel_handle;
-	};
-	int eModuleID;
-	unsigned int security;
-	unsigned int coherent;
-} ion_mm_config_buffer_param_t;
-
-
-typedef struct __ion_mm_buf_debug_info {
-	union {
-		ion_user_handle_t handle;
-		struct ion_handle *kernel_handle;
-	};
-	char dbg_name[ION_MM_DBG_NAME_LEN];
-	unsigned int value1;
-	unsigned int value2;
-	unsigned int value3;
-	unsigned int value4;
-} ion_mm_buf_debug_info_t;
-
-typedef struct __ion_mm_sf_buf_info {
-	union {
-		ion_user_handle_t handle;
-		struct ion_handle *kernel_handle;
-	};
-	unsigned int info[ION_MM_SF_BUF_INFO_LEN];
-} ion_mm_sf_buf_info_t;
-
-typedef struct ion_mm_data {
-	ION_MM_CMDS mm_cmd;
-	union {
-		ion_mm_config_buffer_param_t config_buffer_param;
-		ion_mm_buf_debug_info_t buf_debug_info_param;
-		ion_mm_sf_buf_info_t sf_buf_info_param;
-	};
-} ion_mm_data_t;
-
-#ifdef __KERNEL__
-#include <aee.h>
-#define ION_LOG_TAG "ion_dbg"
-#define IONMSG(string, args...)	pr_err("[ION]"string, ##args)
-#define ion_aee_print(string, args...) do {\
-	char ion_name[100];\
-	snprintf(ion_name, 100, "["ION_LOG_TAG"]"string, ##args); \
-	aee_kernel_warning(ion_name, "["ION_LOG_TAG"]error:"string, ##args);  \
-} while (0)
-#ifdef ION_DBG
-#define IONDBG(string, args...)	pr_err("[ION]"string, ##args)
-#else
-#define IONDBG(string, args...)
-#endif
-
-/* Exported global variables */
-extern struct ion_device *g_ion_device;
-
-/* Exported functions */
-long ion_kernel_ioctl(struct ion_client *client, unsigned int cmd, unsigned long arg);
-struct ion_handle *ion_drv_get_handle(struct ion_client *client, int user_handle,
-					struct ion_handle *kernel_handle, int from_kernel);
-int ion_drv_put_kernel_handle(void *kernel_handle);
-
-/**
- * ion_mm_heap_total_memory() - get mm heap total buffer size.
- */
-size_t ion_mm_heap_total_memory(void);
-/**
- * ion_mm_heap_total_memory() - get mm heap buffer detail info.
- */
-void ion_mm_heap_memory_detail(void);
-int ion_drv_create_FB_heap(ion_phys_addr_t fb_base, size_t fb_size);
-
-typedef int (ion_mm_buf_destroy_callback_t)(struct ion_buffer *buffer, unsigned int phyAddr);
-int ion_mm_heap_register_buf_destroy_callback(struct ion_buffer *buffer, ion_mm_buf_destroy_callback_t *fn);
-
-int ion_cache_sync_flush_all(int fd);
-int ion_dma_map_area(int fd, ion_user_handle_t handle, int dir);
-int ion_dma_unmap_area(int fd, ion_user_handle_t handle, int dir);
-void ion_dma_map_area_va(void *start, size_t size, ION_DMA_DIR dir);
-void ion_dma_unmap_area_va(void *start, size_t size, ION_DMA_DIR dir);
-
-struct ion_heap *ion_mm_heap_create(struct ion_platform_heap *);
-void ion_mm_heap_destroy(struct ion_heap *);
-
-struct ion_heap *ion_fb_heap_create(struct ion_platform_heap *);
-void ion_fb_heap_destroy(struct ion_heap *);
-
-int ion_device_destroy_heaps(struct ion_device *dev);
-
-struct ion_heap *ion_sec_heap_create(struct ion_platform_heap *unused);
-void ion_sec_heap_destroy(struct ion_heap *heap);
-
-
-#endif
-
-#endif
diff --git a/libion_mtk/include/mtk_ion.h b/libion_mtk/include/mtk_ion.h
deleted file mode 100644
index fdd54b1..0000000
--- a/libion_mtk/include/mtk_ion.h
+++ /dev/null
@@ -1,33 +0,0 @@
-/*
-* Copyright (C) 2011-2014 MediaTek Inc.
-*
-* Licensed under the Apache License, Version 2.0 (the "License");
-* you may not use this file except in compliance with the License.
-* You may obtain a copy of the License at
-*
-*      http://www.apache.org/licenses/LICENSE-2.0
-*
-* Unless required by applicable law or agreed to in writing, software
-* distributed under the License is distributed on an "AS IS" BASIS,
-* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-* See the License for the specific language governing permissions and
-* limitations under the License.
-*/
-
-#ifndef _MTK_LINUX_ION_H
-#define _MTK_LINUX_ION_H
-enum mtk_ion_heap_type {
-	ION_HEAP_TYPE_MULTIMEDIA = 10,
-	ION_HEAP_TYPE_FB = 11,
-	ION_HEAP_TYPE_MULTIMEDIA_FOR_CAMERA = 12,
-	ION_HEAP_TYPE_MULTIMEDIA_SEC = 13,
-/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
-};
-#define ION_HEAP_MULTIMEDIA_MASK (1 << ION_HEAP_TYPE_MULTIMEDIA)
-#define ION_HEAP_FB_MASK         (1 << ION_HEAP_TYPE_FB)
-#define ION_HEAP_CAMERA_MASK (1 << ION_HEAP_TYPE_MULTIMEDIA_FOR_CAMERA)
-#define ION_HEAP_MULTIMEDIA_SEC_MASK (1 << ION_HEAP_TYPE_MULTIMEDIA_SEC)
-
-#define ION_NUM_HEAP_IDS (sizeof(unsigned int) * 8)
-#endif
-/* WARNING: DO NOT EDIT, AUTO-GENERATED CODE - SEE TOP FOR INSTRUCTIONS */
diff --git a/libion_mtk/ion.c b/libion_mtk/ion.c
deleted file mode 100644
index 82a4198..0000000
--- a/libion_mtk/ion.c
+++ /dev/null
@@ -1,279 +0,0 @@
-/*
- *  ion.c
- *
- * Memory Allocator functions for ion
- *
- *   Copyright 2011 Google, Inc
- *
- *  Licensed under the Apache License, Version 2.0 (the "License");
- *  you may not use this file except in compliance with the License.
- *  You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- *  Unless required by applicable law or agreed to in writing, software
- *  distributed under the License is distributed on an "AS IS" BASIS,
- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- *  See the License for the specific language governing permissions and
- *  limitations under the License.
- */
-#include <cutils/log.h>
-#include <errno.h>
-#include <fcntl.h>
-#include <stdio.h>
-#include <string.h>
-#include <sys/ioctl.h>
-#include <sys/mman.h>
-#include <sys/types.h>
-
-#include <ion/ion.h>
-#include <mtk_ion.h>
-#include <ion.h>
-#include <ion_drv.h>
-
-static int ion_set_client_name(int ion_fd, const char *name)
-{
-    int ret;
-    ion_sys_data_t sys_data;
-
-    sys_data.sys_cmd = ION_SYS_SET_CLIENT_NAME;
-
-    strncpy(sys_data.client_name_param.name, name, sizeof(sys_data.client_name_param.name)-1);
-
-    if(ion_custom_ioctl(ion_fd, ION_CMD_SYSTEM, &sys_data))
-    {
-        //config error
-        ALOGE("[ion_dbg] ion_set_client_name error\n");
-        return -1;
-    }
-
-    return 0;
-}
-
-int mt_ion_open(const char *name)
-{
-    int fd;
-    fd = ion_open();
-    if(fd < 0)
-    {
-        ALOGE("ion_open failed!\n");
-        return fd;
-    }
-
-    ion_set_client_name(fd, name);
-    return fd;
-}
-
-int ion_alloc_mm(int fd, size_t len, size_t align, unsigned int flags,
-              ion_user_handle_t *handle)
-{
-        /*int ret;
-        struct ion_allocation_data data = {
-                .len = len,
-                .align = align,
-                .flags = flags,
-                .heap_mask = ION_HEAP_MULTIMEDIA_MASK
-        };
-
-        ret = ion_ioctl(fd, ION_IOC_ALLOC, &data);
-        if (ret < 0)
-                return ret;
-        *handle = data.handle;
-
-        ion_alloc();
-
-        return ret;*/
-
-        return ion_alloc(fd, len, align, ION_HEAP_MULTIMEDIA_MASK, flags, handle);
-}
-
-int ion_alloc_camera(int fd, size_t len, size_t align, unsigned int flags,
-              ion_user_handle_t *handle)
-{
-        /*int ret;
-        struct ion_allocation_data data = {
-                .len = len,
-                .align = align,
-                .flags = flags,
-                .heap_mask = ION_HEAP_MULTIMEDIA_MASK
-        };
-
-        ret = ion_ioctl(fd, ION_IOC_ALLOC, &data);
-        if (ret < 0)
-                return ret;
-        *handle = data.handle;
-
-        ion_alloc();
-
-        return ret;*/
-
-        return ion_alloc(fd, len, align, ION_HEAP_CAMERA_MASK, flags, handle);
-}
-
-
-int ion_alloc_syscontig(int fd, size_t len, size_t align, unsigned int flags, ion_user_handle_t *handle)
-{
-        /*int ret;
-        struct ion_allocation_data data = {
-                .len = len,
-                .align = align,
-                .flags = flags,
-                .heap_mask = ION_HEAP_SYSTEM_CONTIG_MASK
-        };
-
-        ret = ion_ioctl(fd, ION_IOC_ALLOC, &data);
-        if (ret < 0)
-                return ret;
-        *handle = data.handle;
-
-        return ret;*/
-
-        return ion_alloc(fd, len, align, ION_HEAP_SYSTEM_CONTIG_MASK, flags, handle);
-}
-
-void* ion_mmap(int fd, void *addr, size_t length, int prot, int flags, int share_fd, off_t offset)
-{
-    void *mapping_address = NULL;
-
-    mapping_address =  mmap(addr, length, prot, flags, share_fd, offset);
-
-    if (mapping_address == MAP_FAILED) {
-        ALOGE("ion_mmap failed fd = %d, addr = 0x%p, len = %zu, prot = %d, flags = %d, share_fd = %d, 0x%p: %s\n", fd, addr, length,
-              prot, flags, share_fd, mapping_address, strerror(errno));
-    }
-
-    return mapping_address;
-}
-
-int ion_munmap(int fd, void *addr, size_t length)
-{
-    int ret = munmap(addr, length);
-
-    if (ret < 0) {
-        ALOGE("ion_munmap failed fd = %d, addr = 0x%p, len = %zu, %d: %s\n", fd, addr, length,
-              ret, strerror(errno));
-    }
-    return ret;
-}
-
-int ion_share_close(int fd, int share_fd)
-{
-    int ret = close(share_fd);
-    if (ret < 0) {
-        ALOGE("ion_share_close failed fd = %d, share_fd = %d, %d: %s\n", fd, share_fd,
-              ret, strerror(errno));
-    }
-    return ret;
-}
-
-int ion_custom_ioctl(int fd, unsigned int cmd, void* arg)
-{
-    struct ion_custom_data custom_data;
-    custom_data.cmd = cmd;
-    custom_data.arg = (unsigned long) arg;
-
-    int ret = ioctl(fd, ION_IOC_CUSTOM, &custom_data);
-    if (ret < 0) {
-        ALOGE("ion_custom_ioctl %x failed with code %d: %s\n", ION_IOC_CUSTOM,
-              ret, strerror(errno));
-
-        return -errno;
-    }
-    return ret;
-}
-
-int ion_cache_sync_flush_all(int fd) {
-	int ret;
-	struct ion_sys_data sys_data;
-	sys_data.sys_cmd = ION_SYS_DMA_OP;
-
-	sys_data.dma_param.dma_type = ION_DMA_CACHE_FLUSH_ALL;
-	ret = ion_custom_ioctl(fd, ION_CMD_SYSTEM, &sys_data);
-	if (ret)
-		return -errno;
-	return ret;
-}
-
-int ion_cache_sync_flush_range(int fd, ion_user_handle_t handle) {
-	int ret;
-	struct ion_sys_data sys_data;
-	sys_data.sys_cmd = ION_SYS_DMA_OP;
-
-	sys_data.dma_param.dma_type = ION_DMA_CACHE_FLUSH_ALL;
-	ret = ion_custom_ioctl(fd, ION_CMD_SYSTEM, &sys_data);
-	if (ret)
-		return -errno;
-	return ret;
-}
-
-int ion_cache_sync_flush_range_va(int fd, void *addr, size_t length) {
-	int ret;
-	struct ion_sys_data sys_data;
-	sys_data.sys_cmd = ION_SYS_DMA_OP;
-	sys_data.dma_param.va = addr;
-	sys_data.dma_param.size = length;
-
-	sys_data.dma_param.dma_type = ION_DMA_FLUSH_BY_RANGE_USE_VA;
-	ret = ion_custom_ioctl(fd, ION_CMD_SYSTEM, &sys_data);
-	if (ret)
-		return -errno;
-	return ret;
-}
-
-int ion_dma_map_area(int fd, ion_user_handle_t handle, int dir) {
-	int ret;
-	struct ion_sys_data sys_data;
-	sys_data.sys_cmd = ION_SYS_DMA_OP;
-	sys_data.dma_param.handle = handle;
-
-	sys_data.dma_param.dma_type = ION_DMA_MAP_AREA;
-	sys_data.dma_param.dma_dir = dir;
-	ret = ion_custom_ioctl(fd, ION_CMD_SYSTEM, &sys_data);
-	if (ret)
-		return -errno;
-	return ret;
-}
-
-int ion_dma_unmap_area(int fd, ion_user_handle_t handle, int dir) {
-	int ret;
-	struct ion_sys_data sys_data;
-	sys_data.sys_cmd = ION_SYS_DMA_OP;
-	sys_data.dma_param.handle = handle;
-
-	sys_data.dma_param.dma_type = ION_DMA_UNMAP_AREA;
-	sys_data.dma_param.dma_dir = dir;
-	ret = ion_custom_ioctl(fd, ION_CMD_SYSTEM, &sys_data);
-	if (ret)
-		return -errno;
-	return ret;
-}
-
-int ion_dma_map_area_va(int fd, void *addr, size_t length, int dir) {
-	int ret;
-	struct ion_sys_data sys_data;
-	sys_data.sys_cmd = ION_SYS_DMA_OP;
-	sys_data.dma_param.va = addr;
-	sys_data.dma_param.size = length;
-
-	sys_data.dma_param.dma_type = ION_DMA_MAP_AREA_VA;
-	sys_data.dma_param.dma_dir = dir;
-	ret = ion_custom_ioctl(fd, ION_CMD_SYSTEM, &sys_data);
-	if (ret)
-		return -errno;
-	return ret;
-}
-
-int ion_dma_unmap_area_va(int fd, void * addr, size_t length, int dir) {
-	int ret;
-	struct ion_sys_data sys_data;
-	sys_data.sys_cmd = ION_SYS_DMA_OP;
-	sys_data.dma_param.va = addr;
-	sys_data.dma_param.size = length;
-
-	sys_data.dma_param.dma_type = ION_DMA_UNMAP_AREA_VA;
-	sys_data.dma_param.dma_dir = dir;
-	ret = ion_custom_ioctl(fd, ION_CMD_SYSTEM, &sys_data);
-	if (ret)
-		return -errno;
-	return ret;
-}
diff --git a/libmtk_symbols/Android.mk b/libmtk_symbols/Android.mk
old mode 100755
new mode 100644
index 076af57..50fa792
--- a/libmtk_symbols/Android.mk
+++ b/libmtk_symbols/Android.mk
@@ -1,13 +1,38 @@
+LOCAL_PATH := $(call my-dir)
 include $(CLEAR_VARS)
-  LOCAL_SRC_FILES := libprogrambinary
-  LOCAL_SHARED_LIBRARIES := program_binary_builder.cpp
-  LOCAL_MODULE := libmtkshim_programbinary
-  LOCAL_PROPRIETARY_MODULE := true
-include $(BUILD_PREBUILT)
 
-include $(CLEAR_VARS)
-  LOCAL_SRC_FILES := vtservice.cpp
-  LOCAL_SHARED_LIBRARIES := libvtmal
-  LOCAL_MODULE := libmtkshim_vtmal
-  LOCAL_PROPRIETARY_MODULE := true
+LOCAL_SRC_FILES := \
+	mtk_xlog.cpp \
+	mtk_gui.cpp \
+	mtkcamhack.cpp \
+	mtk_ui.cpp \
+	mtk_omx.cpp \
+	mtk_bionic.cpp \
+	mtk_gps.cpp \
+	program_binary_builder.cpp \
+	vtservice.cpp
+	
+
+# only for 32bit libraries
+#LOCAL_SRC_FILES_32 := mtk_string.cpp
+#LOCAL_SRC_FILES_32 += mtk_wvm32.cpp
+# only for 64bit libraries
+#LOCAL_SRC_FILES_64 := mtk_parcel.cpp
+#LOCAL_SRC_FILES_64 += mtk_wvm64.cpp
+
+
+LOCAL_SHARED_LIBRARIES := libcutils libbinder libutils liblog libgui libui libicuuc libicui18n libcrypto libstagefright_foundation libssl libc libmedia
+LOCAL_C_INCLUDES += frameworks/av/media/mtp/ system/core/include/ frameworks/rs/server/ frameworks/av/include/ hardware/libhardware/include/
+LOCAL_MODULE := libmtk_symbols
+LOCAL_MODULE_TAGS := optional
+
+LOCAL_CLANG := true
+LOCAL_CPPFLAGS := -std=c++1y
+# LOCAL_SANITIZE := integer
+LOCAL_CPPFLAGS += -Wno-exit-time-destructors
+LOCAL_CPPFLAGS += -Wno-global-constructors
+LOCAL_CPPFLAGS += -Wno-c++98-compat-pedantic
+LOCAL_CPPFLAGS += -Wno-four-char-constants
+LOCAL_CPPFLAGS += -Wno-padded
+
 include $(BUILD_SHARED_LIBRARY)
diff --git a/libmtk_symbols/mtk_bionic.cpp b/libmtk_symbols/mtk_bionic.cpp
old mode 100755
new mode 100644
diff --git a/libmtk_symbols/mtk_gps.cpp b/libmtk_symbols/mtk_gps.cpp
old mode 100755
new mode 100644
diff --git a/libmtk_symbols/mtk_gui.cpp b/libmtk_symbols/mtk_gui.cpp
old mode 100755
new mode 100644
diff --git a/libmtk_symbols/mtk_omx.cpp b/libmtk_symbols/mtk_omx.cpp
old mode 100755
new mode 100644
diff --git a/libmtk_symbols/mtk_parcel.cpp b/libmtk_symbols/mtk_parcel.cpp
old mode 100755
new mode 100644
diff --git a/libmtk_symbols/mtk_ui.cpp b/libmtk_symbols/mtk_ui.cpp
old mode 100755
new mode 100644
diff --git a/libmtk_symbols/mtk_xlog.cpp b/libmtk_symbols/mtk_xlog.cpp
old mode 100755
new mode 100644
diff --git a/libmtk_symbols/mtkcamhack.cpp b/libmtk_symbols/mtkcamhack.cpp
old mode 100755
new mode 100644
diff --git a/libwvmsym/Android.mk b/libwvmsym/Android.mk
deleted file mode 100644
index 576dc1b..0000000
--- a/libwvmsym/Android.mk
+++ /dev/null
@@ -1,16 +0,0 @@
-# Shim library for missing symbols in libwvm
-LOCAL_PATH := $(call my-dir)
-include $(CLEAR_VARS)
-
-LOCAL_CLANG := true
-
-# only for 32bit libraries
-LOCAL_SRC_FILES_32 := libwvmsym.cpp
-
-LOCAL_SHARED_LIBRARIES := liblog libstagefright libcutils libmedia
-LOCAL_MODULE := libwvmsym
-LOCAL_MODULE_TAGS := optional
-LOCAL_MULTILIB := 32
-
-# crash! Disabled for the time being
-#include $(BUILD_SHARED_LIBRARY)
diff --git a/libwvmsym/libwvmsym.cpp b/libwvmsym/libwvmsym.cpp
deleted file mode 100644
index 55c64b3..0000000
--- a/libwvmsym/libwvmsym.cpp
+++ /dev/null
@@ -1,20 +0,0 @@
-#include <stdlib.h>
-#include <stdint.h>
-#include <media/IMediaSource.h>
-
-extern "C" {
-    // getSeekTo(int64_t *time_us, SeekMode *mode)
-    void _ZNK7android12IMediaSource11ReadOptions9getSeekToEPxPNS1_8SeekModeE(
-		int64_t*, int32_t*);
-    // bool getNonBlocking()
-    bool _ZNK7android12IMediaSource11ReadOptions14getNonBlockingEv();
-
-    void _ZNK7android11MediaSource11ReadOptions9getSeekToEPxPNS1_8SeekModeE(
-		int64_t *time_us, int32_t *mode) {
-	_ZNK7android12IMediaSource11ReadOptions9getSeekToEPxPNS1_8SeekModeE(time_us, mode);
-    }
-    bool _ZNK7android11MediaSource11ReadOptions14getNonBlockingEv() {
-	return _ZNK7android12IMediaSource11ReadOptions14getNonBlockingEv();
-    }
-}
-
diff --git a/mtk/Android.mk b/mtk/Android.mk
new file mode 100644
index 0000000..5053e7d
--- /dev/null
+++ b/mtk/Android.mk
@@ -0,0 +1 @@
+include $(call all-subdir-makefiles)
diff --git a/mtk/lib_driver_cmd_mt66xx/Android.mk b/mtk/lib_driver_cmd_mt66xx/Android.mk
new file mode 100644
index 0000000..21f3953
--- /dev/null
+++ b/mtk/lib_driver_cmd_mt66xx/Android.mk
@@ -0,0 +1,68 @@
+#
+# Copyright (C) 2017  The LineageOS Project
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+LOCAL_PATH := $(call my-dir)
+
+##### For Google SUPPLICANT #####
+ifeq ($(MTKPATH),)
+    $(warning build BASIC wpa_supplicant)
+    WPA_SUPPL_DIR = external/wpa_supplicant_8
+    WPA_SRC_FILE :=
+
+ifneq ($(BOARD_WPA_SUPPLICANT_DRIVER),)
+    CONFIG_DRIVER_$(BOARD_WPA_SUPPLICANT_DRIVER) := y
+endif
+ifneq ($(BOARD_HOSTAPD_DRIVER),)
+    CONFIG_DRIVER_$(BOARD_HOSTAPD_DRIVER) := y
+endif
+
+include $(WPA_SUPPL_DIR)/wpa_supplicant/android.config
+
+WPA_SUPPL_DIR_INCLUDE = $(WPA_SUPPL_DIR)/src \
+	$(WPA_SUPPL_DIR)/src/common \
+	$(WPA_SUPPL_DIR)/src/drivers \
+	$(WPA_SUPPL_DIR)/src/l2_packet \
+	$(WPA_SUPPL_DIR)/src/utils \
+	$(WPA_SUPPL_DIR)/src/wps \
+	$(WPA_SUPPL_DIR)/wpa_supplicant
+
+ifdef CONFIG_DRIVER_NL80211
+WPA_SUPPL_DIR_INCLUDE += external/libnl/include
+WPA_SRC_FILE += mediatek_driver_cmd_nl80211.c
+endif
+
+ifdef CONFIG_DRIVER_WEXT
+#error doesn't support CONFIG_DRIVER_WEXT
+endif
+
+# To force sizeof(enum) = 4
+ifeq ($(TARGET_ARCH),arm)
+L_CFLAGS += -mabi=aapcs-linux
+endif
+
+ifdef CONFIG_ANDROID_LOG
+L_CFLAGS += -DCONFIG_ANDROID_LOG
+endif
+
+########################
+include $(CLEAR_VARS)
+LOCAL_MODULE := lib_driver_cmd_mt66xx
+LOCAL_SHARED_LIBRARIES := libc libcutils
+LOCAL_CFLAGS := $(L_CFLAGS)
+LOCAL_SRC_FILES := $(WPA_SRC_FILE)
+LOCAL_C_INCLUDES := $(WPA_SUPPL_DIR_INCLUDE)
+include $(BUILD_STATIC_LIBRARY)
+########################
+endif
diff --git a/lib_driver_cmd_mt66xx/README b/mtk/lib_driver_cmd_mt66xx/README
old mode 100755
new mode 100644
similarity index 100%
rename from lib_driver_cmd_mt66xx/README
rename to mtk/lib_driver_cmd_mt66xx/README
diff --git a/mtk/lib_driver_cmd_mt66xx/mediatek_driver_cmd_nl80211.c b/mtk/lib_driver_cmd_mt66xx/mediatek_driver_cmd_nl80211.c
new file mode 100644
index 0000000..c59bcb5
--- /dev/null
+++ b/mtk/lib_driver_cmd_mt66xx/mediatek_driver_cmd_nl80211.c
@@ -0,0 +1,266 @@
+/*
+ * Driver interaction with extended Linux CFG8021
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * Alternatively, this software may be distributed under the terms of BSD
+ * license.
+ *
+ */
+#include "includes.h"
+#include <linux/wireless.h>
+#include "netlink/genl/genl.h"
+
+#include "common.h"
+#include "driver_nl80211.h"
+#include "linux_ioctl.h"
+#include "wpa_supplicant_i.h"
+#include "config.h"
+#ifdef ANDROID
+#include "android_drv.h"
+#endif
+
+#include "driver_i.h"
+
+#include "eloop.h"
+
+/**********************************************************************
+* OVERLAPPED functins, previous defination is in driver_nl80211.c,
+* it will be modified
+***********************************************************************/
+
+/**********************************************************************/
+static int wpa_driver_mediatek_set_country(void *priv, const char *alpha2_arg)
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+    int ioctl_sock = -1;
+    struct iwreq iwr;
+    int ret = -1;
+    char buf[11];
+#ifdef MTK_TC1_FEATURE
+    char replace_ifname[IFNAMSIZ+1];
+
+    memset(replace_ifname, 0, IFNAMSIZ+1);
+    os_strlcpy(replace_ifname, "wlan0", os_strlen("wlan0")+1);
+#endif
+
+    wpa_printf(MSG_DEBUG, "wpa_driver_nl80211_set_country");
+    ioctl_sock = socket(PF_INET, SOCK_DGRAM, 0);
+    if (ioctl_sock < 0) {
+        wpa_printf(MSG_ERROR, "%s: socket(PF_INET,SOCK_DGRAM)", __func__);
+        return -1;
+    }
+    os_memset(&iwr, 0, sizeof(iwr));
+#ifdef MTK_TC1_FEATURE
+    // convert 'p2p0' -> 'wlan0' :
+    // when iface name is p2p0, COUNTRY driver command doesn't support in MTK solution.
+    if (os_strncmp(drv->first_bss->ifname, "p2p0", os_strlen("p2p0")) == 0) {
+        wpa_printf(MSG_DEBUG, "Change interface name : p2p0->wlan0");
+        os_strlcpy(iwr.ifr_name, replace_ifname, IFNAMSIZ );
+    } else {
+        os_strlcpy(iwr.ifr_name, drv->first_bss->ifname, IFNAMSIZ);
+    }
+#else
+    os_strlcpy(iwr.ifr_name, drv->first_bss->ifname, IFNAMSIZ);
+#endif
+    sprintf(buf, "COUNTRY %s", alpha2_arg);
+    iwr.u.data.pointer = buf;
+    iwr.u.data.length = strlen(buf);
+    if ((ret = ioctl(ioctl_sock, 0x8B0C, &iwr)) < 0) {  // SIOCSIWPRIV
+        wpa_printf(MSG_DEBUG, "ioctl[SIOCSIWPRIV]: %s", buf);
+        close(ioctl_sock);
+        return ret;
+    }
+    else {
+        close(ioctl_sock);
+        return 0;
+    }
+
+}
+
+/*
+* update channel list in wpa_supplicant
+* if coutry code chanaged
+*/
+static void wpa_driver_notify_country_change(void *ctx, char *cmd)
+{
+    if (os_strncasecmp(cmd, "COUNTRY", 7) == 0) {
+        union wpa_event_data event;
+
+        os_memset(&event, 0, sizeof(event));
+        event.channel_list_changed.initiator = REGDOM_SET_BY_USER;
+        if (os_strncasecmp(cmd, "COUNTRY", 7) == 0) {
+            event.channel_list_changed.type = REGDOM_TYPE_COUNTRY;
+            if (os_strlen(cmd) > 9) {
+                event.channel_list_changed.alpha2[0] = cmd[8];
+                event.channel_list_changed.alpha2[1] = cmd[9];
+            }
+        } else
+            event.channel_list_changed.type = REGDOM_TYPE_UNKNOWN;
+        wpa_supplicant_event(ctx, EVENT_CHANNEL_LIST_CHANGED, &event);
+    }
+}
+
+int wpa_driver_nl80211_driver_cmd(void *priv, char *cmd, char *buf,
+                  size_t buf_len )
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+    struct ifreq ifr;
+    struct wpa_supplicant *wpa_s;
+    struct hostapd_data *hapd;
+    int handled = 0;
+    int cmd_len = 0;
+    union wpa_event_data event;
+    static int user_force_band = 0;
+    int ret = -1;
+
+    if (drv == NULL) {
+        wpa_printf(MSG_ERROR, "%s: drv is NULL. Exiting", __func__);
+        return -1;
+    }
+    if (drv->ctx == NULL) {
+        wpa_printf(MSG_ERROR, "%s: drv->ctx is NULL. Exiting", __func__);
+        return -1;
+    }
+
+    if (os_strcmp(bss->ifname, "ap0") == 0) {
+        hapd = (struct hostapd_data *)(drv->ctx);
+    }
+    else {
+        wpa_s = (struct wpa_supplicant *)(drv->ctx);
+        if (wpa_s->conf == NULL) {
+            wpa_printf(MSG_ERROR, "%s: wpa_s->conf is NULL. Exiting", __func__);
+            return -1;
+        }
+    }
+
+    wpa_printf(MSG_DEBUG, "iface %s recv cmd %s", bss->ifname, cmd);
+    handled = 1;
+
+    if (os_strncasecmp(cmd, "POWERMODE ", 10) == 0) {
+        int state;
+        state = atoi(cmd + 10);
+        wpa_printf(MSG_DEBUG, "POWERMODE=%d", state);
+    }  else if (os_strncmp(cmd, "MACADDR", os_strlen("MACADDR")) == 0) {
+        u8 macaddr[ETH_ALEN] = {};
+        os_memcpy(&macaddr, wpa_s->own_addr, ETH_ALEN);
+        ret = snprintf(buf, buf_len, "Macaddr = " MACSTR "\n", MAC2STR(macaddr));
+        wpa_printf(MSG_DEBUG, "%s", buf);
+    } else if(os_strncasecmp(cmd, "COUNTRY", os_strlen("COUNTRY"))==0) {
+        if (os_strlen(cmd) != os_strlen("COUNTRY") + 3) {
+            wpa_printf(MSG_DEBUG, "Ignore COUNTRY cmd %s", cmd);
+            ret = 0;
+        } else {
+            wpa_printf(MSG_INFO, "set country: %s", cmd+8);
+            // ret = wpa_drv_set_country(wpa_s, cmd+8);
+            ret = wpa_driver_mediatek_set_country(priv, cmd+8);
+            if (ret == 0) {
+                wpa_printf(MSG_DEBUG, "Update channel list after country code changed");
+                wpa_driver_notify_country_change(wpa_s, cmd);
+            }
+        }
+    } else if (os_strcasecmp(cmd, "start") == 0) {
+        if (ret = linux_set_iface_flags(drv->global->ioctl_sock,
+            drv->first_bss->ifname, 1)) {
+            wpa_printf(MSG_INFO, "nl80211: Could not set interface UP, ret=%d \n", ret);
+        } else {
+            wpa_msg(drv->ctx, MSG_INFO, "CTRL-EVENT-DRIVER-STATE STARTED");
+        }
+    } else if (os_strcasecmp(cmd, "stop") == 0) {
+        if (drv->associated) {
+            ret = wpa_drv_deauthenticate(wpa_s, drv->bssid, WLAN_REASON_DEAUTH_LEAVING);
+            if (ret != 0)
+                wpa_printf(MSG_DEBUG, "DRIVER-STOP error, ret=%d", ret);
+        } else {
+            wpa_printf(MSG_INFO, "nl80211: not associated, no need to deauthenticate \n");
+        }
+
+        if (ret = linux_set_iface_flags(drv->global->ioctl_sock,
+            drv->first_bss->ifname, 0)) {
+            wpa_printf(MSG_INFO, "nl80211: Could not set interface Down, ret=%d \n", ret);
+        } else {
+            wpa_msg(drv->ctx, MSG_INFO, "CTRL-EVENT-DRIVER-STATE STOPPED");
+        }
+    } else if (os_strncasecmp(cmd, "getpower", 8) == 0) {
+        u32 mode;
+        // ret = wpa_driver_wext_driver_get_power(drv, &mode);
+        if (ret == 0) {
+            ret = snprintf(buf, buf_len, "powermode = %u\n", mode);
+            wpa_printf(MSG_DEBUG, "%s", buf);
+            if (ret < (int)buf_len)
+                return ret;
+        }
+    } else if (os_strncasecmp(cmd, "get-rts-threshold", 17) == 0) {
+        u32 thd;
+        // ret = wpa_driver_wext_driver_get_rts(drv, &thd);
+        if (ret == 0) {
+            ret = snprintf(buf, buf_len, "rts-threshold = %u\n", thd);
+            wpa_printf(MSG_DEBUG, "%s", buf);
+            if (ret < (int)buf_len)
+                return ret;
+        }
+    } else if (os_strncasecmp(cmd, "set-rts-threshold", 17) == 0) {
+        u32 thd = 0;
+        char *cp = cmd + 17;
+        char *endp;
+        if (*cp != '\0') {
+            thd = (u32)strtol(cp, &endp, 0);
+            // if (endp != cp)
+                // ret = wpa_driver_wext_driver_set_rts(drv, thd);
+        }
+    } else if (os_strcasecmp(cmd, "btcoexscan-start") == 0) {
+        ret = 0; /* mt5921 linux driver not implement yet */
+    } else if (os_strcasecmp(cmd, "btcoexscan-stop") == 0) {
+        ret = 0; /* mt5921 linux driver not implement yet */
+    } else if (os_strncasecmp(cmd, "btcoexmode", 10) == 0) {
+        ret = 0; /* mt5921 linux driver not implement yet */
+    } else {
+        handled = 0;
+        wpa_printf(MSG_INFO, "Unsupported command");
+    }
+
+    return ret;
+}
+
+int wpa_driver_set_p2p_noa(void *priv, u8 count, int start, int duration)
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+
+    wpa_printf(MSG_DEBUG, "iface %s P2P_SET_NOA %d %d %d, ignored", bss->ifname, count, start, duration);
+    return -1;
+}
+
+int wpa_driver_get_p2p_noa(void *priv, u8 *buf, size_t len)
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+
+    wpa_printf(MSG_DEBUG, "iface %s P2P_GET_NOA, ignored", bss->ifname);
+    return -1;
+}
+
+int wpa_driver_set_p2p_ps(void *priv, int legacy_ps, int opp_ps, int ctwindow)
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+
+    wpa_printf(MSG_DEBUG, "iface %s P2P_SET_PS, ignored", bss->ifname);
+    return -1;
+}
+
+int wpa_driver_set_ap_wps_p2p_ie(void *priv, const struct wpabuf *beacon,
+                 const struct wpabuf *proberesp,
+                 const struct wpabuf *assocresp)
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+
+    wpa_printf(MSG_DEBUG, "iface %s set_ap_wps_p2p_ie, ignored", bss->ifname);
+    return 0;
+}
+
diff --git a/liblights/Android.mk b/mtk/liblights/Android.mk
old mode 100755
new mode 100644
similarity index 100%
rename from liblights/Android.mk
rename to mtk/liblights/Android.mk
diff --git a/liblights/lights.c b/mtk/liblights/lights.c
old mode 100755
new mode 100644
similarity index 100%
rename from liblights/lights.c
rename to mtk/liblights/lights.c
diff --git a/libwifi-hal-mt66xx/Android.mk b/mtk/libwifi-hal-mt66xx/Android.mk
old mode 100755
new mode 100644
similarity index 100%
rename from libwifi-hal-mt66xx/Android.mk
rename to mtk/libwifi-hal-mt66xx/Android.mk
diff --git a/libwifi-hal-mt66xx/NOTICE b/mtk/libwifi-hal-mt66xx/NOTICE
old mode 100755
new mode 100644
similarity index 100%
rename from libwifi-hal-mt66xx/NOTICE
rename to mtk/libwifi-hal-mt66xx/NOTICE
diff --git a/libwifi-hal-mt66xx/README b/mtk/libwifi-hal-mt66xx/README
old mode 100755
new mode 100644
similarity index 100%
rename from libwifi-hal-mt66xx/README
rename to mtk/libwifi-hal-mt66xx/README
diff --git a/libwifi-hal-mt66xx/arm/libwifi-hal-mt66xx.a b/mtk/libwifi-hal-mt66xx/arm/libwifi-hal-mt66xx.a
old mode 100755
new mode 100644
similarity index 100%
rename from libwifi-hal-mt66xx/arm/libwifi-hal-mt66xx.a
rename to mtk/libwifi-hal-mt66xx/arm/libwifi-hal-mt66xx.a
diff --git a/libwifi-hal-mt66xx/arm64/libwifi-hal-mt66xx.a b/mtk/libwifi-hal-mt66xx/arm64/libwifi-hal-mt66xx.a
old mode 100755
new mode 100644
similarity index 100%
rename from libwifi-hal-mt66xx/arm64/libwifi-hal-mt66xx.a
rename to mtk/libwifi-hal-mt66xx/arm64/libwifi-hal-mt66xx.a
diff --git a/power/Android.mk b/mtk/power/Android.mk
old mode 100755
new mode 100644
similarity index 100%
rename from power/Android.mk
rename to mtk/power/Android.mk
diff --git a/power/power.c b/mtk/power/power.c
old mode 100755
new mode 100644
similarity index 100%
rename from power/power.c
rename to mtk/power/power.c
diff --git a/wpa_supplicant_8_lib/Android.mk b/mtk/wpa_supplicant_8_lib/Android.mk
old mode 100755
new mode 100644
similarity index 100%
rename from wpa_supplicant_8_lib/Android.mk
rename to mtk/wpa_supplicant_8_lib/Android.mk
diff --git a/mtk/wpa_supplicant_8_lib/MODULE_LICENSE_BSD b/mtk/wpa_supplicant_8_lib/MODULE_LICENSE_BSD
new file mode 100644
index 0000000..e69de29
diff --git a/wpa_supplicant_8_lib/NOTICE b/mtk/wpa_supplicant_8_lib/NOTICE
old mode 100755
new mode 100644
similarity index 100%
rename from wpa_supplicant_8_lib/NOTICE
rename to mtk/wpa_supplicant_8_lib/NOTICE
diff --git a/wpa_supplicant_8_lib/driver_cmd_nl80211.c b/mtk/wpa_supplicant_8_lib/driver_cmd_nl80211.c
old mode 100755
new mode 100644
similarity index 100%
rename from wpa_supplicant_8_lib/driver_cmd_nl80211.c
rename to mtk/wpa_supplicant_8_lib/driver_cmd_nl80211.c
diff --git a/wpa_supplicant_8_lib/driver_cmd_wext.c b/mtk/wpa_supplicant_8_lib/driver_cmd_wext.c
old mode 100755
new mode 100644
similarity index 100%
rename from wpa_supplicant_8_lib/driver_cmd_wext.c
rename to mtk/wpa_supplicant_8_lib/driver_cmd_wext.c
diff --git a/wpa_supplicant_8_lib/driver_cmd_wext.h b/mtk/wpa_supplicant_8_lib/driver_cmd_wext.h
old mode 100755
new mode 100644
similarity index 100%
rename from wpa_supplicant_8_lib/driver_cmd_wext.h
rename to mtk/wpa_supplicant_8_lib/driver_cmd_wext.h
diff --git a/mtk/wpa_supplicant_8_lib/mediatek_driver_cmd_nl80211.c b/mtk/wpa_supplicant_8_lib/mediatek_driver_cmd_nl80211.c
new file mode 100644
index 0000000..c59bcb5
--- /dev/null
+++ b/mtk/wpa_supplicant_8_lib/mediatek_driver_cmd_nl80211.c
@@ -0,0 +1,266 @@
+/*
+ * Driver interaction with extended Linux CFG8021
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ *
+ * Alternatively, this software may be distributed under the terms of BSD
+ * license.
+ *
+ */
+#include "includes.h"
+#include <linux/wireless.h>
+#include "netlink/genl/genl.h"
+
+#include "common.h"
+#include "driver_nl80211.h"
+#include "linux_ioctl.h"
+#include "wpa_supplicant_i.h"
+#include "config.h"
+#ifdef ANDROID
+#include "android_drv.h"
+#endif
+
+#include "driver_i.h"
+
+#include "eloop.h"
+
+/**********************************************************************
+* OVERLAPPED functins, previous defination is in driver_nl80211.c,
+* it will be modified
+***********************************************************************/
+
+/**********************************************************************/
+static int wpa_driver_mediatek_set_country(void *priv, const char *alpha2_arg)
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+    int ioctl_sock = -1;
+    struct iwreq iwr;
+    int ret = -1;
+    char buf[11];
+#ifdef MTK_TC1_FEATURE
+    char replace_ifname[IFNAMSIZ+1];
+
+    memset(replace_ifname, 0, IFNAMSIZ+1);
+    os_strlcpy(replace_ifname, "wlan0", os_strlen("wlan0")+1);
+#endif
+
+    wpa_printf(MSG_DEBUG, "wpa_driver_nl80211_set_country");
+    ioctl_sock = socket(PF_INET, SOCK_DGRAM, 0);
+    if (ioctl_sock < 0) {
+        wpa_printf(MSG_ERROR, "%s: socket(PF_INET,SOCK_DGRAM)", __func__);
+        return -1;
+    }
+    os_memset(&iwr, 0, sizeof(iwr));
+#ifdef MTK_TC1_FEATURE
+    // convert 'p2p0' -> 'wlan0' :
+    // when iface name is p2p0, COUNTRY driver command doesn't support in MTK solution.
+    if (os_strncmp(drv->first_bss->ifname, "p2p0", os_strlen("p2p0")) == 0) {
+        wpa_printf(MSG_DEBUG, "Change interface name : p2p0->wlan0");
+        os_strlcpy(iwr.ifr_name, replace_ifname, IFNAMSIZ );
+    } else {
+        os_strlcpy(iwr.ifr_name, drv->first_bss->ifname, IFNAMSIZ);
+    }
+#else
+    os_strlcpy(iwr.ifr_name, drv->first_bss->ifname, IFNAMSIZ);
+#endif
+    sprintf(buf, "COUNTRY %s", alpha2_arg);
+    iwr.u.data.pointer = buf;
+    iwr.u.data.length = strlen(buf);
+    if ((ret = ioctl(ioctl_sock, 0x8B0C, &iwr)) < 0) {  // SIOCSIWPRIV
+        wpa_printf(MSG_DEBUG, "ioctl[SIOCSIWPRIV]: %s", buf);
+        close(ioctl_sock);
+        return ret;
+    }
+    else {
+        close(ioctl_sock);
+        return 0;
+    }
+
+}
+
+/*
+* update channel list in wpa_supplicant
+* if coutry code chanaged
+*/
+static void wpa_driver_notify_country_change(void *ctx, char *cmd)
+{
+    if (os_strncasecmp(cmd, "COUNTRY", 7) == 0) {
+        union wpa_event_data event;
+
+        os_memset(&event, 0, sizeof(event));
+        event.channel_list_changed.initiator = REGDOM_SET_BY_USER;
+        if (os_strncasecmp(cmd, "COUNTRY", 7) == 0) {
+            event.channel_list_changed.type = REGDOM_TYPE_COUNTRY;
+            if (os_strlen(cmd) > 9) {
+                event.channel_list_changed.alpha2[0] = cmd[8];
+                event.channel_list_changed.alpha2[1] = cmd[9];
+            }
+        } else
+            event.channel_list_changed.type = REGDOM_TYPE_UNKNOWN;
+        wpa_supplicant_event(ctx, EVENT_CHANNEL_LIST_CHANGED, &event);
+    }
+}
+
+int wpa_driver_nl80211_driver_cmd(void *priv, char *cmd, char *buf,
+                  size_t buf_len )
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+    struct ifreq ifr;
+    struct wpa_supplicant *wpa_s;
+    struct hostapd_data *hapd;
+    int handled = 0;
+    int cmd_len = 0;
+    union wpa_event_data event;
+    static int user_force_band = 0;
+    int ret = -1;
+
+    if (drv == NULL) {
+        wpa_printf(MSG_ERROR, "%s: drv is NULL. Exiting", __func__);
+        return -1;
+    }
+    if (drv->ctx == NULL) {
+        wpa_printf(MSG_ERROR, "%s: drv->ctx is NULL. Exiting", __func__);
+        return -1;
+    }
+
+    if (os_strcmp(bss->ifname, "ap0") == 0) {
+        hapd = (struct hostapd_data *)(drv->ctx);
+    }
+    else {
+        wpa_s = (struct wpa_supplicant *)(drv->ctx);
+        if (wpa_s->conf == NULL) {
+            wpa_printf(MSG_ERROR, "%s: wpa_s->conf is NULL. Exiting", __func__);
+            return -1;
+        }
+    }
+
+    wpa_printf(MSG_DEBUG, "iface %s recv cmd %s", bss->ifname, cmd);
+    handled = 1;
+
+    if (os_strncasecmp(cmd, "POWERMODE ", 10) == 0) {
+        int state;
+        state = atoi(cmd + 10);
+        wpa_printf(MSG_DEBUG, "POWERMODE=%d", state);
+    }  else if (os_strncmp(cmd, "MACADDR", os_strlen("MACADDR")) == 0) {
+        u8 macaddr[ETH_ALEN] = {};
+        os_memcpy(&macaddr, wpa_s->own_addr, ETH_ALEN);
+        ret = snprintf(buf, buf_len, "Macaddr = " MACSTR "\n", MAC2STR(macaddr));
+        wpa_printf(MSG_DEBUG, "%s", buf);
+    } else if(os_strncasecmp(cmd, "COUNTRY", os_strlen("COUNTRY"))==0) {
+        if (os_strlen(cmd) != os_strlen("COUNTRY") + 3) {
+            wpa_printf(MSG_DEBUG, "Ignore COUNTRY cmd %s", cmd);
+            ret = 0;
+        } else {
+            wpa_printf(MSG_INFO, "set country: %s", cmd+8);
+            // ret = wpa_drv_set_country(wpa_s, cmd+8);
+            ret = wpa_driver_mediatek_set_country(priv, cmd+8);
+            if (ret == 0) {
+                wpa_printf(MSG_DEBUG, "Update channel list after country code changed");
+                wpa_driver_notify_country_change(wpa_s, cmd);
+            }
+        }
+    } else if (os_strcasecmp(cmd, "start") == 0) {
+        if (ret = linux_set_iface_flags(drv->global->ioctl_sock,
+            drv->first_bss->ifname, 1)) {
+            wpa_printf(MSG_INFO, "nl80211: Could not set interface UP, ret=%d \n", ret);
+        } else {
+            wpa_msg(drv->ctx, MSG_INFO, "CTRL-EVENT-DRIVER-STATE STARTED");
+        }
+    } else if (os_strcasecmp(cmd, "stop") == 0) {
+        if (drv->associated) {
+            ret = wpa_drv_deauthenticate(wpa_s, drv->bssid, WLAN_REASON_DEAUTH_LEAVING);
+            if (ret != 0)
+                wpa_printf(MSG_DEBUG, "DRIVER-STOP error, ret=%d", ret);
+        } else {
+            wpa_printf(MSG_INFO, "nl80211: not associated, no need to deauthenticate \n");
+        }
+
+        if (ret = linux_set_iface_flags(drv->global->ioctl_sock,
+            drv->first_bss->ifname, 0)) {
+            wpa_printf(MSG_INFO, "nl80211: Could not set interface Down, ret=%d \n", ret);
+        } else {
+            wpa_msg(drv->ctx, MSG_INFO, "CTRL-EVENT-DRIVER-STATE STOPPED");
+        }
+    } else if (os_strncasecmp(cmd, "getpower", 8) == 0) {
+        u32 mode;
+        // ret = wpa_driver_wext_driver_get_power(drv, &mode);
+        if (ret == 0) {
+            ret = snprintf(buf, buf_len, "powermode = %u\n", mode);
+            wpa_printf(MSG_DEBUG, "%s", buf);
+            if (ret < (int)buf_len)
+                return ret;
+        }
+    } else if (os_strncasecmp(cmd, "get-rts-threshold", 17) == 0) {
+        u32 thd;
+        // ret = wpa_driver_wext_driver_get_rts(drv, &thd);
+        if (ret == 0) {
+            ret = snprintf(buf, buf_len, "rts-threshold = %u\n", thd);
+            wpa_printf(MSG_DEBUG, "%s", buf);
+            if (ret < (int)buf_len)
+                return ret;
+        }
+    } else if (os_strncasecmp(cmd, "set-rts-threshold", 17) == 0) {
+        u32 thd = 0;
+        char *cp = cmd + 17;
+        char *endp;
+        if (*cp != '\0') {
+            thd = (u32)strtol(cp, &endp, 0);
+            // if (endp != cp)
+                // ret = wpa_driver_wext_driver_set_rts(drv, thd);
+        }
+    } else if (os_strcasecmp(cmd, "btcoexscan-start") == 0) {
+        ret = 0; /* mt5921 linux driver not implement yet */
+    } else if (os_strcasecmp(cmd, "btcoexscan-stop") == 0) {
+        ret = 0; /* mt5921 linux driver not implement yet */
+    } else if (os_strncasecmp(cmd, "btcoexmode", 10) == 0) {
+        ret = 0; /* mt5921 linux driver not implement yet */
+    } else {
+        handled = 0;
+        wpa_printf(MSG_INFO, "Unsupported command");
+    }
+
+    return ret;
+}
+
+int wpa_driver_set_p2p_noa(void *priv, u8 count, int start, int duration)
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+
+    wpa_printf(MSG_DEBUG, "iface %s P2P_SET_NOA %d %d %d, ignored", bss->ifname, count, start, duration);
+    return -1;
+}
+
+int wpa_driver_get_p2p_noa(void *priv, u8 *buf, size_t len)
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+
+    wpa_printf(MSG_DEBUG, "iface %s P2P_GET_NOA, ignored", bss->ifname);
+    return -1;
+}
+
+int wpa_driver_set_p2p_ps(void *priv, int legacy_ps, int opp_ps, int ctwindow)
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+
+    wpa_printf(MSG_DEBUG, "iface %s P2P_SET_PS, ignored", bss->ifname);
+    return -1;
+}
+
+int wpa_driver_set_ap_wps_p2p_ie(void *priv, const struct wpabuf *beacon,
+                 const struct wpabuf *proberesp,
+                 const struct wpabuf *assocresp)
+{
+    struct i802_bss *bss = priv;
+    struct wpa_driver_nl80211_data *drv = bss->drv;
+
+    wpa_printf(MSG_DEBUG, "iface %s set_ap_wps_p2p_ie, ignored", bss->ifname);
+    return 0;
+}
+
diff --git a/overlay/frameworks/base/core/res/res/drawable-xhdpi/default_wallpaper.png b/overlay/frameworks/base/core/res/res/drawable-xhdpi/default_wallpaper.png
old mode 100755
new mode 100644
diff --git a/overlay/frameworks/base/core/res/res/values/config.xml b/overlay/frameworks/base/core/res/res/values/config.xml
old mode 100755
new mode 100644
diff --git a/overlay/frameworks/base/core/res/res/xml/power_profile.xml b/overlay/frameworks/base/core/res/res/xml/power_profile.xml
old mode 100755
new mode 100644
diff --git a/overlay/frameworks/base/packages/SettingsLib/res/values/arrays.xml b/overlay/frameworks/base/packages/SettingsLib/res/values/arrays.xml
old mode 100755
new mode 100644
diff --git a/overlay/frameworks/base/packages/SettingsProvider/res/values/defaults.xml b/overlay/frameworks/base/packages/SettingsProvider/res/values/defaults.xml
old mode 100755
new mode 100644
diff --git a/overlay/frameworks/base/packages/SystemUI/res/values/config.xml b/overlay/frameworks/base/packages/SystemUI/res/values/config.xml
old mode 100755
new mode 100644
diff --git a/overlay/packages/apps/CarrierConfig/res/xml/vendor.xml b/overlay/packages/apps/CarrierConfig/res/xml/vendor.xml
old mode 100755
new mode 100644
diff --git a/overlay/packages/apps/Dialer/res/values-ru/strings.xml b/overlay/packages/apps/Dialer/res/values-ru/strings.xml
old mode 100755
new mode 100644
diff --git a/overlay/packages/apps/Dialer/res/values/config.xml b/overlay/packages/apps/Dialer/res/values/config.xml
old mode 100755
new mode 100644
diff --git a/overlay/packages/apps/Snap/res/values/config.xml b/overlay/packages/apps/Snap/res/values/config.xml
old mode 100755
new mode 100644
diff --git a/overlay/packages/services/Telephony/res/values/config.xml b/overlay/packages/services/Telephony/res/values/config.xml
old mode 100755
new mode 100644
diff --git a/overlay/vendor/cmsdk/cm/res/res/values/config.xml b/overlay/vendor/cmsdk/cm/res/res/values/config.xml
old mode 100755
new mode 100644
diff --git a/rootdir/etc/init.mt6757.rc b/rootdir/etc/init.mt6757.rc
index f63ea76..c2559d3 100755
--- a/rootdir/etc/init.mt6757.rc
+++ b/rootdir/etc/init.mt6757.rc
@@ -32,6 +32,7 @@ on early-init
     chmod 0755 /sys/kernel/debug
 
 on init
+    export LD_PRELOAD "libmtk_symbols.so"
     #export LD_SHIM_LIBS "/system/vendor/lib/libvtmal.so|libmtk_symbols.so"
     # Support legacy paths
     symlink /sdcard /mnt/sdcard
diff --git a/setup-makefiles.sh b/setup-makefiles.sh
index 686aa1e..bf31f22 100755
--- a/setup-makefiles.sh
+++ b/setup-makefiles.sh
@@ -108,4 +108,3 @@ include \$(BUILD_PREBUILT)
 \$(shell nm -B -D \$(LOCAL_PATH)/proprietary/vendor/lib64/libhwm.so > \$(OUT)/obj/lib/libhwm.so.toc)
 \$(shell nm -B -D \$(LOCAL_PATH)/proprietary/lib/libaudiopolicymanager.so > \$(OUT)/obj_arm/lib/libaudiopolicymanager.so.toc)
 \$(shell nm -B -D \$(LOCAL_PATH)/proprietary/lib64/libaudiopolicymanager.so > \$(OUT)/obj/lib/libaudiopolicymanager.so.toc)" >>$AMAKE
-
